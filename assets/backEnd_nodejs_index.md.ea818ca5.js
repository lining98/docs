import{_ as e,o as a,c as o,N as r}from"./chunks/framework.8bab7da0.js";const u=JSON.parse('{"title":"Nodejs 介绍","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/nodejs/index.md","lastUpdated":1679032512000}'),t={name:"backEnd/nodejs/index.md"},s=r('<h1 id="nodejs-介绍" tabindex="-1">Nodejs 介绍 <a class="header-anchor" href="#nodejs-介绍" aria-label="Permalink to &quot;Nodejs 介绍&quot;">​</a></h1><p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">官网传送门</a></p><h2 id="初识-nodejs" tabindex="-1">初识 Nodejs <a class="header-anchor" href="#初识-nodejs" aria-label="Permalink to &quot;初识 Nodejs&quot;">​</a></h2><blockquote><p>Node.js® is an open-source, cross-platform JavaScript runtime environment.</p><p>Node.js® 是一个基于 Chrome V8 引擎 的 JavaScript 运行时环境</p></blockquote><ul><li>基于 <a href="http://www.expressjs.com.cn/" target="_blank" rel="noreferrer">Express 框架</a>，可以快速构建 Web 应用</li><li>基于 <a href="https://electronjs.org/" target="_blank" rel="noreferrer">Electron 框架</a>，可以构建跨平台的桌面应用</li><li>基于 <a href="http://restify.com/" target="_blank" rel="noreferrer">restify 框架</a>，可以快速构建 API 接口项目</li><li>读写和操作数据库、创建实用的命令行工具辅助前端开发、etc…</li></ul><h2 id="nodejs-的特点" tabindex="-1">Nodejs 的特点 <a class="header-anchor" href="#nodejs-的特点" aria-label="Permalink to &quot;Nodejs 的特点&quot;">​</a></h2><ul><li>异步、非阻塞 IO 模型</li><li>事件循环</li><li>单线程</li><li>总结：轻量和高效 Node.js 的性能和效率非常高。</li></ul><p>传统的 Java 语言是一个请求开启一个线程，当请求处理完毕后就关闭这个线程。而 Node.js 则完全没有采用这种模型，它本质上就是一个单线程。</p><p><strong>但一个线程如何服务于大量的请求、如何处理高并发的呢？这是因为，Node.js 采用的是异步的、非阻塞的模型。</strong></p><p>这里所谓的“单线程”，指的是 Node 的主线程只有一个。为了确保主线程不被阻塞，主线程是用于接收客户端请求。但不会处理具体的任务。而 Node 的背后还有一个线程池，线程池会处理长时间运行的任务（比如 IO 操作、网络操作）。线程池里的任务是通过队列和事件循环的机制来执行。</p><h2 id="使用-node-js-时的劣势" tabindex="-1">使用 Node.js 时的劣势 <a class="header-anchor" href="#使用-node-js-时的劣势" aria-label="Permalink to &quot;使用 Node.js 时的劣势&quot;">​</a></h2><ul><li>程序运行不稳定，可能会出现服务不可用的情况</li><li>程序运行效率较低，每秒的请求数维持在一个较低的水平</li></ul>',12),n=[s];function l(d,i,c,h,p,_){return a(),o("div",null,n)}const f=e(t,[["render",l]]);export{u as __pageData,f as default};
