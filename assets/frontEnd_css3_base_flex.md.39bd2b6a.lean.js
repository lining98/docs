import{_ as s,v as a,b as n,R as l}from"./chunks/framework.814cacce.js";const F=JSON.parse('{"title":"Flex 布局 - 灵活的网页布局解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"frontEnd/css3/base/flex.md","filePath":"frontEnd/css3/base/flex.md","lastUpdated":1689758773000}'),e={name:"frontEnd/css3/base/flex.md"},p=l(`<h1 id="flex-布局-灵活的网页布局解决方案" tabindex="-1">Flex 布局 - 灵活的网页布局解决方案 <a class="header-anchor" href="#flex-布局-灵活的网页布局解决方案" aria-label="Permalink to &quot;Flex 布局 - 灵活的网页布局解决方案&quot;">​</a></h1><p>Flex 布局（也称为弹性盒子布局）是一种用于创建灵活、自适应的网页布局的 CSS 工具。它通过在父元素上设置<code>display: flex</code>，将子元素定义为弹性项目，使它们能够在主轴和交叉轴上灵活布局。Flex 布局提供了一种直观而强大的方法，能够轻松地实现复杂的网页布局和响应式设计。</p><h2 id="如何启用-flex-布局" tabindex="-1">如何启用 Flex 布局？ <a class="header-anchor" href="#如何启用-flex-布局" aria-label="Permalink to &quot;如何启用 Flex 布局？&quot;">​</a></h2><p>要启用 Flex 布局，只需在要成为 Flex 容器的父元素上设置<code>display: flex</code>即可：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>一旦容器成为 Flex 容器，其中的子元素就会成为 Flex 项目，可以通过 Flex 属性控制它们的布局行为。</p><h2 id="主轴和交叉轴" tabindex="-1">主轴和交叉轴 <a class="header-anchor" href="#主轴和交叉轴" aria-label="Permalink to &quot;主轴和交叉轴&quot;">​</a></h2><p>Flex 布局具有一个主轴和一个交叉轴。默认情况下，主轴是水平方向，交叉轴是垂直方向。可以使用<code>flex-direction</code>属性更改主轴方向。</p><p><code>flex-direction</code> 决定 Flex 项目的排列方向：</p><ul><li>row：水平排列（默认值）。</li><li>row-reverse：水平逆向排列。</li><li>column：垂直排列。</li><li>column-reverse：垂直逆向排列。</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> row</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 默认值，主轴为水平方向 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 或 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> column</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 主轴为垂直方向 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="主轴对齐与交叉轴对齐" tabindex="-1">主轴对齐与交叉轴对齐 <a class="header-anchor" href="#主轴对齐与交叉轴对齐" aria-label="Permalink to &quot;主轴对齐与交叉轴对齐&quot;">​</a></h2><p>可以使用<code>justify-content</code>属性控制主轴上的对齐方式，<code>align-items</code>属性控制交叉轴上的对齐方式。</p><p><code>justify-content</code> 定义 Flex 项目在主轴上的对齐方式：</p><ul><li>flex-start：默认值，项目靠主轴起始位置对齐。</li><li>flex-end：项目靠主轴末尾位置对齐。</li><li>center：项目在主轴上居中对齐。</li><li>space-between：项目平均分布在主轴上，两端不留空白。</li><li>space-around：项目平均分布在主轴上，两端留有空白。</li></ul><p><code>align-items</code> 定义 Flex 项目在交叉轴上的对齐方式：</p><ul><li>flex-start：项目靠交叉轴起始位置对齐。</li><li>flex-end：项目靠交叉轴末尾位置对齐。</li><li>center：项目在交叉轴上居中对齐。</li><li>baseline：项目的基线对齐。</li><li>stretch：默认值，项目被拉伸以填满交叉轴空间。</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 主轴居中对齐 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 交叉轴顶部对齐 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="换行与排列" tabindex="-1">换行与排列 <a class="header-anchor" href="#换行与排列" aria-label="Permalink to &quot;换行与排列&quot;">​</a></h2><p>默认情况下，Flex 项目会在一行中排列，如果项目超出了容器的宽度，它们会缩小以适应。可以使用<code>flex-wrap</code>属性来控制项目是否换行。</p><p><code>flex-wrap</code> 指定 Flex 项目是否换行。</p><ul><li>nowrap：不换行（默认值）。</li><li>wrap：换行，项目会自动换行到下一行。</li><li>wrap-reverse：换行，项目逆向换行到上一行。</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-wrap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> wrap</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 允许项目换行 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="flex-flow" tabindex="-1">flex-flow <a class="header-anchor" href="#flex-flow" aria-label="Permalink to &quot;flex-flow&quot;">​</a></h2><p>是<code>flex-direction</code>和<code>flex-wrap</code>的缩写。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-flow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> row wrap</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 水平排列，允许换行 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="弹性增长与缩小" tabindex="-1">弹性增长与缩小 <a class="header-anchor" href="#弹性增长与缩小" aria-label="Permalink to &quot;弹性增长与缩小&quot;">​</a></h2><ul><li>使用<code>flex-grow</code>属性可以控制项目在剩余空间中的放大比例</li><li>使用<code>flex-shrink</code>属性可以控制项目在空间不足时的缩小比例。</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-grow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 弹性增长因子为1 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-shrink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 不缩小 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="弹性基准值" tabindex="-1">弹性基准值 <a class="header-anchor" href="#弹性基准值" aria-label="Permalink to &quot;弹性基准值&quot;">​</a></h2><p><code>flex-basis</code>属性定义了项目的基准尺寸，如果没有设置宽度或高度，则会参考该值进行布局：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-basis</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 项目的基准宽度为200像素 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="嵌套-flex-容器" tabindex="-1">嵌套 Flex 容器 <a class="header-anchor" href="#嵌套-flex-容器" aria-label="Permalink to &quot;嵌套 Flex 容器&quot;">​</a></h2><p>在 Flex 项目内部可以再创建一个新的 Flex 容器，嵌套的 Flex 容器有自己的主轴和交叉轴：</p><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">inner-container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 嵌套的Flex容器 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="多行对齐" tabindex="-1">多行对齐 <a class="header-anchor" href="#多行对齐" aria-label="Permalink to &quot;多行对齐&quot;">​</a></h2><p>在多行 Flex 容器中，可以使用<code>align-content</code>属性控制交叉轴上多行的对齐方式。 <code>align-content</code>定义多行 Flex 项目在交叉轴上的对齐方式：</p><ul><li>flex-start：多行项目靠交叉轴起始位置对齐。</li><li>flex-end：多行项目靠交叉轴末尾位置对齐。</li><li>center：多行项目在交叉轴上居中对齐。</li><li>space-between：多行项目平均分布在交叉轴上，两端不留空白。</li><li>space-around：多行项目平均分布在交叉轴上，两端留有空白。</li><li>stretch：默认值，多行项目被拉伸以填满交叉轴空间。</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-wrap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> wrap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> space-between</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 多行之间平均分布 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="实现常见布局需求" tabindex="-1">实现常见布局需求 <a class="header-anchor" href="#实现常见布局需求" aria-label="Permalink to &quot;实现常见布局需求&quot;">​</a></h2><p>Flex 布局非常适合实现常见的网页布局需求，例如：</p><ol><li><p><strong>居中对齐</strong>：通过<code>justify-content</code>和<code>align-items</code>属性实现水平和垂直居中对齐。</p></li><li><p><strong>两端对齐</strong>：使用<code>justify-content</code>属性设置为<code>space-between</code>实现两端对齐效果。</p></li><li><p><strong>平均分布</strong>：通过设置<code>justify-content</code>属性为<code>space-around</code>实现项目平均分布。</p></li><li><p><strong>导航栏布局</strong>：使用<code>flex-direction: row</code>和<code>align-items: center</code>实现水平导航栏布局。</p></li><li><p><strong>响应式网格</strong>：使用<code>flex-wrap</code>和媒体查询创建响应式网格布局。</p></li><li><p><strong>垂直居中</strong>：设置<code>align-items</code>属性为<code>center</code>实现垂直居中对齐。</p></li><li><p><strong>平均分布多行元素</strong>：使用<code>align-content</code>属性在多行中平均分布元素。</p></li></ol>`,42),o=[p];function c(r,t,i,d,y,D){return a(),n("div",null,o)}const b=s(e,[["render",c]]);export{F as __pageData,b as default};
