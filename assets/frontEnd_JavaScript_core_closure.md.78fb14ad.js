import{_ as t,c as o,o as r,z as e,a}from"./chunks/framework.b3911a66.js";const S=JSON.parse('{"title":"闭包","description":"","frontmatter":{},"headers":[],"relativePath":"frontEnd/JavaScript/core/closure.md","filePath":"frontEnd/JavaScript/core/closure.md","lastUpdated":1679991786000}'),c={name:"frontEnd/JavaScript/core/closure.md"},n=e("h1",{id:"闭包",tabindex:"-1"},[a("闭包 "),e("a",{class:"header-anchor",href:"#闭包","aria-label":'Permalink to "闭包"'},"​")],-1),s=e("h2",{id:"什么是闭包",tabindex:"-1"},[a("什么是闭包 "),e("a",{class:"header-anchor",href:"#什么是闭包","aria-label":'Permalink to "什么是闭包"'},"​")],-1),l=e("p",null,"一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）",-1),d=e("p",null,"也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域",-1),i=e("p",null,[a("在 "),e("code",null,"JavaScript"),a(" 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来，作为函数内部与外部连接起来的一座桥梁。")],-1),_=[n,s,l,d,i];function p(h,u,f,m,v,x){return r(),o("div",null,_)}const b=t(c,[["render",p]]);export{S as __pageData,b as default};
