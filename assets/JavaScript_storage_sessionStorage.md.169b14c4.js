import{_ as s,v as a,b as e,R as n}from"./chunks/framework.814cacce.js";const A=JSON.parse('{"title":"JavaScript sessionStorage","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/storage/sessionStorage.md","filePath":"JavaScript/storage/sessionStorage.md","lastUpdated":1689579676000}'),o={name:"JavaScript/storage/sessionStorage.md"},l=n(`<h1 id="javascript-sessionstorage" tabindex="-1">JavaScript sessionStorage <a class="header-anchor" href="#javascript-sessionstorage" aria-label="Permalink to &quot;JavaScript sessionStorage&quot;">​</a></h1><p><code>sessionStorage</code> 是 Web Storage API 提供的一种本地存储机制，允许开发者在浏览器中存储和检索会话级别的键值对数据。与 <code>localStorage</code> 不同，<code>sessionStorage</code> 中的数据在用户关闭浏览器标签页或浏览器会话结束后会被清除，因此适用于临时保存会话数据。</p><p>以下是 <code>sessionStorage</code> 的基本用法和一些常见操作：</p><h2 id="存储数据" tabindex="-1">存储数据 <a class="header-anchor" href="#存储数据" aria-label="Permalink to &quot;存储数据&quot;">​</a></h2><p>可以使用 <code>sessionStorage.setItem(key, value)</code> 方法将数据存储到 <code>sessionStorage</code> 中。其中，<code>key</code> 是要存储的数据的键，<code>value</code> 是对应的值。存储的值必须是字符串类型。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">25</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="获取数据" tabindex="-1">获取数据 <a class="header-anchor" href="#获取数据" aria-label="Permalink to &quot;获取数据&quot;">​</a></h2><p>可以使用 <code>sessionStorage.getItem(key)</code> 方法根据键从 <code>sessionStorage</code> 中检索数据。如果键不存在，返回 <code>null</code>。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(username) </span><span style="color:#676E95;font-style:italic;">// 输出：John</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="更新数据" tabindex="-1">更新数据 <a class="header-anchor" href="#更新数据" aria-label="Permalink to &quot;更新数据&quot;">​</a></h2><p>可以通过重新设置相同的键来更新 <code>sessionStorage</code> 中的数据。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">26</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="删除数据" tabindex="-1">删除数据 <a class="header-anchor" href="#删除数据" aria-label="Permalink to &quot;删除数据&quot;">​</a></h2><p>可以使用 <code>sessionStorage.removeItem(key)</code> 方法来删除指定键的数据。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="清除所有数据" tabindex="-1">清除所有数据 <a class="header-anchor" href="#清除所有数据" aria-label="Permalink to &quot;清除所有数据&quot;">​</a></h2><p>可以使用 <code>sessionStorage.clear()</code> 方法来删除 <code>sessionStorage</code> 中的所有数据。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#A6ACCD;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li><code>sessionStorage</code> 存储的值必须是字符串类型。如果需要存储其他数据类型（如对象或数组），可以使用 <code>JSON.stringify()</code> 方法将其转换为字符串存储，然后在需要时使用 <code>JSON.parse()</code> 方法将其还原。</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">25</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(user))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> storedUser </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(sessionStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(storedUser) </span><span style="color:#676E95;font-style:italic;">// 输出：{ name: &#39;John&#39;, age: 25 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><p><code>sessionStorage</code> 的存储容量是有限的，通常在几 MB 左右。因此，存储大量数据可能会导致溢出或性能问题。建议谨慎使用并根据实际需求控制数据量。</p></li><li><p><code>sessionStorage</code> 是基于域名和会话的。每个域名和浏览器会话都有独立的 <code>sessionStorage</code>，不同域名或会话之间的 <code>sessionStorage</code> 数据是相互隔离的。</p></li><li><p>在使用 <code>sessionStorage</code> 时，需要注意浏览器对于隐私和安全方面的限制，例如隐私模式下的 <code>sessionStorage</code> 访问可能被限制。</p></li></ul><p><code>sessionStorage</code> 提供了一种简单而强大的在浏览器中进行会话级别的本地存储的方式。它适用于临时保存会话相关的数据，如用户登录信息、临时配置等。在实际应用中，可以根据具体需求合理使用 <code>sessionStorage</code> 来增强用户体验和会话管理。</p>`,23),p=[l];function r(t,c,i,d,D,y){return a(),e("div",null,p)}const C=s(o,[["render",r]]);export{A as __pageData,C as default};
