const t={map:'[{"关于作者":["0.0"],"算法":["1.0"],"demo2":["2.0"],"demo3":["3.0"],"该内容正在努力建设中":["4.0","23.0","24.0"],"nginx":["5.0"],"nginx部署项目":["5.1"],"mysql":["8.0"],"安装mysql":["9.0"],"express":["11.0","11.1","11.4","11.5","15.11","15.14"],"基本使用":["11.2"],"托管静态资源":["11.3"],"全局中间件":["11.6"],"局部中间件":["11.7"],"中间件分类":["11.8"],"cors":["11.9","11.10","11.11","11.12","11.13"],"简单请求":["11.14"],"预检请求":["11.15"],"nodejs":["12.0","12.2","14.4"],"初识":["12.1","93.0"],"使用":["12.3","65.3","82.1","94.1","97.3"],"nodejs内置模块":["13.0"],"fs":["13.1"],"读取文件":["13.2"],"简单文件读取":["13.3"],"流式文件读取":["13.4"],"写入文件":["13.5"],"简单文件写入":["13.6"],"流式文件写入":["13.7"],"buffer":["13.8"],"路径动态拼接问题":["13.9"],"其它操作":["13.10"],"path":["13.11"],"路径拼接":["13.12"],"获取路径中文件名":["13.13"],"获取路径中文件扩展名":["13.14"],"http":["13.15"],"创建基本":["13.16"],"实现简陋路由效果":["13.17"],"模块化":["14.0"],"基本概念":["14.1"],"什么是模块化":["14.2"],"模块化的好处":["14.3"],"node":["14.5","14.6","15.1"],"模块作用域的成员":["14.7"],"commonjs":["14.8"],"模块加载机制":["14.9"],"内置模块加载":["14.10"],"自定义模块加载":["14.11"],"第三方模块加载":["14.12"],"目录作为模块加载":["14.13"],"npm":["14.14","14.16"],"包":["14.15"],"通过切换源解决":["14.17"],"开发包":["14.18"],"模块的加载机制":["14.19"],"内置模块的加载机制":["14.20"],"自定义模块的加载机制":["14.21"],"第三方模块的加载机制":["14.22"],"目录作为模块":["14.23"],"数据库和身份认证":["15.0"],"配置":["15.2"],"操作":["15.3"],"web":["15.4"],"服务端渲染":["15.5"],"前后端分离":["15.6"],"如何选择":["15.7"],"身份认证":["15.8"],"session":["15.9","15.10"],"jwt":["15.12","15.13"],"css":["16.0","17.1","18.0"],"通配符选择器":["16.1"],"元素选择器":["16.2"],"类选择器":["16.3"],"id":["16.4"],"交集选择器":["16.5"],"并集选择器":["16.6"],"后代选择器":["16.7"],"子选择器":["16.8"],"兄弟选择器":["16.9"],"伪类选择器":["16.10"],"动态伪类选择器":["16.11"],"结构伪类选择器":["16.12"],"属性选择器":["16.13"],"伪元素选择器":["16.14"],"相关链接":["16.15"],"选择器优先级":["17.0"],"滚动条样式":["19.0"],"html5":["20.0","20.5","20.6","21.0"],"音视频频格式的":["20.1"],"音频格式":["20.2"],"视频格式":["20.3"],"音视频标签描述":["20.4"],"video":["20.7","20.11"],"音视频对象的方法":["20.8"],"代码实例":["20.9"],"audio":["20.10"],"html":["21.1"],"input":["22.0","22.1"],"vue3":["25.0","26.0","27.0","78.0","88.4","90.4"],"setup":["25.1"],"ref":["25.2"],"ref全家桶":["25.3"],"isref":["25.4"],"shallowref":["25.5"],"triggerref":["25.6"],"customref":["25.7"],"reactive全家桶":["25.8"],"readonly":["25.9","70.7"],"shallowreactive":["25.10"],"to系列全家桶":["25.11"],"toref":["25.12"],"torefs":["25.13"],"toraw":["25.14"],"computed":["25.15"],"watch":["25.16"],"watcheffect":["25.21"],"清除副作用":["25.22"],"停止监听":["25.23"],"配置选项":["25.24"],"生命周期":["25.25"],"自定义指令":["25.26"],"vue3指令的钩子函数":["25.27"],"在setup内定义局部指令":["25.28"],"生命周期钩子参数详解":["25.29"],"案列":["25.30"],"自定义hooks":["25.31"],"通信方式":["26.1"],"注册":["27.1"],"全局组件":["27.2"],"批量注册全局组件":["27.4"],"局部组件":["27.5"],"父子组件传参":["27.6"],"插槽":["27.7"],"匿名插槽":["27.8"],"具名插槽":["27.9"],"作用域插槽":["27.10"],"动态插槽":["27.11"],"异步组件":["27.12"],"suspense":["27.13"],"teleport":["27.14"],"keep":["27.15"],"provide":["27.16"],"v":["27.17"],"创建vue3项目":["28.0"],"一":["28.1","29.1","32.5","38.1","39.1","63.1","73.9","78.1","78.6","79.2","103.1"],"安装或者升级":["28.2"],"保证":["28.3"],"创建项目":["28.4"],"二":["28.5","29.2","31.2","32.22","38.14","39.8","63.18","73.10","79.6","103.2"],"认识vue3":["29.0"],"三":["29.3","31.7","32.25","38.16","39.13","63.20","79.7","103.8"],"ajax":["31.0"],"是什么":["31.1","49.1","53.1","93.1","102.1"],"javascript":["32.0","33.0","34.0","35.0","36.0","37.0","39.0","40.0","43.0","54.0","60.0","60.1"],"创建":["32.1"],"获取数组元素":["32.2"],"数组方法":["32.4"],"增":["32.6","38.2","63.6"],"push":["32.7"],"unshift":["32.8"],"splice":["32.9","32.14","32.17"],"concat":["32.10","38.3","63.7"],"删":["32.11","38.4","63.8"],"pop":["32.12"],"shift":["32.13"],"slice":["32.15","63.3"],"改":["32.16","38.5","63.9"],"查":["32.18","38.10","63.14"],"indexof":["32.19","38.12","63.16"],"includes":["32.20"],"find":["32.21"],"reverse":["32.23"],"sort":["32.24"],"join":["32.26"],"四":["32.27","39.17","79.8"],"some":["32.28"],"every":["32.29"],"foreach":["32.30"],"filter":["32.31"],"map":["32.32"],"if":["33.1","33.2"],"switch":["33.3"],"循环语句":["33.4"],"while":["33.5"],"do":["33.6"],"for":["33.7","33.8","33.9","33.10","40.6"],"break":["33.11","34.9"],"函数的使用":["34.1"],"声明函数":["34.2"],"调用函数":["34.3"],"函数的封装":["34.4"],"函数的参数":["34.5"],"形参和实参":["34.6"],"函数形参和实参个数不匹配问题":["34.7"],"函数的返回值":["34.8"],"匿名函数":["34.10"],"函数表达式":["34.11"],"立即执行函数":["34.12"],"输出语句":["35.1"],"引入方式":["35.2"],"内部方式":["35.3"],"外部方式":["35.4"],"注释":["35.5"],"单行注释":["35.6"],"多行注释":["35.7"],"对象是什么":["36.1"],"创建对象":["36.2"],"利用":["36.3"],"利用字面量创建对象":["36.4"],"利用构造函数创建对象":["36.5"],"常用方法":["36.6"],"object":["36.7","36.8","36.9","36.10","36.11","36.12","36.13","36.14","36.15","36.16","36.17","36.18","36.19","36.20","36.21","39.9","60.2"],"运算符":["37.1"],"算数运算符":["37.2"],"赋值运算符":["37.3"],"自增和自减":["37.4"],"自增运算符":["37.5"],"自减运算符":["37.6"],"比较运行符":["37.7"],"逻辑运算符":["37.8"],"逻辑与":["37.9"],"逻辑或":["37.10"],"逻辑非":["37.11"],"条件运算符":["37.12"],"运算符的优先级":["37.13"],"js":["38.0","88.3","90.3"],"trim":["38.6","63.10"],"repeat":["38.7","63.11"],"padend":["38.8","63.12"],"tolowercase":["38.9","63.13"],"charat":["38.11","63.15"],"startwith":["38.13","63.17"],"split":["38.15","63.19"],"match":["38.17","63.21"],"search":["38.18","63.22"],"replace":["38.19","63.23"],"number":["39.2","60.5","61.1"],"undefined":["39.3"],"string":["39.4","60.4"],"null":["39.5","69.9"],"boolean":["39.6","60.6"],"symbol":["39.7"],"array":["39.10","60.3"],"function":["39.11"],"其他引用类型":["39.12"],"转换为字符串":["39.14"],"转换为数字型":["39.15"],"转换为布尔型":["39.16"],"基本类型":["39.18","69.0"],"引用类型":["39.19"],"小结":["39.20"],"var":["40.1"],"let":["40.2"],"暂时性死区":["40.3"],"全局声明":["40.4"],"条件声明":["40.5"],"const":["40.7"],"函数声明提升与":["40.8"],"bom":["41.0","42.0","44.0","45.0","46.0","47.0"],"常见操作":["41.1"],"示例":["41.2","42.2","44.2","45.2","46.2","47.2","87.1","88.1","89.1","90.1"],"常见方法":["42.1"],"常见属性和方法":["44.1","47.1"],"常见属性":["45.1","46.1"],"闭包":["48.0"],"什么是闭包":["48.1"],"节流和防抖":["49.0"],"定义":["49.2"],"代码实现":["49.3"],"节流":["49.4"],"防抖":["49.5"],"深拷贝":["50.0"],"数组去重":["51.0"],"数组扁平化":["52.0"],"promise":["53.0"],"实现一个":["53.2"],"获取和修改元素":["54.1"],"创建和操作元素":["54.2"],"事件处理":["54.3"],"样式和类操作":["54.4"],"dom":["55.0","56.0","57.0","58.0"],"添加事件监听器":["55.1"],"事件对象":["55.2"],"事件冒泡和事件捕获":["55.3"],"常见事件类型":["55.4"],"事件委托":["55.5"],"创建元素":["56.1"],"设置元素属性和内容":["56.2"],"操作元素的父子关系":["56.3"],"样式操作":["57.1"],"类操作":["57.2"],"获取元素":["58.1"],"修改元素":["58.2"],"内置对象":["59.0","61.0","62.0","63.0"],"date":["59.1","60.7"],"创建日期":["59.2"],"设置日期":["59.3"],"两个日期比较":["59.4"],"math":["60.8","61.3"],"regexp":["60.9"],"数字方法":["61.2"],"属性":["61.4","81.1"],"方法":["61.5"],"什么是":["62.1","79.1"],"元字符":["62.2"],"模式修饰符":["62.3"],"正则表达式的方法":["62.4"],"字符串截取":["63.2"],"substring":["63.4"],"substr":["63.5"],"前端导航":["64.0"],"常用工具":["64.2"],"axios":["65.0"],"什么是axios":["65.1"],"安装":["65.2","73.7"],"拦截器":["65.4"],"错误处理":["65.5"],"封装":["66.0"],"相关文章":["66.7"],"git基本命令使用":["67.0"],"账户配置":["67.1"],"本地基本操作":["67.2"],"初始化本地库":["67.3"],"查看状态":["67.4"],"添加暂存区":["67.5"],"提交本地库":["67.6"],"比较差异":["67.7"],"查看日志信息":["67.8"],"分支命令":["67.9"],"创建分支":["67.10"],"查看本地分支":["67.11"],"删除分支":["67.12"],"切换分支":["67.13"],"合并分支":["67.14"],"版本穿梭与回滚":["67.15"],"修改":["67.16"],"远程仓库交互":["67.17"],"git":["67.18","67.19","67.20","67.21"],"git安装":["68.0"],"tortoisegit安装":["68.7"],"字符串类型":["69.1"],"数字类型":["69.2"],"布尔类型":["69.3"],"数组":["69.4"],"元组":["69.5"],"枚举":["69.6"],"any":["69.7"],"void":["69.8"],"never":["69.10","69.11"],"联合类型":["69.12"],"交叉类型":["69.13"],"类型断言":["69.14"],"类":["70.0"],"基本实例":["70.1"],"继承":["70.2","74.3"],"类的修饰符":["70.3"],"默认为":["70.4"],"理解":["70.5","70.6"],"static":["70.8"],"interface":["70.9"],"存储器":["70.10"],"抽象类":["70.11"],"函数":["71.0"],"函数的类型":["71.1"],"可选参数":["71.2"],"默认参数":["71.3"],"剩余参数":["71.4"],"函数重载":["71.5"],"泛型":["72.0"],"函数泛型":["72.1"],"给函数加上类型":["72.2"],"使用泛型优化":["72.3"],"多个泛型参数的函数":["72.4"],"泛型接口":["72.5"],"泛型类":["72.6"],"泛型约束":["72.7"],"初识typescript":["73.0"],"ts是什么":["73.1"],"ts和js的关系":["73.2"],"ts和js的区别":["73.3"],"typescript的优缺点":["73.4"],"优点":["73.5"],"缺点":["73.6"],"监视编译和在node下运行typescript":["73.8"],"接口和对象类型":["74.0"],"对象的类型":["74.1"],"重名interface":["74.2"],"可选属性":["74.4"],"任意属性":["74.5"],"只读属性":["74.6"],"添加函数":["74.7"],"对象类型":["75.0"],"tsconfig":["76.0"],"类型推论":["77.0","77.1"],"类型别名":["77.2"],"初始":["79.0"],"canvas":["80.0","81.0","82.0","83.0","84.0","85.0","86.0"],"属性方法":["82.2"],"绘制图形":["85.1"],"绘制矩形":["85.2"],"绘制圆弧":["85.3","99.4"],"绘制线段":["85.4","99.5"],"绘制图像":["85.5"],"绘制文本":["85.6"],"绘制贝塞尔二次曲线":["86.1"],"绘制贝塞尔三次曲线":["86.2"],"刮刮乐":["87.0"],"代码":["87.2","88.2","89.2","90.2","96.1","100.2"],"时钟":["88.0"],"梅花特效":["89.0"],"画板":["90.0"],"echarts":["91.0"],"pixijs":["92.0","94.0","95.0","97.0","98.0","99.0","101.0"],"为精灵添加事件":["92.1"],"为图形添加事件":["92.2"],"特点":["93.2"],"用法示例":["93.7"],"graphics":["94.2"],"添加文字":["95.1"],"使用文字作为精灵的遮罩":["95.2"],"波纹涟漪效果":["96.0"],"创建应用":["97.1"],"添加滤镜":["97.2"],"绘制椭圆":["99.1"],"绘制多边形":["99.2"],"创建圆角矩形":["99.3"],"谷歌恐龙小游戏":["100.0"],"素材图片":["100.1"],"单次添加资源":["101.1"],"一次添加多个资源":["101.2"],"svg":["102.0"],"基本图形":["102.2"],"线条":["102.3"],"矩形":["102.4"],"圆形":["102.5"],"椭圆":["102.6"],"多边形":["102.7"],"折线":["102.8"],"路径":["102.9"],"vitepress":["103.0"],"配置导航栏部分":["103.5"],"配置侧边栏部分":["103.6"]},{"0":["25.1","32.9","39.15","39.16","40.6","59.1","61.5","83.1","88.3"],"1":["5.1","11.8","14.18","15.2","15.3","15.11","15.14","17.1","25.1","25.17","26.2","26.4","28.6","31.3","32.28","33.1","37.2","37.5","37.6","39.14","49.4","49.5","51.1","52.1","59.1","61.5","66.1","67.1","67.7","67.8","67.14","67.15","67.16","67.18","67.19","67.21","68.1","78.2","78.3","78.4","78.5","78.7","78.8","78.11","79.3","79.4","79.5","80.1","83.1","93.3","98.1","102.1","103.3"],"2":["11.8","14.18","15.3","15.11","15.14","25.18","26.3","26.5","28.7","31.4","33.1","37.2","51.2","52.2","66.2","68.2","78.4","78.8","78.9","78.10","78.11","78.12","79.4","80.2","83.2","93.4","98.2","103.4"],"3":["25.19","26.6","31.5","51.3","52.3","66.3","68.3","79.5","80.3","83.3","93.5","98.3","103.7"],"4":["25.20","26.7","31.6","51.4","52.4","66.4","68.4","80.4","83.4","93.6","98.4"],"5":["26.8","51.5","66.5","68.5","78.9","80.5"],"6":["26.9","51.6","66.6","68.6","78.10"],"7":["26.10","78.11"],"8":["26.11","78.12"],"9":["26.12"],"10":["33.6"],"14":["101.1"],"15":["101.2"],"19":["101.1"],"26":["101.2"],"31":["59.1"],"50":["85.3"],"100":["40.1","85.4"],"111":["21.1"],"123":["1.1"],"200":["85.3","86.1"],"300":["85.3","86.1","88.3"],"400":["87.2","88.3"],"404":["5.0"],"500":["49.4"],"600":["82.1","87.2","88.3"],"800":["88.3"],"2013":["78.6"],"2050":["59.3"],"12345":["65.5"],"qq":["0.0"],"部署刷新":["5.0"],"问题":["5.0"],"yarn":["5.1"],"build打包项目":["5.1"],"官网传送门":["11.0"],"初体验":["11.1"],"安装":["11.2","14.16","15.2","15.11","15.14"],"express":["11.2","11.3","11.7","11.8"],"bash":["11.2","14.17","15.11","15.14","28.6","67.1","67.3","67.4","67.8","67.10","67.11","67.13","67.15","67.21","73.7","78.10","97.3","103.8"],"npm":["11.2","14.17","14.18","15.11","15.14","28.2","28.6","73.7","97.3","103.3"],"install":["11.2","15.11","15.14","78.10"],"创建服务器":["11.2"],"监听客户端请求":["11.2"],"并返回内容":["11.2"],"js":["11.2","11.4","11.6","11.7","11.12","12.1","13.3","13.4","13.6","13.7","13.12","13.14","13.16","13.17","14.5","14.6","14.12","14.15","15.3","20.10","25.4","25.6","25.17","31.7","32.15","32.21","32.24","32.32","33.2","33.3","33.5","33.6","33.9","34.3","34.8","34.11","34.12","36.1","36.4","36.7","36.9","36.19","37.11","38.3","38.13","39.2","39.14","39.18","39.19","40.1","40.2","40.3","40.6","40.8","41.2","45.2","46.2","47.2","49.4","49.5","50.0","51.0","51.2","51.6","52.0","52.4","53.2","55.1","56.3","57.1","57.2","59.4","63.3","63.4","63.5","63.7","63.17","65.3","65.5","66.3","66.4","66.5","66.6","71.1","78.8","80.4","83.2","83.3","84.0","85.2","85.3","85.4","85.5","86.1","86.2","92.1","92.2","93.7","94.2","95.1","95.2","97.1","97.2","98.1","98.3","99.1","99.2","99.3","99.4","99.5","101.1","101.2","103.5","103.6"],"const":["11.2","11.4","11.6","11.7","13.12","13.16","13.17","15.3","25.28","31.7","32.21","51.0","51.2","52.4","53.2","92.2","94.2","95.2","97.1","97.2","99.1","99.2","99.3","99.4","99.5","101.1","101.2"],"通过":["11.3","11.6","11.8","31.4","31.5","35.3","58.1","71.2"],"static":["11.3"],"方法可创建静态资源服务器":["11.3"],"向外开放访问静态资源":["11.3"],"在指定的静态目录中查找文件":["11.3"],"并对外提供资源的访问路径":["11.3"],"路由":["11.4"],"创建路由模块":["11.4"],"router":["11.4","11.8"],"require":["11.4","11.7","13.4","13.12","13.16","13.17","14.21","14.22","14.23"],"中间件":["11.5","15.11"],"中间件是指流程的中间处理环节":["11.5"],"服务器收到请求后":["11.5"],"app":["11.6","11.7","11.8","27.2","93.7","94.2","101.1","101.2"],"use":["11.6","11.8","66.3","66.4"],"定义的中间件为全局中间件":["11.6"],"定义中间件函数":["11.7"],"应用级别的中间件":["11.8"],"或":["11.8","14.22"],"get":["11.8","11.14","11.15","25.7","65.3","65.5","66.5","70.10"],"post":["11.8","11.14","11.15"],"绑定到":["11.8"],"实例上的中间件":["11.8"],"路由级别的中间件":["11.8"],"叫做路由级别的中间件":["11.8"],"用法和应用级别中间件没有区别":["11.8"],"跨域资源共享":["11.9"],"中间件解决跨域":["11.10"],"cross":["11.11"],"origin":["11.11","11.12"],"resource":["11.11"],"sharing":["11.11"],"常见响应头":["11.12"],"access":["11.12"],"control":["11.12"],"allow":["11.12"],"制定了允许访问资源的外域":["11.12"],"url":["11.12"],"res":["11.12","66.4"],"setheader":["11.12"],"http":["11.12","13.16","13.17","78.6"],"请求分类":["11.13"],"请求方式":["11.14"],"head":["11.14"],"请求方式为":["11.15"],"介绍":["12.0"],"nodejs":["12.1"],"node":["12.1","12.3","14.12","14.15","78.8"],"is":["12.1","36.16"],"an":["12.1"],"的特点":["12.2"],"异步":["12.2","13.7"],"非阻塞":["12.2"],"io":["12.2","103.8"],"模型":["12.2"],"文件系统模块":["13.1"],"模块中所有的操作都有两种形式可供选择":["13.1"],"同步和异步":["13.1"],"同步文件系统会阻塞程序的执行":["13.1"],"也就是除非操作完毕":["13.1"],"语法格式":["13.3","13.6","34.8"],"fs":["13.3","13.4","13.6","13.9","13.10"],"readfile":["13.3"],"path":["13.3","13.10","13.12","13.13","13.14","102.9"],"options":["13.3","13.6","31.7"],"callback":["13.3","13.6","13.10"],"文件路径":["13.3"],"简单文件读取的方式会一次性读取文件内容到内存中":["13.4"],"若文件较大":["13.4"],"会占用过多内存影响系统性能":["13.4"],"且读取速度慢":["13.4"],"大文件适合用流式文件读取":["13.4"],"它会分多次将文件读取到内存中":["13.4"],"var":["13.4","34.8","36.4","39.19","40.2","40.6","40.8","59.4","88.3"],"创建一个可读流":["13.4"],"writefile":["13.6"],"file":["13.6","103.3"],"data":["13.6","66.4"],"同步":["13.7"],"简单文件的写入都不适合大文件的写入":["13.7"],"性能较差":["13.7"],"容易导致内存溢出":["13.7"],"缓冲区":["13.8"],"缓冲区文档":["13.8"],"的结构与数组类似":["13.8"],"操作方法也与数组类似":["13.8"],"dirname":["13.9"],"在使用":["13.9"],"模块操作文件时":["13.9"],"验证路径是否存在":["13.10"],"exists":["13.10"],"existssync":["13.10"],"获取文件信息":["13.10"],"stat":["13.10"],"删除文件":["13.10"],"路径模块":["13.11"],"join":["13.12"],"basename":["13.13"],"使用":["13.13","14.21","15.14","32.2","35.6","35.7","39.15","39.16","40.6","51.3","51.4","51.5","51.6","52.1","52.3","55.1","56.1","56.2","56.3","57.1","57.2","58.1","58.2","66.6","70.6","74.4","79.6","79.7","82.0"],"方法":["13.13","56.2","56.3","57.2","58.1","59.1","61.2"],"extname":["13.14"],"模块":["13.15","15.2"],"web":["13.16"],"服务器":["13.16"],"创建":["13.16","39.9"],"服务器实例":["13.16"],"server":["13.17"],"createserver":["13.17"],"概念":["14.2"],"避免命名空间的冲突":["14.3"],"中模块化":["14.4"],"自定义模块中都有一个":["14.7"],"module":["14.7","76.0","78.8"],"对象":["14.7","15.14","36.0","85.6"],"模块化规范":["14.8"],"模块第一次加载后会被缓存":["14.9"],"内置模块加载优先级最高":["14.10"],"加载自定义模块时":["14.11","14.21"],"路径要以":["14.11"],"若导入第三方模块":["14.12"],"会从":["14.12"],"当前模块的父目录":["14.12"],"开始":["14.12"],"当把目录作为模块标识符进行加载的时候":["14.13"],"有三种加载方式":["14.13","14.23"],"在被加载的目录下查找":["14.13"],"与包":["14.14"],"中的第三方模块又叫做":["14.15"],"在项目中安装包的命令":["14.16"],"的下包速度慢的问题":["14.17"],"注册":["14.18"],"账号":["14.18"],"初始化包的基本结构":["14.18"],"模块在第一次加载后会被缓存":["14.19"],"内置模块的加载优先级最高":["14.20"],"必须指定以":["14.21"],"如果传递给":["14.22"],"的模块标识符不是一个内置模块":["14.22"],"也没有以":["14.22"],"开头":["14.22","39.2"],"则":["14.22"],"当把目录作为模块标识符":["14.23"],"传递给":["14.23"],"进行加载的时候":["14.23"],"操作":["15.1"],"mysql":["15.2","15.3"],"数据库":["15.3"],"查询数据":["15.3"],"db":["15.3"],"query":["15.3"],"select":["15.3","28.4"],"from":["15.3","94.2","95.1","95.2","97.1","101.1","101.2"],"users":["15.3"],"err":["15.3"],"results":["15.3"],"插入数据":["15.3"],"表示占位符":["15.3"],"sql":["15.3"],"开发模式":["15.4"],"服务器发送给客户端的":["15.5"],"html":["15.5","16.5","16.9","16.14","20.10","20.11","22.1","27.9","40.5","82.1","87.2","90.3","102.3","102.4","102.5","102.7","102.8","102.9","103.7"],"页面":["15.5"],"是在服务器通过字符串的拼接动态生成的":["15.5"],"因此客户端不需要使用":["15.5"],"ajax":["15.5","15.6","31.1","31.2","31.7"],"前后端分离的开发模式":["15.6"],"依赖于":["15.6"],"技术的广泛应用":["15.6"],"企业级网站":["15.7"],"认证机制":["15.9","15.12"],"工作原理":["15.10","15.13"],"中使用":["15.11"],"session":["15.11","15.13"],"认证":["15.11"],"配置中间件":["15.11"],"认证的局限性":["15.13"],"认证机制需要配合":["15.13"],"cookie":["15.13"],"才能实现":["15.13"],"由于":["15.13","79.7"],"默认不支持跨域访问":["15.13"],"jwt":["15.14"],"jsonwebtoken":["15.14"],"用于生成":["15.14"],"字符串":["15.14","33.10","39.15","63.5"],"用于将":["15.14"],"字符串解析还原成":["15.14"],"json":["15.14","76.0","78.7"],"定义":["15.14","70.9"],"secret":["15.14"],"密钥":["15.14"],"为保证":["15.14"],"选择器":["16.0","16.4"],"选择页面所有元素":["16.1"],"通过标签名选择元素":["16.2"],"通过类名选择元素":["16.3"],"p":["16.5"],"class":["16.5","53.2","70.1","70.6","70.8","72.6","90.4"],"good":["16.5"],"作用":["16.6"],"选中多个选择器对应的元素":["16.6"],"在所有后代节点中选":["16.7"],"只在亲儿子中选":["16.8"],"选择所有指定元素的":["16.9"],"相邻":["16.9"],"后一个兄弟节点":["16.9"],"h1":["16.9"],"根据元素状态或所处":["16.10"],"css":["16.11","16.14","19.0"],"按这个顺序声明":["16.11"],"c3":["16.12","16.13","16.14"],"选择符":["16.12","16.13"],"含义":["16.12","16.13"],"e":["16.12","16.13"],"first":["16.12"],"child":["16.12","27.8"],"第一个子元素":["16.12"],"last":["16.12"],"最后一个子元素":["16.12"],"att":["16.13"],"选择具有":["16.13"],"伪元素选择器利用":["16.14"],"创建新标签元素":["16.14"],"而不需要":["16.14"],"标签":["16.14","20.0"],"从而简化":["16.14"],"结构":["16.14"],"before":["16.14"],"和":["16.14","25.2","25.7","33.11","34.3","39.16","67.14","69.5","69.9","70.8","70.10"],"after":["16.14"],"一篇搞清伪类和伪元素":["16.15"],"一般情况下":["17.0"],"权重":["17.1"],"tip":["17.1"],"详细描述":["17.1"],"计算方式":["17.1"],"每个选择器":["17.1"],"都可以算出一组权重":["17.1"],"格式为":["17.1"],"a":["17.1","22.1","28.4","37.3","37.5","37.6","39.18","67.14","103.3"],"滚动条":["19.0"],"webkit":["19.0"],"scrollbar":["19.0"],"纵向":["19.0"],"width":["19.0","46.1","82.1","87.2","101.1","101.2"],"8px":["19.0"],"音视频标签":["20.0"],"音视频标签中的资源除了可以用":["20.0"],"src":["20.0","78.12"],"属性来指定外":["20.0"],"还可以用":["20.0"],"source":["20.0","81.1"],"而且可以指定多个":["20.0"],"mime":["20.1"],"format":["20.2"],"格式":["20.3"],"audio":["20.5"],"video":["20.6"],"标签的属性":["20.7"],"属性":["20.7","58.2"],"描述":["20.7","37.2","37.3","37.7","59.1","61.2"],"方法名":["20.8"],"音频":["20.10"],"css部分":["20.10"],"获取":["20.10"],"let":["20.10","32.15","32.32","33.6","37.3","39.18","40.4","40.6","40.7","49.4","49.5","65.3","66.4","66.6","69.2","69.3","69.9","93.7"],"v":["20.10","26.7","27.6"],"document":["20.10","41.0","41.1","54.0","88.3"],"视频":["20.11"],"div":["20.11","26.12","27.9","87.2","90.4"],"style":["20.11","54.4","57.1"],"text":["20.11"],"align":["20.11"],"center":["20.11"],"button":["20.11","90.3"],"onclick":["20.11"],"playpause":["20.11"],"播放":["20.11"],"asdas":["21.0"],"type":["22.1","77.2","90.3"],"password":["22.1"],"浏览器自动填充账号和密码":["22.1"],"api":["25.0","78.12"],"vue在线学习工具":["25.0"],"在":["25.0","25.31","26.2","26.6","26.8","27.2","27.13","34.0","53.1","71.4","78.10","78.12","103.7"],"理解":["25.1"],"vue3":["25.1","25.16","26.2","26.8","78.7"],"reactive":["25.2"],"函数用来根据给定的值创建一个响应式的数据对象":["25.2"],"函数调用的返回值是一个对象":["25.2"],"这个对象上只包含一个":["25.2"],"value":["25.2","25.5","25.29","53.2"],"判断是不是一个ref对象":["25.4"],"import":["25.4","25.6","78.10","94.2","95.1","97.1","101.1","101.2"],"ref":["25.4","26.9"],"创建一个跟踪自身":["25.5"],"变化的":["25.5"],"强制更新页面dom":["25.6"],"自定义ref":["25.7"],"是个工厂函数要求我们返回一个对象":["25.7"],"并且实现":["25.7"],"reactive是不可以绑定普通的":["25.8"],"数据类型":["25.8","39.0"],"只能对浅层的数据":["25.10"],"如果是深层的数据只会改变值":["25.10"],"把一个响应式对象转换成普通对象":["25.12"],"该普通对象的每个":["25.12"],"torefs相当于对对象内每个属性调用toref":["25.13"],"torefs返回的对象内的属性使用时需要加":["25.13"],"将响应式对象修改为普通对象":["25.14"],"与":["25.15","26.9","26.10","69.11","103.8"],"的作用和":["25.16"],"监听ref定义的一个响应式数据":["25.17"],"监听多个ref":["25.18"],"写法变为数组的形式":["25.18"],"监听reactive定义的响应式对象":["25.19"],"使用reactive监听深层对象开启和不开启deep":["25.19"],"监听reactive":["25.20"],"定义响应式对象的单一属性":["25.20"],"立即执行传入的一个函数":["25.21"],"watcheffect":["25.22"],"vue":["25.23","25.28","25.30","26.4","26.5","26.12","27.8","27.11","28.3","28.4","29.1","78.8","89.2","90.4","94.1","96.1","100.2"],"watcheffect的第二个参数":["25.24"],"用来定义副作用刷新时机":["25.24"],"简单来说就是一个组件从创建":["25.25"],"created":["25.27"],"元素初始化的时候":["25.27"],"这里有一个需要注意的限制":["25.28"],"必须以":["25.28"],"vnameofdirective":["25.28"],"的形式来命名本地自定义指令":["25.28"],"以使得它们可以直接在模板中使用":["25.28"],"vmovedirective":["25.28"],"第一个":["25.29"],"el":["25.29"],"当前绑定的dom":["25.29"],"元素":["25.29"],"第二个":["25.29"],"binding":["25.29"],"instance":["25.29"],"使用指令的组件实例":["25.29"],"自定义拖拽指令":["25.30"],"vue2":["25.31","26.1","26.6","27.13"],"中有个东西叫":["25.31"],"mixins":["25.31"],"他可以将多个组件中相同的逻辑抽离出来":["25.31"],"实现一次写代码":["25.31"],"多组件受益的效果":["25.31"],"但是":["25.31","72.7"],"的副作用就是引用的多了变量的来源就不清晰了":["25.31"],"而且还会有变量来源不明确":["25.31"],"组件通信方式":["26.0"],"通信仓库地址":["26.1"],"项目地址":["26.1"],"不管是":["26.1"],"props":["26.2"],"可以实现父子组件通信":["26.2"],"中我们可以通过":["26.2"],"自定义事件":["26.3","26.5"],"原生":["26.4"],"dom":["26.4","54.0","55.4"],"事件":["26.4","31.6"],"代码如下":["26.4"],"自定义事件可以实现子组件给父组件传递数据":["26.5"],"在项目中是比较常用的":["26.5"],"比如在父组件内部给子组件":["26.5"],"event2":["26.5"],"绑定一个自定义事件":["26.5"],"全局事件总线":["26.6"],"全局事件总线可以实现任意组件通信":["26.6"],"model":["26.7","27.17","43.0","54.0"],"指令可是收集表单数据":["26.7"],"数据双向绑定":["26.7"],"除此之外它也可以实现父子组件数据同步":["26.7"],"useattrs":["26.8"],"中可以利用":["26.8"],"parent":["26.9"],"提及到":["26.9"],"provide":["26.10"],"piniapinia":["26.11"],"slot":["26.12","27.9"],"插槽":["26.12"],"默认插槽":["26.12"],"具名插槽":["26.12"],"作用域插槽可以实现父子组件通信":["26.12"],"在子组件内部的模板中书写":["26.12"],"全局组件标签":["26.12"],"template":["26.12","90.4"],"在父组件内部提供结构":["26.12"],"todo":["26.12"],"深入组件":["27.0"],"main":["27.2"],"ts":["27.2","69.1","69.2","69.3","69.9","69.10","69.12","69.13","70.1","70.6","70.8","70.9","71.2","71.3","71.5","72.2","72.4","72.6","72.7","73.1","74.2","74.3","74.7","77.1","77.2","78.10","101.1"],"引入组件跟随在":["27.2"],"createapp":["27.2"],"局部注册的组件需要在使用它的父组件中显式导入":["27.5"],"父组件通过":["27.6"],"bind":["27.6"],"绑定一个数据":["27.6"],"然后子组件通过":["27.6"],"defineprops":["27.6"],"在子组件放置一个插槽":["27.8"],"具名插槽其实就是给插槽取个名字":["27.9"],"一个子组件可以放多个插槽":["27.9"],"而且可以放在不同的地方":["27.9"],"而父组件填充内容时":["27.9"],"可以根据这个名字把内容填充到对应插槽中":["27.9"],"插槽内容可以访问到父组件的数据作用域":["27.10"],"因为插槽内容本身是在父组件模板中定义的":["27.10"],"插槽可以是一个变量名":["27.11"],"在大型应用中":["27.12"],"需要将应用分割成小一些的代码块":["27.12"],"允许应用程序在等待异步组件时渲染一些其它内容":["27.13"],"中":["27.13"],"必须使用条件判断":["27.13"],"传送组件":["27.14"],"是一种能够将我们的模板渲染至指定dom节点":["27.14"],"不受父级style":["27.14"],"alive":["27.15"],"缓存组件":["27.15"],"事件挂载的方法等":["27.15"],"只执行一次的放在":["27.15"],"onmounted中":["27.15"],"组件每次进去执行的方法放在":["27.15"],"onactivated中":["27.15"],"inject":["27.16"],"可以在祖先组件中指定我们想要提供给后代组件的数据或方法":["27.16"],"而在任何后代组件中":["27.16"],"升级":["27.17"],"在vue3":["27.17"],"是破坏性更新的":["27.17"],"是props":["27.17"],"使用vue":["28.1"],"create":["28.4","36.6","36.8"],"my":["28.4"],"project":["28.4"],"然后的步骤":["28.4"],"please":["28.4"],"pick":["28.4"],"preset":["28.4"],"选择":["28.4"],"manually":["28.4"],"使用vite创建":["28.5"],"推荐":["28.5"],"vite的优势":["28.5"],"使用vite初始化一个项目":["28.6"],"了解相关信息":["29.1"],"性能提升":["29.2"],"新增特性":["29.3"],"composition":["29.3"],"组合":["29.3"],"全称":["31.1"],"async":["31.1"],"实现过程":["31.2"],"实现":["31.2","88.3","88.4","90.3","90.4"],"与服务器建立连接":["31.4"],"xmlhttprequest":["31.4","31.5","31.6","31.7"],"给服务端发送数据":["31.5"],"绑定":["31.6"],"onreadystatechange":["31.6"],"事件用于监听服务器端的通信状态":["31.6"],"主要监听的属性为":["31.6"],"readystate":["31.6"],"关于":["31.6","66.7"],"封装":["31.7"],"通过上面对":["31.7"],"对象的了解":["31.7"],"下面来封装一个简单的":["31.7"],"请求":["31.7","65.3"],"封装一个ajax请求":["31.7"],"function":["31.7","32.24","34.2","34.8","49.4","49.5","50.0","65.5","66.5","71.1","71.3","71.5","72.4","88.3"],"创建xmlhttprequest对象":["31.7"],"xhr":["31.7"],"数组":["32.0"],"创建数组有两种方式":["32.1"],"利用":["32.1"],"new":["32.1","36.3","36.5","59.2","99.2","99.3","99.4","99.5","101.1","101.2"],"数组的长度":["32.2"],"数组名":["32.2"],"length":["32.2"],"可以访问数组元素的数量":["32.2"],"数组长度":["32.2"],"数组的索引":["32.2"],"索引":["32.2"],"下标":["32.2"],"操作方法":["32.5","38.1","63.1"],"下面前三种是对原数组产生影响的增添方法":["32.6"],"方法接收任意数量的参数":["32.7"],"在数组开头添加任意多个值":["32.8"],"传入三个参数":["32.9","32.17"],"分别是开始位置":["32.9","32.14","32.17"],"要删除的元素数量":["32.9"],"首先会创建一个当前数组的副本":["32.10"],"然后再把它的参数添加到副本末尾":["32.10"],"最后返回这个新构建的数组":["32.10"],"不会影响原始数组":["32.10","32.15"],"下面三种都会影响原数组":["32.11"],"方法用于删除数组的最后一项":["32.12"],"同时减少数组的":["32.12","32.13"],"方法用于删除数组的第一项":["32.13"],"传入两个参数":["32.14"],"删除元素的数量":["32.14"],"用于创建一个包含原有数组中一个或多个元素的新数组":["32.15"],"即修改原来数组的内容":["32.16"],"要删除元素的数量":["32.17"],"要插入的任意多个元素":["32.17"],"即查找元素":["32.18"],"返回要查找的元素在数组中的位置":["32.19","32.20"],"如果没找到则返回":["32.19"],"找到返回":["32.20"],"返回第一个匹配的元素":["32.21"],"排序方法":["32.22"],"顾名思义":["32.23"],"将数组元素方向反转":["32.23"],"方法接受一个比较函数":["32.24"],"用于判断哪个值应该排在前面":["32.24"],"compare":["32.24"],"value1":["32.24","36.16"],"value2":["32.24","36.16"],"转换方法":["32.25","38.14","63.18"],"方法接收一个参数":["32.26"],"即字符串分隔符":["32.26"],"迭代方法":["32.27"],"对数组每一项都运行传入的测试函数":["32.28","32.29"],"如果至少有":["32.28"],"个元素返回":["32.28"],"如果所有元素都返回":["32.29"],"true":["32.29","32.31","37.9","39.6","40.2","78.8"],"对数组每一项都运行传入的函数":["32.30","32.31","32.32"],"没有返回值":["32.30"],"函数返回":["32.31"],"的项会组成数组之后返回":["32.31"],"返回由每次函数调用的结果构成的数组":["32.32"],"流程控制":["33.0"],"语句":["33.1","33.2","33.3","33.5"],"流程控制语句可以用来改变程序执行的顺序":["33.1"],"条件判断语句":["33.1"],"else":["33.2"],"语法":["33.2","33.3","33.9","63.3","63.4","63.5"],"条件表达式":["33.2","33.5","37.12"],"条件表达式1":["33.2"],"通过循环语句可以使指定的代码反复执行":["33.4"],"while":["33.6"],"i":["33.6","40.6"],"循环":["33.8","33.9","33.10","51.2"],"in":["33.9"],"用于遍历对象的可枚举属性":["33.9"],"of":["33.10"],"用于遍历可迭代的集合":["33.10"],"如数组":["33.10"],"映射":["33.10"],"map":["33.10","51.6"],"continue":["33.11","34.9"],"用来终止":["33.11"],"switch":["33.11"],"和循环语句":["33.11"],"执行后":["33.11"],"当前的":["33.11"],"或循环会立刻停止":["33.11"],"函数":["34.0","69.8"],"是声明函数的关键字":["34.2"],"函数名":["34.3","34.8"],"函数使用分为两步":["34.3"],"声明函数":["34.3","34.8"],"在声明函数时":["34.6"],"可以在函数名称后面的小括号中添加一些参数":["34.6"],"这些参数被称为":["34.6"],"形参":["34.6"],"在调用该函数时":["34.6"],"参数个数":["34.7"],"说明":["34.7"],"实参个数等于形参个数":["34.7"],"输出正确结果":["34.7"],"实参个数多于形参个数":["34.7"],"只取到形参的个数":["34.7"],"实参个数少于形参个数":["34.7"],"有的时候":["34.8"],"我们会希望函数将值返回给调用者":["34.8"],"此时通过使用":["34.8"],"return":["34.8","34.9","49.5"],"语句就可以实现":["34.8"],"需要返回的值":["34.8"],"调用函数":["34.8"],"result":["34.8"],"函数可以分为具名函数和匿名函数":["34.10"],"基本语法":["35.0"],"是一种脚本语言":["35.0"],"以下是一个简单的":["35.1"],"javascript":["35.1","35.2","35.4","37.13","39.10","42.2","44.2","61.5","69.4","69.6","71.4","73.3"],"程序不能独立运行":["35.2"],"script":["35.3"],"标签包裹":["35.3"],"一般将":["35.4"],"对象是":["36.1"],"中的一种复合数据类型":["36.1"],"object":["36.3","36.6","43.0","50.0","54.0","75.1"],"person":["36.4","70.1","70.6","74.7"],"name":["36.4","40.2","40.3","65.3","70.1","90.3"],"张三":["36.4"],"构造函数":["36.5"],"是一种特殊的函数":["36.5"],"主要用来初始化对象":["36.5"],"即为对象成员变量赋初始值":["36.5"],"它总与":["36.5"],"运算符一起使用":["36.5"],"我们可以把对象中一些公共的属性和方法抽取出来":["36.5"],"然后封装到这个函数里面":["36.5"],"assign":["36.6","36.7"],"target":["36.6","36.7","76.0"],"sources":["36.6","36.7"],"复制一个或多个对象的属性到目标对象":["36.6"],"proto":["36.6","36.8"],"entries":["36.9"],"obj":["36.9","36.12","36.13","36.14","36.15","36.17","36.19","36.20","50.0"],"freeze":["36.10","36.11"],"getownpropertydescriptor":["36.12"],"prop":["36.12","36.21"],"getownpropertynames":["36.13"],"getownpropertysymbols":["36.14"],"getprototypeof":["36.15"],"keys":["36.17"],"seal":["36.18","36.19"],"values":["36.20"],"hasownproperty":["36.21"],"运算符":["37.0","37.2"],"实例":["37.2","37.3"],"加":["37.2"],"运算符名称":["37.3","37.7"],"赋值":["37.3"],"使用后会使得原来的变量立刻增加":["37.5"],"自增分为前自增":["37.5"],"和后自增":["37.5"],"无论是":["37.5"],"使用后会使得原来的变量立刻减小":["37.6"],"自减分为前自减":["37.6"],"案列":["37.7"],"结果":["37.7"],"一假即假":["37.9"],"可以对两个值进行与运算":["37.9"],"当":["37.9","37.10"],"左右都为":["37.9"],"一真即真":["37.10"],"可以对两个值进行或运算":["37.10"],"左右有":["37.10"],"表达式":["37.12"],"各种运算符的优先级别":["37.13"],"operator":["37.13"],"字符串的常用方法":["38.0"],"这里增的意思并不是说直接增添内容":["38.2","63.6"],"用于将一个或多个字符串拼接成一个新字符串":["38.3","63.7"],"这里的删的意思并不是说删除原字符串的内容":["38.4","63.8"],"而是创建字符串的一个副本":["38.4","63.8"],"再进行操作":["38.4","63.8"],"常见的有":["38.4","63.8"],"slice":["38.4","63.8"],"substr":["38.4","63.8"],"substring":["38.4","63.8"],"这里改的意思也不是改变原字符串":["38.5","63.9"],"trimleft":["38.6","63.10"],"trimright":["38.6","63.10"],"删除前":["38.6","63.10"],"接收一个整数参数":["38.7","63.11"],"复制字符串":["38.8","63.12"],"如果小于指定长度":["38.8","63.12"],"touppercase":["38.9","63.13"],"大小写转化":["38.9","63.13"],"除了通过索引的方式获取字符串的值":["38.10","63.14"],"返回给定索引位置的字符":["38.11","63.15"],"从字符串开头去搜索传入的字符串":["38.12","63.16"],"并返回位置":["38.12","63.16"],"includes":["38.13","63.17"],"从字符串中搜索传入的字符串":["38.13","63.17"],"并返回一个表示是否包含的布尔值":["38.13","63.17"],"把字符串按照指定的分割符":["38.15","63.19"],"拆分成数组中的每一项":["38.15","63.19"],"模板匹配方法":["38.16","63.20"],"接收一个参数":["38.17","38.18","63.21","63.22"],"可以是一个正则表达式字符串":["38.17","38.18","63.21","63.22"],"也可以是一个":["38.17","38.18","63.21","63.22"],"接收两个参数":["38.19","63.23"],"第一个参数为匹配的内容":["38.19","63.23"],"第二个参数为替换的元素":["38.19","63.23"],"基本类型":["39.1"],"数值最常见的整数类型格式则为十进制":["39.2"],"还可以设置八进制":["39.2"],"零开头":["39.2"],"十六进制":["39.2"],"0x":["39.2"],"类型只有一个值":["39.3"],"就是特殊值":["39.3"],"字符串可以使用双引号":["39.4"],"单引号":["39.4"],"或反引号":["39.4"],"类型同样只有一个值":["39.5"],"即特殊值":["39.5"],"布尔值":["39.6"],"类型有两个字面值":["39.6"],"符号":["39.7"],"是原始值":["39.7"],"且符号实例是唯一":["39.7"],"引用类型":["39.8"],"数组是一组有序的数据":["39.10"],"函数实际上是对象":["39.11"],"每个函数都是":["39.11"],"类型的实例":["39.11"],"而":["39.11"],"除了上述说的三种之外":["39.12"],"类型转换":["39.13"],"把数字转换为字符串型":["39.14"],"变量":["39.14","40.0"],"将其他的数据类型转换为数值":["39.15"],"number":["39.15","61.0","61.2","75.1"],"函数来将其他类型转换为数值":["39.15"],"转换的情况":["39.15","39.16"],"如果字符串是一个合法的数字":["39.15"],"则会自动转换为对应的数字":["39.15"],"如果字符串不是合法数字":["39.15"],"则转换为":["39.15"],"nan":["39.15"],"如果字符串是空串或纯空格的字符串":["39.15"],"boolean":["39.16","69.3","75.1"],"函数来将其他类型转换为布尔值":["39.16"],"数字":["39.16"],"存储区别":["39.17"],"obj1":["39.19"],"声明变量时不同的内存地址分配":["39.20"],"关键字":["40.1","77.2"],"msg":["40.1"],"默认":["40.1","81.1"],"undefined":["40.1","53.2","69.9"],"声明后可以改变类型":["40.1"],"但不推荐":["40.1"],"hi":["40.1"],"声明":["40.2","40.6","40.7"],"声明的范围是块作用域":["40.2"],"if":["40.2","50.0"],"zhangsan":["40.2"],"console":["40.2","46.2"],"log":["40.2","46.2","67.8"],"在全局作用域中声明的变量不会成为":["40.4"],"window":["40.4","47.0","47.1","101.1","101.2"],"对象的属性":["40.4"],"循环中的":["40.6"],"时变量会渗透到外面":["40.6"],"的行为与":["40.7"],"基本相同":["40.7"],"声明提升":["40.8"],"获取元素":["41.1"],"可以使用":["41.1","103.3"],"获取具有id为":["41.2"],"myelement":["41.2"],"history":["42.0","42.1"],"bom":["43.0"],"browser":["43.0","78.8"],"是":["43.0","102.1"],"中用于与浏览器交互的一组对象和方法集合":["43.0"],"它提供了访问和控制浏览器窗口及其内容的功能":["43.0"],"location":["44.0","44.1"],"href":["44.1"],"当前窗口的完整":["44.1"],"获取当前窗口的url":["44.2"],"navigator":["45.0","45.1"],"获取用户代理字符串":["45.2"],"screen":["46.0","46.1"],"获取屏幕的宽度":["46.2"],"open":["47.1"],"打开一个新窗口":["47.2"],"一个函数和对其周围状态":["48.1"],"lexical":["48.1"],"本质上是优化高频率执行代码的一种手段":["49.1"],"如":["49.1"],"节流":["49.2"],"使用时间戳写法":["49.4"],"事件会立即执行":["49.4"],"停止触发后没有办法再次执行":["49.4"],"throttled1":["49.4"],"fn":["49.4"],"delay":["49.4"],"oldtime":["49.4"],"date":["49.4","59.0","59.2"],"now":["49.4"],"简单版本的实现":["49.5"],"debounce":["49.5"],"func":["49.5"],"wait":["49.5"],"timeout":["49.5"],"deepcopy":["50.0"],"如果不是对象或者为null":["50.0"],"直接返回":["50.0"],"typeof":["50.0"],"for":["51.2"],"indexof":["51.3"],"include":["51.4"],"数组扁平化是指将一个多维数组变为一个一维数组":["52.0"],"利用正则":["52.2"],"reduce":["52.3"],"函数递归":["52.4"],"promise":["53.1","53.2"],"是一种异步编程的解决方案":["53.1"],"它可以避免回调地狱":["53.1"],"使代码更加简洁易读":["53.1"],"对象代表一个异步操作的最终完成或失败":["53.1"],"并返回一个值":["53.1"],"实现一个promise":["53.2"],"mypromise":["53.2"],"constructor":["53.2"],"executor":["53.2"],"this":["53.2"],"status":["53.2"],"pending":["53.2"],"初始状态为pending":["53.2"],"成功的值":["53.2"],"reason":["53.2"],"失败的原因":["53.2"],"getelementbyid":["54.1","58.1","88.3"],"根据元素的":["54.1"],"createelement":["54.2","56.1"],"addeventlistener":["54.3","55.1"],"获取或设置元素的样式属性":["54.4"],"事件处理":["55.0"],"方法来添加事件监听器":["55.1"],"事件处理程序的第一个参数是事件对象":["55.2"],"事件冒泡":["55.3"],"默认情况下":["55.3"],"以下是一些常见的":["55.4"],"事件类型":["55.4"],"鼠标事件":["55.4"],"事件委托是一种处理多个子元素的事件的技术":["55.5"],"通过将事件监听器添加到父元素上":["55.5"],"可以捕获子元素触发的事件":["55.5"],"创建和操作元素":["56.0"],"设置元素的属性":["56.2"],"setattribute":["56.2"],"将新元素添加到父元素中":["56.3"],"appendchild":["56.3"],"样式和类操作":["57.0"],"修改元素的内联样式":["57.1"],"对象来访问和修改元素的样式属性":["57.1"],"添加类名":["57.2"],"classlist":["57.2"],"属性的":["57.2"],"add":["57.2","67.5","71.1","71.5"],"element":["57.2"],"获取和修改元素":["58.0"],"id":["58.1","82.1","87.2","90.3"],"修改元素的文本内容":["58.2"],"textcontent":["58.2"],"属性或":["58.2"],"innertext":["58.2"],"getdate":["59.1"],"获取日期":["59.1"],"月份中的日期":["59.1"],"返回值为":["59.1"],"到":["59.1","61.5"],"之间的整数":["59.1"],"getday":["59.1"],"获取星期几":["59.1"],"表示星期日":["59.1"],"对象用于处理日期和时间":["59.2"],"可以通过":["59.2"],"通过使用针对日期对象的方法":["59.3"],"我们可以很容易地对日期进行操作":["59.3"],"在下面的例子中":["59.3"],"我们为日期对象设置了一个特定的日期":["59.3"],"内置对象简介":["60.0"],"内置对象":["60.0","60.1"],"就是指这个语言自带的一些对象":["60.0"],"的内置对象":["60.1"],"对象说明":["60.1"],"是用于进行正则表达式匹配的对象":["60.9"],"parsefloat":["61.2"],"将字符串转换成浮点数":["61.2"],"math":["61.4","61.5","88.3"],"random":["61.5"],"生成":["61.5"],"间的随机数":["61.5"],"之间的随机数":["61.5"],"包含":["61.5"],"regexp":["62.0","62.1"],"匹配除换行符之外的任何单个字符":["62.2"],"g":["62.3"],"全局匹配":["62.3"],"test":["62.4"],"检测字符串是否与正则表达式匹配":["62.4"],"string":["63.0","71.5","75.1"],"新字符串":["63.3","63.4"],"str":["63.3","63.4","63.5"],"navlinks":["64.2"],"axios":["65.1","65.3","65.5","66.0","66.2","78.11"],"使用npm":["65.2"],"执行":["65.3"],"zs":["65.3"],"我们大致可以分为两类":["65.4"],"一类是":["65.4"],"请求接口前的统一处理":["65.4"],"请求拦截":["65.4"],"请求接口后的统一处理":["65.4"],"user":["65.5"],"catch":["65.5"],"封装目的":["66.1"],"初始化":["66.2"],"设置请求拦截":["66.3"],"创建请求拦截":["66.3"],"service":["66.3","66.4"],"interceptors":["66.3","66.4"],"request":["66.3"],"config":["66.3","78.10","103.5"],"设置响应拦截":["66.4"],"创建响应拦截":["66.4"],"response":["66.4"],"处理自己的业务逻辑":["66.4"],"封装常见的方法":["66.5"],"export":["66.5"],"示例":["66.6","93.7"],"param":["66.6"],"username":["66.6"],"配置全局账户":["67.1"],"对所有":["67.1"],"git":["67.1","67.5","67.6","67.7","67.8","67.10","67.15"],"仓库有效":["67.1"],"commit":["67.6","67.16"],"提交所有变更":["67.6"],"diff":["67.7"],"比较工作区和暂存区的所有差异":["67.7"],"只能查看旧文件的变更":["67.7"],"包括修改和删除":["67.7"],"不能查看新文件":["67.7"],"因为新文件还为被":["67.7"],"查看简要日志信息":["67.8"],"基于当前分支创建分支":["67.10"],"安全删除本地分支":["67.12"],"merge":["67.14"],"rebase":["67.14"],"的区别有待学习实践":["67.14"],"worried":["67.14"],"将":["67.14"],"工作区指定文件恢复成和暂存区一样":["67.15"],"checkout":["67.15"],"file1":["67.15"],"file2":["67.15"],"tips":["67.15"],"记录":["67.16"],"remote":["67.18"],"查看所有远程仓库地址别名":["67.18"],"clone":["67.19"],"pull":["67.20"],"push":["67.21"],"推送本地指定分支到仓库指定分支":["67.21"],"配置用户名和邮箱":["68.3"],"执行命令生成ssh":["68.4"],"tortoisegit安装和配置详细说明":["68.7"],"支持十六进制":["69.2"],"十进制":["69.2"],"八进制和二进制":["69.2"],"b1":["69.3"],"typescript":["69.4","69.14","70.10","73.7","74.0"],"像":["69.4"],"tuple":["69.5"],"元组类型允许表示一个已知":["69.5"],"元素数量":["69.5"],"类型":["69.5"],"的数组":["69.5"],"各元素的类型不必相同":["69.5"],"enum类型是对":["69.6"],"标准数据类型的一个补充":["69.6"],"使用枚举类型可以为一组数值赋予友好的名字":["69.6"],"枚举的值可以是数字":["69.6"],"任意类型":["69.7"],"没有强制限定哪种类型":["69.7"],"随时切换类型都可以":["69.7"],"我们可以对":["69.7"],"可以用":["69.8"],"表示没有":["69.8"],"任何返回值":["69.8"],"的":["69.8"],"u":["69.9"],"定义undefined":["69.9"],"类型表示的是那些永不存在的值的类型":["69.10"],"void":["69.11"],"联合类型用":["69.12"],"分隔":["69.12"],"表示取值可以为多种类型中的一种":["69.12"],"a可以为数字或者布尔类型":["69.12"],"交叉类型就是跟联合类型相反":["69.13"],"用":["69.13","70.11"],"操作符表示":["69.13"],"交叉类型就是两个类型必须存在":["69.13"],"通过类型断言这种方式可以告诉编译器":["69.14"],"相信我":["69.14"],"我知道自己在干什么":["69.14"],"类型断言好比其它语言里的类型转换":["69.14"],"但是不进行特殊的数据检查和解构":["69.14"],"它没有运行时的影响":["69.14"],"只是在编译阶段起作用":["69.14"],"会假设你":["69.14"],"es6提供了更接近传统语言的写法":["70.0"],"引入了class":["70.0"],"类的基本定义与使用":["70.1"],"声明属性":["70.1"],"在typescript":["70.2"],"里":["70.2","71.4"],"我们可以使用常用的面向对象模式":["70.2"],"基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类":["70.2"],"总共有三个":["70.3"],"public":["70.4","70.6"],"private":["70.5"],"protected":["70.6"],"修饰符":["70.6","70.7"],"代表定义的变量私有的只能在内部和继承的子类中访问":["70.6"],"不能在外部访问":["70.6"],"你可以使用":["70.7"],"静态属性":["70.8"],"静态方法":["70.8"],"我们用static":["70.8"],"定义的属性":["70.8"],"不可以通过this":["70.8"],"去访问":["70.8"],"只能通过类名去调用":["70.8"],"类":["70.9"],"定义类":["70.9"],"使用关键字":["70.9"],"支持通过":["70.10"],"getters":["70.10"],"setters":["70.10"],"来截取对对象成员的访问":["70.10"],"它能帮助你有效的控制对对象成员的访问":["70.10"],"下面来看如何把一个简单的类改写成使用":["70.10"],"抽象类做为其它派生类的基类使用":["70.11"],"它们一般":["70.11"],"不会直接被实例化":["70.11"],"只能实例化实现了所有抽象方法的子类":["70.11"],"不同于接口":["70.11"],"抽象类可以包含成员的实现细节":["70.11"],"abstract":["70.11"],"函数涉及的类型实际上指的是":["71.0"],"js的函数":["71.1"],"命名函数":["71.1"],"表示该参数为可选参数":["71.2"],"必要参数":["71.4"],"默认参数和可选参数有个共同点":["71.4"],"它们表示某一个参数":["71.4"],"有时":["71.4"],"你想同时操作多个参数":["71.4"],"或者你并不知道会有多少参数传递进来":["71.4"],"重载是方法名字相同":["71.5"],"而参数不同":["71.5"],"返回类型可以相同也可以不同":["71.5"],"重载函数声明":["71.5"],"x":["71.5","80.2"],"y":["71.5","80.2"],"指在定义函数":["72.0"],"下面这是两个函数":["72.2"],"除了类型的不同":["72.2"],"实现的功能是一样的":["72.2"],"语法为函数名字后面跟一个":["72.3"],"参数名":["72.3"],"参数名可以随便写":["72.3"],"例如我这儿写了":["72.3"],"t":["72.3"],"一个函数可以定义多个泛型参数":["72.4"],"在定义接口时":["72.5"],"为接口中的属性或方法定义泛型类型":["72.5"],"在使用接口时":["72.5"],"再指定具体的泛型类型":["72.5"],"在定义类时":["72.6"],"为类中的属性或方法定义泛型类型":["72.6"],"在创建类的实例时":["72.6"],"再指定特定的泛型类型":["72.6"],"我们期望在一个泛型的变量上面":["72.7"],"获取其length参数":["72.7"],"有的数据类型是没有length属性的":["72.7"],"typescript中文网":["73.0"],"对比于js":["73.2"],"ts是js的":["73.2"],"属于动态编程语言":["73.3"],"增强代码的可维护性":["73.5"],"需要一定的学习成本":["73.6"],"使用tsc":["73.9"],"使用ts":["73.10"],"在typescript中":["74.1"],"我们定义对象的方式要用关键字interface":["74.1"],"接口":["74.1"],"会合并":["74.2"],"interface":["74.3","74.7"],"操作符":["74.4"],"需要注意的是":["74.5"],"一旦定义了任意属性":["74.5"],"那么确定属性和可选属性的类型都必须是它的类型的子集":["74.5"],"readonly":["74.6"],"readonly只读属性是不允许被赋值的":["74.6"],"只能读取":["74.6"],"这里所说的对象类型":["75.0"],"类型用于表示所有的非原始类型":["75.1"],"即我们不能把":["75.1"],"symbol":["75.1"],"等":["75.1"],"原始类型赋值给":["75.1"],"在严格模式下":["75.1"],"null":["75.1"],"配置文件":["76.0","78.8"],"compileroptions":["76.0"],"基本选项":["76.0"],"指定":["76.0"],"ecmascript":["76.0"],"目标版本":["76.0"],"es3":["76.0"],"default":["76.0"],"es5":["76.0"],"es6":["76.0"],"es2015":["76.0"],"es2016":["76.0"],"es2017":["76.0"],"or":["76.0"],"esnext":["76.0"],"commonjs":["76.0"],"指定使用模块":["76.0"],"amd":["76.0"],"system":["76.0"],"类型别名":["77.0"],"typescript里":["77.1"],"在有些没有明确指出类型的地方":["77.1"],"类型推论会帮助提供类型":["77.1"],"可以给一个类型定义一个名字":["77.2"],"多用于复合类型":["77.2"],"定义类型别名":["77.2"],"项目配置文档":["78.0"],"搭建后台管理系统模板":["78.1"],"项目初始化":["78.2"],"搭建一个":["78.2"],"初始化项目":["78.4"],"本项目使用":["78.4"],"vite":["78.4","78.10"],"eslint":["78.6","78.7","78.8"],"配置":["78.6"],"中文官网":["78.6"],"cn":["78.6"],"最初是由":["78.6"],"nicholas":["78.6"],"c":["78.6"],"zakas":["78.6"],"于":["78.6"],"环境代码校验插件":["78.7"],"让所有与prettier规则存在冲突的eslint":["78.7"],"rules失效":["78.7"],"并使用prettier进行代码检查":["78.7"],"修改":["78.8"],"eslintrc":["78.8"],"cjs":["78.8"],"see":["78.8"],"https":["78.8","78.10"],"bootcss":["78.8"],"com":["78.8","78.10"],"docs":["78.8","103.5","103.7","103.8"],"rules":["78.8"],"exports":["78.8"],"env":["78.8","103.8"],"es2021":["78.8"],"jest":["78.8"],"指定如何解析语法":["78.8"],"parser":["78.8"],"优先级低于":["78.8"],"parse":["78.8"],"的语法解析配置":["78.8"],"集成":["78.9"],"sass":["78.9"],"我们目前在组件内部已经可以使用":["78.9"],"scss":["78.9"],"样式":["78.9"],"因为在配置":["78.9"],"stylelint":["78.9"],"工具的时候":["78.9"],"项目当中已经安装过":["78.9"],"mock":["78.10"],"数据":["78.10"],"安装依赖":["78.10"],"www":["78.10"],"npmjs":["78.10"],"package":["78.10"],"plugin":["78.10"],"pnpm":["78.10"],"d":["78.10"],"mockjs":["78.10"],"配置文件启用插件":["78.10"],"二次封装":["78.11"],"在开发项目的时候避免不了与后端进行交互":["78.11"],"因此我们需要使用":["78.11"],"插件实现发送网络请求":["78.11"],"在开发项目的时候":["78.11","78.12"],"我们经常会把":["78.11"],"进行二次封装":["78.11"],"目的":["78.11"],"接口统一管理":["78.12"],"接口可能很多需要统一管理":["78.12"],"目录下去创建":["78.12"],"canvas":["79.0","79.1","79.2","79.6","79.7","79.8","82.1","87.2","88.3"],"坐标系统":["79.3"],"绘图上下文":["79.4"],"绘图元素":["79.5"],"创造交互式效果":["79.6"],"创造动画":["79.7"],"的局限性":["79.8"],"图像变换":["80.0"],"以下方法用于图像变换":["80.0"],"rotate":["80.1","88.3"],"canvasrenderingcontext2d":["80.1","80.2","80.3","80.4","80.5","83.1","83.2","83.4","85.6"],"scale":["80.2"],"方法用于缩放图像":["80.2"],"它接受两个参数":["80.2"],"分别是":["80.2"],"轴方向的缩放因子和":["80.2"],"translate":["80.3","88.3"],"transform":["80.4"],"方法接受一个变换矩阵的六个元素作为参数":["80.4"],"完成缩放":["80.4"],"旋转":["80.4"],"移动和倾斜等变形":["80.4"],"它的使用格式如下":["80.4"],"settransform":["80.5"],"方法取消前面的图形变换":["80.5"],"将画布恢复到该方法指定的状态":["80.5"],"该方法的参数与":["80.5"],"图像合成":["81.0"],"在默认情况之下":["81.0"],"over":["81.1"],"在目标图像上显示源图像":["81.1"],"atop":["81.1"],"在目标图像顶部显示源图像":["81.1"],"源图像位于目标图像之外的部分是不可见的":["81.1"],"strokestyle":["82.2"],"设置或返回描边颜色":["82.2"],"fillstyle":["82.2","84.0"],"设置或返回填充颜色":["82.2"],"stroke":["82.2"],"样式控制":["83.0"],"线性":["83.1"],"以下的方法和属性控制线条的视觉特征":["83.1"],"linewidth":["83.1"],"指定线条的宽度":["83.1"],"默认为":["83.1"],"渐变色":["83.2"],"以下方法用于设置渐变效果和图像填充效果":["83.2"],"createlineargradient":["83.2"],"定义线性渐变样式":["83.2"],"createradialgradient":["83.2"],"定义辐射渐变样式":["83.2"],"createpattern":["83.2","83.3"],"定义图像填充样式":["83.2"],"方法按照给定直线":["83.2"],"生成线性渐变的样式":["83.2"],"context":["83.2","83.3","84.0","85.3","85.4","85.5","86.1","86.2","88.3"],"x0":["83.2"],"图像填充":["83.3"],"方法定义一个图像填充样式":["83.3"],"在指定方向上不断重复该图像":["83.3"],"填充指定的区域":["83.3"],"image":["83.3","85.5"],"阴影":["83.4"],"以下属性用于设置阴影":["83.4"],"shadowblur":["83.4"],"阴影的模糊程度":["83.4"],"状态":["84.0"],"save":["84.0","88.3"],"保存当前环境的状态":["84.0"],"restore":["84.0"],"返回之前保存过的路径状态和属性":["84.0"],"绘制图形":["85.0","99.0"],"绘制矩形fillrect":["85.2"],"strokerect":["85.2"],"位置x":["85.2"],"位置y":["85.2"],"宽度":["85.2"],"圆弧":["85.3"],"arc":["85.3","99.4"],"圆心x":["85.3"],"圆心y":["85.3"],"半径":["85.3"],"开始的角度":["85.3"],"结束的角度":["85.3"],"顺时针false":["85.3"],"逆时针true":["85.3"],"默认值false":["85.3"],"beginpath":["85.4"],"moveto":["85.4","86.1","86.2"],"三种绘制图片的的方式":["85.5"],"drawimage":["85.5"],"dx":["85.5"],"dy":["85.5"],"以下方法和属性用于绘制文本":["85.6"],"filltext":["85.6"],"在指定位置绘制实心字符":["85.6"],"stroketext":["85.6"],"在指定位置绘制空心字符":["85.6"],"measuretext":["85.6"],"返回一个":["85.6"],"textmetrics":["85.6"],"font":["85.6"],"指定字型大小和字体":["85.6"],"贝塞尔曲线":["86.0"],"聊天框":["86.1"],"爱心":["86.2"],"cbtn":["87.1","90.4"],"ggk":["87.2"],"谢谢惠顾":["87.2"],"mycanvas":["87.2"],"height":["87.2","101.2"],"当前浏览器不支持canvas":["87.2"],"请下载最新的浏览器":["87.2"],"clock":["88.1"],"getcontext":["88.3"],"2d":["88.3"],"render":["88.3"],"clearrect":["88.3"],"存档":["88.3"],"保存当前坐标位置和上下文对象":["88.3"],"参考视频教程":["89.0"],"plum":["89.1"],"draw":["90.1"],"boldbtn":["90.3"],"粗线条":["90.3"],"thinbtn":["90.3"],"细线条":["90.3"],"savebtn":["90.3"],"保存签名":["90.3"],"input":["90.3"],"inputcolor":["90.3"],"color":["90.3"],"clearbtn":["90.3"],"橡皮擦":["90.3"],"btns":["90.4"],"该内容正在努力建设中":["91.0"],"事件交互":["92.0"],"为精灵添加交互事件":["92.1"],"sprite":["92.1","95.2","98.3"],"创建矩形":["92.2"],"rect":["92.2","102.4"],"pixijs":["93.0","93.1","93.7"],"是一个基于":["93.1"],"下面是一个简单的":["93.7"],"展示了如何创建一个基本的场景并添加一个可交互的精灵":["93.7"],"创建一个场景":["93.7"],"基本使用":["94.0"],"类详解":["94.2"],"导入pixi":["94.2","95.1","97.1","98.1","101.1","101.2"],"as":["94.2","95.1","97.1","101.1","101.2"],"pixi":["94.2","95.1","95.2","97.1","97.3","101.1","101.2"],"创建应用":["94.2","95.1","98.1","101.1","101.2"],"文字与遮罩":["95.0"],"创建一个精灵":["95.2"],"滤镜特效":["97.0"],"创建模糊滤镜":["97.2"],"blurfilter":["97.2"],"filters":["97.3"],"库":["97.3"],"精灵与动画":["98.0"],"创建纹理与精灵":["98.2"],"设置属性":["98.3"],"锚点":["98.3"],"ellipse":["99.1"],"polygon":["99.2","102.7"],"roundedrectangle":["99.3"],"line":["99.5","102.3"],"谷歌恐龙小游戏素材":["100.1"],"资源管理":["101.0"],"application":["101.1","101.2"],"innerwidth":["101.1","101.2"],"svg":["102.1","102.7","102.9"],"scalable":["102.1"],"circle":["102.5"],"cllipse":["102.6"],"polyline":["102.8"],"从":["103.0"],"创建项目":["103.1","103.3"],"基本配置":["103.2"],"在gitbub上新建项目":["103.3"],"建议勾选add":["103.3"],"readme":["103.3"],"新建文件夹":["103.3"],"blog":["103.3"],"在目录下新建":["103.5"],"文件夹":["103.5"],"在其中新建":["103.5"],"vitepress":["103.5","103.7"],"文件夹和":["103.5"],"文件":["103.5"],"文件就是我们的配置文件":["103.5"],"themeconfig":["103.6"],"省略前面的内容":["103.6"],"配置首页":["103.7"],"支持用户使用":["103.7"],"yaml":["103.7"],"配置页面的内容":["103.7"],"index":["103.7"],"部署到":["103.8"],"github":["103.8"],"新建脚本文件":["103.8"],"deploy":["103.8"],"sh":["103.8"],"文件夹处于同一级":["103.8"],"usr":["103.8"],"bin":["103.8"]},{"0":["31.6","32.2","33.5","33.11","78.7","79.3","80.2","83.4","84.0","85.3","98.3","102.9","103.0"],"1":["25.29","31.6","32.19","32.24","32.31","32.32","34.3","36.7","37.7","37.12","39.15","43.0","51.0","59.3","67.20","75.1","87.2","90.3","101.1","101.2"],"2":["5.1","15.2","16.9","25.0","25.1","32.32","37.7","67.7","67.8","67.21","78.5","78.7","85.3","87.2","88.3","90.3","102.1"],"3":["29.1","32.32","33.1","37.2","61.5","67.8"],"4":["32.32","61.5"],"5":["33.11","40.6","80.2","98.3"],"6":["59.1","78.6","78.7"],"8":["78.7","88.3"],"10":["37.3","39.14","39.18","59.3","99.5"],"12":["88.3"],"16":["13.8"],"18":["36.4","40.2","70.8"],"23":["59.1"],"27":["78.7"],"30":["36.19"],"50":["80.2","80.5","85.2"],"55":["39.2"],"100":["84.0","85.2"],"120":["86.2"],"150":["85.2","85.3"],"170":["88.3"],"190":["88.3"],"300":["85.4","86.2"],"400":["82.1"],"404":["13.17"],"600":["90.3","93.7"],"800":["93.7"],"1000":["90.3"],"123456":["66.6"],"2357490894":["0.0"],"location":["5.0","44.2"],"root":["5.0"],"c":["5.0","13.4","17.1","80.4"],"users":["5.0","13.4"],"打开nginx":["5.1"],"conf文件":["5.1"],"基于":["11.0"],"node":["11.0","12.2","14.22"],"require":["11.2","11.6","13.7","13.14","15.11","15.14"],"创建":["11.2","31.2","31.3","67.14"],"web":["11.2","35.0"],"服务器":["11.2"],"app":["11.2","11.3","15.5","15.11","95.1","97.1"],"监听客户端的":["11.2"],"get":["11.2","11.4","14.17","15.5","31.7"],"和":["11.2","27.17","39.6","53.1","61.0","75.1","83.2","93.1"],"post":["11.2"],"请求":["11.2"],"存放静态文件的目录名不会出现在":["11.3"],"url":["11.3","13.17","20.7","44.1","47.1","66.5"],"中":["11.3","25.0","25.29","53.1"],"访问静态资源时":["11.3"],"会根据托管顺序查找文件":["11.3"],"可为静态资源访问路径添加前缀":["11.3"],"js":["11.3","11.8","12.2","12.3","13.13","15.2","15.5","15.11","15.14","25.8","25.18","25.19","25.20","27.2","29.1","31.4","32.7","32.8","32.9","32.10","32.14","32.17","32.19","32.23","32.26","32.28","32.29","32.30","32.31","33.1","33.4","33.8","33.10","33.11","34.0","34.2","34.7","35.1","35.4","36.3","36.8","36.11","36.12","36.13","36.14","36.15","36.16","36.17","36.20","36.21","38.4","38.6","38.8","38.9","38.11","38.15","38.19","39.4","39.7","39.15","40.4","51.3","51.4","51.5","52.1","52.2","52.3","56.1","56.2","58.1","58.2","63.8","63.10","63.12","63.13","63.15","63.19","63.23","66.2","73.3","80.1","80.5","82.1","87.2","97.3","98.2","98.4"],"创建路由对象":["11.4"],"挂载具体路由":["11.4"],"可先调用中间件进行预处理":["11.5"],"中间件是一个函数":["11.5"],"包含":["11.5","13.6","26.8"],"express":["11.6"],"定义第一个全局中间件":["11.6"],"mw1":["11.7"],"req":["11.7","11.8","13.17"],"res":["11.7","11.8","13.17"],"next":["11.7","11.8"],"console":["11.7","11.8","15.3","20.10","25.28","33.6","33.11","36.16","37.11","38.4","38.13","40.3","40.6","44.2","45.2","63.8","63.17","65.3","65.5","69.8","77.2"],"log":["11.7","11.8","15.3","20.10","25.28","33.6","33.11","36.16","40.3","40.6","44.2","45.2","69.8","77.2"],"调用了第一个局部生效的中间件":["11.7"],"应用级别中间件是绑定到":["11.8"],"实例上":["11.8"],"路由级别中间件绑定到":["11.8"],"const":["11.8","13.14","15.11","15.14","36.7","36.9","36.12","36.13","36.14","36.15","36.17","36.20","36.21","51.3","51.4","51.6","52.0","52.2","52.3","58.1","66.6","74.7","95.1"],"function":["11.8","20.10","34.3","34.7","34.12","40.1","40.8","65.3","69.8","71.2","72.2","72.3","72.7"],"安装中间件":["11.10"],"npm":["11.10","15.2","28.7"],"跨域资源共享":["11.11"],"解决跨域":["11.11"],"是通过":["11.11"],"http":["11.11","11.14","78.11"],"响应头决定浏览器是否阻止前端":["11.11"],"bruceblog":["11.12"],"io":["11.12"],"headers":["11.12","66.3"],"默认情况下":["11.12","69.9","80.2"],"仅支持客户端向服务器发送如下的":["11.12"],"三者之一":["11.14"],"头部信息不超过以下几种字段":["11.14"],"无自定义头部字段":["11.14"],"head":["11.15"],"之外的请求":["11.15"],"method":["11.15"],"官网传送门":["12.0"],"open":["12.1","31.4","31.6","47.2"],"source":["12.1"],"cross":["12.1"],"platform":["12.1"],"javascript":["12.1","31.1","35.3","40.5","53.1","73.2","76.0","78.6","79.7"],"事件循环":["12.2"],"单线程":["12.2"],"总结":["12.2"],"轻量和高效":["12.2"],"否则不会向下执行代码":["13.1"],"异步文件系统不会阻塞程序的执行":["13.1"],"而是在操作完成时":["13.1"],"通过回调函数将结果返回":["13.1"],"实际开发很少用同步方式":["13.1"],"因此只介绍异步方式":["13.1"],"打开模式":["13.1"],"配置选项":["13.3","13.6"],"若是字符串则指定编码格式":["13.3"],"encoding":["13.3","13.6"],"编码格式":["13.3"],"flag":["13.3"],"打开方式":["13.3"],"回调函数":["13.3"],"err":["13.3"],"错误信息":["13.3"],"rs":["13.4"],"createreadstream":["13.4"],"笔记":["13.4"],"mp3":["13.4"],"创建一个可写流":["13.4","13.7"],"ws":["13.4"],"createwritestream":["13.4"],"a":["13.4","14.23","16.11","27.9","36.7","36.9","40.8","69.12","70.10","72.2","72.4","74.2","74.3","75.1","80.4"],"文件路径":["13.6"],"写入内容":["13.6"],"mode":["13.6"],"var":["13.7","33.5","36.3","39.3","39.14","40.4","41.2","87.2","90.3"],"fs":["13.7","13.12"],"数组不能存储二进制文件":["13.8"],"是专门存储二进制数据的":["13.8"],"存储的是二进制数据":["13.8"],"显示时以":["13.8"],"如果提供的操作路径是以":["13.9"],"或":["13.9","14.11","14.21","37.3","39.3"],"开头的相对路径时":["13.9"],"容易出现路径动态拼接错误的问题":["13.9"],"unlink":["13.10"],"unlinksync":["13.10"],"列出文件":["13.10"],"readdir":["13.10"],"options":["13.10"],"readdirsync":["13.10"],"注意":["13.12","36.5"],"会抵消前面的路径":["13.12"],"可以获取路径中的最后一部分":["13.13"],"常通过该方法获取路径中的文件名":["13.13"],"server":["13.16"],"createserver":["13.16"],"为服务器实例绑定":["13.16"],"request":["13.16","13.17","78.11","78.12"],"事件":["13.16"],"监听客户端的请求":["13.16"],"on":["13.16","13.17"],"设置默认的响应内容为":["13.17"],"模块化是指解决一个复杂问题时":["14.2"],"自顶向下逐层把系统划分为若干模块的过程":["14.2"],"提高代码的复用性":["14.3"],"中模块的分类":["14.5"],"中的模块作用域":["14.6"],"存储了和当前模块有关的信息":["14.7"],"在自定义模块中":["14.7"],"可以使用":["14.7"],"每个模块内部":["14.8"],"module":["14.8"],"即多次调用":["14.9"],"开头":["14.11"],"否则会作为内置模块或第三方模块加载":["14.11"],"尝试从":["14.12","14.22"],"modules":["14.12","14.22"],"文件夹中加载第三方模块":["14.12","14.22"],"如果没有找到对应的第三方模块":["14.12","14.22"],"则移动到再":["14.12"],"上一层父目录":["14.12"],"package":["14.13","14.18","14.23"],"json":["14.13","14.18","14.23"],"的文件":["14.13","14.23"],"并寻找":["14.13"],"不同于":["14.15"],"bash":["14.16","15.2","65.2","67.5","67.6","67.7","67.12","67.14","67.18","67.19","78.6","103.3"],"config":["14.17","67.1","68.3","78.7"],"新建文件夹":["14.18"],"包名":["14.18"],"新建如下三个文件":["14.18"],"包管理配置文件":["14.18"],"index":["14.18","15.5","103.5"],"多次调用":["14.19"],"开头的路径标识符":["14.21"],"在加载自定义模块时":["14.21"],"如果没有指定":["14.21"],"nodejs":["14.22"],"会从当前模块的父目录开始":["14.22"],"则移动到再上一层父目录中":["14.22"],"在被加载的目录下查找一个叫做":["14.23"],"mysql":["15.1"],"install":["15.2","28.2","73.7","97.3"],"建立连接":["15.2"],"insert":["15.3"],"into":["15.3"],"values":["15.3","32.23"],"使用数组的形式为占位符指定具体的值":["15.3"],"username":["15.3"],"password":["15.3","66.6"],"if":["15.3","27.13","32.24","49.4","53.2","65.5","66.3","66.4"],"return":["15.3","32.24","36.5","49.4","50.0","66.4","66.5","71.1","78.10"],"message":["15.3","27.9","38.13","63.17","66.4"],"额外请求页面的数据":["15.5"],"后端只负责提供":["15.6"],"api":["15.6","29.3","65.3"],"接口":["15.6"],"前端使用":["15.6"],"主要功能是展示":["15.7"],"没有复杂交互":["15.7"],"服务端渲染推荐使用":["15.9"],"use":["15.11","67.15"],"secret":["15.11"],"bruce":["15.11"],"的值为任意字符串":["15.11"],"resave":["15.11"],"false":["15.11","32.20","37.9","39.6","39.15","39.16","85.3"],"前后端分离推荐使用":["15.12"],"所以":["15.13","69.10"],"当涉及到前端跨域请求后端接口的时候":["15.13"],"需要做很多额外的配置":["15.13"],"才能实现跨域":["15.13"],"认证":["15.13","66.3"],"当前端请求后端接口不存在跨域问题的时候":["15.13"],"推荐使用":["15.13"],"身份认证机制":["15.13"],"当前端需要跨域请求后端接口的时候":["15.13"],"字符串的安全性":["15.14"],"防止其在网络传输过程中被破解":["15.14"],"需定义用于加密和解密的":["15.14"],"生成":["15.14"],"字符串时":["15.14"],"使用密钥加密信息":["15.14"],"得到加密好的":["15.14"],"把":["15.14"],"对象时":["15.14"],"使用密钥解密":["15.14"],"expressjwt":["15.14"],"用于清除内外边距":["16.1"],"优点":["16.2"],"css":["16.3","16.5","16.7","16.8"],"通过元素":["16.4"],"beaauty":["16.5"],"语法":["16.5","33.10","69.14","78.9"],"中间没有空格":["16.5"],"又称":["16.6"],"分组选择器":["16.6"],"p":["16.9"],"p0":["16.9"],"dom":["16.10","16.14","26.8","26.9"],"link":["16.11"],"链接一开始的样式":["16.11"],"nth":["16.12"],"n":["16.12","49.2","69.9"],"第":["16.12"],"个子元素":["16.12"],"of":["16.12"],"type":["16.12","20.2","20.3","31.7"],"指定元素":["16.12"],"属性的":["16.13"],"元素":["16.13","83.3"],"创建了一个行内元素":["16.14"],"在":["16.14","25.29","26.3","26.5","28.5","57.0","78.9"],"树中无法找到":["16.14"],"故为伪元素":["16.14"],"必须有":["16.14"],"content":["16.14","27.9","58.2"],"属性":["16.14","25.2"],"选择器":["16.14"],"含义":["16.14"],"在元素内部前面插入内容":["16.14"],"选择器的优先级为":["17.0"],"important":["17.0"],"b":["17.1","39.18","80.4"],"格式":["17.1"],"id":["17.1","41.1","54.1"],"选择器的个数":["17.1"],"横向":["19.0"],"height":["19.0","69.13","82.1","90.3","93.7","94.2","95.1","97.1","101.1"],"background":["19.0"],"color":["19.0"],"ededed":["19.0"],"滚动条上的按钮":["19.0"],"可以用来解决某些兼容问题":["20.0"],"html":["20.0","35.2","35.3","54.0","102.6","103.5"],"audio":["20.0"],"controls":["20.0"],"filename":["20.0"],"ogg":["20.0"],"类型":["20.1","69.14"],"mime":["20.2","20.3"],"标签":["20.5","20.6"],"src":["20.7"],"要播放的视频的":["20.7"],"width":["20.7","46.2","90.3","93.7","94.2","95.1","97.1"],"作用":["20.8"],"queryselector":["20.10"],"video":["20.10"],"在视频被重新加载时触发":["20.10"],"onabort":["20.10"],"暂停":["20.11"],"makebig":["20.11"],"放大":["20.11"],"makesmall":["20.11"],"缩小":["20.11"],"placeholder":["22.1"],"请输入登录密码":["22.1"],"v":["22.1","25.29","27.13","27.14","64.2","67.18","72.4"],"model":["22.1"],"我们只需在":["25.0"],"中一个新的配置项":["25.1"],"值为一个函数":["25.1"],"只在setup函数内部访问":["25.2"],"函数需要加":["25.2"],"其用途创建独立的原始值":["25.2"],"函数接收一个普通对象":["25.2"],"返回一个响应式的数据对象":["25.2"],"from":["25.4","25.6","25.17","78.10","78.12","98.1"],"vue":["25.4","25.5","25.7","25.10","25.14","26.2","26.3","78.9","78.10","88.4"],"let":["25.4","32.8","32.9","32.10","32.14","32.17","32.19","32.23","32.26","32.29","32.30","32.31","33.11","38.3","38.4","38.9","38.13","38.15","38.19","39.2","39.3","39.4","50.0","51.2","63.7","63.8","63.13","63.17","63.19","63.23","69.1","69.5","69.12","75.1","77.1","77.2","88.3","90.3"],"ref":["25.5","25.6","25.7","25.12","25.17","25.18","25.19","25.20","29.3"],"但不会使其值也变成响应式的":["25.5"],"修改其属性是非响应式的这样是不会改变的":["25.5"],"shallowref":["25.6"],"set":["25.7","33.10","51.1","70.10","98.3","103.8"],"适合去做防抖之类的":["25.7"],"template":["25.7","25.10","25.14","25.30","26.5","27.8","27.11","88.4","89.2","94.1","96.1","100.2"],"div":["25.7","25.30","26.5","27.8","27.11","89.2"],"这样是不允许":["25.8"],"会给我们报错":["25.8"],"接受一个对象":["25.9"],"不会改变视图":["25.10"],"property":["25.12","57.1"],"都是一个":["25.12"],"value":["25.13","27.17","36.6","57.1","69.14","72.6"],"主要是方便我们解构使用":["25.13"],"vue2":["25.15","25.16"],"中的":["25.15","25.16"],"作用是一样的":["25.16"],"import":["25.17","25.18","25.19","25.20","66.2","78.7","78.12","98.1"],"watch":["25.17","25.18","25.20"],"效果一样":["25.19"],"同时":["25.21"],"的第一个参数":["25.22"],"effect函数":["25.22"],"当":["25.23"],"watcheffect":["25.23"],"可以作为一个调试器来使用":["25.24"],"flush":["25.24"],"到":["25.25"],"销毁的":["25.25"],"beforemount":["25.27","25.28"],"指令绑定到元素后调用":["25.27"],"directive":["25.28","25.29"],"created":["25.28"],"初始化":["25.28"],"args":["25.28","49.4","49.5"],"array":["25.28","32.0","50.0","60.1"],"传递给指令的值":["25.29"],"例如":["25.29","27.13"],"my":["25.29"],"不利于阅读":["25.31"],"容易使代码变得难以维护":["25.31"],"vue3":["25.31","26.1","78.2","78.8"],"的":["25.31"],"hook函数":["25.31"],"相当于":["25.31"],"mixin":["25.31"],"不同在与":["25.31"],"hooks":["25.31"],"是函数":["25.31"],"还是":["26.1","37.5","37.6"],"组件通信方式很重要":["26.1"],"不管是项目还是面试都是经常用到的知识点":["26.1"],"比如":["26.1","69.5","78.12"],"defineprops":["26.2"],"获取父组件传递的数据":["26.2"],"且在组件内部不需要引入":["26.2"],"方法可以直接使用":["26.2"],"父组件给子组件传递数据":["26.2"],"框架中事件分为两种":["26.3"],"pre":["26.4"],"click":["26.4","55.4","90.4"],"handler":["26.4"],"我是祖国的老花骨朵":["26.4"],"当前代码级给":["26.4"],"xxx":["26.5"],"handler3":["26.5"],"子组件内部触发这个自定义事件":["26.5"],"h1":["26.5","26.12"],"中可以根据":["26.6"],"vm":["26.6"],"与":["26.6"],"vc":["26.6","26.9"],"关系推出全局事件总线":["26.6"],"而":["26.7"],"实指利用":["26.7"],"props":["26.7"],"modelvalue":["26.7"],"与自定义事件":["26.7"],"update":["26.7"],"方法获取组件的属性与事件":["26.8"],"原生":["26.8"],"事件或者自定义事件":["26.8"],"次函数功能类似于":["26.8"],"可能会想到它可以获取元素的":["26.9"],"或者获取子组件实例的":["26.9"],"既然可以在父组件内部通过":["26.9"],"获取子组件实例":["26.9"],"inject":["26.10"],"提供":["26.10"],"官网":["26.11"],"https":["26.11","47.2","95.2"],"即为子组件":["26.12"],"在父组件内部使用的时候":["26.12"],"在双标签内部书写结构传递给子组件":["26.12"],"注意开发项目的时候默认插槽一般只有一个":["26.12"],"我是默认插槽填充的结构":["26.12"],"顾名思义":["26.12"],"此插槽带有名字在组件内部留多个指定名字的插槽":["26.12"],"下面是一个子组件内部":["26.12"],"模板中留两个插槽":["26.12"],"后面":["27.2"],"切记不能放到":["27.2"],"mount":["27.2"],"并且只能在该父组件中使用":["27.5"],"它的优点是使组件之间的依赖关系更加明确":["27.5"],"接受传过来的值":["27.6"],"传递非字符串类型需要加":["27.6"],"简写":["27.6"],"冒号":["27.6"],"父组件":["27.6"],"name":["27.9","32.21","47.1","67.1","70.6","70.8","74.3"],"msg":["27.9"],"this":["27.9","36.5","49.5"],"is":["27.9"],"在子组件":["27.10"],"动态绑定":["27.10"],"参数":["27.10"],"并且减少主包的体积":["27.12"],"通过":["27.12","39.6"],"else等":["27.13"],"来检查数据是否已加载并显示一些其它内容":["27.13"],"但是":["27.13"],"show等属性影响":["27.14"],"但data":["27.14"],"prop数据依旧能够共用的技术":["27.14"],"类似于":["27.14"],"作用和vue2一致":["27.15"],"只是生命周期名称有所更改":["27.15"],"初次进入时":["27.15"],"onmounted":["27.15"],"onactivated":["27.15"],"退出后触发":["27.15"],"deactivated":["27.15"],"再次进入":["27.15"],"我们都可以使用":["27.16"],"来接收":["27.16"],"提供的数据或方法":["27.16"],"emit":["27.17"],"组合而成的语法糖":["27.17"],"vue3中":["27.17"],"有以下改动":["27.17"],"变更":["27.17"],"cli创建":["28.1"],"cli":["28.3"],"features":["28.4"],"check":["28.4"],"the":["28.4","67.15"],"needed":["28.4"],"for":["28.4","33.11","64.2","88.3"],"your":["28.4","67.1"],"选择上":["28.4"],"typescript":["28.4","71.4","78.8"],"特别注意点空格是选择":["28.4"],"点回车是下一步":["28.4"],"冷服务":["28.5"],"默认的构建目标浏览器是能":["28.5"],"init":["28.6"],"vite":["28.6"],"latest":["28.6","78.8"],"打包大小减少41":["29.2"],"setup":["29.3"],"and":["31.1"],"xml":["31.1","54.0"],"异步交互需要服务器逻辑进行配合":["31.2"],"需要完成以下步骤":["31.2"],"xmlhttprequest":["31.3"],"对象的":["31.4","31.5"],"方法与服务器建立连接":["31.4"],"xhr":["31.4"],"send":["31.5"],"方法":["31.5"],"将客户端页面的数据发送给服务端":["31.5"],"属性有五个状态":["31.6"],"如下显示":["31.6"],"值":["31.6","32.12","32.13","69.14"],"状态":["31.6"],"描述":["31.6"],"unsent":["31.6"],"未打开":["31.6"],"方法还未被调用":["31.6"],"opened":["31.6"],"new":["31.7","58.2","59.4","92.2","93.7","94.2","95.1","97.1","97.2","99.1"],"初始化参数的内容":["31.7"],"touppercase":["31.7"],"datatype":["31.7"],"创建数组":["32.1"],"利用数组字面量创建数组":["32.1"],"数组的字面量是方括号":["32.1"],"用来访问数组元素的序号":["32.2"],"数组下标从":["32.2"],"开始":["32.2"],"数组可以通过索引来访问":["32.2"],"设置":["32.2"],"修改对应的数组元素":["32.2"],"我们可以通过数组名":["32.2"],"的形式来获取数组中的元素":["32.2"],"数组基本操作可以归纳为":["32.5"],"第四种则不会对原数组产生影响":["32.6"],"并将它们添加到数组末尾":["32.7"],"返回数组的最新长度":["32.7"],"然后返回新的数组长度":["32.8"],"插入的元素":["32.9"],"返回空数组":["32.9"],"colors":["32.10","32.14","32.15"],"red":["32.10","32.15","69.6","84.0"],"最后一项不影响原数组":["32.11"],"length":["32.12","32.13","51.2"],"返回被删除的项":["32.12","32.13"],"返回包含删除元素的数组":["32.14"],"green":["32.15"],"blue":["32.15"],"yellow":["32.15"],"purple":["32.15"],"常用":["32.16"],"返回删除元素的数组":["32.17"],"对原数组产生影响":["32.17"],"返回元素坐标或者元素值":["32.18"],"true":["32.20","32.28","37.7","37.10","39.15","39.16","69.3","76.0","92.1","103.7"],"否则":["32.20"],"people":["32.21","69.13"],"matt":["32.21"],"数组有两个方法可以用来对元素重新排序":["32.22"],"else":["32.24"],"常见的转换方法有":["32.25"],"返回包含所有项的字符串":["32.26"],"常用来迭代数组的方法":["32.27"],"则这个方法返回":["32.28","32.29"],"numbers":["32.30","32.31","32.32"],"条件分支语句":["33.1"],"循环语句":["33.1"],"i":["33.1","33.5","33.11","62.3","78.6","88.3","103.3"],"条件表达式2":["33.2"],"tip":["33.2","34.8","36.5"],"执行流程":["33.2"],"表达式":["33.3"],"case":["33.3"],"表达式1":["33.3"],"代码":["33.3","35.3"],"break":["33.3"],"中一共有三种循环语句":["33.4"],"变量":["33.9","33.10"],"对象":["33.9","38.17","38.18","41.0","42.0","43.0","44.0","45.0","46.0","47.0","59.2","63.21","63.22"],"需要执行的代码":["33.9"],"示例":["33.9","35.1"],"集合":["33.10"],"等":["33.10"],"会终止离他最近的循环":["33.11"],"里面":["34.0"],"必须小写":["34.2"],"函数体":["34.3"],"是把一个或者多个功能通过函数的方式封装起来":["34.4"],"同样也需要传递相应的参数":["34.6"],"实参":["34.6"],"参数的作用":["34.6"],"在函数内部某些值不能固定":["34.6"],"我们可以通过参数在调用函数时传递不同的值进去":["34.6"],"多的参数定义为":["34.7"],"undefined":["34.7","37.3","39.15","75.1"],"函数形参实参个数匹配":["34.7"],"getsum":["34.7"],"num1":["34.7","39.2"],"num2":["34.7"],"此时调用函数就可以得到函数体内return":["34.8"],"后面的值":["34.8"],"注意事项":["34.8"],"在使用":["34.8"],"语句时":["34.8"],"函数会停止执行":["34.8"],"语句之后的代码不被执行":["34.8"],"并返回指定的值":["34.8"],"只能返回一个值":["34.8"],"如果用逗号隔开多个值":["34.8"],"的区别":["34.9"],"结束当前的循环体":["34.9"],"声明":["34.11"],"通常用于在":["35.0"],"浏览器中编写交互式前端代码":["35.0"],"它需要被嵌入":["35.2"],"doctype":["35.3"],"代码写在独立的以":["35.4"],"注释单行代码":["35.6"],"注释多行代码":["35.7"],"它相当于一个容器":["36.1"],"在对象中可以存储各种不同类型数据":["36.1"],"真实生活中":["36.1"],"一辆汽车是一个对象":["36.1"],"创建对象":["36.3"],"age":["36.4","36.19","40.2","69.13","70.1","70.6","70.8"],"sex":["36.4"],"男":["36.4"],"sayhi":["36.4"],"构造函数约定首字母大写":["36.5"],"函数内的属性和方法前面需要添加":["36.5"],"表示当前对象的属性和方法":["36.5"],"构造函数中不需要":["36.5"],"返回结果":["36.5"],"propertiesobject":["36.6","36.8"],"创建一个新对象":["36.6"],"使用现有的对象作为新对象的原型":["36.6"],"entries":["36.6"],"obj":["36.6","36.10","36.11","36.18","36.21","75.1"],"返回一个给定对象自身可枚举属性的":["36.6"],"key":["36.6","68.4"],"obj1":["36.7"],"sym":["36.14"],"myproto":["36.15"],"也被称为":["37.1"],"操作符":["37.1"],"减":["37.2"],"乘":["37.2"],"空赋值":["37.3"],"br":["37.3","90.3"],"只有当变量的值为":["37.3"],"null":["37.3","39.15","49.4","50.0"],"都会使原变量立刻增加":["37.5"],"不同的是":["37.5"],"和后自减":["37.6"],"无论是":["37.6"],"小于号":["37.7"],"时":["37.9","37.10"],"则返回":["37.9","37.10","38.12","63.16"],"否则返回":["37.9","37.10"],"precedence":["37.13"],"是不一样的":["37.13"],"优先级高的运算符先执行":["37.13"],"优先级低的运算符后执行":["37.13"],"我们也可将字符串常用的操作方法归纳为增":["38.1"],"而是创建字符串的一个副本":["38.2","38.5","63.6","63.9"],"stringvalue":["38.3","38.4","38.9","63.7","63.8","63.13"],"hello":["38.3","38.4","63.7","63.8"],"这三个方法都返回调用它们的字符串的一个子字符串":["38.4","63.8"],"而且都接收一或两个参数":["38.4","63.8"],"world":["38.4","63.8"],"再进行操作":["38.5","63.9"],"后或前后所有空格符":["38.6","63.10"],"再返回新的字符串":["38.6","63.10"],"表示要将字符串复制多少次":["38.7","63.11"],"然后返回拼接所有副本后的结果":["38.7","63.11"],"则在相应一边填充字符":["38.8","63.12"],"直至满足长度条件":["38.8","63.12"],"还可通过":["38.10","63.14"],"由传给方法的整数参数指定":["38.11","63.15"],"如果没找到":["38.12","63.16"],"foobarbaz":["38.13","63.17"],"针对正则表达式":["38.16","63.20"],"regexp":["38.17","38.18","63.21","63.22"],"返回数组":["38.17","63.21"],"找到则返回匹配索引":["38.18","63.22"],"可用函数":["38.19","63.23"],"基本类型主要为以下":["39.1"],"intnum":["39.2"],"10进制的55":["39.2"],"070":["39.2"],"8进制的56":["39.2"],"当使用":["39.3"],"声明了变量但没有初始化时":["39.3"],"标示":["39.4"],"逻辑上讲":["39.5"],"值表示一个空对象指针":["39.5"],"这也是给":["39.5"],"typeof":["39.5"],"不可变的":["39.7"],"符号的用途是确保对象属性使用唯一标识符":["39.7"],"不会发生属性冲突的危险":["39.7"],"复杂类型统称为":["39.8"],"常用方式为对象字面量表示法":["39.9"],"但跟其他语言不同的是":["39.10"],"数组中每个槽位可以存储任意类型的数据":["39.10"],"也有属性和方法":["39.11"],"跟其他引用类型一样":["39.11"],"函数存在三种常见的表达方式":["39.11"],"函数声明":["39.11"],"还包括":["39.12"],"类型转换指将一种数据类型转换为其他类型":["39.13"],"tostring":["39.14"],"num":["39.14","69.12","72.2"],"布尔值":["39.15"],"转换为":["39.15","39.16"],"nan":["39.16","69.2"],"其余是":["39.16"],"字符串":["39.16"],"空串":["39.16"],"基本数据类型和引用数据类型存储在内存中的位置不同":["39.17"],"obj2":["39.19"],"简单类型的值存放在栈中":["39.20"],"在栈中存放的是对应的值":["39.20"],"合法":["40.1"],"声明作用域":["40.1"],"一个函数内部定义一个变量":["40.1"],"在函数退出时被销毁":["40.1"],"test":["40.1"],"局部变量":["40.1"],"会被提升":["40.3"],"声明的变量则会":["40.4"],"引擎会自动将多余的声明在作用域顶部合并为一个声明":["40.5"],"循环逻辑":["40.6"],"之后则不会":["40.6"],"因为遇到":["40.6"],"就会形成作用域块":["40.6"],"但是他是常量":["40.7"],"声明之后不能修改":["40.7"],"尝试修改":["40.7"],"声明的变量会导致运行时错误":["40.7"],"tom":["40.8"],"getelementbyid":["41.1","87.2","90.3"],"获取具有指定":["41.1"],"的元素":["41.2"],"element":["41.2","55.1","56.2","57.1","58.1","58.2"],"document":["41.2","58.1","87.2","90.3","93.7","101.1","101.2"],"back":["42.1"],"导航到上一个页面":["42.1","42.2"],"history":["42.2"],"以下是一些常见的":["43.0"],"window":["43.0","47.2","94.2","95.1","97.1"],"它是":["43.0"],"的顶级对象":["43.0"],"表示浏览器窗口或标签页":["43.0"],"protocol":["44.1"],"useragent":["45.1"],"包含用户代理字符串":["45.1"],"navigator":["45.2"],"屏幕的宽度":["46.1"],"屏幕宽度":["46.2"],"screen":["46.2"],"像素":["46.2"],"获取屏幕的高度":["46.2"],"specs":["47.1"],"environment":["48.1"],"词法环境":["48.1"],"浏览器的":["49.1"],"resize":["49.1"],"scroll":["49.1"],"秒内只运行一次":["49.2"],"newtime":["49.4"],"apply":["49.4"],"context":["49.5","80.4","80.5","85.2","90.3"],"保存this指向":["49.5"],"arguments":["49.5","71.4"],"拿到event对象":["49.5"],"cleartimeout":["49.5"],"copy":["50.0"],"如果是数组":["50.0"],"遍历每个元素进行深拷贝":["50.0"],"arr":["51.0","51.2","51.3","51.4","51.6","52.0","52.4","72.6"],"使用":["51.1","70.4","70.5"],"unique":["51.2","51.3","51.4","51.6"],"len":["51.2"],"filter":["51.5"],"flat":["52.1"],"res2":["52.2"],"flatten":["52.3"],"res5":["52.4"],"fn":["52.4"],"有三种状态":["53.1"],"pending":["53.1"],"进行中":["53.1"],"fulfilled":["53.1","53.2"],"已成功":["53.1"],"resolve":["53.2"],"状态变为fulfilled":["53.2"],"保存成功的值":["53.2"],"reject":["53.2"],"是一种用于表示和操作":["54.0"],"等文档结构的编程接口":["54.0"],"它将文档表示为一个树状结构":["54.0"],"获取元素节点":["54.1"],"创建新的元素节点":["54.2"],"添加事件监听器":["54.3"],"classlist":["54.4"],"获取元素的类列表":["54.4"],"可用于添加":["54.4"],"eventname":["55.1"],"eventhandler":["55.1"],"event":["55.2","55.3"],"它包含有关事件的信息":["55.2"],"事件会从触发它的元素向上冒泡到祖先元素":["55.3"],"你可以使用":["55.3","71.4"],"mouseover":["55.4"],"mouseout":["55.4"],"mousemove":["55.4"],"并根据需要执行相应的操作":["55.5"],"这样可以减少事件监听器的数量":["55.5"],"提高性能":["55.5"],"方法创建新元素":["56.1"],"attributename":["56.2"],"attributevalue":["56.2"],"parentelement":["56.3"],"newelement":["56.3"],"这将把":["56.3"],"这里的":["57.1"],"classname":["57.2"],"移除类名":["57.2"],"remove":["57.2"],"传入元素的":["58.1"],"或者":["58.2","73.7"],"表示星期六":["59.1"],"getfullyear":["59.1"],"获取四位数的年份":["59.1"],"返回值为一个年份":["59.1"],"gethours":["59.1"],"获取小时数":["59.1"],"getmilliseconds":["59.1"],"获取毫秒数":["59.1"],"关键词来定义":["59.2"],"以下代码定义了名为":["59.2"],"年":["59.3","78.6"],"月":["59.3"],"日":["59.3"],"x":["59.4","69.5","71.1","71.2","71.3","80.3","86.2"],"date":["59.4"],"供开发者使用":["60.0"],"这些对象提供了一些常用或者基本而必要的功能":["60.0"],"属性和方法":["60.0"],"object":["60.1"],"基础对象":["60.1"],"是":["60.2","61.3","73.1","79.1"],"是用于表示和操作数组的对象":["60.3"],"是用于表示和操作字符串的对象":["60.4"],"是用于表示和操作数字的对象":["60.5"],"是表示和操作布尔值的对象":["60.6"],"是用于表示日期和时间的对象":["60.7"],"是用于进行数学计算的对象":["60.8"],"它提供了一系列与正则表达式相关的方法":["60.9"],"如匹配":["60.9"],"替换等":["60.9"],"和全局方法":["61.2"],"作用一致":["61.2"],"parseint":["61.2"],"将字符串转换成整型数字":["61.2"],"pi":["61.4","85.3","88.3"],"不包含":["61.5"],"ceil":["61.5"],"数字向上取整":["61.5"],"舍弃小数部分":["61.5"],"整数部分加1":["61.5"],"正则表达式":["62.1"],"是一种用于匹配和操作字符串模式的强大工具":["62.1"],"它是一种模式匹配的语法":["62.1"],"匹配字符串的开头":["62.2"],"找到所有匹配项而不止第一个":["62.3"],"返回布尔值":["62.4"],"exec":["62.4"],"在字符串中执行正则表达式匹配":["62.4"],"开始索引":["63.3","63.4","63.5"],"结束索引":["63.3","63.4"],"两个参数都是索引值":["63.3","63.4"],"包左不包右":["63.4"],"截取的长度":["63.5"],"解释":["63.5"],"是一个基于":["65.1"],"xxxx":["65.3"],"then":["65.3"],"result":["65.3"],"响应拦截":["65.4"],"请求调整":["65.4"],"用户标识":["65.4"],"网络错误处理":["65.4"],"授权错误处理":["65.4"],"error":["65.5","66.4"],"response":["65.5"],"发出请求后":["65.5"],"服务器用状态码进行响应":["65.5"],"这超出了2xx的范围":["65.5"],"实现一个简单的封装":["66.1"],"主要实现以下目的":["66.1"],"实例":["66.2"],"如果开启":["66.3"],"token":["66.3","66.4"],"serverconfig":["66.3"],"usetokenauthorization":["66.3"],"authorization":["66.3"],"比如判断":["66.4"],"是否过期等等":["66.4"],"代码块":["66.4"],"switch":["66.4"],"getaction":["66.5"],"parameter":["66.5"],"service":["66.5"],"zs":["66.6"],"定义接口方法":["66.6"],"login":["66.6"],"params":["66.6"],"axios":["66.7"],"的再再再封装":["66.7"],"global":["67.1","68.3"],"user":["67.1"],"git":["67.3","67.4","67.11","67.12","67.13","67.14","68.3"],"将当前目录及其子目录下所有变更添加到暂存区":["67.5"],"追踪":["67.7"],"比较指定文件工作区和暂存区的差异":["67.7"],"reflog":["67.8"],"查看详细日志信息":["67.8"],"branch":["67.10"],"新分支":["67.10"],"基于指定分支创建分支":["67.10"],"分支合并到当前分支":["67.14"],"且为":["67.14"],"commit":["67.14"],"in":["67.15","81.1"],"restore":["67.15"],"file":["67.15"],"to":["67.15"],"往最后一次":["67.16"],"追加记录":["67.16"],"克隆远程仓库到本地":["67.19"],"别名":["67.21"],"本地分支":["67.21"],"远程分支":["67.21"],"如果远程分支被省略":["67.21"],"git官网下载安装git客户端":["68.1"],"安装完成后":["68.2"],"pub":["68.4"],"ssh":["68.4"],"打开生成后的id":["68.5"],"本地拉取代码":["68.6"],"普通声明":["69.1"],"notanumber":["69.2"],"number":["69.2","69.13","70.1","70.6","70.8","71.2","71.5","72.2"],"可以直接使用布尔值":["69.3"],"b2":["69.3"],"一样可以操作数组元素":["69.4"],"有两种方式可以定义数组":["69.4"],"第一种":["69.4"],"如果一个方法需要返回多个值":["69.5"],"可以把这多个值作为元组返回":["69.5"],"而不需要创建额外的类来表示":["69.5"],"可以定义一对值分别为string和number类型的元组":["69.5"],"ts":["69.5","69.6","69.7","69.8","69.11","70.2","70.7","70.10","72.3","72.5","74.5","74.6","75.1","78.12"],"也可以是字符串":["69.6"],"数字枚举":["69.6"],"enum":["69.6"],"types":["69.6"],"进行任何操作":["69.7"],"不需要检查类型":["69.7"],"voidfn":["69.8"],"定义null":["69.9"],"返回never的函数必须存在无法达到的终点":["69.10"],"因为必定抛出异常":["69.10"],"的差异":["69.11"],"void类型只是没有返回值":["69.11"],"不能为字符串类型":["69.12"],"因为定义的联合类型只有数字和布尔值并没有字符串":["69.12"],"boolean":["69.12"],"interface":["69.13","72.5","74.2","74.6"],"程序员":["69.14"],"已经进行了必须的检查":["69.14"],"方式一":["69.14"],"as":["69.14","98.1"],"这个概念":["70.0"],"string":["70.1","70.6","70.8","70.10","77.2"],"构造方法":["70.1"],"constructor":["70.1","70.6","70.8"],"类的继承":["70.2"],"class":["70.2","70.7","70.10"],"animal":["70.2"],"run":["70.2"],"public":["70.3","70.8","103.5"],"private":["70.6","72.6"],"some":["70.6"],"any":["70.6","101.1","101.2"],"关键字将属性设置为只读的":["70.7"],"只读属性必须在声明时或构造函数里被初始化":["70.7"],"person":["70.8","70.10"],"implements":["70.9"],"后面跟interface的名字多个用逗号隔开":["70.9"],"继承还是用extends":["70.9"],"personclass":["70.9"],"首先":["70.10"],"我们从一个没有使用存取器的例子开始":["70.10"],"firstname":["70.10"],"关键字声明的类叫做":["70.11"],"声明的方法叫做":["70.11"],"抽象方法":["70.11"],"指不能被实例化":["70.11"],"因为它里面包含一个或多个抽象方法":["70.11"],"函数参数":["71.0"],"y":["71.1"],"add":["71.2","71.3","72.3","72.6"],"来访问所有传入的参数":["71.4"],"你可以把所有参数收集到一个变量里":["71.4"],"剩余参数会被当做个数不限的可选参数":["71.4"],"可以一个都没有":["71.4"],"定义函数实现":["71.5"],"接口或类的时候":["72.0"],"当我们使用这个函数的时候把参数的类型传进去就可以了":["72.3"],"也就是动态类型":["72.3"],"swap":["72.4"],"k":["72.4"],"keyvalue":["72.5"],"t":["72.5","72.6","72.7"],"clacarray":["72.6"],"没有泛型约束":["72.7"],"getlen":["72.7"],"arg":["72.7"],"超集":["73.2"],"简单的说就是在":["73.2"],"而ts":["73.3"],"属于静态编程语言":["73.3"],"尤其在大型项目的时候效果显著":["73.5"],"和一些插件库的兼容并不是特别完美":["73.6"],"g":["73.7","103.3"],"yarn":["73.7","103.3","103.8"],"w进行随时热更新watch":["73.9"],"node直接运行ts的node项目":["73.10"],"首先全局安装ts":["73.10"],"的核心原则之一是对值所具有的结构进行类型检查":["74.0"],"我们使用接口":["74.0"],"我的理解是使用interface来定义一种约束":["74.1"],"让数据的结构满足约束的格式":["74.1"],"定义方式如下":["74.1"],"可选属性的好处之一是可以对可能存在的属性进行预定义":["74.4"],"好处之二是可以捕获引用了不存在的属性时的错误":["74.4"],"可选属性的含义是该属性可以不存在":["74.4"],"在这个例子当中我们看到接口中并没有定义c但是并没有报错":["74.5"],"应为我们定义了":["74.5"],"这样写是会报错的":["74.6"],"应为a是只读的不允许重新赋值":["74.6"],"cb":["74.7"],"void":["74.7"],"就是我们常说的":["75.0"],"类型也不能赋给":["75.1"],"报错":["75.1"],"原始类型":["75.1"],"umd":["76.0"],"lib":["76.0"],"指定要包含在编译中的库文件":["76.0"],"allowjs":["76.0"],"允许编译":["76.0"],"文件":["76.0"],"checkjs":["76.0"],"报告":["76.0"],"文件中的错误":["76.0"],"jsx":["76.0","78.8"],"preserve":["76.0"],"代码的生成":["76.0"],"react":["76.0","78.8"],"native":["76.0"],"定义变量时赋值了":["77.1"],"推断为对应的类型":["77.1"],"n1":["77.1"],"s":["77.2"],"str":["77.2"],"abcd":["77.2"],"版本的后台管理系统":["78.2"],"一个项目要有统一的规范":["78.2"],"需要使用":["78.2"],"进行构建":["78.4"],"官方中文文档参考":["78.4"],"cn":["78.4"],"vitejs":["78.4","78.10"],"dev":["78.4"],"guide":["78.4"],"月创建的开源项目":["78.6"],"它的目标是提供一个插件化的":["78.6"],"代码检测工具":["78.6"],"首先安装":["78.6"],"pnpm":["78.6","103.3"],"d":["78.6","80.4"],"生成配置文件":["78.6"],"prettier":["78.7","78.8"],"plugin":["78.7","78.8"],"parseroptions":["78.8"],"ecmaversion":["78.8"],"sourcetype":["78.8"],"jsxpragma":["78.8"],"ecmafeatures":["78.8"],"继承已有的规则":["78.8"],"extends":["78.8"],"recommended":["78.8"],"essential":["78.8"],"plugins":["78.8","78.10"],"off":["78.8"],"loader":["78.9"],"因此我们再组件内可以使用":["78.9"],"需要加上":["78.9"],"lang":["78.9"],"接下来我们为项目添加一些全局的样式":["78.9"],"userconfigexport":["78.10"],"configenv":["78.10"],"vitemockserve":["78.10"],"export":["78.10"],"default":["78.10"],"command":["78.10"],"localenabled":["78.10"],"serve":["78.10"],"在根目录创建":["78.10"],"文件夹":["78.10"],"使用请求拦截器":["78.11"],"可以在请求拦截器中处理一些业务":["78.11"],"开始进度条":["78.11"],"请求头携带公共参数":["78.11"],"使用响应拦截器":["78.11"],"可以在响应拦截器中处理一些业务":["78.11"],"进度条结束":["78.11"],"简化服务器返回的数据":["78.11"],"处理":["78.11"],"网络错误":["78.11"],"在根目录下创建":["78.11"],"utils":["78.11","78.12"],"文件夹去统一管理项目的接口":["78.12"],"下面方式":["78.12"],"统一管理咱们项目用户相关的接口":["78.12"],"html5":["79.1"],"的基础知识":["79.2"],"canvas":["79.3","79.4","79.5","83.3","90.3","93.1"],"使用直角坐标系":["79.3"],"原点坐标为":["79.3"],"可以绘制":["79.4"],"svg":["79.4","102.3","102.4","102.5","102.6","102.8"],"和其他类型的矢量图形":["79.4"],"提供了多种绘图元素":["79.5"],"包括路径和图形":["79.5"],"除了基本的绘图功能之外":["79.6"],"还可以创造交互式效果":["79.6"],"用来展示和操控数据":["79.6"],"非常适合处理像素级别的控制":["79.7"],"利用":["79.7"],"虽然在":["79.8"],"canvasrenderingcontext2d":["80.0"],"rotate":["80.0"],"方法用于图像旋转":["80.1"],"它接受一个弧度值作为参数":["80.1"],"表示顺时针旋转的度数":["80.1"],"轴方向的缩放因子":["80.2"],"一个单位就是一个像素":["80.2"],"缩放因子可以缩放单位":["80.2"],"比如缩放因子":["80.2"],"表示将大小缩小为原来的":["80.2"],"缩放因子":["80.2"],"方法用于平移图像":["80.3"],"它接受两个参数":["80.3"],"分别是":["80.3"],"e":["80.4","103.8"],"f":["80.4"],"水平缩放":["80.4"],"transform":["80.5"],"方法完全一致":["80.5"],"translate":["80.5"],"如果在":["81.0"],"之中将某个物体":["81.0"],"在目标图像中显示源图像":["81.1"],"只有目标图像内的源图像部分会显示":["81.1"],"目标图像是透明的":["81.1"],"out":["81.1"],"在目标图像之外显示源图像":["81.1"],"您的浏览器不支持":["82.1"],"描边已定义绘图":["82.2"],"路径":["82.2"],"fill":["82.2","85.3","102.9"],"填充当前绘图":["82.2"],"linecap":["83.1"],"指定线条末端的样式":["83.1"],"有三个可能的值":["83.1"],"butt":["83.1"],"默认值":["83.1"],"末端为矩形":["83.1"],"round":["83.1"],"末端为圆形":["83.1"],"square":["83.1"],"末端为突出的矩形":["83.1"],"矩形宽度不变":["83.1"],"y0":["83.2"],"x1":["83.2"],"y1":["83.2"],"方法接受四个参数":["83.2"],"是起点的横坐标和纵坐标":["83.2"],"是终点的横坐标和纵坐标":["83.2"],"通过不同的坐标值":["83.2"],"可以生成从上至下":["83.2"],"repetition":["83.3"],"该方法接受两个参数":["83.3"],"第一个参数是图像数据":["83.3"],"它可以是":["83.3"],"img":["83.3"],"也可以是另一个":["83.3"],"或者一个表示图像的":["83.3"],"默认为":["83.4"],"shadowcolor":["83.4"],"阴影的颜色":["83.4"],"black":["83.4"],"fillrect":["84.0"],"图像":["85.0"],"高度":["85.2"],"math":["85.3"],"绘制笑脸":["85.3"],"beginpath":["85.3","88.3"],"lineto":["85.4","88.3"],"dwidth":["85.5"],"dheight":["85.5"],"sx":["85.5"],"默认值为":["85.6"],"10px":["85.6"],"sans":["85.6"],"serif":["85.6"],"textalign":["85.6"],"文本的对齐方式":["85.6"],"start":["85.6"],"direction":["85.6"],"文本的方向":["85.6"],"inherit":["85.6"],"quadraticcurveto":["86.1"],"控制点x":["86.1"],"控制点y":["86.1"],"终点x":["86.1"],"终点y":["86.1"],"beziercurveto":["86.2"],"控制点1":["86.2"],"text":["87.1","90.4"],"再来一次":["87.1"],"找到画布":["87.2"],"绘制小时的刻度":["88.3"],"moveto":["88.3"],"linewidth":["88.3"],"strokestyle":["88.3"],"gray":["88.3"],"stroke":["88.3","102.9"],"closepath":["88.3"],"nullbtn":["90.3"],"清空画布":["90.3"],"c1":["90.3"],"当前浏览器不支持canvas":["90.3"],"请下载最新的浏览器":["90.3"],"获取canvas画布和绘制的上下文对象":["90.3"],"getcontext":["90.3"],"2d":["90.3"],"获取输入框和按钮":["90.3"],"boldbtn":["90.4"],"粗线条":["90.4"],"thinbtn":["90.4"],"interactive":["92.1"],"精灵派加点击事件":["92.1"],"pixi":["92.2","93.7","97.2","98.1","99.1","99.2","99.3","99.4","99.5","101.0"],"graphics":["92.2","99.1","99.2","99.3","99.4","99.5","102.1"],"beginfill":["92.2","99.2","99.3","99.4"],"官方网站":["93.0"],"webgl":["93.1"],"快速高效":["93.3"],"pixijs":["93.3","93.5"],"简单易用":["93.4"],"丰富的功能":["93.5"],"跨平台支持":["93.6"],"application":["93.7","94.2","95.1","97.1"],"innerwidth":["94.2","95.1","97.1"],"innerheight":["94.2","97.1","101.1","101.2"],"backgroundcolor":["94.2","97.1","101.1","101.2"],"0x1099bb":["94.2","101.1","101.2"],"resolution":["94.2","101.1","101.2"],"pic":["95.2"],"rmb":["95.2"],"bdstatic":["95.2"],"com":["95.2"],"05b0ea405c9e690ab51627853a13de56":["95.2"],"jpeg":["95.2"],"设置模糊滤镜的模糊程度":["97.2"],"创建轮廓滤镜":["97.3"],"创建一个纹理":["98.2"],"anchor":["98.3"],"实现动画":["98.4"],"0x66ccff":["99.3"],"0x660000":["99.4"],"linestyle":["99.5"],"devicepixelratio":["101.1","101.2"],"像素比":["101.1","101.2"],"将应用画布添加到dom中":["101.1","101.2"],"body":["101.1","101.2"],"appendchild":["101.1","101.2"],"view":["101.1","101.2"],"添加资源":["101.1"],"添加场景1的资源":["101.2"],"assets":["101.2"],"addbundle":["101.2"],"scene1":["101.2"],"pic1":["101.2"],"vector":["102.1"],"的缩写":["102.1"],"意为可缩放矢量图形":["102.1"],"不设置样式属性":["102.3"],"style":["102.3"],"不设置样式属性style是看不出效果的":["102.7"],"并且polygon默认为填充需要把fill属性设置为none":["102.7"],"points":["102.8"],"opacity":["102.9"],"开始搭建个人网站":["103.0"],"如果没有安装":["103.3"],"可以全局安装":["103.3"],"然后初始化":["103.3"],"配置网站":["103.4"],"新建一个":["103.5"],"作为我们的主页":["103.5"],"在新建一个":["103.5"],"文件夹用于静态资源的引用":["103.5"],"目录结构如下":["103.5"],"侧边栏":["103.6"],"sidebar":["103.6"],"articles":["103.6"],"写下如下内容":["103.7"],"更多配置请查看":["103.7"],"md":["103.7"],"layout":["103.7"],"home":["103.7"],"title":["103.7"],"选项卡标题":["103.7"],"titletemplate":["103.7"],"选项卡描述":["103.7"],"editlink":["103.7"],"确保脚本抛出遇到的错误":["103.8"],"生成静态文件":["103.8"],"build":["103.8"],"进入生成的文件夹":["103.8"],"cd":["103.8"],"vitepress":["103.8"],"dist":["103.8"],"如果是发布到自定义域名":["103.8"],"echo":["103.8"],"www":["103.8"]},{"0":["13.8","29.1","32.24","50.0","51.2","52.4","78.8","80.5","83.2","87.2","99.3","99.5","102.7"],"1":["20.10","25.24","32.15","32.23","32.29","32.30","33.9","33.10","33.11","34.6","34.7","34.8","36.4","36.9","37.3","38.12","38.18","52.0","63.16","63.22","69.6","78.10","82.1","83.2","94.2","95.1","97.1"],"2":["25.29","31.6","32.23","32.28","32.29","32.30","32.31","33.5","36.7","36.9","37.3","37.12","40.1","43.0","49.4","49.5","52.0","67.14","67.18","69.6"],"3":["5.1","11.8","15.11","15.14","31.6","32.23","32.29","32.30","32.31","37.3","38.4","39.15","63.8","67.7","69.6","80.2","102.1"],"4":["11.8","28.3","32.31","37.2","37.13","67.8"],"5":["32.31","32.32","33.6","36.16","37.2","37.13","78.7","97.3"],"6":["37.13","39.1","99.5"],"8":["37.2"],"9":["11.12","99.3"],"10":["33.5","37.2","69.5","77.1","80.2","97.2","102.9"],"11":["59.1","78.7"],"12":["38.15","63.19"],"17":["51.0"],"18":["40.7"],"20":["11.2","102.7"],"27":["32.21"],"30":["40.7"],"35":["101.2"],"45":["80.1"],"50":["102.8"],"59":["59.1"],"60":["88.3"],"68":["61.5"],"100":["80.5","85.3"],"123":["39.15","69.2","69.12"],"150":["85.4","86.1"],"180":["88.3"],"200":["15.14","85.4"],"300":["92.2","102.8"],"302":["66.4"],"321":["69.2"],"350":["85.2"],"370":["102.5"],"400":["66.4","102.4"],"401":["66.4"],"999":["59.1"],"2100":["59.4"],"2224":["101.2"],"4870":["78.10"],"12087":["101.2"],"23739":["101.2"],"55520":["15.3"],"1415926":["39.15"],"微信":["0.0"],"index":["5.0","78.9"],"html":["5.0","27.15","58.2"],"配置对应的信息":["5.1"],"检查配置文件是否配置成功":["5.1"],"js":["11.0","11.11","14.18","25.31","28.4","31.5","32.1","32.2","32.12","32.13","32.20","34.6","36.5","36.10","36.18","37.13","38.7","38.12","38.17","38.18","39.3","39.6","39.9","39.11","40.7","51.1","55.5","59.3","63.11","63.16","63.21","63.22","78.6","80.2","85.6"],"平台":["11.0"],"并向客户端响应具体的内容":["11.2"],"user":["11.2","11.4","15.3","15.5","31.4","68.3","78.10"],"req":["11.2","11.4","11.5","11.6","13.16","15.5","15.11","15.14"],"res":["11.2","11.4","11.5","11.6","13.16","15.5","15.14","51.3","51.4","51.6"],"send":["11.2","11.4","15.14","31.6"],"name":["11.2","14.18","15.5","25.7","26.12","36.11","36.12","36.13","36.17","36.20","36.21","39.19","40.4","68.3","70.7","70.11","74.2","103.7"],"zs":["11.2","39.19"],"age":["11.2","15.5","32.21","36.5","40.7"],"gender":["11.2"],"use":["11.3"],"public":["11.3","70.11"],"files":["11.3"],"list":["11.4"],"next":["11.5","11.6"],"三个参数":["11.5"],"console":["11.6","13.4","32.2","34.3","34.7","35.1","39.14","39.19","40.1","40.4","40.8","70.2","74.7","92.1"],"mw2":["11.7"],"调用了第二个局部生效的中间件":["11.7"],"两种定义局部中间件的方式":["11.7"],"错误级别的中间件":["11.8"],"用来捕获整个项目中发生的异常错误":["11.8"],"从而防止项目异常崩溃的问题":["11.8"],"错误级别中间件的处理函数中":["11.8"],"必须有":["11.8"],"个形参":["11.8"],"形参顺序从前到后分别是":["11.8"],"err":["11.8"],"错误级别的中间件必须注册在所有路由之后":["11.8"],"require":["11.8","13.3","13.6","14.9","14.19","15.2"],"install":["11.10","14.16"],"代码跨域获取资源":["11.11"],"浏览器的同源安全策略默认会阻止网页":["11.11"],"跨域":["11.11"],"获取资源":["11.11"],"但如果接口服务器配置了":["11.11"],"个请求头":["11.12"],"accept":["11.12","11.14"],"language":["11.12","11.14"],"content":["11.12","11.14","13.17"],"dpr":["11.12"],"downlink":["11.12"],"save":["11.12"],"data":["11.12","13.3","27.6","31.7","65.5"],"viewport":["11.12"],"width":["11.12","20.11","95.2","98.3"],"type":["11.12","20.0","25.6","70.9","78.12","82.1"],"类型":["11.15","72.7"],"请求头中包含自定义头部字段":["11.15"],"向服务器发送了":["11.15"],"runtime":["12.1"],"environment":["12.1"],"是一个基于":["12.1"],"的性能和效率非常高":["12.2"],"传统的":["12.2"],"java":["12.2"],"语言是一个请求开启一个线程":["12.2"],"当请求处理完毕后就关闭这个线程":["12.2"],"而":["12.2"],"时的劣势":["12.3"],"模式":["13.1"],"说明":["13.1"],"r":["13.1"],"读取文件":["13.1"],"文件不存在抛异常":["13.1"],"读取的数据":["13.3"],"如果未指定编码格式则返回一个":["13.3"],"buffer":["13.3"],"const":["13.3","13.6","13.13","15.2","15.5","33.9","33.10","36.8","51.5","52.1","56.1","71.4","78.8","97.3","98.1","98.2"],"监听流的开启和关闭":["13.4"],"这几个监听不是必须的":["13.4"],"once":["13.4","13.7"],"open":["13.4","31.7"],"function":["13.4","13.16","34.6","36.4","36.5","69.10","69.11","78.10"],"log":["13.4","32.2","34.3","34.7","37.11","38.4","38.13","39.19","40.1","40.4","40.8","63.8","63.17","65.3","65.5","70.2"],"可读流打开了":["13.4"],"close":["13.4","47.1"],"flag":["13.6"],"若是字符串则指定编码格式":["13.6"],"回调函数":["13.6"],"ws":["13.7"],"createwritestream":["13.7"],"hello3":["13.7"],"txt":["13.7"],"进制的形式显示":["13.8"],"每一个元素范围是":["13.8"],"00":["13.8"],"ff":["13.8"],"即":["13.8"],"原因":["13.9"],"代码在运行的时候":["13.9"],"会以执行":["13.9"],"node":["13.9","13.11","13.15","14.21","73.10","78.7"],"命令时所处的目录":["13.9"],"截断文件":["13.10"],"truncate":["13.10"],"len":["13.10"],"truncatesync":["13.10"],"建立目录":["13.10"],"mkdir":["13.10"],"mode":["13.10"],"模块是":["13.11","13.15"],"会被忽略":["13.12"],"pathstr":["13.12"],"a":["13.12","26.12","33.9","39.15","69.1","72.3","103.8"],"ext":["13.13"],"文件路径":["13.13"],"文件扩展名":["13.13"],"fpath":["13.14"],"url":["13.16","31.4","31.7","44.0","78.12"],"method":["13.16","31.4","66.5"],"not":["13.17"],"found":["13.17"],"let":["13.17","25.17","25.18","25.20","32.2","32.7","32.12","32.13","32.20","32.24","32.28","33.8","34.11","38.6","38.7","38.8","38.11","38.17","39.7","39.15","40.5","51.3","51.4","52.4","63.10","63.11","63.12","63.15","63.21","66.2","69.4","69.7","69.14","71.1","78.8","78.11"],"h1":["13.17"],"判断用户请求的是否为":["13.17"],"或":["13.17","53.1","65.4","78.8"],"模块是可组合":["14.2"],"分解和更换的单元":["14.2"],"提高维护性":["14.3"],"内置模块":["14.5"],"和函数作用域类似":["14.6"],"在自定义模块中定义的变量":["14.6"],"exports":["14.7","78.6"],"将模块内的成员共享出去":["14.7"],"变量代表当前模块":["14.8"],"导入自定义模块时":["14.11"],"若省略文件扩展名":["14.11"],"则":["14.11","14.21"],"中":["14.12","35.2","54.0","57.0"],"进行加载":["14.12","14.22"],"直到":["14.12"],"文件系统的根目录":["14.12"],"例如":["14.12","55.1","57.1","79.6"],"假设在":["14.12","14.22"],"c":["14.12","14.22","36.9"],"main":["14.13","14.23"],"属性":["14.13","17.1","54.0","70.8"],"作为":["14.13"],"中的内置模块与自定义模块":["14.15"],"包是由第三方个人或团队开发出来的":["14.15"],"免费供所有人使用":["14.15"],"包的元整名称":["14.16"],"或者":["14.16","65.3","69.9"],"registry":["14.17"],"查看当前包镜像源":["14.17"],"包的入口文件":["14.18"],"readme":["14.18"],"md":["14.18","103.5"],"包的说明文档":["14.18"],"模块的代码只会被执行一次":["14.19"],"这样的路径标识符":["14.21"],"会把它当作内置模块或第三方模块进行加载":["14.21"],"在使用":["14.21"],"直到文件系统的根目录":["14.22"],"users":["14.22"],"lemomn":["14.22"],"project":["14.22"],"并寻找":["14.23"],"属性值作为":["14.23"],"加载的入口":["14.23"],"b":["14.23","26.12","33.9","36.7","36.9","67.14","70.10","72.2","72.3","72.4","74.3","74.6"],"db":["15.2"],"affectedrows":["15.3"],"插入成功":["15.3"],"向表中新增数据时":["15.3"],"如果数据对象的每个属性和数据表的字段一一对应":["15.3"],"则可以通过如下方式快速插入数据":["15.3"],"bruce":["15.3","15.5","15.14"],"调用接口":["15.6"],"优点":["15.6"],"开发体验好":["15.6"],"前端专业页面开发":["15.6"],"后端专注接口开发":["15.6"],"且需要良好的":["15.7"],"seo":["15.7"],"saveuninitalized":["15.11"],"true":["15.11","33.2","51.0","60.6","75.1","94.2"],"向":["15.11"],"中存数据":["15.11"],"中间件配置成功后":["15.11"],"可通过":["15.11"],"访问":["15.11"],"对象":["15.11","31.2","31.3","83.2","83.3"],"存储用户信息":["15.11"],"不推荐使用":["15.13"],"认证机制":["15.13"],"工作原理图":["15.13"],"用户的信息通过":["15.13"],"token":["15.13"],"字符串的形式":["15.13"],"密钥为任意字符串":["15.14"],"secretkey":["15.14"],"app":["15.14","95.2","98.1","98.3"],"post":["15.14","66.5"],"api":["15.14"],"login":["15.14","78.12"],"status":["15.14","66.4","67.4"],"message":["15.14","25.4","25.17","38.11","63.15"],"登录成功":["15.14"],"sign":["15.14"],"css":["16.1","57.1"],"可快速为同类型标签统一设置样式":["16.2"],"缺点":["16.2"],"container":["16.3","16.9"],"属性选择元素":["16.4"],"good类的p元素":["16.5"],"color":["16.5","57.1"],"yellow":["16.5"],"类名包含good和beauty的元素":["16.5"],"语法":["16.6"],"选择器1":["16.6"],"选择器2":["16.6"],"ul":["16.7"],"div":["16.8","16.9","25.2","25.5","25.10","25.13","25.14","26.9","27.6","88.4","94.1","96.1","100.2"],"被选中":["16.9"],"class":["16.9","25.30","27.6","70.11"],"结构选择元素":["16.10"],"visited":["16.11"],"链接访问后的样式":["16.11"],"的第一个":["16.12"],"的最后一个":["16.12"],"val":["16.13"],"属性且属性值等于":["16.13"],"的":["16.13","25.12","27.14","59.2","65.1"],"在元素内部后面插入内容":["16.14"],"伪元素字体图标":["16.14"],"p":["16.14","27.11"],"e91e":["16.14"],"position":["16.14"],"absolute":["16.14"],"right":["16.14"],"20px":["16.14"],"top":["16.14"],"10px":["16.14"],"font":["16.14"],"行内":["17.0"],"类":["17.1"],"伪类":["17.1"],"元素":["17.1"],"伪元素":["17.1"],"上下箭头":["19.0"],"button":["19.0","25.5","25.14","26.5"],"display":["19.0"],"none":["19.0"],"滚动条轨道":["19.0"],"mp3":["20.0","20.2"],"audio":["20.2"],"mp4":["20.3"],"video":["20.3"],"描述":["20.5","20.6"],"height":["20.7","46.1","46.2","95.2"],"视频显示区域的宽高":["20.7"],"controls":["20.7"],"play":["20.8"],"播放结束后触发":["20.10"],"onended":["20.10"],"播放完成后":["20.10"],"播放下一个":["20.10"],"视频":["20.10"],"makenormal":["20.11"],"普通":["20.11"],"br":["20.11"],"id":["20.11"],"video1":["20.11"],"再":["22.1"],"标签上设置属性":["22.1"],"为":["22.1"],"很容易被浏览器识别":["22.1"],"script":["25.0","28.5","35.4","103.3"],"标签中添加":["25.0"],"setup":["25.0","25.23"],"就可以做到":["25.0"],"函数是":["25.1"],"新增的一个选项":["25.1"],"它是组合式":["25.1"],"使用reactive":["25.2"],"去修改值无须":["25.2"],"ref其实也是内部调用":["25.2"],"来实现的":["25.2"],"vue":["25.2","25.6","25.13","25.16","25.17","25.18","25.19","25.20","26.6","26.9","27.2","27.6","27.9","27.12","27.16"],"template":["25.2","25.5","25.13","26.9","27.6","27.9","27.16"],"我是message":["25.4"],"obj":["25.6","33.9"],"hr":["25.7"],"import":["25.8","25.31","27.2","66.6","78.11"],"reactive":["25.8","25.18","25.19","25.20","29.3"],"from":["25.8","25.18","25.19","25.20","27.2","66.2","66.6","78.11"],"不论是响应式还是普通的":["25.9"],"state":["25.10"],"如果原始对象是":["25.12"],"非响应式":["25.12"],"作用基本一致":["25.15"],"他们都是用来监听响应式状态发生变化的":["25.16"],"当响应式状态发生变化时":["25.16"],"就会触发一个回调函数":["25.16"],"watch":["25.19"],"响应式":["25.21"],"追踪其依赖":["25.21"],"可以接收一个参数":["25.22"],"叫oninvalidate":["25.22"],"在组件的":["25.23"],"更新时机":["25.24"],"过程":["25.25"],"成为生命周期":["25.25"],"只调用一次":["25.27"],"mounted":["25.27","25.28"],"元素插入父级dom调用":["25.27"],"any":["25.28","74.5"],"在元素上做些操作":["25.28"],"初始化一次":["25.28"],"el":["25.28"],"该值为":["25.29"],"oldvalue":["25.29"],"先前的值":["25.29"],"仅在":["25.29"],"beforeupdate":["25.29"],"和":["25.29","29.3","31.1","37.5","63.4","71.0"],"updated":["25.29"],"中可用":["25.29"],"v":["25.30","26.12"],"move":["25.30"],"可以帮助我们提高代码的复用性":["25.31"],"让我们能在不同的组件中都利用":["25.31"],"函数":["25.31","75.0"],"案列":["25.31"],"实现一个窗口改变时获取宽高的":["25.31"],"hook":["25.31"],"组件通信方式":["26.1"],"props":["26.1"],"可以实现父子组件":["26.1"],"child":["26.2","26.7"],"info":["26.2"],"我爱祖国":["26.2"],"money":["26.2"],"子组件获取父组件传递数据":["26.2"],"一种是原生的":["26.3"],"dom":["26.3","54.4"],"标签绑定原生":["26.4"],"事件点击事件":["26.4"],"默认会给事件回调注入":["26.4"],"event":["26.4"],"事件对象":["26.4"],"我是子组件2":["26.5"],"click":["26.5","55.1","87.1","92.1"],"handler":["26.5"],"点击我触发xxx自定义事件":["26.5"],"我们会发现在":["26.5"],"但是在":["26.6"],"vue3":["26.6","26.10","27.13"],"中没有":["26.6"],"构造函数":["26.6"],"实现的":["26.7"],"下方代码":["26.7"],"相当于给组件":["26.7"],"传递一个":["26.7"],"与绑定一个自定义事件":["26.7"],"vue2":["26.8","73.6"],"框架中":["26.8"],"attrs属性与":["26.8"],"listeners":["26.8"],"方法":["26.8"],"比如":["26.8","26.9"],"那么子组件内部的方法与响应式数据父组件可以使用的":["26.9"],"在父组件挂载完毕获取组件实例":["26.9"],"父组件内部代码":["26.9"],"注入":["26.10"],"提供两个方法":["26.10"],"pinia":["26.11"],"web3doc":["26.11"],"父组件内部向指定的具名插槽传递结构":["26.12"],"需要注意":["26.12"],"可以替换为":["26.12"],"并且对":["27.5"],"layout":["27.6"],"menu":["27.6"],"slot":["27.8","27.10"],"footer":["27.9"],"父组件使用需对应名称":["27.9"],"派发给父组件的":["27.10"],"去使用":["27.10"],"父组件":["27.11","27.16"],"defineasynccomponent":["27.12"],"异步加载":["27.12"],"新增了":["27.13"],"了":["27.13"],"就不必跟踪何时加载数据并呈现相应的内容":["27.13"],"react":["27.14"],"portal":["27.14"],"主要解决的问题":["27.14"],"因为teleport节点挂载在其他指定的dom节点下":["27.14"],"只会触发":["27.15"],"基本":["27.15"],"component":["27.15"],"children":["27.16"],"modelvalue":["27.17"],"update":["27.17"],"input":["27.17","90.4"],"新增":["27.17"],"一个组件可以设置多个":["27.17"],"bash":["28.1","73.9","73.10"],"g":["28.2"],"版本在":["28.3"],"choose":["28.4"],"version":["28.4"],"of":["28.4"],"that":["28.4"],"you":["28.4"],"want":["28.4"],"to":["28.4"],"start":["28.4"],"标签上支持原生":["28.5"],"esm":["28.5"],"yarn":["28.6"],"create":["28.6"],"init":["28.7","67.3","78.6","103.3","103.8"],"one":["29.1"],"piece":["29.1"],"初次渲染快55":["29.2"],"computed":["29.3"],"即异步的":["31.1"],"的核心对象":["31.2"],"xmlhttprequest":["31.2"],"通过":["31.2","31.3","70.0","79.7"],"async":["31.4"],"xhr":["31.5"],"body":["31.5","93.7","94.2","97.1"],"未发送":["31.6"],"headers":["31.6"],"received":["31.6"],"以获取响应头":["31.6"],"方法已经被调用":["31.6"],"响应头和响应状态已经返回":["31.6"],"loading":["31.6"],"正在下载响应体":["31.6"],"json":["31.7","52.2","103.3","103.5"],"params":["31.7","66.5"],"发送请求":["31.7"],"if":["31.7","33.11","71.5"],"是一种可以按顺序保存数据的数据类型":["32.0"],"使用场景":["32.0"],"声明数组并赋值称为数组的初始化":["32.1"],"这种字面量方式也是最多的使用方式":["32.1"],"利用new":["32.1"],"arr":["32.2","33.10","51.5","52.2","52.3"],"aa":["32.2"],"bb":["32.2"],"cc":["32.2"],"dd":["32.2"],"ee":["32.2"],"增":["32.5"],"删":["32.5","38.1"],"push":["32.6","72.6"],"colors":["32.7","32.8","32.9","32.12","32.13","32.17","32.26"],"new":["32.8","51.6","59.3","97.3","98.1"],"array":["32.8","71.4","72.2"],"red":["32.9","32.12","32.13","32.14","32.17","32.26"],"green":["32.9","32.10","32.14","32.17","32.26","69.6"],"blue":["32.9","32.10","32.14","32.17","69.6","84.0"],"colors2":["32.10","32.15"],"pop":["32.11","101.1","101.2"],"splice":["32.16"],"indexof":["32.18"],"numbers":["32.19","32.20","32.28","32.29"],"reverse":["32.22"],"values":["32.24"],"都不改变原数组":["32.27"],"有如下":["32.27"],"alert":["33.1","36.4"],"yes":["33.1"],"else":["33.1"],"no":["33.1","78.8"],"会自上向下依次对":["33.2"],"后的条件表达式进行求值判断":["33.2"],"如果条件表达式结果为":["33.2"],"则执行当前":["33.2"],"后的语句":["33.2"],"执行完毕语句结束":["33.2"],"false":["33.2","37.7","37.10","69.3","69.12"],"则继续向下判断":["33.2"],"直到找到":["33.2"],"表达式2":["33.3"],"表达式3":["33.3"],"while":["33.4","34.9"],"语句":["33.4"],"tip":["33.5","33.6","37.12","60.0"],"i":["33.8","50.0","51.2","52.4"],"可迭代对象":["33.10"],"需要执行的代码":["33.10"],"示例":["33.10"],"j":["33.11"],"可能会定义非常多的相同代码或者功能相似的代码":["34.0"],"这些代码可能需要大量重复使用":["34.0"],"声明定义方式":["34.2"],"sayhi":["34.3"],"hi":["34.3"],"声明函数的关键字":["34.3"],"对外只提供一个简单的函数接口":["34.4"],"我们可以利用函数的参数实现函数重复不同的代码":["34.6"],"函数名":["34.6"],"形参1":["34.6"],"如果实参的个数和形参的个数一致":["34.7"],"则正常输出结果":["34.7"],"以最后一个为准":["34.8"],"函数没有":["34.8"],"返回的值是":["34.8"],"undefined":["34.8","39.16","40.3","69.8"],"函数返回值注意事项":["34.8"],"终止函数":["34.8"],"getsum":["34.8"],"num1":["34.8","39.11"],"num2":["34.8"],"如":["34.9"],"for":["34.9","50.0","51.3","51.4","51.6","52.4"],"没有名字的函数":["34.10"],"fn":["34.11"],"xxx":["34.12","68.3"],"它也可以在服务器端运行":["35.0"],"用于编写后端代码":["35.0"],"输出hello":["35.1"],"world":["35.1","38.9","63.13"],"然后浏览器才能执行":["35.2"],"lang":["35.3"],"en":["35.3"],"结尾的文件中":["35.4"],"然后通过":["35.4"],"快捷键":["35.6","35.7"],"对象有它的属性":["36.1"],"如重量和颜色等":["36.1"],"方法有启动停止等":["36.1"],"在":["36.1","54.0","62.1","103.5"],"person":["36.3","36.5","70.7","70.11","74.6"],"大家好啊":["36.4"],"调用对象":["36.4"],"当我们创建对象的时候":["36.5"],"必须用":["36.5"],"来调用构造函数":["36.5"],"uname":["36.5"],"数组":["36.6","60.1"],"freeze":["36.6"],"冻结一个对象":["36.6"],"防止对其进行修改":["36.6"],"getownpropertydescriptor":["36.6"],"obj2":["36.7"],"myproto":["36.8"],"greeting":["36.8","36.15"],"john":["36.12","36.13","36.17","36.20","36.21","39.4"],"descriptor":["36.12"],"symbol":["36.14"],"mysymbol":["36.14"],"hello":["36.15","38.6","38.9","63.10","63.13","69.5"],"添加属性无效":["36.19"],"不会影响原对象":["36.19"],"delete":["36.19"],"是用于实现赋值":["37.1"],"比较和执行算数运算等动能的符号":["37.1"],"除":["37.2"],"时才会对变量进行赋值":["37.3"],"加等于":["37.3"],"n":["37.3"],"所返回的值不同":["37.5"],"是自增前的值":["37.5"],"旧值":["37.5"],"是自增后的值":["37.5"],"都会使原变量立刻减少":["37.6"],"不同的是":["37.6"],"大于号":["37.7"],"小于等于号":["37.7"],"与运算是短路的与":["37.9"],"如果第一个值为":["37.9","37.10"],"则不看第二个值":["37.9","37.10"],"与运算是找":["37.9"],"或运算也是短路的或":["37.10"],"执行顺序":["37.12"],"再进行操作":["38.2","63.6"],"result":["38.3","63.7"],"lo":["38.4","63.8"],"常见的有":["38.5","63.9"],"trim":["38.5","63.9"],"stringvalue":["38.6","38.8","63.10","63.12"],"foo":["38.8","38.13","63.12","63.17"],"chatat":["38.10","63.14"],"startswith":["38.13","63.17"],"str":["38.15","39.14","63.19"],"字符串设计了几个方法":["38.16","63.20"],"text":["38.17","38.19","63.21","63.23","103.6","103.7"],"cat":["38.17","38.19","63.21","63.23"],"否则返回":["38.18","63.22"],"bat":["38.19","63.23"],"种":["39.1"],"hexnum1":["39.2"],"0xa":["39.2"],"16进制的10":["39.2"],"浮点类型则在数值汇总必须包含小数点":["39.2"],"还可通过科学计数法表示":["39.2"],"就相当于给变量赋予了":["39.3"],"值":["39.3"],"firstname":["39.4"],"lastname":["39.4","70.10"],"传一个":["39.5"],"会返回":["39.5"],"object":["39.5","39.8"],"的原因":["39.5"],"可以将其他类型的数据转化成布尔值":["39.6"],"规则如下":["39.6"],"数据类型":["39.6"],"转换为":["39.6"],"genericsymbol":["39.7"],"属性名可以是字符串或数值":["39.9"],"并且":["39.10"],"数组也是动态大小的":["39.10"],"会随着数据添加而自动增长":["39.10"],"sum":["39.11"],"date":["39.12","59.3"],"abc":["39.15"],"11px":["39.15"],"null":["39.16","62.4"],"都转换为":["39.16"],"基本数据类型存储在栈中":["39.17"],"赋值操作":["39.18"],"引用类型对应的值存储在堆中":["39.20"],"出错":["40.1"],"在函数内定义变量时省略":["40.1"],"操作符":["40.1"],"可以创建一个全局变量":["40.1"],"referenceerror":["40.2","40.6"],"没有定义":["40.2"],"不能重复声明":["40.2"],"var":["40.3","59.3","78.8","82.1"],"zhangsan":["40.4"],"但是":["40.5"],"的元素":["41.1"],"修改文档结构":["41.1"],"getelementbyid":["41.2"],"创建一个新的段落元素":["41.2"],"forward":["42.1"],"back":["42.2"],"它提供了操作浏览器窗口的方法和属性":["43.0"],"如打开":["43.0"],"关闭窗口":["43.0"],"调整窗口大小":["43.0"],"以及获取窗口的位置和尺寸等":["43.0"],"document":["43.0","56.1","94.2","97.1"],"它代表当前窗口或标签页中加载的文档":["43.0"],"它提供了对文档内容进行访问和操作的方法和属性":["43.0"],"对象提供了与当前窗口的":["44.0"],"的协议部分":["44.1"],"hostname":["44.1"],"href":["44.2"],"获取url的协议":["44.2"],"用于识别浏览器和操作系统":["45.1"],"useragent":["45.2"],"获取浏览器的名称":["45.2"],"屏幕的高度":["46.1"],"屏幕高度":["46.2"],"对象是":["47.0"],"打开一个新的浏览器窗口或标签页":["47.1"],"www":["47.2"],"example":["47.2","103.8"],"com":["47.2","101.1","101.2","103.8"],"的引用捆绑在一起":["48.1"],"或者说函数被引用包围":["48.1"],"keypress":["49.1","55.4"],"mousemove":["49.1"],"等事件在触发时":["49.1"],"若在":["49.2"],"使用定时器写法":["49.4"],"毫秒后第一次执行":["49.4"],"第二次事件停止触发后依然会再一次执行":["49.4"],"throttled2":["49.4"],"settimeout":["49.5"],"apply":["49.5"],"防抖如果需要立即执行":["49.5"],"isarray":["50.0"],"length":["50.0","72.7"],"unique":["51.5"],"res1":["52.1"],"stringify":["52.2"],"return":["52.3","69.8","70.10","72.7"],"rejected":["53.1","53.2"],"已失败":["53.1"],"当":["53.1"],"对象的状态从":["53.1"],"变为":["53.1"],"状态变为rejected":["53.2"],"保存失败的原因":["53.2"],"try":["53.2"],"执行executor函数":["53.2"],"catch":["53.2","65.3","65.4"],"error":["53.2","65.3","69.10","72.7","78.8"],"如果执行过程中出现错误":["53.2"],"直接reject":["53.2"],"then":["53.2","65.4"],"onfulfilled":["53.2"],"每个节点都是文档中的一个元素":["54.0"],"文本或其他类型的内容":["54.0"],"getelementsbyclassname":["54.1","58.1"],"根据类名获取元素节点集合":["54.1"],"getelementsbytagname":["54.1"],"appendchild":["54.2","93.7","94.2","97.1"],"将一个节点添加为另一个节点的子节点":["54.2"],"removeeventlistener":["54.3"],"删除或切换类":["54.4"],"提供了丰富的功能和方法":["54.4"],"事件处理是":["55.0"],"javascript":["55.0","57.0","60.2","61.3","61.4","79.1","93.1"],"其中":["55.1"],"是要监听的事件名称":["55.1"],"例如事件类型":["55.2"],"目标元素等":["55.2"],"stoppropagation":["55.3"],"方法来停止事件冒泡":["55.3"],"事件捕获":["55.3"],"等":["55.4"],"键盘事件":["55.4"],"keyup":["55.4"],"keydown":["55.4"],"parentelement":["55.5"],"addeventlistener":["55.5"],"eventname":["55.5"],"newelement":["56.1"],"设置元素的文本内容":["56.2"],"textcontent":["56.2"],"属性或":["56.2"],"innertext":["56.2"],"添加为":["56.3"],"的子元素":["56.3"],"将元素插入到已有元素之前":["56.3"],"是你要修改的":["57.1"],"样式属性的名称":["57.1"],"切换类名":["57.2"],"toggle":["57.2"],"elementid":["58.1"],"通过类名获取元素":["58.1"],"传入类名":["58.1"],"修改元素的":["58.2"],"getminutes":["59.1"],"获取分钟数":["59.1"],"getmonth":["59.1"],"获取月份":["59.1"],"一月":["59.1"],"mydate":["59.2","59.3"],"setfullyear":["59.4"],"用于处理各种不同类型的数据和操作":["60.0"],"简介":["60.0"],"string":["60.1","69.1","69.5","69.13","69.14","70.11","74.2","74.5","74.6"],"字符串对象":["60.1"],"number":["60.1","69.5","69.9","70.2","71.3","71.4","77.1"],"的基础对象":["60.2"],"它提供了一系列的方法来操作和处理数据集合":["60.3"],"如添加":["60.3"],"它提供了许多字符串相关的方法":["60.4"],"它提供了一系列数字相关的方法":["60.5"],"如四舍五入":["60.5"],"包括":["60.6"],"它提供了一系列的方法来操作日期和时间":["60.7"],"如获取当前时间":["60.7"],"它提供了一系列数学运算方法":["60.8"],"可以用于文本匹配":["60.9"],"math":["61.0","80.1"],"isfinite":["61.2"],"判断传递的参数是否为有限数字":["61.2"],"获取圆周率":["61.4"],"floor":["61.5"],"数字向下取整":["61.5"],"整数部分不变":["61.5"],"round":["61.5"],"四舍五入取整":["61.5"],"可以用来搜索":["62.1"],"替换和提取字符串中的特定部分":["62.1"],"匹配字符串的结尾":["62.2"],"匹配前面的元素零次或多次":["62.2"],"忽略大小写匹配":["62.3"],"m":["62.3","67.6","102.9","103.8"],"返回匹配结果的数组或":["62.4"],"包左不包右":["63.3"],"解释":["63.3","63.4"],"从字符串中截取指定的内容":["63.3","63.4","63.5"],"不会修改原字符串":["63.3","63.5"],"而是将截取到的内容返回":["63.3","63.5"],"slice":["63.4"],"warning":["63.5"],"title":["64.2"],"items":["64.2"],"promise":["65.1"],"npm":["65.2","78.4"],"普通错误处理":["65.4"],"代码异常处理":["65.4"],"在请求或响应被":["65.4"],"处理前拦截它们":["65.4"],"实现请求":["66.1"],"响应拦截器功能":["66.1"],"localstorage":["66.3"],"getitem":["66.3"],"请求头携带":["66.3"],"设置请求头":["66.3"],"case":["66.4"],"接口重定向了":["66.4"],"break":["66.4"],"参数不正确":["66.4"],"postaction":["66.6"],"sys":["66.6"],"在页面中调用":["66.6"],"总是会有所不一样":["66.7"],"十分钟封装一个好用的":["66.7"],"email":["67.1"],"将本地库所有变更添加到暂存区":["67.5"],"or":["67.6"],"filename":["67.7"],"比较暂存区和":["67.7"],"head":["67.7"],"的所有差异":["67.7"],"查看极简日志信息":["67.8"],"oneline":["67.8"],"查看最近":["67.8"],"branch":["67.11","67.12"],"d":["67.12","76.0","102.9"],"checkout":["67.13"],"分支合并到":["67.14"],"分支":["67.14"],"discard":["67.15"],"changes":["67.15"],"working":["67.15"],"directory":["67.15"],"而不新建":["67.16"],"reference":["67.16"],"为远程仓库起别名":["67.18"],"拉取远程分支":["67.20"],"并与本地分支合并":["67.20"],"表示将本地分支推送到与之存在追踪关系的远程分支":["67.21"],"通常两者同名":["67.21"],"如果该远程分支不存在":["67.21"],"则会被新建":["67.21"],"https":["68.1","101.1","101.2","103.8"],"在空白处点鼠标右键选择":["68.2"],"keygen":["68.4"],"t":["68.4"],"rsa":["68.4","68.5"],"pub文件":["68.5"],"就可以克隆ssh地址了":["68.6"],"num":["69.2"],"普通数字":["69.2"],"也可以通过函数返回布尔值":["69.3"],"可以在元素类型后面接上":["69.4"],"表示由此类型元素组成的一个数组":["69.4"],"ts":["69.4","69.14","70.11","71.4","73.3","74.1","76.0","78.11"],"ok":["69.5"],"增长枚举":["69.6"],"value":["69.7","72.5"],"test":["69.8"],"不能带有return":["69.8"],"也可以定义":["69.8"],"是所有类型的子类型":["69.9"],"就是说你可以把":["69.9"],"赋值给":["69.9"],"将不会有返回值":["69.10"],"但本身不会出错":["69.11"],"编译成功":["69.12"],"man":["69.13"],"sex":["69.13"],"方式二":["69.14"],"使用any临时断言":["69.14"],"somevalue":["69.14"],"作为对象的模板":["70.0"],"this":["70.1","70.6","70.8","70.10","72.6"],"distance":["70.2"],"private":["70.3"],"在类型":["70.8"],"上不存在":["70.8"],"get":["70.9"],"boolean":["70.9"],"personclass2":["70.9"],"set":["70.9"],"fullname":["70.10"],"是指不包含具体实现的方法":["70.11"],"constructor":["70.11"],"匿名函数":["71.1"],"箭头函数":["71.1"],"myadd":["71.1"],"y":["71.2","71.3","79.3","80.3","82.2","86.2"],"同样也可以有任意个":["71.4"],"编译器创建参数数组":["71.4"],"名字是你在省略号":["71.4"],"后面给定的名字":["71.4"],"你可以在函数体内使用这个数组":["71.4"],"fn1":["71.4"],"在实现上我们要注意严格判断两个参数的类型是否相等":["71.5"],"而不能简单的写一个":["71.5"],"typeof":["71.5"],"不预先指定具体的类型":["72.0"],"u":["72.5"],"key":["72.5"],"getvalue":["72.6"],"typescript":["73.1"],"的简称":["73.1"],"的基础上加入了类型系统":["73.2"],"让每个参数都有明确的意义":["73.2"],"从而带来了更加":["73.2"],"边解释边执行":["73.3"],"错误只有在运行的时候才能发现":["73.3"],"友好地在编辑器里提示错误":["73.5"],"如以前在":["73.6"],"global":["73.7"],"add":["73.7","93.7","101.1","103.8"],"查看版本":["73.7"],"tsc":["73.7"],"interfaces":["74.0"],"这样写是会报错的":["74.1"],"因为我们在person定义了name":["74.1"],"stirng":["74.3"],"带有可选属性的接口与普通的接口定义差不多":["74.4"],"在可选属性名字定义的后面加一个":["74.4"],"符号":["74.4"],"propname":["74.5"],"允许添加新的任意属性":["74.5"],"编译正确":["75.1"],"declaration":["76.0"],"生成相应的":["76.0"],"sourcemap":["76.0"],"map":["76.0"],"outfile":["76.0"],"将输出文件合并为一个文件":["76.0"],"outdir":["76.0"],"指定输出目录":["76.0"],"rootdir":["76.0"],"用来控制输出目录结构":["76.0"],"removecomments":["76.0"],"删除编译后的所有的注释":["76.0"],"noemit":["76.0"],"不生成输出文件":["76.0"],"importhelpers":["76.0"],"相当于":["77.1"],"定义函数别名":["77.2"],"eslint":["78.2"],"stylelint":["78.2"],"prettier":["78.2"],"来对我们的代码质量做检测和修复":["78.2"],"环境准备":["78.3"],"pnpm":["78.4"],"performant":["78.4"],"意味":["78.4"],"高性能的":["78.4"],"项目配置":["78.5"],"eslintrc":["78.6"],"cjs":["78.6"],"npx":["78.6"],"img":["78.6"],"配置文件":["78.6"],"module":["78.6"],"运行环境":["78.6"],"运行更漂亮的eslint":["78.7"],"使prettier规则优先级更高":["78.7"],"eslint优先级低":["78.7"],"关闭规则":["78.8"],"warn":["78.8"],"打开的规则作为警告":["78.8"],"不影响代码执行":["78.8"],"规则作为一个错误":["78.8"],"代码不能执行":["78.8"],"界面报错":["78.8"],"要求使用":["78.8"],"而不是":["78.8"],"multiple":["78.8"],"empty":["78.8"],"src":["78.9"],"styles":["78.9"],"目录下创建一个":["78.9"],"文件":["78.9","78.10"],"当然项目中需要用到清除默认样式":["78.9"],"因此在":["78.9"],"引入":["78.9"],"reset":["78.9"],"去创建我们需要":["78.10"],"数据与接口":["78.10"],"文件夹内部创建一个":["78.10"],"用户信息数据":["78.10"],"createuserlist":["78.10"],"userid":["78.10"],"avatar":["78.10"],"wpimg":["78.10"],"wallstcn":["78.10"],"f778738c":["78.10"],"e4f8":["78.10"],"b634":["78.10"],"56703b4acafe":["78.10"],"gif":["78.10"],"username":["78.10"],"admin":["78.10"],"elmessage":["78.11"],"element":["78.11"],"plus":["78.11"],"创建axios实例":["78.11"],"loginformdata":["78.12"],"loginresponsedata":["78.12"],"userinforeponsedata":["78.12"],"项目用户相关的请求地址":["78.12"],"enum":["78.12"],"中的一个元素":["79.1"],"允许使用":["79.1"],"x":["79.3","82.2","83.3","98.3","99.3","102.4"],"轴向右延伸":["79.3"],"但在大多数情况下":["79.4"],"使用":["79.4"],"的绘图上下文进行绘制是最基本和有效的方法":["79.4"],"文本":["79.5"],"图像":["79.5"],"矩形和其他形状等":["79.5"],"绘图元素可以通过":["79.5"],"陈述观点":["79.6"],"以及制作各种绚丽的视觉展示等":["79.6"],"您可以通过":["79.6"],"脚本使":["79.7"],"绘制出具有动态效果的图像和视觉艺术也显得非常合适":["79.7"],"html5":["79.8"],"中提供了许多优势":["79.8"],"但也存在一些限制":["79.8"],"图像旋转":["80.0"],"scale":["80.0"],"context":["80.1","80.2","85.6","87.2"],"pi":["80.1"],"表示放大十倍":["80.2"],"fillrect":["80.2","80.5","85.2","87.2"],"轴和":["80.3"],"轴移动的距离":["80.3"],"单位像素":["80.3"],"默认值1":["80.4"],"单位倍数":["80.4"],"水平倾斜":["80.4"],"默认值0":["80.4"],"单位弧度":["80.4"],"垂直倾斜":["80.4"],"源":["81.0"],"绘制在另一个物体":["81.0"],"目标":["81.0"],"只会显示目标图像之外源图像部分":["81.1"],"destination":["81.1"],"在源图像上方显示目标图像":["81.1"],"在源图像顶部显示目标图像":["81.1"],"源图像之外的目标图像部分不会被显示":["81.1"],"htmlcanvaselement":["82.1"],"找到画布":["82.1"],"moveto":["82.2"],"把路径移动到画布中的指定点":["82.2"],"不创建线条":["82.2"],"高度为线条宽度的一半":["83.1"],"linejoin":["83.1","90.3"],"指定线段交点的样式":["83.1"],"交点为扇形":["83.1"],"bevel":["83.1"],"交点为三角形底边":["83.1"],"miter":["83.1"],"从左到右的渐变等等":["83.2"],"该方法的返回值是一个":["83.2"],"canvasgradient":["83.2"],"该对象只有一个":["83.2"],"addcolorstop":["83.2"],"方向":["83.2"],"用来指定渐变点的颜色":["83.2"],"方法接受两个参数":["83.2"],"第一个参数是":["83.2"],"到":["83.2"],"之间的一个位置量":["83.2"],"表示起点":["83.2"],"表示终点":["83.2"],"第二个参数是一个字符串":["83.2","83.3"],"blob":["83.3"],"有四个可能的值":["83.3"],"分别是":["83.3"],"repeat":["83.3"],"双向重复":["83.3"],"水平重复":["83.3"],"shadowoffsetx":["83.4"],"阴影的水平位移":["83.4"],"文字":["85.0","85.6"],"路径":["85.2"],"stroke":["85.3"],"closepath":["85.3"],"嘴巴":["85.3"],"sy":["85.5"],"swidth":["85.5"],"sheight":["85.5"],"获取图片":["85.5"],"textbaseline":["85.6"],"文本的垂直位置":["85.6"],"alphabetic":["85.6"],"大小":["85.6"],"字体":["85.6"],"100px":["85.6"],"microsoft":["85.6"],"yahei":["85.6"],"填充渲染文字":["85.6"],"控制点2":["86.2"],"again":["87.1"],"获取画笔":["87.2"],"getcontext":["87.2"],"2d":["87.2"],"fillstyle":["87.2"],"ccc":["87.2"],"restore":["88.3"],"绘制分钟的刻度":["88.3"],"canvas":["88.4","89.2"],"ref":["89.2"],"queryselector":["90.3"],"连接初圆润":["90.3"],"细线条":["90.4"],"savebtn":["90.4"],"保存签名":["90.4"],"change":["90.4"],"on":["92.1"],"e":["92.1"],"0xff0000":["92.2"],"drawrect":["92.2"],"技术的快速":["93.1"],"轻量级的":["93.1"],"利用":["93.3"],"webgl":["93.3"],"pixijs":["93.4","93.6"],"提供了一系列强大的功能":["93.5"],"包括精灵":["93.5"],"view":["93.7","94.2"],"加载一个纹理":["93.7"],"loader":["93.7"],"image":["93.7","103.7"],"devicepixelratio":["94.2","95.1","97.1"],"像素比":["94.2","95.1","97.1"],"antialias":["94.2"],"抗锯齿":["94.2"],"将应用画布添加到dom中":["94.2","95.1","97.1"],"innerheight":["95.1"],"backgroundcolor":["95.1"],"0x1099bb":["95.1","97.1"],"resolution":["95.1","97.1"],"screen":["95.2","98.3"],"blur":["97.2"],"将模糊滤镜添加到精灵上":["97.2"],"sprite":["97.2"],"outlinefilter":["97.3"],"0xffff00":["97.3"],"texture":["98.2"],"pixi":["98.2"],"设置位置":["98.3"],"ticker":["98.4"],"beginfill":["99.1"],"0x66ccff":["99.1"],"0x660000":["99.2","99.5"],"参数一个数组":["99.2"],"数组中的每一个元素是一个点的坐标":["99.2"],"每两个元素是一个点的x坐标和y坐标":["99.2"],"绘制圆角矩形":["99.3"],"x坐标":["99.4"],"y坐标":["99.4"],"半径":["99.4"],"其实角度":["99.4"],"宽度":["99.5"],"颜色":["99.5"],"assets":["101.0","101.1"],"用于加载资源":["101.0"],"pic1":["101.1"],"pic":["101.1","101.2"],"rmb":["101.1","101.2"],"bdstatic":["101.1","101.2"],"05b0ea405c9e690ab51627853a13de56":["101.1","101.2"],"jpeg":["101.1","101.2"],"pic2":["101.1","101.2"],"img14":["101.1","101.2"],"360buyimg":["101.1","101.2"],"jfs":["101.2"],"t1":["101.2"],"5c1b0581e1fa6c1c3":["101.2"],"58519cee2a0039e0":["101.2"],"jpg":["101.2"],"是一个基于文本的开放网络标准":["102.1"],"用来定义用于网络的矢量图形":["102.1"],"是看不出效果的":["102.3"],"cx":["102.5","102.6"],"cy":["102.5"],"ellipse":["102.6"],"points":["102.7"],"skyblue":["102.9"],"lemon":["103.0"],"安装":["103.3"],"vitepress":["103.3"],"package":["103.3","103.5"],"添加":["103.3"],"中可以开始我们的配置":["103.5"],"先写上如下内容":["103.5"],"这是网站的标题和描述":["103.5"],"标题会在浏览器标签上展示":["103.5"],"other":["103.6"],"关于侧边栏":["103.6"],"collapsible":["103.6"],"lastupdated":["103.7"],"hero":["103.7"],"组件库名称":["103.7"],"组件库文本":["103.7"],"tagline":["103.7"],"组件库副标题描述":["103.7"],"cname":["103.8"],"git":["103.8"],"commit":["103.8"],"如果发布到":["103.8"]},{"0":["14.18","15.2","16.12","25.31","33.8","39.2","51.3","51.4","51.6","59.3","59.4","72.6","80.3","99.1","99.2"],"1":["13.3","16.5","16.14","32.17","32.20","39.2","51.2","69.3","69.4","80.5"],"2":["13.6","17.1","20.10","32.19","32.20","33.9","33.10","34.3","34.7","34.8","63.3","66.1","67.1","67.15","67.19","98.3"],"3":["15.3","28.4","32.19","32.20","32.28","33.9","33.10","34.3","36.7","36.9","43.0","52.0","67.14","67.21"],"4":["15.14","32.15","32.19","32.23","32.28","32.29","32.30","52.0","67.7","78.7","94.2"],"5":["28.3","32.2","32.23","32.24","32.28","32.29","32.30","61.5","63.3","67.8"],"8":["13.3"],"10":["32.24","37.5","83.1"],"14":["59.4"],"15":["32.24"],"16":["37.2"],"20":["39.18","71.3","85.3","102.9"],"23":["38.15","63.19"],"29":["15.5","32.21"],"30":["36.13","36.17","36.20"],"34":["37.13","38.15","63.19"],"35":["101.1"],"40":["102.7"],"42":["69.7"],"50":["85.6","102.3"],"70":["80.1","102.7"],"80":["102.7"],"95":["102.5"],"100":["80.2","85.6","86.1","99.2","102.6","102.8"],"120":["102.8"],"123":["25.4","69.1","74.7"],"127":["15.2"],"150":["92.2"],"180":["80.1"],"200":["83.2","85.6","102.4"],"250":["85.3"],"255":["13.8"],"300":["102.9"],"403":["66.4"],"404":["66.4"],"420":["20.11"],"849":["61.5"],"1970":["59.1"],"2224":["101.1"],"5000":["78.11"],"12087":["101.1"],"23739":["101.1"],"46539":["61.5"],"111111":["78.10"],"11111111":["13.8"],"img":["0.0","85.5"],"htm":["5.0"],"try":["5.0"],"files":["5.0","13.3","13.6"],"uri":["5.0"],"cmd":["5.1"],"nginx":["5.1"],"t":["5.1"],"快速":["11.0"],"男":["11.2"],"请求成功":["11.2"],"bruce":["11.3","14.12"],"可直接访问":["11.3"],"post":["11.4","15.11","31.7","66.3"],"add":["11.4","67.18"],"参数把流转关系交给下一个中间件或路由":["11.5"],"中间件注意事项":["11.5"],"log":["11.6","13.7","13.12","32.26","34.8","35.1","36.21","38.8","38.9","39.3","39.7","39.14","39.18","63.12","63.13","71.4","72.6","74.7","92.1","101.2"],"调用了第1个全局中间件":["11.6"],"定义第二个全局中间件":["11.6"],"get":["11.7"],"hello":["11.7","13.6","35.1","36.8"],"send":["11.7","11.8","31.7"],"throw":["11.8"],"new":["11.8","85.5","88.3","95.2"],"error":["11.8","69.5","70.8"],"服务器内部发生了错误":["11.8"],"home":["11.8","78.10"],"page":["11.8"],"定义错误级别的中间件":["11.8"],"捕获整个项目的异常错误":["11.8"],"从而防止程序的崩溃":["11.8"],"导入中间件":["11.10"],"const":["11.10","25.4","25.31","36.10","36.18","51.1","53.1","66.2","69.13","70.10","72.5"],"相关的":["11.11"],"响应头":["11.11"],"就可解除浏览器端的跨域访问限制":["11.11"],"值仅限于":["11.12"],"text":["11.12","38.18","56.2","63.22","85.6"],"plain":["11.12"],"multipart":["11.12"],"form":["11.12"],"application":["11.12","11.15","98.1"],"x":["11.12","28.4","85.6","90.3"],"www":["11.12"],"urlencoded":["11.12"],"三者之一":["11.12"],"如果客户端向服务器发送了额外的请求头信息":["11.12"],"则需要在服务器端":["11.12"],"通过":["11.12"],"dpr":["11.14"],"downlink":["11.14"],"save":["11.14"],"data":["11.14","25.16"],"json":["11.15","15.12"],"格式的数据":["11.15"],"chrome":["12.1"],"v8":["12.1"],"引擎":["12.1"],"的":["12.1","27.17","37.9"],"则完全没有采用这种模型":["12.2"],"它本质上就是一个单线程":["12.2"],"但一个线程如何服务于大量的请求":["12.2"],"如何处理高并发的呢":["12.2"],"程序运行不稳定":["12.3"],"读写文件":["13.1"],"rs":["13.1"],"同步模式下打开文件用于读取":["13.1"],"同步模式下打开文件用于读写":["13.1"],"w":["13.1"],"txt":["13.3","13.6"],"utf":["13.3","35.3"],"function":["13.3","13.6","13.7","25.31","34.11","55.5","65.4","87.2","90.3","93.7"],"if":["13.3","13.17","55.5","82.1"],"可读流关闭了":["13.4"],"数据读取完毕":["13.4"],"关闭可写流":["13.4"],"end":["13.4"],"nodejs":["13.6","14.21"],"open":["13.7","31.2"],"console":["13.7","13.12","32.26","34.8","36.21","38.8","38.9","39.3","39.5","39.7","39.18","63.12","63.13","66.6","69.11","71.4","72.6","78.8","101.2"],"流打开了":["13.7"],"00000000":["13.8"],"每一个元素占用一个字节内存":["13.8"],"是对底层内存的直接操作":["13.8"],"动态拼接出被操作文件的完整路径":["13.9"],"解决方案":["13.9"],"mkdirsync":["13.10"],"删除目录":["13.10"],"rmdir":["13.10"],"rmdirsync":["13.10"],"重命名文件和目录":["13.10"],"rename":["13.10"],"oldpath":["13.10"],"newpath":["13.10"],"js":["13.11","13.15","14.11","14.22","37.5","39.5","39.10","53.1","59.2","65.4","80.3","83.4"],"b":["13.12","13.14","37.5"],"c":["13.12","13.14","33.9","35.0","36.7","68.4"],"d":["13.12"],"e":["13.12"],"require":["13.13","14.12","14.13"],"定义文件的存放路径":["13.13"],"fpath":["13.13"],"a":["13.14","14.22","16.8","67.6","69.14","70.9","74.5","74.6"],"str":["13.16"],"your":["13.16","20.0"],"is":["13.16","27.15","69.14"],"and":["13.16"],"index":["13.17","73.7","78.12"],"html":["13.17","27.10"],"首页":["13.17"],"about":["13.17"],"关于页面":["13.17"],"模块化可提高代码的复用性和可维护性":["14.2"],"实现按需加载":["14.2"],"更好的分离":["14.3"],"自定义模块":["14.5"],"方法等成员":["14.6"],"供外界使用":["14.7"],"导入自定义模块时":["14.7","14.21"],"得到的就是":["14.7"],"变量是一个对象":["14.8"],"不会导致模块的代码被执行多次":["14.9"],"node":["14.11","78.3"],"会按顺序尝试加载文件":["14.11"],"users":["14.12"],"project":["14.12"],"foo":["14.12","25.29"],"文件里调用了":["14.12"],"加载的入口":["14.13"],"如果没有":["14.13"],"中的包都是免费且开源的":["14.15"],"由于":["14.15"],"i":["14.16","51.3","51.4","51.6"],"包的名称":["14.18"],"version":["14.18"],"不论是内置模块":["14.19"],"如果省略了文件的扩展名":["14.21"],"里调用":["14.22"],"tools":["14.22"],"如果目录里没有":["14.23"],"文件":["14.23"],"或者":["14.23"],"createpool":["15.2"],"host":["15.2"],"set":["15.3"],"更新数据":["15.3"],"update":["15.3"],"h1":["15.5","26.9"],"username":["15.5","15.14","103.8"],"用户体验好":["15.6"],"页面局部刷新":["15.6"],"无需重新请求页面":["15.6"],"减轻服务器的渲染压力":["15.6"],"可考虑服务端渲染":["15.7"],"后台管理项目":["15.7"],"api":["15.11","25.1","26.6","66.1","78.11","79.4","79.5","79.7"],"login":["15.11"],"res":["15.11","66.6","72.6"],"user":["15.11"],"body":["15.11","95.1"],"islogin":["15.11"],"保存在客户端浏览器中":["15.13"],"服务器通过还原":["15.13"],"字符串的形式来认证用户的身份":["15.13"],"组成部分":["15.13"],"header":["15.13"],"payload":["15.13"],"signature":["15.13"],"参数":["15.14"],"用户信息对象":["15.14"],"加密密钥":["15.14"],"配置对象":["15.14"],"token有效期":["15.14"],"尽量不保存敏感信息":["15.14"],"因此只有用户名":["15.14"],"没有密码":["15.14"],"token":["15.14","78.10"],"userinfo":["15.14","78.12"],"expiresin":["15.14"],"10h":["15.14"],"字符串还原为":["15.14"],"客户端访问有权限的接口时":["15.14"],"需通过请求头的":["15.14"],"padding":["16.1"],"不能涉及差异化样式":["16.2"],"color":["16.3","90.4"],"css":["16.4","83.2","102.1"],"orange":["16.5"],"tip":["16.5","33.1","33.3","63.3","63.5"],"注意":["16.5","63.3","63.5","69.3"],"选择器3":["16.6"],"选择器":["16.6","17.0"],"li":["16.7"],"good":["16.9"],"hover":["16.11"],"光标经过链接的样式":["16.11"],"的第":["16.12"],"个":["16.12"],"可以是数字":["16.12"],"关键字":["16.12","70.0"],"even":["16.12"],"odd":["16.12"],"公式":["16.12"],"从":["16.12","76.0"],"开始":["16.12"],"size":["16.14","57.1"],"伪元素清除浮动":["16.14"],"额外标签法":["16.14"],"隔墙法":["16.14"],"在浮动元素后面添加一个块级标签":["16.14"],"如div":["16.14"],"并设置":["16.14"],"clear":["16.14"],"both":["16.14"],"div":["16.14","26.4","87.1"],"id":["17.0"],"比较规则":["17.1"],"按照":["17.1"],"从左到右":["17.1"],"的顺序":["17.1"],"依次比较大小":["17.1"],"当前位胜出后":["17.1"],"后面的不再对比":["17.1"],"例如":["17.1","79.8"],"track":["19.0"],"没有滑块":["19.0"],"mpeg":["20.0","20.2"],"browser":["20.0","78.6"],"does":["20.0"],"not":["20.0"],"support":["20.0"],"the":["20.0"],"定义了声音内容":["20.5"],"source":["20.5","20.6","20.11"],"定义一个视频":["20.6"],"用户控制界面":["20.7"],"poster":["20.7"],"视频封面":["20.7"],"autoplay":["20.7"],"播放":["20.8"],"src":["20.10","20.11","35.4","85.5","103.7"],"resource":["20.10"],"mp4":["20.10","20.11"],"play":["20.10"],"播放暂停触发":["20.10"],"mov":["20.11"],"bbb":["20.11"],"type":["20.11","66.3","90.4"],"然后自动填充以前保存的密码":["22.1"],"这里推荐一种特别简单的方法解决这个问题":["22.1"],"在":["22.1","31.5"],"属性":["22.1","56.2"],"组件只需引入不用注册":["25.0"],"属性和方法也不用":["25.0"],"return":["25.0","39.11","51.5","70.1","71.2","71.4","71.5","72.2","72.3","72.4"],"的统一入口":["25.1"],"简单来说":["25.1"],"就是所有的":["25.1"],"count1":["25.2"],"count2":["25.2"],"val":["25.2"],"notref":["25.4"],"number":["25.4","39.1","69.4","69.14","70.11"],"click":["25.5","25.7","25.10","25.13","25.14"],"changemsg":["25.5"],"change":["25.5","25.7"],"name":["25.6","25.17","25.20","36.3","36.5","36.19","70.9","90.4"],"string":["25.6","69.9","69.10","70.7","70.9"],"let":["25.6","25.8","25.19","26.2","33.2","33.9","33.10","37.5","38.12","38.18","39.5","39.9","39.10","51.6","63.16","63.22","69.8","72.6","85.5"],"message":["25.6","25.18","25.19","25.20","27.10","39.3","69.10"],"button":["25.7","25.10","25.13","26.8"],"修改":["25.7"],"vue":["25.8","25.12","25.31","26.7","26.8","28.2","28.7","78.7"],"或是一个":["25.9"],"数据是会变的":["25.12"],"但不会更新视图":["25.12"],"它可以接收一个函数或对象作为参数":["25.15"],"会返回一个只读的":["25.15"],"参数一":["25.16"],"监听的数据":["25.16"],"nav":["25.17","25.19"],"bar":["25.17"],"message2":["25.18"],"并在其依赖变更时重新运行该函数":["25.21"],"也是一个函数":["25.22"],"函数或生命周期钩子被调用时":["25.23"],"pre":["25.24","52.3"],"组件更新前执行":["25.24"],"在我们使用":["25.25"],"vue3":["25.25","26.5"],"beforeupdate":["25.27"],"元素被更新之前调用":["25.27"],"dir":["25.28"],"directivebinding":["25.28"],"value":["25.28","36.14","70.10"],"style":["25.28","28.4","87.1"],"background":["25.28"],"无论值是否有更改都可用":["25.29"],"arg":["25.29"],"传递给指令的参数":["25.29"],"如果有的话":["25.29"],"例如在":["25.29"],"box":["25.30"],"onmounted":["25.31"],"onunmounted":["25.31"],"ref":["25.31","88.4","90.4"],"from":["25.31","98.2"],"usewindowresize":["25.31"],"width":["25.31","89.2","98.1"],"子父组件":["26.1"],"甚至兄弟组件通信":["26.1"],"自定义事件":["26.1"],"可以实现子父组件通信":["26.1"],"全局事件总线":["26.1"],"方式":["26.2"],"事件":["26.3"],"另外一种自定义事件":["26.3"],"原生":["26.3","28.5"],"当然点击事件想注入多个参数可以按照下图操作":["26.4"],"但是切记注入的事件对象务必叫做":["26.4"],"script":["26.5"],"标签内部":["26.5"],"使用了":["26.5"],"defineemits":["26.5"],"方法":["26.5"],"此方法是":["26.5"],"提供的方法":["26.5"],"不需要引入直接使用":["26.5"],"也就没有":["26.6"],"prototype":["26.6"],"以及组合式":["26.6"],"实现父子组件数据同步":["26.7"],"msg":["26.7"],"在父组件内部使用一个子组件":["26.8"],"my":["26.8"],"ref与":["26.9"],"son":["26.9"],"可以实现隔辈组件传递参数":["26.10"],"组件组件提供数据":["26.10"],"top":["26.11"],"可以用":["26.12"],"a替换":["26.12"],"填入组件a部分的结构":["26.12"],"mycomponent":["27.2"],"tree":["27.5"],"shaking":["27.5"],"title":["27.6","103.5"],"我是标题":["27.6"],"父组件使用插槽":["27.8"],"在父组件给这个插槽填充内容":["27.8"],"p":["27.9","69.13"],"父组件":["27.9"],"child":["27.9","27.11","70.11"],"v":["27.9","67.11","73.7"],"span":["27.10"],"template":["27.12"],"children":["27.12"],"组件有两个插槽":["27.13"],"它们都只接收一个直接子节点":["27.13"],"default":["27.13","33.3"],"插槽里的节点会尽可能展示出来":["27.13"],"如果不能":["27.13"],"则展示":["27.13"],"fallback":["27.13"],"完全不受父级style样式影响":["27.14"],"使用":["27.14","101.0"],"通过to":["27.14"],"属性插入到指定元素位置":["27.14"],"如":["27.14"],"view":["27.15","95.1","97.1"],"多个条件判断的子组件":["27.15"],"子组件":["27.16"],"开发者可以自定义":["27.17"],"model修饰符":["27.17"],"bind":["27.17"],"sync":["27.17"],"修饰符和组件的":["27.17"],"with":["28.4"],"preview":["28.4"],"use":["28.4","65.4"],"class":["28.4","70.0","70.9"],"component":["28.4"],"syntax":["28.4"],"直接回车":["28.4"],"和":["28.5","37.6","60.6","69.8"],"这两种使用vite创建vue3项目的步骤一样":["28.6"],"运行命令":["28.6"],"输入项目名称":["28.6"],"正式版在今年9月份发布":["29.1"],"2年多开发":["29.1"],"更新渲染快133":["29.2"],"watch":["29.3"],"新的生命周期函数":["29.3"],"是一种创建交互式网页应用的网页开发技术":["31.1"],"可以在不重新加载整个网页的情况下":["31.1"],"对象的":["31.2"],"方法与服务端建立连接":["31.2"],"构造函数用于初始化一个":["31.3"],"password":["31.4","78.10"],"参数说明":["31.4"],"表示当前的请求方式":["31.4"],"请求中要发送的数据体":["31.5"],"响应体下载中":["31.6"],"responsetext":["31.6"],"已经获取部分数据":["31.6"],"done":["31.6"],"请求完成":["31.6"],"整个请求过程已完毕":["31.6"],"只要":["31.6"],"属性值一变化":["31.6"],"就会触发一次":["31.6"],"readystatechange":["31.6"],"true":["31.7","36.16","38.13","55.3","63.17","69.7","78.6","87.2","90.3"],"null":["31.7","69.8","76.0","83.3"],"else":["31.7","50.0","65.5","71.5"],"如果有多个数据可以用数组保存起来":["32.0"],"var":["32.1","83.2"],"arr":["32.1","52.1"],"改":["32.5","38.1"],"unshift":["32.6"],"创建一个数组":["32.7","32.8"],"count":["32.7"],"removed":["32.9","32.14","32.17"],"yellow":["32.10","84.0"],"black":["32.10"],"shift":["32.11","35.7"],"green":["32.12","32.13"],"item":["32.12","32.13"],"colors3":["32.15"],"includes":["32.18"],"nicholas":["32.21"],"sort":["32.22"],"blue":["32.26"],"some":["32.27"],"mapresult":["32.32"],"可以省略":["33.1"],"false":["33.1","37.11","51.0","87.2","90.3","103.6"],"哈哈哈":["33.1"],"为止":["33.2"],"如果所有的条件表达式都是":["33.2"],"则执行":["33.2"],"从键盘输入小明的期末成绩":["33.2"],"score":["33.2"],"prompt":["33.2"],"请输入小明的期末成绩":["33.2"],"检查score是否合法":["33.2"],"执行的流程":["33.3"],"do":["33.4"],"执行流程":["33.5"],"语句在执行时":["33.5","33.6"],"执行顺序":["33.6"],"element":["33.10"],"内层循环":["33.11"],"虽然":["34.0"],"for":["34.0"],"函数名":["34.2"],"函数体代码":["34.2"],"全部小写":["34.3"],"函数是做某件事情":["34.3"],"函数名一般是动词":["34.3"],"形参2":["34.6"],"在声明函数的小括号里面是":["34.6"],"形式上的参数":["34.6"],"实参1":["34.6"],"如果实参的个数多于形参的个数":["34.7"],"会取到形参的个数":["34.7"],"后面的代码不会被执行":["34.8"],"alert":["34.8"],"我是不会被执行的哦":["34.8"],"fn":["34.8"],"跳出本次循环":["34.9"],"无法直接使用":["34.10"],"xxxx":["34.12","68.4"],"的语法类似于":["35.0"],"语言":["35.0"],"代码":["35.2"],"head":["35.3","67.15"],"meta":["35.3","78.11"],"charset":["35.3"],"标签的":["35.4"],"ctrl":["35.6"],"javascript":["36.1","37.1","54.4","62.1"],"中":["36.1","62.1"],"对象是一组无序的相关属性和方法的集合":["36.1"],"张三":["36.3"],"调用对象的属性":["36.4"],"我们采取":["36.4"],"对象名":["36.4"],"属性名":["36.4"],"我们理解为":["36.4"],"sex":["36.5"],"prop":["36.6"],"返回指定对象上一个自有属性对应的属性描述符":["36.6"],"getownpropertynames":["36.6"],"返回一个给定对象自身的所有属性的名称数组":["36.6"],"getownpropertysymbols":["36.6"],"obj3":["36.7"],"jane":["36.11"],"修改无效":["36.11"],"age":["36.13","36.17","36.20","40.3","70.11","74.1","74.2"],"newobj":["36.15"],"删除属性无效":["36.19"],"幂运算":["37.2"],"模运算":["37.2"],"取余数":["37.2"],"等价于":["37.3"],"减等于":["37.3"],"新值":["37.5"],"的值不同":["37.6"],"是新值":["37.6"],"大于等于号":["37.7"],"如果找到":["37.9","37.10"],"则直接返回":["37.9","37.10"],"或运算是找":["37.10"],"条件运算符在执行时":["37.12"],"会先对条件表达式进行求值判断":["37.12"],"圆括号":["37.13"],"可以用来提高运算的优先级":["37.13"],"因为它的优先级是最高的":["37.13"],"除了常用":["38.2","63.6"],"world":["38.3","38.6","63.7","63.10"],"trimleft":["38.5","63.9"],"trimmedstringvalue":["38.6","63.10"],"stringvalue":["38.7","38.12","63.11","63.16"],"na":["38.7","63.11"],"indexof":["38.10","63.14"],"abcde":["38.11","63.15"],"match":["38.16","62.4","63.20"],"bat":["38.17","63.21"],"sat":["38.17","38.19","63.21","63.23"],"fat":["38.17","38.19","63.21","63.23"],"cat":["38.18","63.22"],"floatnum1":["39.2"],"floatnum2":["39.2"],"jacob":["39.4"],"car":["39.5"],"的值":["39.6"],"othergenericsymbol":["39.7"],"我们这里主要讲述下面三种":["39.8"],"person":["39.9","74.5"],"num2":["39.11"],"函数表达式":["39.11"],"regexp":["39.12"],"typeof":["39.14"],"对象":["39.16"],"对象会转换为":["39.16"],"所有表示空性的没有的错误的值都会转换为":["39.16"],"引用类型的对象存储于堆中":["39.17"],"在栈中存放的是指向堆内存的地址":["39.20"],"不同的类型数据导致赋值变量时的不同":["39.20"],"全局变量":["40.1"],"在严格模式下":["40.1"],"如果像这样给未声明的变量赋值":["40.1"],"则会导致抛出referenceerror":["40.1"],"定义多个变量":["40.1"],"syntaxerror":["40.2"],"标识符age":["40.2"],"已经声明过了":["40.2"],"块作用域没有重复声明则使用相同标识符则不会报错":["40.2"],"zhangsan":["40.3"],"是块级作用域":["40.5"],"所以检查不到之前是否声明过":["40.5"],"没有定义":["40.6"],"常见的异步循环问题":["40.6"],"settimeout":["40.6","49.4"],"typeerror":["40.7"],"给常量赋值":["40.7"],"也不允许重复声明":["40.7"],"与":["40.8","76.0"],"都存在变量提升":["40.8"],"但":["40.8"],"对象代表当前窗口或标签页中加载的文档":["41.0"],"createelement":["41.1"],"tagname":["41.1","56.1"],"并将其添加到文档中":["41.2"],"newparagraph":["41.2"],"对象提供了对浏览器历史记录的操作":["42.0"],"导航到下一个页面":["42.1","42.2"],"如获取或修改元素":["43.0"],"创建新的元素或节点":["43.0"],"修改文档结构等":["43.0"],"location":["43.0"],"它提供了与当前窗口的":["43.0"],"url":["43.0"],"相关的信息和操作":["43.0","44.0"],"它包含了":["43.0"],"的主机名部分":["44.1"],"pathname":["44.1"],"protocol":["44.2"],"对象提供了关于浏览器的信息":["45.0"],"appname":["45.1","45.2"],"浏览器的名称":["45.1"],"对象提供了关于用户屏幕的信息":["46.0"],"availwidth":["46.1"],"屏幕的可用宽度":["46.1"],"获取屏幕的可用宽度":["46.2"],"关闭当前窗口":["47.1","47.2"],"resizeto":["47.1"],"blank":["47.2"],"这样的组合就是闭包":["48.1"],"closure":["48.1"],"会不断地调用绑定在事件上的回调函数":["49.1"],"极大地浪费资源":["49.1"],"秒内重复触发":["49.2"],"只有一次生效":["49.2"],"timer":["49.4"],"this":["49.4","69.14"],"可加入第三个参数用于判断":["49.5"],"实现如下":["49.5"],"immediate":["49.5"],"如果是对象":["50.0"],"遍历每个属性进行深拷贝":["50.0"],"newarr":["51.1"],"j":["51.2"],"replace":["52.2"],"g":["52.2"],"split":["52.2","70.10"],"cur":["52.3"],"length":["52.4"],"时":["53.1"],"会调用相应的回调函数":["53.1"],"以下是一个简单的":["53.1"],"示例":["53.1"],"onrejected":["53.2"],"如果状态为fulfilled":["53.2"],"执行onfulfilled函数":["53.2"],"如果状态为rejected":["53.2"],"执行onrejected函数":["53.2"],"使用示例":["53.2"],"浏览器将":["54.0"],"文档解析为":["54.0"],"树":["54.0"],"根据标签名获取元素节点集合":["54.1"],"queryselector":["54.1"],"removechild":["54.2"],"移除事件监听器":["54.3"],"使开发者能够通过":["54.4"],"与网页进行交互和动态操作":["54.4"],"中常用的一项功能":["55.0"],"mouseover":["55.1"],"keyup":["55.1"],"等":["55.1","57.1"],"你可以在事件处理程序中使用这些信息来执行逻辑操作":["55.2"],"可以通过将第三个参数设置为":["55.3"],"表单事件":["55.4"],"submit":["55.4"],"input":["55.4"],"event":["55.5","90.3"],"insertbefore":["56.3"],"可以使用":["57.0"],"font":["57.1"],"而":["57.1","69.9"],"如果元素已经具有指定的类名":["57.2"],"则移除它":["57.2"],"如果元素没有指定的类名":["57.2"],"elements":["58.1"],"classname":["58.1"],"内容":["58.2"],"innerhtml":["58.2"],"十二月":["59.1"],"getseconds":["59.1"],"获取秒数":["59.1"],"gettime":["59.1"],"获取日期的时间戳":["59.1"],"返回值为从":["59.1"],"年":["59.1"],"月":["59.1"],"有四种方式初始化日期":["59.2"],"setfullyear":["59.3"],"的内置对象为开发者提供了丰富的功能和方法":["60.0"],"能够简化开发过程并处理各种数据和操作":["60.0"],"数值对象":["60.1"],"boolean":["60.1"],"布尔对象":["60.1"],"其他对象都继承自它":["60.2"],"删除":["60.3"],"如拼接":["60.4"],"转换为字符串":["60.5"],"设置时间":["60.7"],"如求绝对值":["60.8"],"分割":["60.9"],"替换等复杂的文本处理任务":["60.9"],"除了上述常用的内置对象外":["60.9"],"isinteger":["61.2"],"判断传递的参数是否为整数":["61.2"],"isnan":["61.2"],"判断传递的参数是否为":["61.2"],"中内置的对象":["61.3"],"圆周率":["61.4"],"取整":["61.5"],"四舍五入原则":["61.5"],"max":["61.5","78.8"],"在一组数中找出最大的":["61.5"],"匹配前面的元素一次或多次":["62.2"],"多行匹配":["62.3"],"除了上述元字符和模式修饰符":["62.3"],"在字符串中查找正则表达式匹配":["62.4"],"类似":["63.4","76.0"],"是类似的":["63.4"],"这个方法的第二个参数截取的长度":["63.5"],"不是结束索引":["63.5"],"in":["64.2"],"http":["65.1"],"install":["65.2"],"params":["65.3"],"添加请求拦截器":["65.4"],"axios":["65.4"],"interceptors":["65.4","78.11"],"request":["65.4"],"status":["65.5"],"headers":["65.5"],"集中式管理":["66.1"],"apibaseurl":["66.2"],"service":["66.2"],"content":["66.3"],"如果没有设置请求头":["66.3"],"method":["66.3"],"您未登录":["66.4"],"或者登录已经超时":["66.4"],"请先登录":["66.4"],"您没有权限操作":["66.4"],"请求地址出错":["66.4"],"postaction":["66.5"],"xxx":["66.6"],"引入上面login方法所在的文件":["66.6"],"then":["66.6","101.1"],"配置局部账户":["67.1"],"只对当前":["67.1"],"日志信息":["67.6"],"提交当前目录及其子目录的变更":["67.6"],"cached":["67.7"],"比较指定文件暂存区和":["67.7"],"的差异":["67.7"],"n":["67.8","69.8","77.1"],"次的版本信息":["67.8"],"已有分支":["67.10"],"基于某个":["67.10"],"commit":["67.10","78.2"],"分支":["67.12"],"分支名":["67.13"],"把当前分":["67.14"],"基于":["67.14"],"暂存区指定文件恢复成和":["67.15"],"一样":["67.15"],"reset":["67.15"],"bash":["67.16","67.20"],"git":["67.16","68.1","68.2"],"别名":["67.18"],"地址":["67.18","67.19"],"origin":["67.21"],"master":["67.21","103.8"],"如果省略本地分支名":["67.21"],"copy内容到git":["68.5"],"infinitynumber":["69.2"],"infinity":["69.2"],"无穷大":["69.2"],"warning":["69.3"],"list":["69.4"],"ok":["69.7"],"类型":["69.8"],"类型的变量":["69.9"],"void":["69.9","70.9","70.11"],"类型不可以分给其他类型":["69.9"],"这样写会报错":["69.9"],"void类型不可以分给其他类型":["69.9"],"abc":["69.12","70.7"],"报错":["69.12"],"函数中使用联合类型":["69.12"],"any":["69.14","71.4","94.2","95.1","97.1"],"strlength1":["69.14"],"一般方法":["70.1"],"say":["70.1","70.6","70.8"],"我叫":["70.1"],"m":["70.2"],"protected":["70.3"],"修饰符":["70.4","70.5"],"man":["70.6"],"extends":["70.6","70.11","74.3","78.6"],"super":["70.6"],"constructor":["70.7"],"你的意思是改为访问静态成员":["70.8"],"吗":["70.8"],"asd":["70.9"],"names":["70.10"],"setage":["70.11"],"返回值":["71.0"],"为上面那个函数添加类型":["71.1"],"ts":["71.1","74.4","78.9"],"items":["71.4"],"而在使用的时候再指定具体类型的一种特性":["72.0"],"array":["72.3"],"person1":["72.5"],"上不存在属性":["72.7"],"我们可以使用泛型约束来实现":["72.7"],"是一种由微软开发的自由和开源的编程语言":["73.1"],"智能":["73.2"],"的提示":["73.2"],"相对于js而言":["73.2"],"先编译再执行":["73.3"],"在写的时候就会发现错误了":["73.3"],"编译阶段就能检查类型发现大部分错误":["73.5"],"项目里使用":["73.6"],"编译":["73.7"],"tsc":["73.9"],"npm":["73.10"],"来定义对象的类型":["74.0"],"接口是对象的状态":["74.0"],"但是对象里面缺少age属性":["74.1"],"使用接口约束的时候不能多一个属性也不能少一个属性":["74.1"],"interface":["74.4","74.5"],"propname":["74.6"],"数组":["75.0"],"大":["75.1"],"代表所有拥有":["75.1"],"tostring":["75.1"],"hasownproperty":["75.1"],"方法的类型":["75.1"],"所以所有原始类型":["75.1"],"非原始类型都可以赋给":["75.1"],"tslib":["76.0"],"导入辅助工具函数":["76.0"],"isolatedmodules":["76.0"],"将每个文件做为单独的模块":["76.0"],"transpilemodule":["76.0"],"严格的类型检查选项":["76.0"],"strict":["76.0"],"启用所有严格类型检查选项":["76.0"],"noimplicitany":["76.0"],"在表达式和声明上有隐含的":["76.0"],"any类型时报错":["76.0"],"strictnullchecks":["76.0"],"启用严格的":["76.0"],"检查":["76.0"],"noimplicitthis":["76.0"],"我是一个字符串":["77.2"],"定义联合类型别名":["77.2"],"husky":["78.2"],"来做":["78.2"],"拦截":["78.2"],"由":["78.4"],"yarn":["78.4"],"衍生而来":["78.4"],"解决了":["78.4"],"env":["78.6","78.11"],"浏览器端":["78.6"],"es2021":["78.6"],"规则继承":["78.6"],"全部规则默认是关闭的":["78.6"],"这个配置项开启推荐规则":["78.6"],"推荐规则参照文档":["78.6"],"比如":["78.6"],"函数不能重名":["78.6"],"js的eslint插件":["78.7"],"查找vue语法错误":["78.7"],"发现错误指令":["78.7"],"lines":["78.8"],"不允许多个空行":["78.8"],"process":["78.8"],"production":["78.8"],"debugger":["78.8"],"unexpected":["78.8"],"multiline":["78.8"],"禁止空余的多行":["78.8"],"useless":["78.8"],"escape":["78.8"],"禁止不必要的转义字符":["78.8"],"import":["78.9"],"在入口文件引入":["78.9"],"但是你会发现在":["78.9"],"desc":["78.10"],"平台管理员":["78.10"],"roles":["78.10"],"buttons":["78.10"],"cuser":["78.10"],"detail":["78.10"],"routes":["78.10"],"create":["78.11"],"baseurl":["78.11"],"vite":["78.11"],"app":["78.11","98.4","100.2"],"base":["78.11","103.5"],"timeout":["78.11"],"请求拦截器":["78.11"],"admin":["78.12","103.7"],"acl":["78.12"],"info":["78.12"],"脚本在矩形区域中绘制图像":["79.1"],"动画和其他复杂的视觉效果":["79.1"],"轴向下延伸":["79.3"],"可以通过":["79.3"],"提供了两种基本的绘图上下文":["79.4"],"进行控制":["79.5"],"在一个网页上创造一个交互式地图":["79.6"],"让用户点击地图上的数据点来查看更多的信息或与其他应用程序进行交互":["79.6"],"您可以控制图形元素的位移":["79.7"],"位置":["79.7"],"颜色和其他属性":["79.7"],"不同的浏览器可能解释":["79.8"],"图像缩放":["80.0"],"fillrect":["80.1","80.3"],"上面代码中":["80.2"],"原来的矩形是":["80.2"],"缩放后展示出来是":["80.2"],"context":["80.3","83.4"],"垂直缩放":["80.4"],"水平位移":["80.4"],"单位像素":["80.4"],"垂直位移":["80.4"],"之上":["81.0"],"那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面":["81.0"],"在源图像中显示目标图像":["81.1"],"只有源图像内的目标图像部分会被显示":["81.1"],"源图像是透明的":["81.1"],"在源图像外显示目标图像":["81.1"],"document":["82.1","95.1"],"getelementbyid":["82.1"],"判断是否有getcontext":["82.1"],"lineto":["82.2"],"添加一个新点":["82.2"],"绘制一条从当前位置到指定新点":["82.2"],"交点为菱形":["83.1"],"miterlimit":["83.1"],"指定交点菱形的长度":["83.1"],"该属性只在":["83.1"],"属性的值等于":["83.1"],"时有效":["83.1"],"表示":["83.2"],"颜色":["83.2","97.3"],"gradient":["83.2"],"pink":["83.2"],"skyblue":["83.2"],"y":["83.3","85.6","90.3","98.3","99.3","102.4"],"垂直重复":["83.3"],"no":["83.3"],"不重复":["83.3"],"如果第二个参数是空字符串或":["83.3"],"则等同于":["83.3"],"shadowoffsety":["83.4"],"阴影的垂直位移":["83.4"],"下面是一个例子":["83.4"],"填充":["85.2"],"beginpath":["85.2","90.3"],"rect":["85.2"],"左眼":["85.3"],"stroke":["85.4"],"closepath":["85.4"],"两条线段使用fill":["85.4"],"tx":["85.5"],"png":["85.5","93.7","103.7"],"文本":["85.6"],"绘制文字最大宽度":["85.6"],"终点x":["86.2"],"终点y":["86.2"],"isdraw":["87.2","90.3"],"onmousedown":["87.2","90.3"],"onmouseup":["87.2"],"globalcompositeoperation":["87.2"],"获取当前的时间":["88.3"],"time":["88.3"],"date":["88.3"],"hour":["88.3"],"gethours":["88.3"],"min":["88.3"],"getminutes":["88.3"],"sec":["88.3"],"round":["90.3"],"设置允许绘制的变量":["90.3"],"pagex":["90.3"],"offsetleft":["90.3"],"pagey":["90.3"],"offsettop":["90.3"],"moveto":["90.3","99.5"],"onmouseleave":["90.3"],"inputcolor":["90.4"],"endfill":["92.2"],"库":["93.1"],"用于创建交互式":["93.1"],"2d":["93.1"],"技术进行硬件加速渲染":["93.3"],"能够处理大量的图形元素并实现流畅的动画效果":["93.3"],"提供了简洁而直观的":["93.4"],"sprite":["93.5"],"可以在现代浏览器上运行":["93.6"],"path":["93.7"],"to":["93.7"],"load":["93.7","101.1","101.2"],"onassetsloaded":["93.7"],"当纹理加载完成后执行的回调函数":["93.7"],"创建一个矩形":["94.2"],"rectangle":["94.2"],"设置边框样式":["94.2"],"linestyle":["94.2"],"appendchild":["95.1"],"显示helloworld文字":["95.1"],"创建一个圆形":["95.2"],"circle":["95.2"],"创建一个纹理":["97.1"],"texture":["97.1"],"https":["97.1"],"img14":["97.1"],"filters":["97.2"],"监听鼠标是否进入精灵":["97.2"],"轮廓宽度":["97.3"],"创建发光滤镜":["97.3"],"glowfilter":["97.3"],"window":["98.1"],"innerwidth":["98.1"],"height":["98.3"],"drawellipse":["99.1"],"drawpolygon":["99.2"],"宽":["99.3"],"高":["99.3"],"圆角半径":["99.3"],"结束角度":["99.4"],"顺":["99.4"],"逆时针":["99.4"],"透明度":["99.5"],"jfs":["101.1"],"t1":["101.1"],"5c1b0581e1fa6c1c3":["101.1"],"58519cee2a0039e0":["101.1"],"jpg":["101.1"],"异步加载资源":["101.1","101.2"],"texturespromise":["101.1","101.2"],"加载完成后创建精灵":["101.1"],"loadbundle":["101.2"],"progress":["101.2"],"加载完成":["101.2"],"图像在放大或改变尺寸的情况下其图形质量不会有所损失":["102.1"],"因此能够优雅而简洁地渲染不同大小的图形":["102.1"],"并和":["102.1"],"dom":["102.1"],"x1":["102.3"],"x2":["102.3"],"r":["102.5"],"cy":["102.6"],"l":["102.9"],"s":["103.0","103.5"],"blog":["103.0","103.5"],"scripts":["103.3"],"docs":["103.3"],"dev":["103.3"],"build":["103.3"],"module":["103.5"],"exports":["103.5"],"lemon":["103.5"],"description":["103.5"],"描述":["103.5"],"themeconfig":["103.5"],"sitetitle":["103.5"],"是不是可以动态展开":["103.6"],"collapsed":["103.6"],"logo":["103.7"],"alt":["103.7"],"yyg":["103.7"],"ui":["103.7"],"actions":["103.7"],"theme":["103.7"],"brand":["103.7"],"push":["103.8"],"f":["103.8"]},{"0":["15.11","16.1","17.1","28.3","32.14","33.2","36.16","70.10","80.1","80.4","99.4","101.1"],"1":["27.15","32.2","32.9","32.14","40.6","69.9","70.10","71.4","71.5","72.2","72.3","80.2","80.4"],"2":["16.5","16.14","25.24","26.4","28.6","32.2","34.6","36.4","39.14","40.6","63.5","67.16","69.4","71.4","71.5","72.2","72.3","80.4","82.1"],"3":["15.2","16.14","20.0","25.1","26.4","33.11","34.7","34.8","37.7","40.6","49.4","66.1","67.18","69.4","71.4"],"4":["15.11","31.7","32.20","37.7","40.6","43.0","63.5","69.6","71.4","102.1"],"5":["15.14","32.19","32.20","33.8","37.6","52.0","67.7","69.6"],"6":["38.8","52.0","63.12","67.8","69.2"],"7":["15.3","61.5"],"8":["35.3"],"9":["78.7"],"10":["61.5","83.2","83.4"],"11":["59.3"],"13":["61.5"],"15":["97.3"],"16":["78.3"],"17":["37.2"],"18":["36.3","40.4","70.6"],"20":["70.8"],"21":["61.5"],"24":["61.5"],"29":["40.1"],"30":["80.1","80.2","88.3","102.8","102.9"],"32":["99.4"],"35":["97.1"],"40":["102.9"],"50":["86.2","102.5"],"54":["99.3"],"64":["99.1"],"66":["102.9"],"80":["11.8"],"90":["102.7"],"100":["29.1","33.2","80.1","80.3","83.2","94.2","95.1","99.5","102.7"],"120":["102.9"],"123":["70.9","77.2"],"150":["102.4"],"160":["99.3"],"164":["99.1"],"200":["84.0","86.2","94.2","102.3","102.7","102.8"],"300":["94.2"],"350":["85.3"],"408":["66.4"],"409":["66.4"],"450":["86.1","86.2"],"500":["86.2"],"600":["88.4","89.2"],"1000":["53.2"],"2224":["97.1"],"3000":["11.3"],"12087":["97.1"],"23739":["97.1"],"qrouter":["5.0"],"加上这一句":["5.0"],"找指定路径下的文件":["5.0"],"c":["5.1","13.13"],"d":["5.1"],"开放":["11.0"],"极简的":["11.0"],"通过":["11.2","35.2","54.4"],"query":["11.2"],"可以获取到客户端发送过来的查询参数":["11.2"],"console":["11.2","13.3","13.6","13.16","25.17","32.10","32.14","32.15","32.23","32.24","33.9","33.10","34.11","36.4","36.11","36.12","36.15","36.19","37.5","38.3","38.6","38.11","38.12","39.15","39.16","53.2","61.4","63.7","63.10","63.15","63.16","69.13","70.6","71.5","82.1"],"log":["11.2","13.3","13.6","13.16","32.10","32.15","32.24","33.9","33.10","34.11","36.4","36.12","36.19","37.5","38.3","38.6","38.11","39.5","39.15","39.16","53.2","63.7","63.10","63.15","66.6","69.11","69.13","70.6","71.5","82.1"],"这里的":["11.2"],"目录下的静态资源":["11.3"],"http":["11.3","11.8","14.17"],"localhost":["11.3"],"images":["11.3"],"bg":["11.3"],"jpg":["11.3"],"new":["11.4","31.6","53.1","53.2","69.10","72.6","83.3"],"向外导出路由对象":["11.4"],"module":["11.4"],"exports":["11.4","14.8"],"注册路由模块":["11.4"],"在注册路由之前注册中间件":["11.5"],"错误级别中间件除外":["11.5"],"中间件可连续调用多个":["11.5"],"调用了第2个全局中间件":["11.6"],"page":["11.7"],"about":["11.7"],"发生了错误":["11.8"],"message":["11.8","13.3","13.6","25.5"],"listen":["11.8"],"server":["11.8"],"running":["11.8"],"at":["11.8","38.17","38.19","63.21","63.23"],"require":["11.10"],"主要在服务器端进行配置":["11.11"],"客户端浏览器无须做任何额外的配置":["11.11"],"即可请求开启了":["11.11"],"a":["11.12","13.13","14.21","27.15","51.0","67.5","71.4","71.5"],"ccess":["11.12"],"对额外的请求头进行声明":["11.12"],"否则这次请求会失败":["11.12"],"viewport":["11.14"],"width":["11.14","47.1","88.4","102.4"],"在浏览器与服务器正式通信之前":["11.15"],"浏览器会先发送":["11.15"],"option":["11.15"],"运行时环境":["12.1"],"基于":["12.1"],"express":["12.1"],"框架":["12.1"],"可以快速构建":["12.1"],"web":["12.1","15.12"],"这是因为":["12.2"],"采用的是异步的":["12.2"],"非阻塞的模型":["12.2"],"这里所谓的":["12.2"],"可能会出现服务不可用的情况":["12.3"],"写文件":["13.1"],"不存在则创建":["13.1"],"存在则覆盖原有内容":["13.1"],"wx":["13.1"],"文件存在打开失败":["13.1"],"return":["13.3","13.6","65.4","71.3","72.6","78.11"],"failed":["13.3","13.6"],"content":["13.3","13.16","27.6","56.2"],"可写流打开了":["13.4"],"可写流关闭了":["13.4"],"要读取一个可读流中的数据":["13.4"],"要为可读流绑定一个data事件":["13.4"],"data事件绑定完毕自动开始读取数据":["13.4"],"on":["13.4","97.2"],"err":["13.6"],"if":["13.6","27.15","49.5","51.2","51.3","51.4","51.6","52.4","87.2","90.3"],"close":["13.7","47.2"],"流关闭了":["13.7"],"通过ws向文件中输出内容":["13.7"],"因此大小一旦确定就不能修改":["13.8"],"常用方法":["13.8"],"from":["13.8","13.10","51.1"],"str":["13.8","13.10","72.2"],"encoding":["13.8"],"直接提供完整的路径":["13.9"],"从而防止路径动态拼接的问题":["13.9"],"renamesync":["13.10"],"监视文件更改":["13.10"],"watchfile":["13.10"],"filename":["13.10"],"listener":["13.10"],"js":["13.10","14.23","31.6","37.6","39.16","73.7","83.1"],"var":["13.10","34.2","83.3"],"hello前端":["13.10"],"buf":["13.10"],"buffer":["13.10"],"官方提供的":["13.11","13.15"],"readfile":["13.12"],"b":["13.13","14.21","71.5","74.4"],"index":["13.13","13.14","32.21","32.32"],"html":["13.13","13.14","27.14","35.6"],"fullname":["13.13"],"设置":["13.16"],"type":["13.16","26.2","26.8"],"响应头":["13.16"],"else":["13.17"],"模块的内部数据":["14.2"],"实现是私有的":["14.2"],"实现按需加载":["14.3"],"第三方模块":["14.5"],"只能在当前模块内被访问":["14.6"],"指向的对象":["14.7"],"默认情况下":["14.7"],"是对外的接口":["14.8"],"提高模块加载效率":["14.9"],"按确切的文件名加载":["14.11"],"补全":["14.11","14.21"],"tools":["14.12"],"则":["14.12","14.23"],"会按以下顺序查找":["14.12","14.22"],"文件":["14.13"],"或者":["14.13","56.2","66.6"],"的内置模块仅提供了一些底层的":["14.15"],"api":["14.15","54.0","78.10","79.1","79.3","79.8","93.1","93.4"],"现在也有其他的包管理工具":["14.16"],"版本号":["14.18"],"main":["14.18"],"入口文件":["14.18"],"核心代码":["14.18"],"用户自定义模块":["14.19"],"会按顺序分别尝试加载以下的文件":["14.21"],"按照确切的文件名进行加载":["14.21"],"入口不存在或无法解析":["14.23"],"node":["14.23"],"将会试图加载目录下的":["14.23"],"user":["15.2"],"root":["15.2"],"password":["15.2"],"database":["15.2"],"test":["15.2","69.9"],"where":["15.3"],"id":["15.3","16.5"],"快捷方式":["15.3"],"send":["15.5","15.11"],"页面最终在浏览器里生成":["15.6"],"缺点":["15.6"],"不利于":["15.6"],"seo":["15.6"],"完整的":["15.6"],"交互性强":["15.7"],"无需考虑":["15.7"],"status":["15.11","31.7"],"msg":["15.11","27.12","27.16"],"done":["15.11"],"从":["15.11"],"取数据":["15.11"],"get":["15.11","31.4","31.5"],"username":["15.11"],"token":["15.12"],"是真正的用户信息":["15.13"],"加密后的字符串":["15.13"],"和":["15.13","79.4","102.1"],"是安全性相关部分":["15.13"],"保证":["15.13"],"安全性":["15.13"],"三者使用":["15.13"],"分隔":["15.13"],"authorization":["15.14"],"字段":["15.14"],"将":["15.14"],"字符串发送到服务器进行身份认证":["15.14"],"服务器可以通过":["15.14"],"中间件将客户端发送过来的":["15.14"],"解析还原成":["15.14"],"unless":["15.14"],"path":["15.14"],"指定哪些接口无需访问权限":["15.14"],"use":["15.14","76.0","78.11"],"只能选择全部标签":["16.2"],"css":["16.2","16.6"],"pink":["16.3"],"md":["16.4"],"有标签名":["16.5"],"标签名必须写在前面":["16.5"],"选择器":["16.5"],"理论上可以作为交集的条件":["16.5"],"但实际应用中几乎不用":["16.5"],"n":["16.6"],"color":["16.7","16.8"],"p1":["16.9"],"p2":["16.9"],"active":["16.11","90.4"],"链接被按下时的样式":["16.11"],"先找父亲的第":["16.12"],"个孩子":["16.12"],"再看是否为元素":["16.12"],"是成功":["16.12"],"否失败":["16.12"],"是直接找第":["16.12"],"属性且属性值以":["16.13"],"开头的":["16.13"],"style":["16.14","78.9","102.5"],"父级元素添加overflow":["16.14"],"将其属性值设置为":["16.14"],"hidden":["16.14"],"auto":["16.14"],"或":["16.14"],"scroll":["16.14"],"父级添加after伪元素":["16.14"],"类选择器":["17.0"],"元素选择器":["17.0"],"piece":["19.0"],"垂直滚动条和水平滚动条交汇的部分":["19.0"],"tag":["20.0"],"video":["20.0"],"src引入本地媒体文件":["20.0"],"resource":["20.0"],"ogg":["20.2","20.11"],"webm":["20.3"],"规定了多媒体资源":["20.5"],"可以是多个":["20.5"],"定义多种媒体资源":["20.6"],"比如":["20.6","26.3"],"自动播放":["20.7"],"muted":["20.7"],"是否静音":["20.7"],"loop":["20.7"],"psuse":["20.8"],"暂停":["20.8"],"onpause":["20.10"],"alert":["20.10","33.2","36.5"],"已经暂停":["20.10"],"开始播放时触发":["20.10"],"onplay":["20.10"],"您的浏览器不支持":["20.11"],"html5":["20.11"],"标签":["20.11"],"text":["22.1","95.1"],"的标签上添加下面的属性":["22.1"],"autocomplete":["22.1"],"off":["22.1"],"才能于":["25.0"],"template":["25.0","25.12","27.13","27.14","27.17"],"中使用":["25.0"],"也不用写":["25.0"],"compositionapi":["25.1"],"新特性都应该写在这个函数内部":["25.1"],"组件中所用到的":["25.1"],"count3":["25.2"],"button":["25.2","25.12"],"click":["25.2"],"add":["25.2","98.4"],"changemsg":["25.4"],"value":["25.4","25.31","59.2"],"change":["25.4","25.13","25.14","55.4"],"创建一个自定义的":["25.7"],"并对其依赖项跟踪和更新触发进行显式控制":["25.7"],"需求":["25.7"],"使用":["25.7","55.2","103.3"],"person":["25.8","70.9","74.1","74.4"],"zhangsan":["25.8","40.7"],"ref":["25.9","25.15"],"change1":["25.10"],"test1":["25.10"],"div":["25.12","27.16"],"按钮":["25.13","25.14"],"对象":["25.15"],"vue":["25.15","27.13","27.14","27.17","78.6"],"参数二":["25.16"],"数据改变时触发的回调函数":["25.16"],"newval":["25.16","25.17"],"oldval":["25.16","25.17"],"bar":["25.19","38.13","63.17"],"name":["25.19","27.11","39.9","40.7","71.2","74.1","74.7"],"name2":["25.20"],"不用直接指定要监视的数据":["25.21"],"回调函数中使用的哪些响应式数据就监视哪些响应式数据":["25.21"],"用于清除":["25.22"],"effect":["25.22"],"侦听器会被链接到该组件的生命周期":["25.23"],"并在组件卸载时自动停止":["25.23"],"sync":["25.24"],"组合式api":["25.25"],"是没有":["25.25"],"update":["25.27"],"这个周期方法被移除":["25.27"],"beforeupdate":["25.28"],"更新之前":["25.28"],"updated":["25.28"],"为":["25.29"],"modifiers":["25.29"],"包含修饰符":["25.29"],"的对象":["25.29"],"header":["25.30","27.6"],"height":["25.31","47.1","87.1","89.2","98.1","102.4"],"onresize":["25.31"],"window":["25.31"],"innerwidth":["25.31"],"bus":["26.1"],"可以实现任意组件通信":["26.1"],"pubsub":["26.1"],"发布订阅模式实现任意组件通信":["26.1"],"vuex":["26.1"],"string":["26.2","39.1","39.6","39.14","69.12","72.4","72.5","74.4","74.7","77.1"],"接受的数据类型":["26.2"],"default":["26.2"],"默认参数":["26.2"],"接受默认数据":["26.2"],"事件可以让用户与网页进行交互":["26.3"],"handler1":["26.4"],"我要传递多个参数":["26.4"],"方法执行":["26.5"],"传递一个数组":["26.5"],"数组元素即为将来组件需要触发的自定义事件类型":["26.5"],"此方执行会返回一个":["26.5"],"emit":["26.5"],"方法用于触发自定义事件":["26.5"],"当点击按钮的时候":["26.5"],"事件回调内部调用":["26.5"],"方法去触发自定义事件":["26.5"],"写法没有":["26.6"],"this":["26.6","70.7","70.9","76.0"],"那么在":["26.6"],"想实现全局事件的总线功能就有点不现实啦":["26.6"],"在":["26.7","48.1","81.0"],"vue3":["26.7","78.6"],"中一个组件可以通过使用多个":["26.7"],"让父子组件多个数据同步":["26.7"],"下方代码相当于给组件":["26.7"],"success":["26.8","53.2"],"size":["26.8"],"small":["26.8"],"title":["26.8","35.3"],"标题":["26.8"],"但是需要注意":["26.9"],"如果想让父组件获取子组件的数据或者方法需要通过":["26.9"],"defineexpose":["26.9"],"对外暴露":["26.9"],"方法用于提供数据":["26.10"],"此方法执需要传递两个参数":["26.10"],"分别提供数据的":["26.10"],"也是集中式管理状态容器":["26.11"],"类似于":["26.11"],"b替换":["26.12"],"填入组件b部分的结构":["26.12"],"作用域插槽":["26.12"],"可以理解为":["26.12"],"子组件数据由父组件提供":["26.12"],"但是子组件内部决定不了自身结构与外观":["26.12"],"样式":["26.12"],"子组件":["26.12"],"代码如下":["26.12"],"components":["27.2","103.7"],"component":["27.2"],"更加友好":["27.5"],"在使用":["27.5"],"right":["27.6","85.6"],"fancybutton":["27.10"],"插槽里的节点":["27.13"],"异步组件":["27.13"],"body":["27.14"],"自定义classname等等":["27.14"],"comp":["27.15"],"v":["27.15"],"p":["27.16","41.2","58.2","70.1","70.10"],"选项已移除":["27.17"],"父组件":["27.17"],"modelvalue简写为v":["27.17"],"cli":["28.2"],"babel":["28.4","78.7"],"alongside":["28.4"],"linter":["28.4"],"formatter":["28.4"],"config":["28.4","65.4","66.4","78.11"],"history":["28.4"],"动态导入":["28.5"],"hmr":["28.5"],"速度快到惊人的":["28.5"],"img":["28.6","103.5"],"构建的项目模板":["28.6"],"latest":["28.7"],"位贡献者":["29.1"],"内存减少54":["29.2"],"使用proxy代替defineproperty实现数据响应式":["29.2"],"provide与inject":["29.3"],"新组件":["29.3"],"fragment":["29.3"],"与服务器交换数据":["31.1"],"并且更新部分网页":["31.1"],"的原理简单来说通过":["31.1"],"构建请求所需的数据内容":["31.2"],"并通过":["31.2"],"实例对象":["31.3"],"常见的有":["31.4"],"post":["31.4","78.10"],"服务端地址":["31.4"],"如果不传递数据则为":["31.5"],"null":["31.5"],"如果使用":["31.5"],"属性用于接收服务器端的响应结果":["31.6"],"举个例子":["31.6"],"const":["31.6","57.2","70.1","71.2","72.4","72.6","74.6","78.12"],"request":["31.6","65.5"],"接收请求":["31.7"],"onreadystatechange":["31.7"],"readystate":["31.7"],"let":["31.7","39.11","71.4","74.2","74.3"],"然后放到一个变量中":["32.0"],"管理非常方便":["32.0"],"array":["32.1","32.32","51.1","52.3","52.4","69.4"],"创建了一个空的数组":["32.1"],"查":["32.5","38.1"],"splice":["32.6","32.11"],"red":["32.7","39.10","88.3"],"count":["32.8"],"yellow":["32.9","95.2"],"orange":["32.9"],"brown":["32.10"],"取得最后一项":["32.12"],"取得第一项":["32.13"],"删除第一项":["32.14"],"purple":["32.17"],"插入两个值":["32.17"],"删除一个元素":["32.17"],"find":["32.18"],"element":["32.21","41.1"],"every":["32.27"],"someresult":["32.28"],"everyresult":["32.29"],"filterresult":["32.31"],"item":["32.31","32.32","51.5"],"执行流程":["33.1"],"语句在执行会先对":["33.1"],"isnan":["33.2"],"请输入一个合法的分数":["33.2"],"当成绩为100时":["33.2"],"奖励一辆bmw":["33.2"],"语句在执行时":["33.3"],"会依次将":["33.3"],"后的表达式和":["33.3"],"后的表达式进行全等比较":["33.3"],"for":["33.4"],"会先对条件表达式进行判断":["33.5"],"如果结果为":["33.5","37.12"],"true":["33.5","36.21","37.11","37.12","39.3","69.5","70.6","97.2"],"则执行循环体":["33.5"],"会先执行":["33.6"],"后的循环体":["33.6"],"执行完毕后":["33.6"],"会对while后的条件表达式进行判断":["33.6"],"prop":["33.9"],"输出":["33.10","53.2"],"用来跳过当次循环":["33.11"],"循环语句也能实现一些简单的重复操作":["34.0"],"但是比较具有局限性":["34.0"],"此时我们就可以使用":["34.0"],"这是函数表达式写法":["34.2"],"匿名函数后面跟分号结束":["34.2"],"函数不调用自己不执行":["34.3"],"调用函数的时候千万不要忘记加小括号":["34.3"],"函数是可以相互调用的":["34.3"],"实参2":["34.6"],"在函数调用的小括号里面是实参":["34.6"],"实际的参数":["34.6"],"形参和实参的执行过程":["34.6"],"如果实参的个数小于形参的个数":["34.7"],"多于的形参定义为undefined":["34.7"],"最终的结果就是":["34.7"],"nan":["34.7"],"形参可以看做是不用声明的变量":["34.7"],"返回的结果是最后一个值":["34.8"],"我们求任意两个数的":["34.8"],"加减乘数结果":["34.8"],"继续执行下次循环":["34.9"],"tip":["34.12"],"无需调用":["34.12"],"但它是一种解释性语言":["35.0"],"不需要编译":["35.0"],"document":["35.1"],"script":["35.2"],"标签将":["35.2"],"基":["35.3"],"属性引入":["35.4"],"标签如果带":["35.4"],"alt":["35.7"],"所有的事物都是对象":["36.1"],"例如字符串":["36.1"],"数值":["36.1"],"数组":["36.1","83.1"],"age":["36.3","40.1","40.4","74.3"],"的":["36.4"],"obj":["36.4"],"sayhi":["36.5"],"我的名字叫":["36.5"],"年龄":["36.5"],"返回一个给定对象自身的所有":["36.6"],"symbol":["36.6"],"属性的数组":["36.6"],"getprototypeof":["36.6"],"返回指定对象的原型":["36.6"],"内部的":["36.6"],"mergedobj":["36.7"],"newobj":["36.8"],"不会影响原对象":["36.11"],"propnames":["36.13"],"symbols":["36.14"],"create":["36.15","66.2","70.6"],"中常用的运算符有":["37.1"],"算数运算符":["37.1"],"浮点数的进度问题":["37.2"],"浮点数值的最高精度是":["37.2"],"乘等于":["37.3"],"是旧值":["37.6"],"a1":["37.6"],"判等号":["37.7"],"判断两边值是否相等":["37.7"],"没有":["37.9","37.10"],"才会返回":["37.9","37.10"],"对于非布尔值进行与运算":["37.9"],"对于非布尔值或运算":["37.10"],"即圆括号中的表达式会第一个运算":["37.13"],"使用运算符时":["37.13"],"如果遇到拿不准的":["37.13"],"可以直接通过":["37.13"],"以及":["38.2","63.6"],"进行字符串拼接之外":["38.2","63.6"],"trimright":["38.5","63.9"],"repeat":["38.5","63.9"],"copyresult":["38.7","63.11"],"padstart":["38.8","63.12"],"startwith":["38.10","63.14"],"hello":["38.12","63.16","69.7"],"world":["38.12","63.16","69.7"],"false":["38.13","39.7","40.1","60.6","63.17"],"arr":["38.15","63.19","69.5"],"search":["38.16","44.1","62.4","63.20"],"pattern":["38.17","63.21"],"bat":["38.18","63.22"],"sat":["38.18","63.22"],"fat":["38.18","63.22"],"result":["38.19","53.1","63.23","72.4"],"boolean":["39.1"],"floatnum3":["39.2"],"有效":["39.2"],"但不推荐":["39.2"],"floatnum":["39.2"],"包含":["39.3"],"值的变量跟未定义变量是有区别的":["39.3"],"jingleheimerschmidt":["39.4"],"字符串是不可变的":["39.4"],"意思是一旦创建":["39.4"],"undefined":["39.5"],"非空字符串":["39.6"],"number":["39.6","69.12","71.1","72.3","72.5","72.7","74.2","74.3","74.7","77.2"],"foosymbol":["39.7"],"nicholas":["39.9"],"colors":["39.10"],"map":["39.12"],"利用string":["39.14"],"typeof":["39.15"],"只用这5种情况":["39.16"],"其他都为true":["39.16"],"当我们把变量赋值给一个变量时":["39.17"],"10值":["39.18"],"引用类型数据存放在堆中":["39.19"],"每个堆内存对象都有对应的引用地址指向它":["39.19"],"引用地址存放在栈中":["39.19"],"简单类型赋值":["39.20"],"是生成相同的值":["39.20"],"found":["40.1"],"不能定义名为eval":["40.1"],"和arguments":["40.1"],"的变量":["40.1"],"否则会导致语法错误":["40.1"],"声明提升":["40.1"],"foo":["40.1"],"lisi":["40.2","40.7"],"不会被提升":["40.3"],"try":["40.5"],"你可能以为会输出0":["40.6"],"实际上会输出5":["40.6"],"比":["40.8"],"优先级高":["40.8"],"它提供了对文档内容进行访问和操作的方法和属性":["41.0"],"创建新元素":["41.1"],"并使用":["41.1"],"appendchild":["41.1"],"createelement":["41.2"],"textcontent":["41.2"],"可以使用它向前或向后导航":["42.0"],"go":["42.1"],"forward":["42.2"],"导航到相对于当前页面的偏移量为2的页面":["42.2"],"的各个部分":["43.0"],"如协议":["43.0"],"主机名":["43.0"],"路径和查询参数等":["43.0"],"同时也提供了一些导航方法":["43.0"],"如重定向到其他":["43.0"],"刷新页面等":["43.0"],"它包含了":["44.0"],"的路径部分":["44.1"],"将页面重定向到新的url":["44.2"],"assign":["44.2"],"如浏览器的名称":["45.0"],"版本":["45.0"],"appversion":["45.1"],"获取浏览器的版本":["45.2"],"如屏幕的尺寸":["46.0"],"不包括系统任务栏或工具栏":["46.1"],"屏幕可用宽度":["46.2"],"availwidth":["46.2"],"获取屏幕的可用高度":["46.2"],"的顶级对象":["47.0"],"调整窗口的大小":["47.1"],"调整窗口大小":["47.2"],"也就是说":["48.1"],"闭包让你可以在一个内层函数中访问到其外层函数的作用域":["48.1"],"降低前端性能":["49.1"],"为了优化体验":["49.1"],"需要对这类事件进行调用次数的限制":["49.1"],"防抖":["49.2"],"可以将时间戳写法的特性与定时器写法的特性相结合":["49.4"],"实现一个更加精确的节流":["49.4"],"实现如下":["49.4"],"throttled":["49.4"],"key":["50.0"],"in":["50.0"],"hasownproperty":["50.0"],"length":["51.3","51.4","51.6","69.14"],"has":["51.6"],"使用infinity":["52.1"],"无论多少层都将扁平化为一维数组":["52.1"],"优化":["52.2"],"res3":["52.2"],"concat":["52.3"],"isarray":["52.4"],"resolve":["53.1"],"reject":["53.1"],"异步操作":["53.1"],"settimeout":["53.1","53.2"],"在以上代码中":["53.2"],"是":["53.2"],"javascript":["53.2","79.6","102.1"],"并提供了一组":["54.0"],"应用程序编程接口":["54.0"],"来访问和操作":["54.0"],"树中的节点":["54.0"],"根据选择器获取匹配的第一个元素节点":["54.1"],"queryselectorall":["54.1"],"根据选择器获取匹配的所有元素节点":["54.1"],"删除指定的子节点":["54.2"],"setattribute":["54.2"],"事件处理函数":["54.3"],"可以实现动态修改网页内容":["54.4"],"它允许你监听和响应用户与网页元素之间的交互":["55.0"],"是一个函数":["55.1"],"它会在事件触发时执行":["55.1"],"使用匿名函数来定义事件处理程序":["55.1"],"阻止事件默认行为":["55.2"],"来启用事件捕获模式":["55.3"],"在事件捕获模式下":["55.3"],"事件将从祖先元素开始":["55.3"],"focus":["55.4"],"blur":["55.4"],"页面加载事件":["55.4"],"target":["55.5"],"matches":["55.5"],"其中":["56.1"],"existingelement":["56.3"],"插入到":["56.3"],"是相应的属性值":["57.1"],"获取元素的计算样式":["57.1"],"getcomputedstyle":["57.1"],"方法":["57.1"],"则添加它":["57.2"],"检查是否包含类名":["57.2"],"contains":["57.2"],"hasclass":["57.2"],"通过标签名获取元素":["58.1"],"getelementsbytagname":["58.1"],"传入标签名":["58.1"],"修改元素的属性":["58.2"],"日至今的毫秒数":["59.1"],"gettimezoneoffset":["59.1"],"获取本地时间与":["59.1"],"utc":["59.1"],"时间之间的时差":["59.1"],"返回值为以分钟为单位的整数值":["59.1"],"setdate":["59.1"],"day":["59.1"],"设置日期的天数为指定的值":["59.1"],"参数为一个整数":["59.1"],"setfullyear":["59.1"],"year":["59.1"],"设置日期的年份为指定的值":["59.1"],"参数为一个四位数的整数":["59.1"],"sethours":["59.1"],"hour":["59.1"],"设置日期的小时数为指定的值":["59.1"],"第二个参数为月份":["59.3"],"到":["59.3"],"之间的整数值":["59.3"],"表示从一月到十二月":["59.3"],"today":["59.4"],"无论是处理基本数据类型":["60.0"],"集合数据":["60.0"],"文本数据还是进行数学计算":["60.0"],"date":["60.1"],"日期时间":["60.1"],"math":["60.1","98.3","99.4"],"提供了一系列通用的方法":["60.2"],"查询":["60.3"],"查找":["60.4"],"替换等":["60.4"],"计算等":["60.5"],"格式化等":["60.7"],"计算平方根":["60.8"],"生成随机数等":["60.8"],"还有一些其他的内置对象":["60.9"],"如":["60.9","62.3"],"error":["60.9","65.4","70.6","77.1","78.11"],"issafeinteger":["61.2"],"判断传递的参数是否为安全整数":["61.2"],"tofixed":["61.2"],"返回指定小数位数的表示形式":["61.2"],"称为数学对象":["61.3"],"找出最大值":["61.5"],"min":["61.5"],"在一组数中找出最小的":["61.5"],"找出最小值":["61.5"],"是一个内置的对象类型":["62.1"],"可以通过字面量或构造函数来创建":["62.1"],"正则表达式由字符和特殊元字符组成":["62.1"],"匹配前面的元素零次或一次":["62.2"],"定义字符类":["62.2"],"正则表达式还支持一系列特殊的转义字符和预定义字符类":["62.3"],"在字符串中搜索与正则表达式匹配的内容":["62.4"],"截取时":["63.3"],"表示从指定的索引位置开始":["63.3"],"但不同之处在于":["63.4"],"不能接受负值作为参数":["63.4"],"如果传递了一个负值":["63.4"],"则默认使用":["63.4"],"参数举例":["63.5"],"从索引值为":["63.5"],"nav":["64.2"],"data":["64.2","66.5","78.11","78.12"],"库":["65.1"],"可以用在浏览器和":["65.1"],"axios":["65.2"],"在发送请求之前做些什么":["65.4"],"对请求错误做些什么":["65.4"],"提出了要求":["65.5"],"但没有收到答复":["65.5"],"是浏览器中xmlhttprequest的一个实例":["65.5"],"请求头设置":["66.1"],"一般可以在请求头中携带公共的参数":["66.1"],"baseurl":["66.2"],"application":["66.3"],"x":["66.3","69.12"],"www":["66.3"],"form":["66.3"],"urlencoded":["66.3"],"请求":["66.3"],"url":["66.4","78.10"],"请求超时":["66.4"],"系统已存在相同数据":["66.4"],"imort":["66.6"],"getaction":["66.6"],"getaction方法所在的文件路径":["66.6"],"省时又省力他不香吗":["66.7"],"前端架构带你":["66.7"],"local":["67.1"],"比较两个版本的差异":["67.7"],"以前者为基准看后者的变化":["67.7"],"表示最后一次":["67.7"],"commit":["67.7"],"对应的版本":["67.7"],"查看所有分支的版本历史":["67.8"],"all":["67.8"],"以图形形式展示版本历史":["67.8"],"强制删除本地分支":["67.12"],"分":["67.14"],"做":["67.14"],"以便把":["67.14"],"合":["67.14"],"到当前分":["67.14"],"amend":["67.16"],"合并":["67.16"],"删除远程仓库别名":["67.18"],"克隆远程仓库指定分支到本地":["67.19"],"等同于推送一个空的本地分支到远程分支":["67.21"],"表示删除指定的远程分支":["67.21"],"等同于":["67.21"],"scm":["68.1"],"bush":["68.2"],"here":["68.2"],"email":["68.3"],"xxxx":["68.3"],"xxx":["68.4"],"com":["68.4","97.1"],"直接按三次回车":["68.4"],"ssh个人设置":["68.5"],"image":["68.5"],"也可以使用es6的字符串模板":["69.1"],"decimal":["69.2"],"使用构造函数":["69.3"],"创造的对象不是布尔值":["69.3"],"第二种方式是使用数组泛型":["69.4"],"当赋值或访问一个已知索引的元素时":["69.5"],"会得到正确的类型":["69.5"],"字符串枚举":["69.6"],"u":["69.8"],"warning":["69.8"],"num1":["69.9"],"throw":["69.10"],"只会抛出异常没有返回值":["69.11"],"定义一个一个函数得到一个数字或字符串值的长度":["69.12"],"function":["69.12","85.5"],"getlength":["69.12"],"strlength2":["69.14"],"可以定义类":["70.0"],"基本上":["70.0"],"es6的class可以看作只是一个":["70.0"],"我":["70.1"],"了":["70.1"],"创建类的实例":["70.1"],"dog":["70.2"],"extends":["70.2"],"cry":["70.2"],"可以让你定义的变量":["70.4"],"内部访问":["70.4"],"代表定义的变量私有的只能在内部访问":["70.5"],"zs":["70.6"],"属性":["70.6","74.0","83.2"],"静态函数":["70.8"],"同样也是不能通过this":["70.8"],"去调用":["70.8"],"也是通过类名去调用":["70.8"],"constructor":["70.9"],"super":["70.11"],"的类型":["71.0"],"fn":["71.2","74.7"],"树哥":["72.5"],"interface":["72.7","74.1"],"len":["72.7"],"它是":["73.1"],"ts属于":["73.2"],"强类型":["73.2"],"语言":["73.2"],"ts不能直接执行":["73.3"],"需要先编译成":["73.3"],"支持最新的javascript新特特性":["73.5"],"周边生态繁荣":["73.5"],"typescript就并不是那么顺畅":["73.6"],"ts":["73.7","78.8"],"indexts":["73.7"],"升成tsconfig":["73.7"],"w":["73.9"],"install":["73.10"],"g":["73.10"],"和行为":["74.0"],"必须与接口保持一致":["74.1"],"any":["74.6","76.0","78.8"],"类":["75.0"],"严格模式下":["75.1"],"不可以":["75.1"],"bigobject":["75.1"],"当":["76.0"],"表达式值为":["76.0"],"类型的时候":["76.0"],"生成一个错误":["76.0"],"alwaysstrict":["76.0"],"以严格模式检查每个模块":["76.0"],"并在每个文件里加入":["76.0"],"额外的检查":["76.0"],"nounusedlocals":["76.0"],"有未使用的变量时":["76.0"],"抛出错误":["76.0"],"nounusedparameters":["76.0"],"有未使用的参数时":["76.0"],"noimplicitreturns":["76.0"],"并不是所有函数里的代码都有返回值时":["76.0"],"nofallthroughcasesinswitch":["76.0"],"abc":["77.1"],"不能将类型":["77.1"],"s1":["77.2"],"commitlint":["78.2"],"来统一提交规范":["78.2"],"preinstall":["78.2"],"pnpm":["78.3"],"内部潜在的":["78.4"],"bug":["78.4"],"极大的优化了性能":["78.4"],"扩展了使用场景":["78.4"],"被誉为":["78.4"],"最先进的包管理工具":["78.4"],"对象不能出现重复key":["78.6"],"recommended":["78.6"],"vue3语法规则":["78.6"],"plugin":["78.6"],"essential":["78.6"],"ts语法规则":["78.6"],"typescript":["78.6"],"要为特定类型的文件指定处理器":["78.6"],"查找违规风格指南":["78.7"],"该解析器允许使用eslint校验所有babel":["78.7"],"code":["78.7"],"io":["78.8"],"unused":["78.8"],"vars":["78.8"],"禁止定义未使用的变量":["78.8"],"prefer":["78.8"],"expect":["78.8"],"禁止使用":["78.8"],"ignore":["78.8"],"explicit":["78.8"],"类型":["78.8"],"全局样式文件中没有办法使用":["78.9"],"变量":["78.9"],"因此需要给项目中引入全局变量":["78.9"],"variable":["78.9"],"创建一个":["78.9"],"system":["78.10"],"系统管理员":["78.10"],"用户登录接口":["78.10"],"login":["78.10"],"请求地址":["78.10"],"method":["78.10"],"请求方式":["78.10"],"response":["78.10","78.11"],"响应拦截器":["78.11"],"处理网络错误":["78.11"],"logout":["78.12"],"登录接口":["78.12"],"export":["78.12"],"reqlogin":["78.12"],"它提供了许多":["79.1"],"访问":["79.3"],"轴和":["79.3"],"2d":["79.4"],"webgl":["79.4"],"它们都通过特定的方法和属性来控制视觉效果":["79.4"],"可以简单地绘制圆形":["79.5"],"矩形":["79.5"],"线条等图形":["79.5"],"在实现过程中":["79.6","79.7"],"您可以使用":["79.6"],"来监控用户的交互":["79.6"],"从而创建动画效果":["79.7"],"您可以通过原生":["79.7"],"translate":["80.0"],"图像平移":["80.0"],"上面代码会显示一个顺时针倾斜":["80.1"],"如果缩放因子为":["80.2"],"就表示图像没有任何缩放":["80.2"],"如果为":["80.2"],"则表示方向翻转":["80.2"],"下面是一个例子":["80.4"],"上面代码中":["80.5","83.2"],"第一个":["80.5"],"中":["81.0"],"只有源图像外的目标图像部分会被显示":["81.1"],"lighter":["81.1"],"显示源图像":["81.1"],"目标图像":["81.1"],"copy":["81.1"],"忽略目标图像":["81.1"],"xor":["81.1"],"getcontext":["82.1"],"当前浏览器不支持canvas":["82.1"],"请下载最新的浏览器":["82.1"],"位置的直线":["82.2"],"linewidth":["82.2"],"设置或返回当前的线条宽度":["82.2"],"linejoin":["82.2"],"getlinedash":["83.1"],"返回一个数组":["83.1"],"表示虚线里面线段和间距的长度":["83.1"],"setlinedash":["83.1"],"用于指定虚线里面线段和间距的长度":["83.1"],"context":["83.1"],"beginpath":["83.1","87.2"],"fillstyle":["83.2"],"fillrect":["83.2"],"定义了渐变样式":["83.2"],"以后":["83.2"],"将这个样式指定给":["83.2"],"然后":["83.2"],"就会生成以这个样式填充的矩形区域":["83.2"],"该方法的返回值是一个":["83.3"],"canvaspattern":["83.3"],"src":["83.3"],"stroke":["85.2"],"显示路径":["85.2"],"closepath":["85.2","90.3"],"右眼":["85.3"],"时会填充为三角形":["85.4"],"onload":["85.5"],"第一种绘制图片的方式":["85.5"],"参数1图片对象":["85.5"],"参数2":["85.5"],"3将图片渲染到画布的水平和垂直位置":["85.5"],"文本对齐选项":["85.6"],"left":["85.6"],"center":["85.6"],"end":["85.6"],"文本基线对齐":["85.6"],"400px":["87.1"],"destination":["87.2"],"out":["87.2"],"onmousemove":["87.2","90.3"],"e":["87.2"],"arc":["87.2"],"pagex":["87.2"],"getseconds":["88.3"],"绘制秒针":["88.3"],"onmouseup":["90.3"],"lineto":["90.3","99.5"],"clearbtn":["90.4"],"橡皮擦":["90.4"],"isca":["90.4"],"鼠标进入移出事件":["92.1"],"pointerenter":["92.1"],"app":["92.2"],"stage":["92.2"],"addchild":["92.2"],"图形和动画":["93.1"],"它提供了简单易用的":["93.1"],"它还支持使用":["93.3"],"canvas":["93.3"],"使开发者能够快速上手并高效地创建图形和动画":["93.4"],"纹理":["93.5"],"texture":["93.5"],"并提供了针对移动设备的优化":["93.6"],"创建一个精灵":["93.7","98.2","101.1","101.2"],"sprite":["93.7","101.1","101.2"],"0xff0000":["94.2"],"beginfill":["94.2","95.2"],"0x66ccff":["94.2"],"drawrect":["94.2"],"你好":["95.1"],"fontfamily":["95.1"],"楷体":["95.1"],"fontsize":["95.1"],"fill":["95.1"],"graphics":["95.2"],"drawcircle":["95.2"],"360buyimg":["97.1"],"pop":["97.1"],"jfs":["97.1"],"t1":["97.1"],"5c1b0581e1fa6c1c3":["97.1"],"58519cee2a0039e0":["97.1"],"interactive":["97.2"],"distance":["97.3"],"虚化":["97.3"],"innerheight":["98.1"],"backgroundcolor":["98.1"],"0x1099bb":["98.1"],"vite":["98.2"],"svg":["98.2"],"旋转45度":["98.3"],"rotation":["98.3"],"pi":["98.3"],"delta":["98.4"],"endfill":["99.1"],"drawroundedrect":["99.3"],"container":["101.0","101.1","101.2"],"textures":["101.1","101.2"],"创建容器":["101.1","101.2"],"锚点":["101.1"],"anchor":["101.1"],"set":["101.1"],"加载完成后创建精灵":["101.2"],"then":["101.2"],"smil":["102.1"],"等其他网络标准无缝衔接":["102.1"],"y1":["102.3"],"rx":["102.6"],"从无到有的过程":["103.0"],"serve":["103.3"],"git":["103.3"],"如果下载了":["103.3"],"可以在当前的文件夹右键":["103.3"],"选择":["103.3"],"左上角的":["103.5"],"logo":["103.5"],"png":["103.5"],"左上角的logo":["103.5"],"注意":["103.5"],"它的路径是从public文件夹开始的":["103.5"],"所以这里引用的是public":["103.5"],"默认是不是展开":["103.6"],"items":["103.6"],"快速开始":["103.7"],"link":["103.7"],"guide":["103.7"],"组件":["103.7"],"features":["103.7"],"icon":["103.7"],"repo":["103.8"],"lining98":["103.8"]},{"0":["11.8","16.14","26.2","37.2","39.6","53.1","63.4","69.5","85.5","90.3","97.2","97.3","101.2","102.8"],"1":["13.7","13.12","16.12","50.0","51.3","62.4","63.3","69.5","72.6","76.0","92.1","97.3","103.7"],"2":["26.2","39.10","61.2","72.6","94.2","95.2","101.1","101.2"],"3":["16.5","17.1","25.24","28.6","32.2","39.2","63.3","67.1"],"4":["15.3","28.6","66.1","67.14","67.18","98.3"],"5":["43.0","53.1","59.3","71.4","83.4","90.3","101.1","101.2"],"6":["61.5","71.4","76.0"],"7":["13.10","38.4","63.8","67.8","78.7"],"8":["13.16","78.3"],"10":["99.3"],"13":["13.10"],"16":["5.1","11.8"],"18":["37.7","40.1","61.5","70.1","72.5"],"19":["61.5","78.7"],"20":["39.10","87.2","88.3"],"29":["39.9"],"30":["40.2","102.7"],"40":["32.24"],"50":["80.3","80.4","99.5","102.4","102.7","102.9"],"80":["33.2"],"99":["32.2","33.2","102.9"],"100":["32.24","80.4","83.1","85.5","95.2"],"111":["34.3"],"123":["66.6","72.4"],"127":["11.8"],"145":["13.10"],"200":["31.6","31.7","83.1","99.5"],"201":["78.10"],"213":["74.6"],"250":["86.1","102.7"],"300":["31.7","81.1","84.0"],"350":["86.2"],"401":["78.11"],"500":["66.4","85.4"],"501":["66.4"],"502":["66.4"],"600":["29.1","47.2"],"800":["47.2"],"1234":["27.11"],"2600":["29.1"],"9000":["66.2"],"31250000":["39.2"],"如果不存在":["5.0"],"则转给哪个文件执行":["5.0"],"nginx项目部署500的问题":["5.0"],"vue项目路由不是真实存在的":["5.0"],"conf":["5.1"],"web":["11.0","13.15"],"开发框架":["11.0"],"id":["11.2","26.12","68.4"],"是一个动态的参数":["11.2"],"ids":["11.2"],"username":["11.2"],"params":["11.2","71.5"],"是动态匹配到的":["11.2"],"url":["11.2"],"css":["11.3","16.9"],"style":["11.3"],"app":["11.4"],"别忘记调用":["11.5"],"函数":["11.5","25.0","53.2"],"get":["11.6","11.12","15.14"],"user":["11.6","11.7","15.14"],"send":["11.6","31.2"],"内置中间件":["11.8"],"自":["11.8"],"版本开始":["11.8"],"内置了":["11.8"],"个常用的中间件":["11.8"],"极大的提高了":["11.8"],"项目的开发效率和体验":["11.8"],"static":["11.8"],"配置中间件":["11.10"],"的接口":["11.11"],"在浏览器中有兼容性":["11.11"],"只有支持":["11.11"],"xmlhttprequest":["11.11","31.1"],"level2":["11.11"],"custom":["11.12"],"header":["11.12"],"methods":["11.12"],"仅支持客户端发起":["11.12"],"post":["11.12","65.3","78.12"],"head":["11.12"],"请求":["11.12"],"如果客户端希望通过":["11.12"],"type":["11.14","13.17"],"只有三个值":["11.14"],"application":["11.14"],"x":["11.14","47.1","69.14","95.1","97.1","101.1","101.2"],"www":["11.14","44.2"],"请求进行预检":["11.15"],"以获知服务器是否允许该实际请求":["11.15"],"所以这一次的":["11.15"],"应用":["12.1"],"electron":["12.1"],"可以构建跨平台的桌面应用":["12.1"],"指的是":["12.2"],"的主线程只有一个":["12.2"],"为了确保主线程不被阻塞":["12.2"],"主线程是用于接收客户端请求":["12.2"],"程序运行效率较低":["12.3"],"不存在创建":["13.1"],"存在截断":["13.1"],"读写":["13.1"],"存在打开失败":["13.1"],"复制文件内容":["13.3"],"c":["13.3","13.6","14.21","14.23","70.10"],"users":["13.3","13.6"],"笔记":["13.3"],"mp3":["13.3"],"data":["13.4","25.14","65.3","66.3","66.6","78.10"],"将读取到的数据写入到可写流中":["13.4"],"write":["13.4","13.7","35.1"],"简便方式":["13.4"],"success":["13.6","31.7"],"通过可写流写入文件的内容":["13.7"],"将一个字符串转换为":["13.8"],"alloc":["13.8"],"size":["13.8"],"创建指定大小的":["13.8"],"获取文件所处的绝对路径":["13.9"],"js":["13.9","14.21","20.11","25.5","31.3","37.2","55.3","61.2","76.0","81.1"],"readfile":["13.9"],"占用内存的大小":["13.10"],"一个汉字3字节":["13.10"],"console":["13.10","13.13","15.14","25.4","25.18","25.19","25.20","32.9","32.12","32.13","32.17","32.31","32.32","33.8","36.7","36.8","36.9","36.13","36.14","36.17","36.20","37.2","37.6","38.19","63.23","70.1","70.10","70.11","72.4","87.2"],"log":["13.10","13.13","15.14","25.4","25.17","25.18","25.19","25.20","32.9","32.12","32.13","32.14","32.17","32.23","32.32","36.7","36.9","36.11","36.15","37.2","37.6","38.12","38.19","61.4","63.16","63.23","70.1","70.10","70.11"],"length":["13.10","69.5","69.12"],"字符串的长度":["13.10"],"8进制输出第一个元素":["13.10"],"用来处理路径的模块":["13.11"],"它提供了一系列的方法和属性":["13.11"],"dirname":["13.12"],"files":["13.12"],"txt":["13.12"],"utf8":["13.12"],"function":["13.12","20.11","31.6","55.1","69.14","71.4","83.3"],"fext":["13.14"],"用来创建":["13.15"],"解决中文乱码的问题":["13.16"],"setheader":["13.16","13.17"],"text":["13.16","13.17","103.5"],"html":["13.16","15.6","16.12","35.0","56.2"],"charset":["13.16"],"utf":["13.16"],"只是向外部暴露一些接口":["14.2"],"方法":["14.2","58.2","74.0"],"这种模块级别的访问限制":["14.6"],"叫做模块作用域":["14.6"],"和":["14.7","20.6","25.25","35.0","53.2"],"加载某个模块即加载该模块的":["14.8"],"扩展名加载":["14.11"],"json":["14.11","14.21","69.8","73.7","103.8"],"入口不存在或无法解析":["14.13"],"则":["14.13"],"node":["14.13","65.1","65.5","76.0"],"导致在基于内置模块进行项目开发时":["14.15"],"效率很低":["14.15"],"包是基于内置模块封装出来的":["14.15"],"如":["14.16","79.5","79.7"],"yarn":["14.16"],"pnpm":["14.16","78.7"],"taobao":["14.17"],"org":["14.17","78.8"],"切换源头":["14.17"],"description":["14.18"],"介绍包做的什么功能":["14.18"],"描述":["14.18"],"keywords":["14.18"],"关键字":["14.18"],"xxx":["14.18"],"xx":["14.18"],"还是第三方模块":["14.19"],"他们都会优先从缓存中加载":["14.19"],"扩展名进行加载":["14.21"],"b":["14.22","27.15","50.0"],"index":["14.23","26.12","32.28","32.29","32.31","51.5"],"如果以上两步都失败了":["14.23"],"测试是否正常工作":["15.2"],"query":["15.2"],"select":["15.2"],"优点":["15.5"],"前端耗时短":["15.5"],"浏览器只需直接渲染页面":["15.5"],"无需额外请求数据":["15.5"],"有利于":["15.5"],"页面在浏览器拼接完成":["15.6"],"因此爬虫无法爬取页面的有效信息":["15.6"],"vue":["15.6","26.10"],"react":["15.6"],"可使用前后端分离":["15.7"],"if":["15.11","20.11","31.6","53.1","59.4","69.12","69.14","78.10"],"return":["15.11","69.12"],"fail":["15.11","31.7"],"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9":["15.13"],"eyjpzci6mtcsinvzzxjuyw1lijoiqnj1y2uilcjwyxnzd29yzci6iiisim5py2tuyw1lijoiagvsbg8ilcjlbwfpbci6innjdxracxeuy29tiiwidxnlcl9wawmioiiilcjpyxqioje2nde4nju3mzesimv4cci6mty0mtkwmtczmx0":["15.13"],"bmqzaknszgd8izxrggyvlvwgl7egmtwitvjgd":["15.13"],"a5u5c":["15.13"],"使用方式":["15.13"],"客户端会把":["15.13"],"获取用户信息":["15.14","78.12"],"当":["15.14"],"中间件配置成功后":["15.14"],"即可在那些有权限的接口中":["15.14"],"来访问从":["15.14"],"字符串中解析出来的用户信息":["15.14"],"admin":["15.14"],"getinfo":["15.14"],"margin":["16.1"],"h1":["16.2","16.6"],"font":["16.4"],"weight":["16.4"],"因为没有意义":["16.5"],"交集选择器中":["16.5"],"不可能":["16.5"],"出现":["16.5"],"两个元素选择器":["16.5"],"h2":["16.6","25.7"],"h3":["16.6"],"blue":["16.7","32.7","32.8","81.1"],"green":["16.8","84.0","102.5"],"选中div后紧紧相邻的兄弟p元素":["16.9"],"相邻兄弟选择器":["16.9"],"focus":["16.11"],"用于选择获取焦点的表单元素":["16.11"],"一般针对表单元素而言":["16.11"],"忽略其他非":["16.12"],"的元素":["16.12"],"div":["16.12","25.15","56.1"],"p":["16.12"],"span":["16.12"],"结尾的":["16.13"],"clearfix":["16.14"],"必须要有content属性":["16.14"],"display":["16.14"],"block":["16.14"],"块级元素":["16.14"],"height":["16.14","88.4"],"不要看见该元素":["16.14"],"核心代码清除浮动":["16.14"],"visibility":["16.14"],"通配选择器":["17.0"],"corner":["19.0"],"滚动条上的滚动滑块":["19.0"],"mp4":["20.0"],"e3a":["20.0"],"control":["20.0"],"wav":["20.2"],"ogg":["20.3"],"在":["20.5","26.4"],"video":["20.5"],"循环播放":["20.7"],"warning":["20.7"],"注意":["20.7","33.10","40.4","69.8","80.1"],"load":["20.8","55.4"],"已经开始播放时触发":["20.10"],"开始时":["20.10"],"暂停恢复后":["20.10"],"结束后重新开始":["20.10"],"var":["20.11","32.24","36.5"],"myvideo":["20.11"],"document":["20.11"],"getelementbyid":["20.11"],"new":["22.1","51.1","69.3","70.1","70.7","70.10"],"也不用写export":["25.0"],"default":["25.0","78.9"],"数据":["25.1"],"方法等等":["25.1"],"均要配置在":["25.1"],"按钮":["25.2","25.12"],"tip":["25.2","33.10","40.4"],"提示":["25.2"],"模板中使用的数据和方法":["25.2"],"都需要通过":["25.2"],"msg":["25.4","27.13","27.17","78.11"],"这样是可以被监听到的修改value":["25.5"],"zs":["25.6","70.1"],"const":["25.6","31.3","50.0","57.1","65.3","70.2","74.4","74.5","78.10"],"changemsg":["25.6","27.12","27.13"],"实现":["25.7"],"debounce":["25.7"],"的示例":["25.7"],"控制台警告":["25.8"],"value":["25.8","26.10","36.12"],"cannot":["25.8"],"返回一个原值的只读代理":["25.9"],"change2":["25.10"],"click":["25.12","26.3","26.8","27.16"],"change":["25.12","26.4"],"name":["25.13","27.17","36.10","36.18"],"template":["25.15","27.5"],"参数三":["25.16"],"options配置项":["25.16"],"为一个对象":["25.16"],"immediate":["25.16"],"新的值":["25.17"],"newval":["25.18","25.19","25.20"],"oldval":["25.18","25.19","25.20"],"默认初始时就会执行第一次":["25.21"],"产生的副作用":["25.22"],"就是在触发监听之前会调用一个函数可以处理你的逻辑":["25.22"],"但是我们采用异步的方式创建了一个监听器":["25.23"],"这个时候监听器没有与当前组件绑定":["25.23"],"强制效果始终同步触发":["25.24"],"beforecreate":["25.25"],"改用updated":["25.27"],"beforeunmount":["25.27","25.28"],"在元素被移除前调用":["25.27"],"更新结束":["25.28"],"bar":["25.29"],"修饰符对象为":["25.29"],"true":["25.29","31.4","33.3","92.2","93.7"],"内容":["25.30","56.2"],"innerheight":["25.31"],"addeventlistener":["25.31"],"resize":["25.31"],"removeeventlistener":["25.31"],"集中式状态管理容器":["26.1"],"实现任意组件通信":["26.1"],"ref":["26.1"],"父组件获取子组件实例":["26.1"],"number":["26.2","72.4"],"dbclick":["26.3","26.4"],"vue3":["26.4","26.9"],"框架":["26.4"],"第一个参数为触发事件类型":["26.5"],"第二个":["26.5"],"三个":["26.5"],"n":["26.5"],"个参数即为传递给父组件的数据":["26.5"],"需要注意的是":["26.5"],"代码如下":["26.5"],"如果想在":["26.6"],"中使用全局事件总线功能":["26.6"],"可以使用插件":["26.6"],"mitt":["26.6"],"传递两个":["26.7"],"分别是":["26.7"],"pageno":["26.7"],"与":["26.7"],"pagesize":["26.7"],"以及绑定两个自定义事件":["26.7"],"handler":["26.8"],"子组件内部可以通过":["26.8"],"因为":["26.9"],"中组件内部的数据对外":["26.9"],"关闭的":["26.9"],"外部不能访问":["26.9"],"可以获取某一个组件的父组件实例":["26.9"],"key":["26.10","26.12"],"与提供数据":["26.10"],"vuex":["26.11"],"但是核心概念没有":["26.11"],"ul":["26.12"],"组件内部遍历数组":["26.12"],"li":["26.12"],"for":["26.12"],"item":["26.12","32.28","32.29","78.10"],"in":["26.12","65.5"],"todos":["26.12"],"作用域插槽将数据回传给父组件":["26.12"],"row":["26.12"],"用法":["27.2"],"直接在其他":["27.2"],"子组件接受值":["27.6"],"通过":["27.6","81.0"],"来接受":["27.6"],"是无须引入的直接使用即可":["27.6"],"v":["27.8","87.1","90.4"],"简写":["27.9"],"这里的两个":["27.10"],"list":["27.12","27.13"],"默认渲染的页面":["27.13"],"children":["27.13","27.17"],"插入至":["27.14"],"to":["27.14"],"else":["27.15","53.1","66.3","90.3"],"button":["27.16"],"onchangemsg":["27.16"],"改变msg":["27.16"],"绑定多个v":["27.17"],"以上":["28.3"],"mode":["28.4"],"router":["28.4"],"additional":["28.4"],"模块热更新":["28.5"],"rollup打包":["28.5"],"选择语言":["28.6"],"img":["28.7"],"次提交":["29.1"],"重写虚拟dom的实现和tree":["29.2"],"文档碎片":["29.3"],"teleport":["29.3"],"瞬移组件的位置":["29.3"],"对象来向服务器发异步请求":["31.1"],"从服务器获得数据":["31.1"],"方法发送给服务器端":["31.2"],"布尔值":["31.4"],"表示是否异步执行操作":["31.4"],"默认为":["31.4"],"请求发送数据的时候":["31.5"],"需要注意如下":["31.5"],"将请求数据添加到":["31.5"],"open":["31.5"],"e":["31.6"],"整个请求过程完毕":["31.6"],"status":["31.6","78.11"],"responsetext":["31.7"],"responsexml":["31.7"],"数组中可以存放任意类型的数据":["32.0"],"例如字符串":["32.0"],"arr1":["32.1"],"zzz":["32.2"],"其他元素都是undefined":["32.2"],"需要留意的是哪些方法会对原数组产生影响":["32.5"],"哪些方法不会":["32.5"],"concat":["32.6"],"推入两项":["32.7"],"red":["32.8"],"从数组开头推入两项":["32.8"],"slice":["32.11"],"concole":["32.15"],"array":["32.21","32.31","39.8"],"直接使用sort":["32.24"],"方法排序":["32.24"],"arr":["32.24"],"foreach":["32.27"],"filter":["32.27"],"后的条件表达式进行求值判断":["33.1"],"如果结果为true":["33.1"],"则执行if后的语句":["33.1"],"如果为false则不执行":["33.1"],"语句只会控制紧随其后其后的那一行代码":["33.1"],"汽车一辆":["33.2"],"当成绩为":["33.2"],"时":["33.2"],"奖励一台iphone":["33.2"],"如果比较结果为":["33.3"],"则自当前":["33.3"],"处开始执行代码":["33.3"],"执行完毕":["33.5"],"继续判断":["33.5"],"如果为":["33.5"],"则再次执行循环体":["33.5"],"如果为false":["33.6"],"则循环终止":["33.6"],"如果为true":["33.6"],"则继续执行循环体":["33.6"],"以此类推":["33.6"],"输出":["33.9","36.12"],"它不能直接用于遍历普通的对象":["33.10"],"要遍历对象属性":["33.10"],"需要使用":["33.10"],"object":["33.10","39.6"],"entries":["33.10"],"或":["33.10"],"中的函数":["34.0"],"变量名":["34.2"],"fn1":["34.3"],"fn2":["34.3"],"cook":["34.6"],"aru":["34.6"],"形参是接受实参的":["34.6"],"酸辣土豆丝":["34.6"],"形参类似于一个变量":["34.6"],"是一个变量但是没有接受值":["34.7"],"结果就是undefined":["34.7"],"建议":["34.7"],"getresult":["34.8"],"res":["34.8"],"不仅可以退出循环":["34.9"],"立即执行":["34.12"],"可以与":["35.0"],"代码引入到":["35.2"],"body":["35.3","78.10"],"内联形式":["35.3"],"属性":["35.4","36.1"],"a":["35.7","50.0","61.2","74.4"],"函数等":["36.1"],"对象是由属性和方法组成的":["36.1"],"事物的特征":["36.1"],"sex":["36.3"],"男":["36.3"],"调用属性还有一种方法":["36.4"],"性别":["36.5"],"bigbai":["36.5"],"大白":["36.5"],"prototype":["36.6"],"属性的值":["36.6"],"is":["36.6"],"value1":["36.6"],"value2":["36.6"],"判断两个值是否相同":["36.6"],"keys":["36.6"],"false":["36.16","99.4"],"john":["36.19","70.7"],"递增和递减运算符":["37.1"],"比较运算符":["37.1"],"位小数":["37.2"],"但在进行计算时其精确度远远不如整数":["37.2"],"除等于":["37.3"],"a2":["37.6"],"不等号":["37.7"],"它会转换为布尔值然后运算":["37.9","37.10"],"但是最终会返回原值":["37.9","37.10"],"则直接返回第一个值":["37.9"],"则返回第一个":["37.10"],"则执行表达式":["37.12"],"来改变优先级即可":["37.13"],"需要知道字符串的特点是一旦创建了":["38.1"],"还可通过":["38.2","63.6"],"w":["38.4","63.8"],"padstart":["38.5","63.9"],"padend":["38.5","63.9"],"includes":["38.10","51.4","63.14"],"replace":["38.16","63.20"],"matches":["38.17","63.21"],"pos":["38.18","63.22"],"ond":["38.19","63.23"],"undefined":["39.1","40.4"],"125e7":["39.2"],"等于":["39.2"],"在数值类型中":["39.2"],"存在一个特殊数值":["39.2"],"nan":["39.2","39.6"],"意为":["39.2"],"这个变量被声明了":["39.3"],"只是值为":["39.3"],"它们的值就不能变了":["39.4"],"lang":["39.4"],"值是由":["39.5"],"值派生而来":["39.5"],"非零数值":["39.6"],"包括无穷值":["39.6"],"foo":["39.7"],"otherfoosymbol":["39.7"],"age":["39.9","39.10","71.2"],"箭头函数":["39.11"],"set":["39.12","51.6","94.2","99.1","101.2"],"专门用来将字符串转换为数值的两个方法":["39.15"],"parseint":["39.15"],"将一个字符串转换为一个整数":["39.15"],"解析时":["39.15"],"会自左向右读取一个字符串":["39.15"],"直到读取到字符串中所有的有效的整数":["39.15"],"也可以使用":["39.15"],"来对一个数字进行取整":["39.15"],"parsefloat":["39.15"],"将一个字符串转换为浮点数":["39.15"],"解析器首先要确认的就是这个值是基本类型值还是引用类型值":["39.17"],"的值为一个基本类型":["39.18"],"是存储在栈中":["39.18"],"将":["39.18"],"是一个引用类型":["39.19"],"在赋值操作过程汇总":["39.19"],"实际是将堆内存对象在栈内存的引用地址复制了一份给了":["39.19"],"两个对象对应不同的地址":["39.20"],"关键字声明的变量会自动提升到函数作用域顶部":["40.1"],"相当于":["40.1"],"referenceerror":["40.3"],"catch":["40.5"],"语句或":["40.5"],"在延迟定时器执行时":["40.6"],"他是异步的":["40.6"],"循环已经结束了":["40.6"],"最后的值始终都是":["40.6"],"才是期望的值":["40.6"],"syntaxerror":["40.7"],"声明的作用域也是块":["40.7"],"上面的代码就相当于":["40.8"],"childelement":["41.1"],"将其添加到文档中":["41.1"],"修改元素属性":["41.1"],"这是新创建的段落":["41.2"],"appendchild":["41.2"],"加载历史记录中的不同页面":["42.0","43.0"],"delta":["42.1"],"导航到相对于当前页面的偏移量为":["42.1"],"history":["43.0"],"它提供了对浏览器历史记录的操作":["43.0"],"可以使用它向前或向后导航":["43.0"],"navigator":["43.0"],"它提供了关于浏览器的信息":["43.0"],"如浏览器的名称":["43.0"],"的各个部分":["44.0"],"如协议":["44.0"],"的查询字符串部分":["44.1"],"assign":["44.1"],"https":["44.2","83.3"],"example":["44.2","83.3"],"用户代理字符串等":["45.0"],"浏览器的版本":["45.1"],"appversion":["45.2"],"获取操作系统平台":["45.2"],"分辨率等":["46.0"],"availheight":["46.1","46.2"],"屏幕的可用高度":["46.1"],"屏幕可用高度":["46.2"],"表示浏览器窗口或标签页":["47.0"],"它提供了操作浏览器窗口的方法和属性":["47.0"],"moveto":["47.1","83.1","85.3"],"resizeto":["47.2"],"javascript":["48.1","73.1"],"中":["48.1","53.2"],"对此我们就可以采用":["49.1"],"throttle":["49.1"],"防抖":["49.1"],"秒后在执行该事件":["49.2"],"starttime":["49.4"],"curtime":["49.4"],"当前时间":["49.4"],"remaining":["49.4"],"不为null":["49.5"],"callnow":["49.5"],"第一次会立即执行":["49.5"],"以后只有事件执行后才会再次触发":["49.5"],"使用示例":["50.0"],"original":["50.0"],"splice":["51.2"],"parse":["52.2"],"isarray":["52.3"],"math":["53.1","87.2"],"random":["53.1","87.2"],"成功":["53.1"],"类的自定义实现":["53.2"],"它接受一个":["53.2"],"函数作为参数":["53.2"],"该函数立即被调用并接收两个函数作为参数":["53.2"],"当异步操作成功时":["53.2"],"调用":["53.2"],"当它失败时":["53.2"],"类有一个":["53.2"],"这使得开发者可以使用":["54.0"],"动态地修改网页的内容":["54.0"],"样式和结构":["54.0"],"以及响应用户的交互事件":["54.0"],"innerhtml":["54.1"],"获取或设置元素的":["54.1"],"设置元素的属性值":["54.2"],"响应事件的函数":["54.3"],"实时更新页面":["54.4"],"处理用户输入和交互等操作":["54.4"],"使得":["54.4"],"下面是一些常见的方法和技巧来处理":["55.0"],"event":["55.1"],"preventdefault":["55.2"],"向下传播到触发事件的元素":["55.3"],"element":["55.3"],"domcontentloaded":["55.4"],"视图事件":["55.4"],"classname":["55.5"],"适配子元素的逻辑代码":["55.5"],"在这个例子中":["55.5"],"当子元素的事件触发时":["55.5"],"是你想要创建的元素的标签名":["56.1"],"例如":["56.1","62.1"],"设置元素的":["56.2"],"之前":["56.3"],"作为它的兄弟元素":["56.3"],"从父元素中移除子元素":["56.3"],"removechild":["56.3"],"文档对象模型":["57.0"],"来操作元素的样式和类":["57.0"],"computedstyle":["57.1"],"window":["57.1"],"这将返回一个布尔值":["57.2"],"指示元素是否具有指定的类名":["57.2"],"上述方法可以用于修改元素的样式和类":["57.2"],"以实现动态的样式变化或元素状态的切换":["57.2"],"你可以根据需要进行组合和应用":["57.2"],"tagname":["58.1"],"使用选择器获取元素":["58.1"],"setattribute":["58.2"],"setmilliseconds":["59.1"],"millisecond":["59.1"],"设置日期的毫秒数为指定的值":["59.1"],"setminutes":["59.1"],"minute":["59.1"],"设置日期的分钟数为指定的值":["59.1"],"setmonth":["59.1"],"month":["59.1"],"设置日期的月份为指定的值":["59.1"],"范围为":["59.1"],"setseconds":["59.1"],"datestring":["59.2"],"我们将日期对象设置为":["59.3"],"天后的日期":["59.3"],"日期处理":["60.0"],"正则表达式匹配等":["60.0"],"都可以依靠内置对象来完成":["60.0"],"数学对象":["60.1"],"regexp":["60.1"],"正则表达式对象":["60.1"],"error":["60.1","69.12","71.5"],"如对象的创建":["60.2"],"排序等":["60.3"],"这些方法可以帮助我们处理文本数据":["60.4"],"可以进行基本的数学计算":["60.5"],"两个值":["60.6"],"它提供了逻辑运算和条件判断的功能":["60.6"],"可以用于处理时间相关的任务":["60.7"],"promise":["60.9","65.4"],"map":["60.9"],"这个对象下即包含了属性":["61.3"],"pow":["61.5"],"幂方法":["61.5"],"求某个数的多少次方":["61.5"],"可以用来描述字符串的模式":["62.1"],"一个简单的正则表达式":["62.1"],"匹配括号内的任意字符":["62.2"],"d":["62.3","78.7"],"匹配任意数字字符":["62.3"],"返回匹配的位置索引或":["62.4"],"截取到最后":["63.3"],"表示从倒数第三个开始":["63.3"],"还会自动调整参数的位置":["63.4"],"如果第二个参数小于第一个":["63.4"],"的字符开始":["63.5"],"截取":["63.5"],"使用cdn":["65.2"],"reject":["65.4"],"添加响应拦截器":["65.4"],"response":["65.4"],"也是http的实例":["65.5"],"http":["65.5"],"clientrequest":["65.5"],"token":["66.1"],"基础请求地址":["66.2"],"timeout":["66.2"],"qs":["66.3"],"stringify":["66.3"],"序列化":["66.3"],"比如表单数据":["66.3"],"服务器内部错误":["66.4"],"服务未实现":["66.4"],"网关错误":["66.4"],"put":["66.5"],"delete":["66.5"],"httpaction":["66.5"],"userid":["66.6"],"userlist":["66.6"],"封装":["66.7"],"指定文件添加暂存区":["67.5"],"提交指定文件":["67.6"],"往前一个版本":["67.7"],"版本号1":["67.7"],"版本号2":["67.7"],"graph":["67.8"],"查看涉及到指定文件的":["67.8"],"commit":["67.8"],"commitid":["67.10"],"基于当前分支创建分支并切换到新分支":["67.10"],"把":["67.14"],"staged":["67.15"],"unstage":["67.15"],"remove":["67.18"],"别名":["67.20"],"com":["68.1","68.3","83.3"],"打开git":["68.2"],"配置后结果":["68.3"],"会生成":["68.4"],"20230222160826601":["68.5"],"str":["69.1"],"hex":["69.2"],"0xf00d":["69.2"],"十六进制":["69.2"],"createdboolean":["69.3"],"元素类型":["69.4"],"如果你配置了":["69.8"],"tsconfig":["69.8"],"开启了严格模式":["69.8"],"strict":["69.8"],"这样是没问题的":["69.9"],"因为存在死循环":["69.10"],"loop":["69.10"],"需求":["69.14"],"定义一个函数得到一个字符串或者数值数据的长度":["69.14"],"getlength":["69.14"],"语法糖":["70.0"],"它的绝大部分功能":["70.0"],"调用实例的方法":["70.1"],"wang":["70.2"],"也可以外部访问":["70.4"],"不能在外部访问":["70.5"],"为私有属性":["70.6"],"只能在类":["70.6"],"中访问":["70.6"],"可以在这里使用":["70.6"],"let":["70.6","70.7","70.11","87.2"],"需注意":["70.8"],"如果两个函数都是static":["70.8"],"静态的是可以通过this互相调用":["70.8"],"extends":["70.9","72.7"],"我的名字是":["70.11"],"this":["70.11"],"年龄是":["70.11"],"string":["71.2","72.2","72.3","74.1"],"info":["71.4"],"如果参数类型不同":["71.5"],"则参数类型应设置为":["71.5"],"any":["71.5","78.12"],"参数数量不同你可以将不同的参数设置为可选":["71.5"],"fn":["71.5"],"如果不传类型":["72.3"],"那么typescript会类型推论":["72.3"],"abc":["72.4"],"person2":["72.5"],"的一个超集":["73.1"],"所以对于项目而言":["73.2"],"会使代码更加规范":["73.2"],"从而解决了大型项目代码的复杂性":["73.2"],"完全支持":["73.3"],"vue3已全面支持":["73.5"],"增加前期开发的成本":["73.6"],"毕竟你需要写更多的代码":["73.6"],"配置文件":["73.7"],"init":["73.7"],"ts":["73.10"],"obj":["74.3"],"a是必须要有的":["74.5"],"其他就不会校验了":["74.5"],"ok":["75.1"],"字面量模式":["75.1"],"空对象类型和大":["75.1"],"switch":["76.0","78.11"],"语句的":["76.0"],"fallthrough":["76.0"],"错误":["76.0"],"即":["76.0"],"不允许":["76.0"],"的":["76.0"],"case":["76.0","78.11"],"语句贯穿":["76.0"],"模块解析选项":["76.0"],"moduleresolution":["76.0"],"选择模块解析策略":["76.0"],"classic":["76.0"],"typescript":["76.0","78.2"],"pre":["76.0"],"分配给类型":["77.1"],"定义变量时没有赋值":["77.1"],"推断为any类型":["77.1"],"s2":["77.2"],"来统一包管理工具":["78.2"],"涉及到技术栈包含":["78.2"],"安装指令":["78.4","78.7"],"bash":["78.4"],"i":["78.4"],"g":["78.4"],"项目初始化命令":["78.4"],"overrides":["78.6"],"指定解析器":["78.6"],"解析器":["78.6"],"esprima":["78.6"],"默认解析器":["78.6"],"babel":["78.6"],"babel解析器":["78.6"],"parser":["78.6","78.7"],"ts解析器":["78.6"],"install":["78.7"],"non":["78.8"],"null":["78.8"],"assertion":["78.8"],"namespace":["78.8"],"禁止使用自定义":["78.8"],"模块和命名空间":["78.8"],"semi":["78.8"],"vuejs":["78.8"],"multi":["78.8"],"word":["78.8"],"component":["78.8"],"names":["78.8"],"要求组件名称始终为":["78.8"],"链接的单词":["78.8"],"script":["78.8"],"vite":["78.9"],"config":["78.9"],"文件配置如下":["78.9"],"export":["78.9"],"defineconfig":["78.9"],"获取请求体携带过来的用户名与密码":["78.10"],"调用获取用户信息函数":["78.10"],"用于判断是否有此用户":["78.10"],"checkuser":["78.10"],"find":["78.10"],"没有用户返回失败信息":["78.10"],"code":["78.10"],"message":["78.10"],"账号或者密码不正确":["78.10"],"如果有返回成功信息":["78.10"],"token过期":["78.11"],"break":["78.11"],"允许控制绘图区域":["79.1"],"颜色":["79.1"],"线条":["79.1"],"轴上的位置以及宽度和高度等信息":["79.3"],"通过为图形或其他元素设置":["79.3"],"常见的":["79.4"],"绘图上下文时":["79.4"],"也可以绘制更高级的元素":["79.5"],"3d":["79.5"],"图形和曲线":["79.5"],"并使用":["79.6"],"api":["79.6"],"来更新和显示数据":["79.6"],"语言或":["79.7"],"库":["79.7"],"jquery":["79.7"],"时存在差异":["79.8"],"因此需要在开发过程中进行跨浏览器的测试":["79.8"],"此外":["79.8"],"transform":["80.0"],"通过一个变换矩阵完成图像变换":["80.0"],"度的矩形":["80.1"],"方法必须在":["80.1"],"为水平翻转":["80.2"],"表示垂直翻转":["80.2"],"fillstyle":["80.3","81.1"],"fillrect":["80.4","81.1"],"上面代码中":["80.4"],"原始图形是":["80.4"],"方法绘制的矩形":["80.5"],"左上角从":["80.5"],"平移到":["80.5"],"把图像源和目标图像":["81.0"],"使用异或操作对源图像与目标图像进行组合":["81.1"],"context":["81.1","82.1"],"获取画笔":["82.1"],"2d":["82.1"],"设置或返回两条线相交时":["82.2"],"所创建的拐角类型":["82.2"],"linecap":["82.2"],"设置或返回线条的结束端点样式":["82.2"],"beginpath":["82.2"],"lineto":["83.1"],"方法定义一个辐射渐变":["83.2"],"需要指定两个圆":["83.2"],"r0":["83.2"],"r1":["83.2"],"方法接受六个参数":["83.2"],"是辐射起始的圆的圆心坐标":["83.2"],"是起始圆的半径":["83.2"],"pattern":["83.3"],"png":["83.3"],"onload":["83.3"],"rgba":["83.4"],"arcto":["85.3"],"方法主要用来绘制圆弧":["85.3"],"需要给出两个点的坐标":["85.3"],"当前点与第一个点形成一条直线":["85.3"],"第一个点与第二个点形成另一条直线":["85.3"],"然后画出与这两根直线相切的弧线":["85.3"],"第二种绘制图片的方式":["85.5"],"把图片缩放到600400":["85.5"],"top":["85.6"],"hanging":["85.6"],"middle":["85.6"],"ideographic":["85.6"],"bottom":["85.6"],"文本方向":["85.6"],"ltr":["85.6"],"scratchcard":["87.1"],"pagey":["87.2"],"pi":["87.2","99.4"],"fill":["87.2","102.4","102.5","102.7","102.8"],"closepath":["87.2"],"绘制分针":["88.3"],"stroke":["90.3","102.5"],"onclick":["90.3"],"globalcompositeoperation":["90.3"],"source":["90.3"],"over":["90.3"],"linewidth":["90.3"],"nullbtn":["90.4"],"清空画布":["90.4"],"线宽":["90.4"],"alpha":["92.1"],"interactive":["92.2","93.7"],"给矩形添加点击事件":["92.2"],"和强大的渲染能力":["93.1"],"使开发者能够轻松构建高性能的图形界面和游戏":["93.1"],"本文将介绍":["93.1"],"进行降级渲染":["93.3"],"以确保在不支持":["93.3"],"它具有一致的接口设计和详细的文档":["93.4"],"滤镜":["93.5"],"filters":["93.5"],"它支持响应式设计":["93.6"],"resources":["93.7"],"texture":["93.7"],"允许交互":["93.7"],"endfill":["94.2","99.2","99.3","99.4","99.5"],"scale":["94.2","98.3"],"矩形缩放":["94.2"],"position":["94.2","99.1","99.2"],"位移":["94.2"],"pink":["95.1"],"align":["95.1"],"center":["95.1"],"设置文字位置":["95.1"],"screen":["95.1","101.1","101.2"],"jpg":["97.1"],"创建一个精灵":["97.1"],"sprite":["97.1","98.2","98.4"],"pointerover":["97.2"],"outerstrength":["97.3"],"强度":["97.3"],"innerstrength":["97.3"],"color":["97.3"],"resolution":["98.1"],"devicepixelratio":["98.1"],"像素比":["98.1"],"设置缩放":["98.3"],"rotation":["98.4","101.1"],"创建容器":["101.0"],"设置位置":["101.1","101.2"],"y":["101.1","101.2"],"旋转45度":["101.1"],"锚点":["101.2"],"anchor":["101.2"],"使用":["102.1","103.8"],"xml":["102.1"],"格式定义图形":["102.1"],"在不给":["102.1"],"y2":["102.3"],"ry":["102.6"],"opacity":["102.8"],"官方网站":["103.0"],"here":["103.3"],"也可以在":["103.3"],"vscode":["103.3"],"上使用":["103.3"],"按":["103.3"],"ctrl":["103.3"],"j":["103.3"],"打开终端":["103.3"],"点击":["103.3"],"符号右边的下三角":["103.3"],"jpg这张图":["103.5"],"nav":["103.5"],"右上角的导航栏":["103.5"],"关于":["103.5"],"导航标签的名字":["103.5"],"items":["103.5"],"这种格式是有下拉菜单的版本":["103.5"],"关于1":["103.5","103.6"],"link":["103.5","103.6"],"about":["103.5","103.6"],"功能":["103.7"],"特点":["103.7"],"details":["103.7"],"具体描述信息":["103.7"],"gh":["103.8"],"pages":["103.8"],"配置":["103.8"],"package":["103.8"],"scripts":["103.8"]},{"0":["13.10","72.4","77.2","83.3","94.2","98.4"],"1":["13.9","13.10","32.1","37.13","61.2","63.4","63.5"],"2":["13.7","16.12","32.1","38.7","38.11","42.2","50.0","61.5","63.11","63.15","95.1","97.1","103.7"],"3":["13.7","16.12","36.4","39.14","67.15","72.6","78.3","82.1","83.1"],"4":["16.5","16.12","16.14","34.8","67.1","67.21","88.3","101.1","101.2"],"5":["15.11","37.5","39.9","85.3","94.2"],"6":["15.14","32.32","43.0","98.3"],"7":["16.14","37.5"],"8":["13.10","13.17","32.32","67.8","101.1","101.2"],"9":["38.8","63.12"],"10":["13.10","32.32","71.3"],"18":["69.13","74.3"],"20":["70.6","80.2"],"21":["36.5"],"25":["32.24","85.3"],"28":["32.21"],"45":["39.15"],"50":["83.2","94.2","102.6"],"54":["37.13"],"60":["33.2","102.9"],"70":["102.9"],"79":["33.2"],"80":["11.2","11.6","11.7","13.17"],"88":["13.10"],"94":["32.2"],"100":["36.5","81.1","86.2","99.3"],"123":["72.7","74.6","75.1"],"150":["86.2","94.2"],"200":["78.10","80.4","81.1","99.1","99.2"],"213":["74.5","77.2"],"300":["31.6","99.1","99.3","99.4"],"350":["86.1"],"400":["31.6","84.0","85.4","85.5","99.4","99.5"],"403":["78.11"],"404":["78.11"],"456":["39.15"],"500":["78.11","99.5"],"503":["66.4"],"504":["66.4"],"505":["66.4"],"560":["20.11"],"600":["16.4","99.2"],"975":["61.2"],"1000":["53.1"],"8080":["13.16"],"8601":["59.1"],"要加上这段代码":["5.0"],"router":["5.0","78.2"],"rewrite":["5.0"],"start":["5.1"],"是用于快速创建服务器的第三方模块":["11.0"],"参数":["11.2"],"默认是一个空对象":["11.2"],"listen":["11.2","11.4","11.6","11.7","13.16","13.17"],"login":["11.3"],"通过带有":["11.3"],"前缀的地址访问":["11.3"],"目录下的文件":["11.3"],"添加访问前缀":["11.4"],"use":["11.4","11.10"],"api":["11.4","12.1"],"函数后别写代码":["11.5"],"多个中间件共享":["11.5"],"page":["11.6"],"function":["11.7","36.3","39.8","60.1","74.7"],"快速托管静态资源的内置中间件":["11.8"],"例如":["11.8","11.11"],"html":["11.8","26.9","35.7","54.1"],"文件":["11.8","68.4","78.8"],"图片":["11.8"],"css":["11.8","16.12","35.0","58.1","78.9"],"样式等":["11.8"],"无兼容性":["11.8"],"json":["11.8","66.3"],"解析":["11.8","15.14"],"格式的请求体数据":["11.8"],"有兼容性":["11.8"],"仅在":["11.8"],"版本中可用":["11.8"],"urlencoded":["11.8","11.14"],"url":["11.8","31.5"],"app":["11.10","25.7","27.14","78.8","99.1","99.2","99.3","99.4"],"的浏览器":["11.11"],"才能正常访问开启了":["11.11"],"的服务端接口":["11.11"],"put":["11.12"],"delete":["11.12","15.3","67.21"],"等方式请求服务器的资源":["11.12"],"alow":["11.12"],"来指明实际请求所允许使用的":["11.12"],"方法":["11.12","36.1","53.2"],"form":["11.14"],"multipart":["11.14"],"请求称为":["11.15"],"restify":["12.1"],"但不会处理具体的任务":["12.2"],"的背后还有一个线程池":["12.2"],"线程池会处理长时间运行的任务":["12.2"],"比如":["12.2"],"每秒的请求数维持在一个较低的水平":["12.3"],"a":["13.1","32.24","37.13","90.3"],"追加":["13.1"],"ax":["13.1"],"存在失败":["13.1"],"将data写入到文件中":["13.3"],"writefile":["13.3"],"hello":["13.3","80.2","85.6","103.3"],"lilichao":["13.4"],"desktop":["13.4"],"通过":["13.6","15.14","26.10"],"写入的内容":["13.6"],"w":["13.6","62.3"],"allounsafe":["13.8"],"可能包含敏感数据":["13.8"],"分配内存时不会清除内存残留的数据":["13.8"],"files":["13.9"],"txt":["13.9"],"utf8":["13.9"],"tostring":["13.10"],"创建一个10个字节的buffer":["13.10"],"buf2":["13.10"],"alloc":["13.10"],"通过索引":["13.10"],"来操作buf中的元素":["13.10"],"用来满足用户对路径的处理需求":["13.11"],"err":["13.12","15.2"],"datastr":["13.12"],"if":["13.12","15.2","40.7","87.1"],"return":["13.12","15.2","25.2","25.31","69.14","74.7"],"namewithoutext":["13.13"],"console":["13.14","13.17","15.2","31.6","32.7","32.8","32.28","32.29","34.6","37.9","37.10","38.17","38.18","39.2","53.1","63.21","63.22","66.3","85.6","92.2"],"log":["13.14","15.2","31.6","32.7","32.8","32.31","33.8","34.6","36.8","36.13","36.14","36.17","36.20","38.17","38.18","39.2","53.1","63.21","63.22","66.3","72.4","85.6","87.2","92.2"],"服务器的模块":["13.15"],"向客户端响应内容":["13.16"],"end":["13.16","13.17"],"charset":["13.17"],"utf":["13.17"],"与外部其它模块通信":["14.2"],"模块化规范是对代码进行模块化拆分和组合时需要遵守的规则":["14.2"],"防止全局变量污染":["14.6"],"指向同一个对象":["14.7"],"最终共享的结果":["14.7"],"以":["14.7"],"属性":["14.8","57.2"],"js":["14.13","25.2","37.9","37.10","65.1","65.2"],"将会试图加载目录下的":["14.13"],"index":["14.13","32.30","78.8","103.3"],"提供了更高级":["14.15"],"更方便的":["14.15"],"极大提高了开发效率":["14.15"],"下载安装速度是比":["14.16"],"xxxx":["14.18","31.7"],"license":["14.18"],"isc":["14.18"],"开源协议":["14.18"],"发布":["14.18"],"publish":["14.18"],"从而提高模块的加载效率":["14.19"],"d":["14.21","14.22","70.10"],"会在终端打印错误消息":["14.23"],"报告模块的缺失":["14.23"],"error":["14.23","69.11","70.11"],"results":["15.2"],"删除数据":["15.3"],"使用":["15.3","25.31"],"语句会真正删除数据":["15.3"],"保险起见":["15.3"],"seo":["15.5"],"服务器响应的是完整的":["15.5"],"页面内容":["15.5"],"有利于爬虫爬取信息":["15.5"],"缺点":["15.5"],"占用服务器资源":["15.5"],"等框架的":["15.6"],"ssr":["15.6"],"server":["15.6"],"side":["15.6"],"render":["15.6"],"为同时兼顾首页渲染速度和前后端分离开发效率":["15.7"],"可采用首屏服务器端渲染":["15.7"],"success":["15.11","69.5"],"清空":["15.11"],"是目前最流行的跨域认证解决方案":["15.12"],"存储在":["15.13"],"localstorage":["15.13"],"或":["15.13"],"sessionstorage":["15.13"],"中":["15.13","25.1","65.1"],"此后客户端与服务端通信需要携带":["15.13"],"进行身份认证":["15.13"],"将":["15.13"],"存在":["15.13"],"获取信息成功":["15.14"],"data":["15.14"],"捕获解析":["15.14"],"失败后产生的错误":["15.14"],"当使用":["15.14"],"如果客户端发送过来的":["15.14"],"字符串过期或不合法":["15.14"],"会产生一个解析失败的错误":["15.14"],"影响项目的正常运行":["15.14"],"的错误中间件":["15.14"],"捕获这个错误并进行相关的处理":["15.14"],"color":["16.2"],"ccc":["16.2","88.3"],"因为一个元素":["16.5"],"不可能即使":["16.5"],"又是":["16.5"],"span":["16.5","56.1"],"元素":["16.5"],"text":["16.6","16.9","95.2"],"align":["16.6"],"decoration":["16.9"],"underline":["16.9"],"选中div后所有的兄弟p元素":["16.9"],"通用兄弟选择器":["16.9"],"input":["16.11","25.7"],"textarea":["16.11"],"啥都选不到":["16.12"],"ie6":["16.14"],"专有":["16.14"],"zoom":["16.14"],"父级元素添加双伪元素":["16.14"],"相同级别的选择器":["17.0"],"显示最后面的样式":["17.0"],"特殊规则":["17.1"],"行内样式":["17.1"],"权重大于":["17.1"],"所有选择器":["17.1"],"important":["17.1"],"的权重":["17.1"],"大于":["17.1"],"thumb":["19.0"],"border":["19.0"],"radius":["19.0"],"10px":["19.0"],"属性供添加播放":["20.0"],"暂停和音量控件":["20.0"],"在":["20.0","25.2","78.8"],"与":["20.0","20.5"],"之间你需要插入浏览器不支持的":["20.0"],"元素的提示文本":["20.0"],"audio":["20.6"],"track":["20.6"],"ie":["20.7"],"下可以正常使用":["20.7"],"chrome":["20.7"],"重新加载":["20.8"],"都会触发":["20.10"],"onplaying":["20.10"],"正在播放":["20.10"],"不要眨眼":["20.10"],"paused":["20.11"],"play":["20.11"],"else":["20.11","31.6","52.4","59.4","69.12","69.14","87.2"],"pause":["20.11"],"甚至是自定义指令也可以在我们的":["25.0"],"中自动获得":["25.0"],"本篇内容基于":["25.0"],"vue":["25.1","25.9","25.21","25.22","78.2"],"template":["25.1","25.31","27.2"],"div":["25.1","27.13","27.17"],"setup":["25.2","78.8"],"函数":["25.2"],"出去才可以被使用":["25.2"],"函数创建的响应式数据":["25.2"],"在模板中可以直接被使用":["25.2"],"true":["25.4","25.16","36.12","39.5","39.9","40.7","51.6","69.8","72.3","78.9"],"const":["25.5","74.1"],"value":["25.6","53.1","77.2"],"lisi":["25.6","70.6"],"v":["25.7"],"model":["25.7","90.4"],"keyword":["25.7"],"placeholder":["25.7"],"be":["25.8"],"made":["25.8"],"test2":["25.10"],"state":["25.12"],"age":["25.13","36.21"],"info":["25.15","78.10"],"deep":["25.16"],"是否立即调用一次":["25.16"],"旧的值":["25.17"],"immediate":["25.17"],"新的值":["25.18","25.19","25.20"],"从而可以收集需要监视的数据":["25.21"],"例如防抖":["25.22"],"所以即使组件销毁了":["25.23"],"监听器依然存在":["25.23"],"post":["25.24"],"组件更新后执行":["25.24"],"created":["25.25"],"这两个生命周期的":["25.25"],"unmounted":["25.27","25.28"],"指令被移除后调用":["25.27"],"卸载之前":["25.28"],"dir":["25.29"],"一个对象":["25.29"],"在注册指令时作为参数传递":["25.29"],"在以下指令中":["25.29"],"第三个":["25.29"],"当前元素的虚拟dom":["25.29"],"也就是vnode":["25.29"],"export":["25.31","78.8"],"default":["25.31","78.11"],"h3":["25.31"],"屏幕尺寸":["25.31"],"vc":["26.1"],"获取子组件的响应式数据以及方法":["26.1"],"slot":["26.1"],"插槽":["26.1"],"默认插槽":["26.1"],"子组件获取到":["26.2"],"change":["26.3"],"mouseenter":["26.3"],"mouseleave":["26.3"],"这类原生":["26.4"],"不管是在标签":["26.4"],"自定义标签上":["26.4"],"组件标签":["26.4"],"正常说组件标签书写":["26.5"],"应该为原生":["26.5"],"dom":["26.5"],"事件":["26.5","55.0"],"但是如果子组件内部通过":["26.5"],"实现":["26.6"],"官网地址":["26.6"],"https":["26.6","31.7"],"www":["26.6"],"实现父子数据同步":["26.7"],"方法获取组件属性与事件":["26.8"],"因此你也发现了":["26.8"],"它类似于":["26.8"],"props":["26.8"],"可以接受父组件传递过来的属性与属性值":["26.8"],"需要注意如果":["26.8"],"因此可以使用父组件内部的数据与方法":["26.9"],"必须子组件内部拥有一个按钮点击时候获取父组件实例":["26.9"],"当然父组件的数据与方法需要通过":["26.9"],"方法对外暴露":["26.9"],"后代组件可以通过":["26.10"],"方法获取数据":["26.10"],"mutation":["26.11"],"modules":["26.11"],"父组件内部代码如下":["26.12"],"页面":["27.2"],"立即使用即可":["27.2"],"无需引入":["27.2"],"componenta":["27.5"],"菜单区域":["27.6"],"abcde":["27.8"],"插值表达式渲染的内容都是一样的":["27.10"],"tip":["27.10","27.16","34.7","85.3"],"父组件模板中的表达式只能访问父组件的作用域":["27.10"],"页面还没加载出来展示的页面":["27.13"],"children":["27.14"],"默认":["27.14","78.6"],"和":["27.15","33.6","49.1","79.3"],"transition":["27.15"],"一起使用":["27.15","35.0"],"如果传递普通的值":["27.16"],"是不具有响应式的":["27.16"],"子组件":["27.17"],"p":["27.17","56.1"],"version":["28.3"],"lint":["28.4"],"where":["28.4"],"do":["28.4"],"prefer":["28.4"],"placing":["28.4"],"eslint":["28.4"],"它使用":["28.5"],"rollup":["28.5"],"打包你的代码":["28.5"],"切换目录":["28.6"],"安装包":["28.6"],"运行项目":["28.6"],"次pr":["29.1"],"vue3支持vue2的大多数特性":["29.1"],"shaking":["29.2"],"suspense":["29.3"],"异步加载组件的loading界面":["29.3"],"其它api更新":["29.3"],"然后用":["31.1"],"来操作":["31.1"],"对象提供的":["31.2"],"onreadystatechange":["31.2"],"事件监听服务器端你的通信状态":["31.2"],"接受并处理服务端向客户端响应的数据结果":["31.2"],"xhr":["31.3"],"new":["31.3","69.11","70.2","70.6","70.11","90.3","98.2"],"可选的用户名用于认证用途":["31.4"],"null":["31.4","39.1","39.6","49.5","69.7"],"方法中的":["31.5"],"地址中":["31.5"],"发送请求数据中的":["31.5"],"服务端返回的结果":["31.6"],"使用方式如下":["31.7"],"数字":["32.0"],"布尔值等":["32.0"],"arr2":["32.1"],"空属性":["32.2"],"下面对数组常用的操作方法做一个归纳":["32.5"],"b":["32.24","39.15","67.19"],"map":["32.27"],"array":["32.28","32.29","32.30"],"item":["32.30"],"如果希望可以控制多行代码":["33.1"],"可以使用":["33.1","79.5"],"将语句扩起来":["33.1"],"最佳实践":["33.1"],"即使if后只有1行代码":["33.1"],"我们也应该编写代码块":["33.1"],"手机一台":["33.2"],"奖励一本参考书":["33.2"],"参考书一本":["33.2"],"其他时":["33.2"],"false":["33.3","37.12","66.2","72.3"],"则继续比较其他":["33.3"],"后的表达式":["33.3"],"直到找到":["33.3"],"为止":["33.3"],"语法":["33.4"],"如此重复":["33.5"],"知道条件表达式结果为":["33.5"],"的区别":["33.6"],"while语句是先判断再执行":["33.6"],"keys":["33.10"],"将对象转换为可迭代对象后再使用":["33.10"],"总结":["33.10"],"in":["33.10"],"就是封装了一段可被重复调用执行的代码块":["34.0"],"调用的方式":["34.2"],"函数调用必须写到函数体下面":["34.2"],"叫花鸡":["34.6"],"尽量让实参的个数和形参相匹配":["34.7"],"小结":["34.7"],"函数可以带参数也可以不带参数":["34.7"],"声明函数的时候":["34.7"],"函数名括号里面的是形参":["34.7"],"形参的默认值为":["34.7"],"返回的是一个数组":["34.8"],"我们的函数如果有return":["34.8"],"则返回的是":["34.8"],"如果函数么有":["34.8"],"则返回undefined":["34.8"],"fun1":["34.8"],"还能够返回":["34.9"],"语句中的值":["34.9"],"调用":["34.11"],"其实本质已经调用了":["34.12"],"多个立即执行函数之间用分号隔开":["34.12"],"用于创建动态网页和":["35.0"],"alert":["35.1","59.4"],"那么内部的":["35.4"],"代码没有作用":["35.4"],"在对象中用属性来表示":["36.1"],"常用名词":["36.1"],"事物的行为":["36.1"],"sayhi":["36.3"],"调用对象的方法":["36.4"],"男":["36.5"],"smallbai":["36.5"],"小白":["36.5"],"返回一个给定对象自身可枚举属性的名称数组":["36.6"],"seal":["36.6"],"封闭一个对象":["36.6"],"防止添加新属性和删除现有属性":["36.6"],"values":["36.6"],"john":["36.10","36.11","36.18"],"writable":["36.12"],"enumerable":["36.12"],"nan":["36.16"],"逻辑运算符":["37.1"],"赋值运算符":["37.1"],"30000000000000004":["37.2"],"模等于":["37.3"],"n":["37.5","39.6"],"result":["37.5","65.4"],"aaa":["37.7"],"abc":["37.7","62.1"],"全等":["37.7"],"要求值和数据类型都一致":["37.7"],"则返回第二个值":["37.9"],"则返回第二个":["37.10"],"就不可变":["38.1"],"concat":["38.2","63.6"],"tolowercase":["38.5","63.9"],"touppercase":["38.5","63.9"],"c":["38.11","50.0","63.15","74.6"],"o":["38.12","63.16"],"at":["38.18","63.22"],"cond":["38.19","63.23"],"symbol":["39.1"],"不是数值":["39.2"],"用于表示本来要返回数值的操作失败了":["39.2"],"而不是抛出错误":["39.2"],"java":["39.4"],"只要变量要保存对象":["39.5"],"任意对象":["39.6"],"undefined":["39.6"],"push":["39.10","51.3","51.4","51.6","52.4"],"函数声明和函数表达式两种方式":["39.11"],"等":["39.12","60.9"],"利用":["39.14"],"拼接字符串的方法实现转换效果":["39.14"],"隐式转换":["39.14"],"直到读取到字符串中所有的有效的小数":["39.15"],"123px":["39.15"],"a123":["39.15"],"下面来举个例子":["39.17"],"的值赋给":["39.18"],"实际上他们共同指向了同一个堆内存对象":["39.19"],"所以更改":["39.19"],"会对":["39.19"],"复杂类型赋值":["39.20"],"是将保存对象的内存地址赋值给另一个变量":["39.20"],"反复多次使用":["40.1"],"声明同一个变量也没有问题":["40.1"],"两个关键字不能重复声明":["40.2"],"没有定义":["40.3"],"let":["40.3","85.6"],"不过":["40.4"],"声明还是在全局作用域中发生的":["40.4"],"变量会在整个页面生命周期内续存":["40.4"],"typeof":["40.5"],"操作符也不能解决":["40.5"],"会输出0":["40.6"],"setattribute":["41.1","41.2","90.3"],"name":["41.1","78.8"],"修改元素的属性":["41.2"],"的页面":["42.1"],"go":["42.2"],"版本":["43.0"],"用户代理字符串等":["43.0"],"它还可以用于检测浏览器的功能和特性":["43.0","45.0"],"screen":["43.0","97.1"],"它提供了关于用户屏幕的信息":["43.0"],"如屏幕的尺寸":["43.0"],"分辨率等":["43.0"],"可以使用它来调整页面在不同屏幕上的显示":["43.0","46.0"],"主机名":["44.0"],"路径和查询参数等":["44.0"],"加载一个新的":["44.1"],"com":["44.2"],"重新加载当前页面":["44.2"],"platform":["45.1"],"运行浏览器的操作系统平台":["45.1"],"pixeldepth":["46.1"],"获取屏幕的颜色深度":["46.2"],"屏幕颜色深度":["46.2"],"以及与窗口内容交互的功能":["47.0"],"y":["47.1","95.1","97.1"],"将窗口移动到指定的位置":["47.1"],"将窗口移动到屏幕左上角":["47.2"],"moveto":["47.2"],"每当创建一个函数":["48.1"],"闭包就会在函数创建的同时被创建出来":["48.1"],"debounce":["49.1"],"节流":["49.1"],"秒内被重复触发":["49.2"],"从上一次到现在":["49.4"],"还剩下多少多余时间":["49.4"],"context":["49.4"],"arguments":["49.4"],"cleartimeout":["49.4"],"创建原始对象的深拷贝":["50.0"],"现在复制和原始对象是完全独立的":["50.0"],"对一个的更改不会影响另一个":["50.0"],"arr":["51.1"],"每删除一个树":["51.2"],"保证j的值经过自加后不变":["51.2"],"同时":["51.2","79.5","79.7"],"减少循环次数提升性能":["51.2"],"indexof":["51.5"],"res4":["52.3"],"失败":["53.1"],"then":["53.1"],"它接受两个参数":["53.2"],"如果":["53.2"],"被":["53.2"],"函数将使用传递给":["53.2"],"的值调用":["53.2"],"的原因调用":["53.2"],"树的结构是层次化的":["54.0"],"由多个节点组成":["54.0"],"每个节点都有其特定的属性和方法":["54.0"],"可以用于获取或修改节点的信息":["54.0"],"添加":["54.0"],"内容":["54.1"],"textcontent":["54.1","87.2"],"getattribute":["54.2"],"获取元素的属性值":["54.2"],"可以通过事件对象获取相关信息":["54.3"],"成为了":["54.4"],"web":["54.4"],"事件处理程序的逻辑代码":["55.1"],"也可以使用箭头函数来定义事件处理程序":["55.1"],"方法来阻止事件的默认行为":["55.2"],"例如阻止表单提交或超链接跳转":["55.2"],"addeventlistener":["55.3"],"eventname":["55.3"],"eventhandler":["55.3"],"resize":["55.4"],"scroll":["55.4"],"触摸事件":["55.4"],"touchstart":["55.4"],"通过使用":["55.5"],"innerhtml":["56.2"],"childelement":["56.3"],"以下是一些常用的方法和技巧":["57.0"],"propertyvalue":["57.1"],"getpropertyvalue":["57.1"],"propertyname":["57.1"],"以满足具体的交互需求":["57.2"],"需要注意的是":["57.2"],"类名的操作只会修改元素的类列表":["57.2"],"而不会直接修改元素的":["57.2"],"class":["57.2"],"如果需要直接修改":["57.2"],"queryselector":["58.1"],"传入":["58.1"],"选择器":["58.1"],"attributename":["58.2"],"attributevalue":["58.2"],"修改元素的样式":["58.2"],"style":["58.2","102.7"],"second":["59.1"],"设置日期的秒数为指定的值":["59.1"],"settime":["59.1"],"time":["59.1"],"设置日期为指定的时间戳":["59.1"],"todatestring":["59.1"],"将日期对象转换为可读的字符串":["59.1"],"只返回日期部分":["59.1"],"toisostring":["59.1"],"将日期对象转换为":["59.1"],"iso":["59.1"],"格式的字符串":["59.1"],"tojson":["59.1"],"返回日期对象的":["59.1"],"year":["59.2"],"monthindex":["59.2"],"day":["59.2"],"hours":["59.2"],"今天是2100年1月14日之前":["59.4"],"开发者可以利用这些内置对象来编写更高效":["60.0"],"功能更强大的":["60.0"],"异常对象":["60.1"],"函数构造器":["60.1"],"属性的设置和获取等":["60.2"],"它是构建其他对象的基石":["60.2"],"的灵活性使得它在处理列表和集合数据时非常便利":["60.3"],"进行字符串操作和处理":["60.4"],"还可以用于日期和时间处理":["60.5"],"用于控制流程和决策":["60.6"],"如计算时间差":["60.7"],"添加或减去日期等":["60.7"],"可以用于复杂的数值计算和处理":["60.8"],"set":["60.9","99.2","99.3","99.4","99.5"],"它们提供了更特定的功能和方法":["60.9"],"00":["61.2"],"也包含了许多的方法":["61.3"],"求":["61.5"],"的":["61.5","69.5"],"次方":["61.5"],"表示字符串中包含连续的":["62.1"],"标记子表达式的开始和结束位置":["62.2"],"并捕获匹配的子字符串":["62.2"],"匹配任意字母数字字符":["62.3"],"replace":["62.4"],"替换字符串中与正则表达式匹配的内容":["62.4"],"split":["62.4"],"表示从第一个截取到倒数第一个":["63.3"],"则自动交换":["63.4"],"比如说":["63.4"],"个字符":["63.5"],"从指定位置开始":["63.5"],"截取到最后":["63.5"],"res":["65.3","70.11"],"对响应数据做点什么":["65.4"],"在设置请求时发生了一些事情":["65.5"],"触发了一个错误":["65.5"],"可以简化服务器返回的数据":["66.1"],"处理":["66.1"],"http":["66.1"],"请求超时设置":["66.2"],"withcredentials":["66.2"],"默认类型":["66.3"],"服务不可用":["66.4"],"服务暂时无法访问":["66.4"],"请稍后再试":["66.4"],"一次封装终身受益":["66.7"],"美团后端连连点赞":["66.7"],"查看全局配置":["67.1"],"list":["67.1","68.3"],"file1":["67.5"],"记录":["67.8"],"filename":["67.8"],"查看指定文件每一行修改对应的":["67.8"],"checkout":["67.10"],"到":["67.14"],"工作区和暂存区所有文件恢复成和":["67.15"],"hard":["67.15"],"rebase":["67.16"],"i":["67.16"],"修改别名":["67.18"],"远程仓库分支名":["67.19"],"分支名":["67.20"],"强制推送":["67.21"],"downloads":["68.1"],"bash命令窗口":["68.2"],"这个文件一般在c盘的":["68.4"],"20230222161109182":["68.5"],"ddd":["69.1"],"binary":["69.2"],"0b1010":["69.2"],"二进制":["69.2"],"这样会报错":["69.3"],"应为事实上":["69.3"],"数字是没有length":["69.5"],"元组类型还可以支持自定义名称和变为可选的":["69.5"],"异构枚举":["69.6"],"可以同时包含数字和字符串":["69.6"],"那么":["69.8"],"会报错":["69.8"],"或者这样的":["69.9"],"throw":["69.11"],"es5都可以做到":["70.0"],"新的class写法只是让对象原型的写法更加清晰":["70.0"],"如果不写默认就是public":["70.4"],"ls":["70.6"],"super":["70.9"],"zs":["70.11","74.2"],"无法创建抽象类的实例":["70.11"],"res1":["70.11"],"x":["71.4","80.4"],"string":["71.4","78.8"],"args":["71.4"],"void":["71.5"],"params2":["71.5"],"默认t为boolean类型":["72.3"],"length":["72.4"],"而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程":["73.1"],"其次":["73.2"],"浏览器是不识别ts的":["73.2"],"所以在编译的时候":["73.2"],"可以直接转换":["73.3"],"有类型支持":["73.3"],"typescript":["73.5"],"但是便于后期的维护":["73.6"],"严格模式":["73.7"],"在tsconfig":["73.7"],"json中":["73.7"],"strict":["73.7"],"直接进行ts":["73.10"],"的抽象":["74.0"],"描述":["74.0"],"一样":["75.1"],"也是表示原始类型和非原始类型的集合":["75.1"],"a1":["75.1"],"a2":["75.1"],"a3":["75.1"],"baseurl":["76.0"],"用于解析非相对模块名称的基目录":["76.0"],"paths":["76.0"],"模块名到基于":["76.0"],"的路径映射的列表":["76.0"],"rootdirs":["76.0"],"根文件夹列表":["76.0"],"其组合内容表示项目运行时的结构内容":["76.0"],"typeroots":["76.0"],"包含类型声明的文件列表":["76.0"],"types":["76.0"],"需要包含的类型声明文件名列表":["76.0"],"allowsyntheticdefaultimports":["76.0"],"允许从没有设置默认导出的模块中默认导入":["76.0"],"source":["76.0"],"options":["76.0"],"sourceroot":["76.0"],"指定调试器应该找到":["76.0"],"文件而不是源文件的位置":["76.0"],"maproot":["76.0"],"指定调试器应该找到映射文件而不是生成文件的位置":["76.0"],"inlinesourcemap":["76.0"],"n2":["77.1"],"any类型":["77.1"],"定义值的别名":["77.2"],"boolean":["77.2"],"pinia":["78.2"],"element":["78.2"],"plus":["78.2"],"create":["78.4"],"进入到项目根目录":["78.4"],"install":["78.4"],"指定解析器选项":["78.6"],"parseroptions":["78.6"],"ecmaversion":["78.6"],"latest":["78.6"],"校验ecma最新版本":["78.6"],"sourcetype":["78.6"],"设置为":["78.6"],"script":["78.6"],"或者":["78.6"],"uses":["78.8"],"防止":["78.8"],"src":["78.8","90.3"],"文件夹目录下创建一个":["78.8"],"用于注册":["78.8"],"components":["78.8"],"文件夹内部全部全局组件":["78.8"],"import":["78.8"],"svgicon":["78.8"],"from":["78.8"],"type":["78.8"],"preprocessoroptions":["78.9"],"javascriptenabled":["78.9"],"additionaldata":["78.9"],"获取用户信息":["78.10"],"get":["78.10","78.12"],"request":["78.10"],"获取请求头携带token":["78.10"],"headers":["78.10"],"查看用户信息是否包含有次token用户":["78.10"],"无权访问":["78.11"],"请求地址错误":["78.11"],"服务器出现问题":["78.11"],"requserinfo":["78.12"],"退出登录":["78.12"],"文本":["79.1"],"图像等多种元素":["79.1"],"坐标值":["79.3"],"可以在":["79.3"],"渲染上下文":["79.4"],"它提供了许多":["79.4"],"来绘制图形":["79.4"],"javascript":["79.5"],"此外":["79.6"],"还可以与其他":["79.6"],"greensock":["79.7"],"等库或框架":["79.7"],"来进行高级别的动画控制":["79.7"],"在处理大量的图像和其他复杂的数据时":["79.8"],"settransform":["80.0"],"方法之前调用":["80.1"],"否则是不起作用的":["80.1"],"旋转中心点始终是画布左上角的原点":["80.1"],"如果要更改中心点":["80.1"],"font":["80.2"],"16px":["80.2"],"serif":["80.2"],"filltext":["80.2"],"world":["80.2"],"red":["80.3"],"的矩形":["80.4"],"结果缩放成":["80.4"],"并且左上角从":["80.4"],"方法取消了这个变换":["80.5"],"已绘制的图形不受影响":["80.5"],"将画布恢复到默认状态":["80.5"],"变换矩形":["80.5"],"中的":["81.0"],"globalcompositeoperation":["81.0","81.1"],"操作":["81.0"],"绘制图形":["82.1"],"新建一条路径":["82.2"],"生成之后":["82.2"],"图形绘制命令被指向到路径上生成路径":["82.2"],"生成路径的第一步":["82.2"],"叫做":["82.2"],"是辐射终止的圆的圆心坐标":["83.2"],"是终止圆的半径":["83.2"],"该方法的返回值也是一个":["83.2"],"fillstyle":["83.3","83.4"],"fillrect":["83.3"],"green":["83.4"],"fill":["85.2"],"填充颜色":["85.2"],"清除模式":["85.2"],"lineto":["85.3"],"提示":["85.3"],"上面代码中":["85.3"],"有":["85.3"],"个参数":["85.3"],"前两个参数是第一个点的坐标":["85.3"],"第三个参数和第四个参数是第二个点的坐标":["85.3"],"第三种绘制图片的方式":["85.5"],"裁剪图片":["85.5"],"img参数后面四个参数分别为原图片上面要裁剪的起点位置和终点位置":["85.5"],"最后四个参数分别为画布的位置和要渲染的矩形宽高":["85.5"],"rtl":["85.6"],"预测量文本宽度":["85.6"],"show":["87.1"],"一等奖":["87.2"],"绘制时针":["88.3"],"urldata":["90.3"],"todataurl":["90.3"],"img":["90.3"],"image":["90.3"],"body":["90.3","98.1"],"appendchild":["90.3","98.1"],"downloada":["90.3"],"createelement":["90.3"],"download":["90.3"],"签名":["90.3"],"linewidth":["90.4"],"canvas":["90.4"],"pointerleave":["92.1"],"on":["92.2","93.7"],"click":["92.2","93.7"],"e":["92.2"],"的特点":["93.1"],"用法和示例":["93.1"],"的设备上也能正常运行":["93.3"],"方便开发者查阅和学习":["93.4"],"事件处理等":["93.5"],"开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏":["93.5"],"使开发者能够创建适应不同屏幕大小和分辨率的应用":["93.6"],"onclick":["93.7"],"点击事件处理函数":["93.7"],"将精灵添加到场景":["93.7"],"stage":["93.7","99.1"],"addchild":["93.7","101.1","101.2"],"相对于左上角":["94.2"],"rotation":["94.2","101.2"],"旋转":["94.2"],"pivot":["94.2"],"设置文字锚点":["95.1"],"anchor":["95.1"],"endfill":["95.2"],"mask":["95.2"],"使用图形作为精灵的遮罩":["95.2"],"设置精灵的锚点":["97.1"],"pointerout":["97.2"],"0xff0000":["97.3"],"quality":["97.3"],"将轮廓滤镜添加到精灵上":["97.3"],"将应用画布添加到dom中":["98.1"],"document":["98.1"],"设置透明度":["98.3","101.1","101.2"],"alpha":["98.3","101.1","101.2"],"01":["98.4"],"position":["99.3","99.4","99.5"],"对多个资源分组":["101.0"],"设置容器属性即可应用到容器内的精灵":["101.0"],"math":["101.1","101.2"],"pi":["101.1","101.2"],"设置缩放":["101.1","101.2"],"scale":["101.1","101.2"],"将精灵添加到舞台":["101.1","101.2"],"创建精灵2":["101.1"],"旋转45度":["101.2"],"设置宽高时":["102.1"],"它的默认宽度是":["102.1"],"300px":["102.1"],"默认高度是":["102.1"],"stroke":["102.3","102.7","102.8"],"000000":["102.3"],"pink":["102.4"],"none":["102.5","102.7"],"cyan":["102.8"],"中文网":["103.0"],"输入以下命令":["103.3"],"mkdir":["103.3"],"echo":["103.3"],"about1":["103.5","103.6"],"关于2":["103.5","103.6"],"about2":["103.5"],"text代表每一项的名字":["103.5"],"link是连接的位置":["103.5"],"算法":["103.5"],"这种是没有下拉菜单的版本":["103.5"],"️":["103.7"],"运行":["103.8"],"or":["103.8"],"打开":["103.8"],"项目":["103.8"],"点击分支":["103.8"],"可以看到会多个一个名":["103.8"]},{"0":["11.2","11.4","11.6","11.7","13.16","13.17","38.17","47.2","49.4","63.21","85.2","85.6","92.1","95.1","97.1"],"1":["11.2","11.4","11.6","11.7","13.16","13.17","32.12","32.13","53.2","72.4","74.7"],"2":["13.10","32.7","32.8","37.13","74.7","85.6"],"3":["13.10","37.13","50.0","63.4","63.5","97.1"],"4":["13.7","34.6","38.12","63.16","67.15"],"5":["11.8","11.11","28.6","83.1","85.6","87.2","92.1","95.1"],"6":["67.7"],"7":["37.2","70.11"],"10":["40.1"],"15":["83.1","88.3"],"16":["61.5"],"18":["40.3","74.2"],"20":["72.5","75.1"],"30":["40.1","71.3"],"50":["32.2"],"80":["11.4"],"98":["61.2"],"100":["32.2","37.2","70.2","82.1","83.4","88.3"],"123":["71.5","74.5","77.1"],"127":["11.2","11.4","11.6","11.7","13.16","13.17"],"150":["81.1"],"180":["69.13"],"200":["82.1"],"222":["34.3"],"250":["81.1"],"255":["13.10"],"300":["82.1","85.5","85.6"],"320":["20.11"],"400":["83.3","85.2"],"401":["15.14"],"456":["71.5"],"500":["15.14","84.0"],"600":["85.2","85.5","90.4"],"666":["34.8"],"750":["90.4"],"1234":["69.14"],"8080":["11.3"],"last":["5.0"],"运行nginx":["5.1"],"server":["11.2","11.7"],"running":["11.2","11.7","13.16","13.17"],"at":["11.2","11.7","13.16","13.17"],"http":["11.2","11.4","11.6","11.7","15.13","31.6","66.4"],"logo":["11.3"],"png":["11.3","103.3"],"console":["11.4","31.7","36.5","40.7","50.0","69.14","70.8"],"log":["11.4","13.17","31.7","32.28","32.29","36.5","37.9","37.10","40.7","50.0","69.14","70.8"],"对象":["11.5","69.3"],"encoded":["11.8"],"extended":["11.8"],"false":["11.8","25.4","32.29","33.5","36.21","73.7"],"第三方中间件":["11.8"],"ie10":["11.11"],"chrome4":["11.11"],"firefox3":["11.11"],"text":["11.14","31.7"],"plain":["11.14"],"服务器成功响应预检请求后":["11.15"],"才会发送真正的请求":["11.15"],"并且携带真实数据":["11.15"],"接口项目":["12.1"],"读写和操作数据库":["12.1"],"创建实用的命令行工具辅助前端开发":["12.1"],"etc":["12.1","28.4"],"操作":["12.2","54.0"],"网络操作":["12.2"],"线程池里的任务是通过队列和事件循环的机制来执行":["12.2"],"追加和读取":["13.1"],"jpg":["13.3"],"文件写入成功":["13.3"],"b":["13.4","67.10","71.4"],"pipe":["13.4"],"可以将可读流中的内容":["13.4"],"直接输出到可写流中":["13.4"],"写入成功":["13.6"],"else":["13.6","49.4","49.5"],"关闭流":["13.7"],"end":["13.7"],"buf":["13.8"],"tostring":["13.8","59.1","69.12","69.14"],"将":["13.8"],"数据转为字符串":["13.8"],"function":["13.9"],"err":["13.9","15.14"],"data":["13.9"],"0xaa":["13.10"],"buf3":["13.10"],"allocunsafe":["13.10"],"message":["13.12","15.2","25.1","65.5","78.11"],"如使用何种语法格式引用模块和向外暴露成员":["14.2"],"指向的对象为准":["14.7"],"报错":["14.11","14.22","39.3","72.3","74.6"],"若失败则报错":["14.13"],"可以从npm":["14.15"],"官网中搜索自己所需要的包":["14.15"],"要快的":["14.16"],"检查镜像源是否下载成功":["14.17"],"删除":["14.18"],"unpublish":["14.18"],"force":["14.18","67.21"],"e":["14.21","14.22","70.10"],"加载失败":["14.21"],"终端报错":["14.21"],"cannot":["14.23"],"find":["14.23"],"module":["14.23"],"xxx":["14.23"],"使用标记删除的形式":["15.3"],"模拟删除的动作":["15.3"],"即在表中设置状态字段":["15.3"],"标记当前的数据是否被删除":["15.3"],"status":["15.3"],"服务器需要完成页面内容的拼接":["15.5"],"若请求比较多":["15.5"],"会对服务器造成一定访问压力":["15.5"],"不利于前后端分离":["15.5"],"开发效率低":["15.5"],"技术能解决":["15.6"],"问题":["15.6"],"其他页面前后端分离的开发模式":["15.7"],"logout":["15.11"],"清空当前客户端的session信息":["15.11"],"destroy":["15.11"],"请求头":["15.13"],"authorization":["15.13"],"字段中":["15.13"],"加上":["15.13"],"bearer":["15.13"],"前缀":["15.13"],"next":["15.14"],"if":["15.14"],"name":["15.14","25.5","75.1"],"unauthorizederror":["15.14"],"return":["15.14","51.2","51.3","51.4","51.6","66.3","70.8","70.9"],"invalid":["15.14"],"unknown":["15.14"],"error":["15.14","66.3","70.7"],"用的最多的交集选择器":["16.5"],"元素选择器配合类名选择器":["16.5"],"例如":["16.5"],"center":["16.6"],"color":["16.9","16.12","26.12"],"red":["16.9","16.12","26.12","81.1"],"选到2号p标签":["16.12"],"blue":["16.12"],"属性且属性值含有":["16.13"],"table":["16.14"],"转换为块级元素并一行显示":["16.14"],"权重最高":["17.1"],"在vscode中":["17.1"],"鼠标悬浮在样式上":["17.1"],"会弹出来显示选择器":["17.1"],"d6d6d6":["19.0"],"右下角拖动块":["19.0"],"resizer":["19.0"],"元素允许使用多个":["20.0"],"元素":["20.0"],"元素可以链接不同的音频文件":["20.0"],"浏览器将使用第一个支持的音频文件":["20.0"],"标签中使用":["20.5"],"定义在媒体播放器文本轨迹":["20.6"],"edge":["20.7"],"只有在静音下可以使用":["20.7"],"时间轴时间改变":["20.10"],"ontimeupdate":["20.10"],"时间改变了":["20.10"],"语法糖下进行":["25.0"],"中需要通过":["25.2"],"的形式才能使用":["25.2"],"函数可以接收原始数据类型与引用数据类型":["25.2"],"函数只能接收引用数据类型":["25.2"],"lisi":["25.5"],"搜索关键字":["25.7"],"p":["25.7","56.2"],"是否开启深度监听":["25.16"],"true":["25.17","32.1","36.15","69.10","77.2"],"deep":["25.17"],"旧的值":["25.18","25.19","25.20"],"vue":["25.24"],"img":["25.25","68.3"],"卸载完成":["25.28"],"第四个":["25.29"],"prevnode":["25.29"],"上一个虚拟节点":["25.29"],"钩子中可用":["25.29"],"div":["25.31"],"宽度":["25.31"],"高度":["25.31"],"具名插槽":["26.1"],"作用域插槽":["26.1"],"实现父子组件通信":["26.1"],"数据就可以在模板中使用了":["26.2"],"但是切记":["26.2"],"是只读的":["26.2"],"只能读取":["26.2"],"不能修改":["26.2"],"自定义事件可以实现子组件给父组件传递数据":["26.3"],"都是原生":["26.4"],"vue2中却不是这样的":["26.4"],"在vue2中组件标签需要通过native修饰符才能变为原生dom事件":["26.4"],"定义就变为自定义事件了":["26.5"],"let":["26.5"],"npmjs":["26.6"],"com":["26.6"],"package":["26.6"],"msg1":["26.7"],"defineprops":["26.8"],"接受了某一个属性":["26.8"],"方法返回的对象身上就没有相应属性与属性值":["26.8"],"button":["26.9","27.17"],"click":["26.9","27.17","90.3"],"handler":["26.9"],"点击我获取父组件实例":["26.9"],"获取存储的数值":["26.10"],"使用方式参照官网":["26.11"],"父组件决定子组件的结构与外观":["26.12"],"span":["26.12"],"style":["26.12"],"done":["26.12"],"green":["26.12","83.2"],"title":["26.12"],"或者":["27.2"],"非ts":["27.6"],"子组件模板中的表达式只能访问子组件的作用域":["27.10"],"loading":["27.13"],"下":["27.14"],"需要通过ref":["27.16"],"reactive":["27.16"],"添加响应式":["27.16"],"onchangemsg":["27.17"],"改变msg":["27.17"],"save":["28.4"],"this":["28.4"],"as":["28.4"],"future":["28.4"],"projects":["28.4"],"并且它是预配置的":["28.5"],"并且支持大部分rollup插件":["28.5"],"项目的目录结构":["28.6"],"更好的支持typescript":["29.1"],"全局api的修改":["29.3"],"将原来的全局api转移到应用对象":["29.3"],"模板语法变化":["29.3"],"dom":["31.1"],"而更新页面":["31.1"],"将处理结果更新到":["31.2"],"html":["31.2","35.4"],"页面中":["31.2"],"可选的密码用于认证用途":["31.4"],"方法中参数设置为":["31.5"],"错误信息":["31.6"],"post":["31.6"],"xxxx":["31.6"],"xml":["31.7"],"请求成功后的回调函数":["31.7"],"请求失败后的回调函数":["31.7"],"abc":["32.1","71.4"],"undefined":["32.2","36.19","69.7"],"只有一个元素的数组":["32.14","32.17"],"执行某些操作":["32.30"],"这样结构会更加的清晰":["33.1"],"如果":["33.1"],"后的添加表达式不是布尔值":["33.1"],"会转换为布尔值然后再运算":["33.1"],"什么奖励也没有":["33.2"],"啥也没有":["33.2"],"注意":["33.2","33.9","80.2","80.4"],"语句中只会有一个代码块被执行":["33.2"],"一旦有执行的代码块":["33.2"],"下边的条件都不会在继续判断了":["33.2"],"所以一定要注意":["33.2"],"条件的编写顺序":["33.2"],"如果所有的比较都是":["33.3"],"则执行":["33.3"],"后的语句":["33.3"],"时":["33.5"],"循环结束":["33.5"],"while语句是先执行再判断":["33.6"],"实质的区别":["33.6"],"while语句可以确保循环至少执行一次":["33.6"],"tip":["33.9","75.1"],"不应该用它来遍历数组":["33.9"],"因为它还会遍历从对象原型继承的可枚举属性":["33.9"],"用于遍历对象属性":["33.10"],"而":["33.10"],"用于遍历可迭代集合":["33.10"],"通过此代码块可以实现大量代码的重复使用":["34.0"],"大肘子":["34.6"],"函数的参数可以有":["34.6"],"也可以没有个数不限":["34.6"],"调用函数的时候":["34.7"],"函数名括号里面的是实参":["34.7"],"多个参数中间用逗号分隔":["34.7"],"形参的个数可以和实参个数不匹配":["34.7"],"但是结果不可预计":["34.7"],"我们尽量要匹配":["34.7"],"返回":["34.8"],"fun2":["34.8"],"函数返回的结果是":["34.8"],"同时还可以结束当前的函数体内的代码":["34.9"],"应用程序":["35.0"],"有两种方式":["35.2"],"在对象中用方法来表示":["36.1"],"常用动词":["36.1"],"alert":["36.3","93.7"],"大家好啊":["36.3"],"方法名":["36.4"],"千万别忘记添加小括号":["36.4"],"返回一个给定对象自身可枚举属性值的数组":["36.6"],"hasownproperty":["36.6"],"判断一个属性是否是对象自身的属性":["36.6"],"非继承的属性":["36.6"],"configurable":["36.12"],"07":["37.2"],"000000000000001":["37.2"],"worl":["38.4","63.8"],"qux":["38.13","63.17"],"age":["39.3","75.1"],"没有声明过这个变量":["39.3"],"script":["39.4"],"先销毁再创建":["39.4"],"而当时又没有那个对象可保存":["39.5"],"就可用":["39.5"],"来填充该变量":["39.5"],"a":["39.6","69.5"],"不存在":["39.6"],"虽然两个变量的值相等":["39.18"],"但是两个变量保存了两个不同的内存地址":["39.18"],"产生影响":["39.19"],"也就是两个变量指向堆内存中同一个对象":["39.20"],"所以不要重复声明同一个变量":["40.4"],"避免":["40.4"],"syntaxerror":["40.4"],"每次迭代循环声明一个新的迭代变量":["40.6"],"每个":["40.6"],"引用的都是不同的变量实例":["40.6"],"这种风格也适用于":["40.6"],"in":["40.6"],"of":["40.6"],"value":["41.1","58.2","90.3"],"设置元素的属性":["41.1"],"class":["41.2"],"highlight":["41.2"],"这只是":["43.0"],"中的一些常见对象":["43.0"],"还有其他对象和方法可用于处理浏览器窗口和与浏览器交互的其他方面":["43.0"],"请注意":["43.0"],"在不同的浏览器中可能会有一些差异":["43.0"],"因此在编写跨浏览器的代码时需要注意兼容性":["43.0"],"reload":["44.1","44.2"],"重新加载当前页面":["44.1"],"platform":["45.2"],"屏幕的颜色深度":["46.1"],"pixeldepth":["46.2"],"位":["46.2"],"document":["47.1"],"当前窗口加载的文档对象":["47.1"],"作为函数内部与外部连接起来的一座桥梁":["48.1"],"的方式来减少调用频率":["49.1"],"则重新计时":["49.2"],"输出2":["50.0"],"因为原始对象没有被修改":["50.0"],"infinity":["52.1"],"catch":["53.1"],"reason":["53.1"],"在以上的代码中":["53.2"],"我们创建了一个":["53.2"],"的新实例":["53.2"],"并传递了一个在":["53.2"],"秒后":["53.2"],"的":["53.2"],"然后调用了":["53.2"],"并传递了一个将":["53.2"],"resolved":["53.2"],"值记录到控制台的函数":["53.2"],"删除或移动节点等操作":["54.0"],"以下是一些常用的":["54.0"],"获取或设置元素的文本内容":["54.1"],"开发中不可或缺的一部分":["54.4"],"touchend":["55.4"],"touchmove":["55.4"],"属性来检查目标元素是否匹配指定的选择器":["55.5"],"并执行相应的操作":["55.5"],"等":["56.1","62.3"],"这将从":["56.3"],"中移除":["56.3"],"这将返回元素的计算样式对象":["57.1"],"你可以使用":["57.1"],"方法来获取指定属性的值":["57.1"],"可以使用":["57.2"],"setattribute":["57.2"],"property":["58.2"],"json":["59.1"],"tolocaledatestring":["59.1"],"将日期对象转换为本地日期格式的字符串":["59.1"],"tolocalestring":["59.1"],"将日期对象转换为本地日期和时间格式的字符串":["59.1"],"tolocaletimestring":["59.1"],"将日期对象转换为本地时间格式的字符串":["59.1"],"将日期对象转换为字符串":["59.1"],"totimestring":["59.1"],"将日期对象的时间部分转换为字符串":["59.1"],"toutcstring":["59.1"],"时间格式的字符串":["59.1"],"minutes":["59.2"],"seconds":["59.2"],"milliseconds":["59.2"],"setdate":["59.3"],"getdate":["59.3"],"今天是2100年1月14日之后":["59.4"],"程序":["60.0"],"内置对象最大的优点就是帮助我们快速开发":["60.0"],"arguments":["60.1"],"函数参数集合":["60.1"],"用于处理不同的任务和需求":["60.9"],"sqrt":["61.5"],"平方根":["61.5"],"求某数的平方根":["61.5"],"数学对象提供了比较多的方法":["61.5"],"这里不要求强记":["61.5"],"通过演示数学对象的使用":["61.5"],"加深对对象的理解":["61.5"],"子串":["62.1"],"正则表达式可以包含以下元字符和模式修饰符":["62.1"],"使用正则表达式将字符串拆分为数组":["62.4"],"表示前面的大":["63.3"],"后面的小":["63.3"],"返回值为空":["63.3"],"相当于截取的是第一个字符":["63.4"],"substr":["63.4"],"从倒数第几个开始":["63.5"],"对响应错误做点什么":["65.4"],"config":["65.5"],"网络错误":["66.1"],"跨域请求是否需要携带":["66.2"],"cookie":["66.2"],"请求配置":["66.3"],"promise":["66.3","66.4","78.11"],"reject":["66.3","66.4","78.11"],"版本不受支持":["66.4"],"default":["66.4","78.8"],"异常问题":["66.4"],"请联系管理员":["66.4"],"headers":["66.5"],"signheader":["66.5"],"查看局部配置":["67.1"],"file2":["67.5"],"filename":["67.6"],"比较两个分支指定文件的差异":["67.7"],"分支1":["67.7"],"分支2":["67.7"],"记录和作者":["67.8"],"blame":["67.8"],"工作区和暂存区所有文件恢复成和指定版本一样":["67.15"],"版本号":["67.15"],"head":["67.16"],"rename":["67.18"],"旧名":["67.18"],"新名":["67.18"],"ssh目录下":["68.4"],"octal":["69.2"],"0o744":["69.2"],"八进制s":["69.2"],"返回的是一个":["69.3"],"y":["69.5","94.2"],"boolean":["69.5"],"no":["69.6"],"yes":["69.6"],"不能":["69.8"],"赋予":["69.8"],"while":["69.10"],"aaa":["69.11"],"male":["69.13"],"abcd":["69.14"],"更像面向对象编程的语法而已":["70.0"],"我叫zs":["70.1"],"我18了":["70.1"],"可以调用从父中继承得到的方法":["70.2"],"受保护":["70.6"],"及其子类中访问":["70.6"],"peter":["70.7"],"sayyyy":["70.8"],"aa":["70.8","72.2"],"可以使用this调用":["70.8"],"f":["70.10"],"我的名字是zs":["70.11"],"年龄是7":["70.11"],"zs":["71.2","74.3","75.1"],"c":["71.4","74.5"],"bb":["72.2"],"因为只有一个参数t":["72.3"],"tofixed":["72.4"],"张麻子":["72.5"],"number没有length属性":["72.7"],"ts文件会先编译为js文件":["73.2"],"有强大的代码类型提示":["73.3"],"true为开启严格模式":["73.7"],"false为关闭":["73.7"],"启动文件名":["73.10"],"zhangsan":["74.1"],"hello":["74.4"],"字面量模式虽然可以赋值任意类型":["75.1"],"但是赋完值之后":["75.1"],"这个对象类型是没有办法去做一个修改的":["75.1"],"如果给它增加一个age属性":["75.1"],"它是没有办法去做增加的":["75.1"],"无法对这个变量的进行任何赋值的一个操作":["75.1"],"生成单个":["76.0"],"soucemaps":["76.0"],"而不是将":["76.0"],"sourcemaps":["76.0"],"生成不同的文件":["76.0"],"inlinesources":["76.0"],"将代码与":["76.0"],"生成到一个文件中":["76.0"],"要求同时设置了":["76.0"],"或":["76.0"],"属性":["76.0"],"其他选项":["76.0"],"experimentaldecorators":["76.0"],"启用装饰器":["76.0"],"emitdecoratormetadata":["76.0"],"为装饰器提供元数据的支持":["76.0"],"变量s的值":["77.2"],"只能是上面value定义的值":["77.2"],"axios":["78.2","78.10"],"echarts":["78.2"],"等技术栈":["78.2"],"安装全部依赖":["78.4"],"安装完依赖运行程序":["78.4"],"run":["78.4"],"代码在ecmascript模块中":["78.6"],"eslint支持使用第三方插件":["78.6"],"在使用插件之前":["78.6"],"您必须使用npm安装它":["78.6"],"该eslint":["78.6"],"前缀可以从插件名称被省略":["78.6"],"plugins":["78.6"],"eslint规则":["78.6"],"rules":["78.6"],"install":["78.8"],"object":["78.8"],"keys":["78.8"],"foreach":["78.8"],"key":["78.8"],"在入口文件引入":["78.8"],"通过":["78.8"],"use":["78.8"],"方法安装自定义插件":["78.8"],"gloablcomponent":["78.8"],"less":["78.9"],"后面的":["78.9"],"不要忘记":["78.9"],"不然会报错":["78.9"],"配置完毕你会发现":["78.9"],"提供这些全局变量可以在组件样式中使用了":["78.9"],"没有返回失败的信息":["78.10"],"获取用户信息失败":["78.10"],"安装":["78.10"],"最后通过":["78.10"],"测试接口":["78.10"],"无网络":["78.11"],"type":["78.11"],"export":["78.11"],"reqlogout":["78.12"],"可以让开发人员创造出各种视觉效果":["79.1"],"上放置和移动元素":["79.3"],"文本":["79.4"],"图片等元素":["79.4"],"来动态地生成绘图元素":["79.5"],"从而实现更加复杂和丰富的视觉效果":["79.5"],"和库集成":["79.6"],"以创造更加丰富和定制化的用户体验":["79.6"],"的动画效果在各种设备与浏览器上都表现良好":["79.7"],"是非常适合移动设备和桌面浏览器上创建动态效果的途径":["79.7"],"的渲染速度可能会变慢":["79.8"],"取消前面的图像变换":["80.0"],"需要使用":["80.1"],"translate":["80.1"],"方法移动画布":["80.1"],"上面代码会显示一个水平倒转的":["80.2"],"高度放大":["80.2"],"倍的":["80.2"],"负向缩放本质是坐标翻转":["80.2"],"所针对的坐标轴就是画布左上角原点的坐标轴":["80.2"],"移动到":["80.4"],"多个":["80.4"],"方法具有叠加效果":["80.4"],"所以第二个矩形的左上角回到":["80.5"],"可以得到不同的效果":["81.0"],"fillrect":["82.1","83.4"],"closepath":["82.2"],"闭合路径之后图形绘制命令又重新指向到上下文中":["82.2"],"不是必需的":["82.2"],"stroke":["83.1","86.1","86.2"],"上面代码中":["83.1","83.3"],"线条的宽度为":["83.1"],"线条的末端和交点都改成圆角":["83.1"],"并且设置为虚线":["83.1"],"white":["83.2"],"生成辐射样式以后":["83.2"],"用这个样式填充一个矩形":["83.2"],"图像加载成功以后":["83.3"],"使用":["83.3"],"生成图像样式":["83.3"],"然后使用这个样式填充指定区域":["83.3"],"第五个参数是半径":["85.3"],"然后":["85.3"],"与":["85.3"],"形成一条直线":["85.3"],"形成第二条直线":["85.3"],"弧线就是与这两根直线相切的部分":["85.3"],"fill":["85.4","85.6"],"arc":["85.6"],"math":["85.6"],"pi":["85.6"],"二等奖":["87.2"],"三等奖":["87.2"],"000":["88.3"],"requestanimationframe":["88.3"],"href":["90.3"],"改变颜色":["90.3"],"onchange":["90.3"],"strokestyle":["90.3"],"destination":["90.3"],"out":["90.3"],"clearrect":["90.3"],"width":["90.4"],"height":["90.4"],"帮助读者快速上手这个强大的库":["93.1"],"clicked":["93.7"],"锚点":["94.2"],"如旋转":["94.2"],"位移的基点":["94.2"],"x":["94.2"],"也是从左上角开始计算":["94.2"],"将矩形添加到舞台":["94.2"],"stage":["94.2","95.1","95.2","97.1","98.3","99.2","99.3","99.4","99.5","101.1","101.2"],"addchild":["94.2","95.1","95.2","97.1","98.3","99.1","99.2","99.3","99.4","99.5"],"set":["95.1","97.1"],"将文字添加到舞台":["95.1"],"anchor":["97.1"],"将精灵添加到舞台":["97.1","98.3"],"sprite":["97.3"],"view":["98.1"],"any":["98.1"],"app":["99.5"],"sprite2":["101.1","101.2"],"创建精灵2":["101.2"],"150px":["102.1"],"这点和":["102.1"],"canvas":["102.1"],"是一样的":["102.1"],"000000":["102.7"],"z":["102.9"],"md":["103.3"],"输入":["103.3"],"image":["103.3"],"启动项目":["103.3"],"可以看到项目已经运行起来了":["103.3"],"的根目录是从":["103.5"],"开始算的":["103.5"],"比如你在":["103.5"],"下创建一个":["103.5"],"notes":["103.5"],"那么它的路径就是":["103.5"],"about2":["103.6"],"的分支":["103.8"],"这个分支存放着就是打包好的代码":["103.8"],"settings":["103.8"],"会有一个地址":["103.8"],"这个地址就是部署之后的地址了":["103.8"],"这个项目是实时更新的不需要你重新部署操作":["103.8"],"你要做的就是更新你的":["103.8"],"分支即可":["103.8"],"如果觉得此网站对你来说有帮助":["103.8"],"可以点个收藏呦":["103.8"]}]'},e={"0.0":{t:"# 关于作者\r",p:`qq:2357490894
微信: !img
`,l:"about/index.html",a:"关于作者"},"1.0":{t:"# 算法\r",p:"\r",l:"algorithms/demo1.html",a:"算法"},"1.1":{t:"123",p:"",l:"algorithms/demo1.html#_123",a:"_123"},"2.0":{t:"# demo2",p:"",l:"algorithms/demo2.html",a:"demo2"},"3.0":{t:"# demo3",p:"",l:"algorithms/demo3.html",a:"demo3"},"4.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"algorithms/index.html",a:"该内容正在努力建设中"},"5.0":{t:"Nginx 部署刷新 404 问题\r",p:`location / {
root   C:\\Users....;
index  index.html index.htm;
try_files $uri $uri/ @Qrouter; // 加上这 ...`,l:"backEnd/linux/nginx.html",a:"nginx-部署刷新-404-问题"},"5.1":{t:"Nginx部署项目\r",p:`1、 yarn build打包项目
2、 打开nginx.conf文件，配置对应的信息
3、 检查配置文件是否配置成功
nginx -t -c D:\\nginx-1.16.1\\conf\\nginx.c ...`,l:"backEnd/linux/nginx.html#nginx部署项目",a:"nginx部署项目"},"8.0":{t:"# MySql",p:"",l:"backEnd/mysql/index.html",a:"mysql"},"9.0":{t:"# 安装Mysql",p:"",l:"backEnd/mysql/install.html",a:"安装mysql"},"11.0":{t:"# Express\r",p:`官网传送门

基于 Node.js 平台，快速、开放、极简的 Web 开发框架

Express 是用于快速创建服务器的第三方模块。
`,l:"backEnd/nodejs/Express.html",a:"express"},"11.1":{t:"Express 初体验\r",p:"\r",l:"backEnd/nodejs/Express.html#express-初体验",a:"express-初体验"},"11.2":{t:"基本使用\r",p:`安装 Express：
npm install express

创建服务器，监听客户端请求，并返回内容：
const express = require('express')
// 创建 web 服 ...`,l:"backEnd/nodejs/Express.html#基本使用",a:"基本使用"},"11.3":{t:"托管静态资源\r",p:`
通过 express.static() 方法可创建静态资源服务器，向外开放访问静态资源。
Express 在指定的静态目录中查找文件，并对外提供资源的访问路径，存放静态文件的目录名不会出现在 URL ...`,l:"backEnd/nodejs/Express.html#托管静态资源",a:"托管静态资源"},"11.4":{t:"Express 路由\r",p:`创建路由模块：
// router.js

const express = require('express')
// 创建路由对象
const router = express.Router()

 ...`,l:"backEnd/nodejs/Express.html#express-路由",a:"express-路由"},"11.5":{t:"Express 中间件\r",p:`
中间件是指流程的中间处理环节
服务器收到请求后，可先调用中间件进行预处理
中间件是一个函数，包含 req, res, next 三个参数，next() 参数把流转关系交给下一个中间件或路由

中间件 ...`,l:"backEnd/nodejs/Express.html#express-中间件",a:"express-中间件"},"11.6":{t:"全局中间件\r",p:`
通过 app.use() 定义的中间件为全局中间件

const express = require('express')
const app = express()

// 定义第一个全局中间件
 ...`,l:"backEnd/nodejs/Express.html#全局中间件",a:"全局中间件"},"11.7":{t:"局部中间件\r",p:`const express = require('express')
const app = express()

// 定义中间件函数
const mw1 = (req, res, next) =& ...`,l:"backEnd/nodejs/Express.html#局部中间件",a:"局部中间件"},"11.8":{t:"中间件分类\r",p:`
应用级别的中间件


通过 app.use() 或 app.get() 或 app.post() ，绑定到 app 实例上的中间件


路由级别的中间件


绑定到 express.Router() ...`,l:"backEnd/nodejs/Express.html#中间件分类",a:"中间件分类"},"11.9":{t:"CORS 跨域资源共享\r",p:"\r",l:"backEnd/nodejs/Express.html#cors-跨域资源共享",a:"cors-跨域资源共享"},"11.10":{t:"cors 中间件解决跨域\r",p:`
安装中间件：npm install cors
导入中间件：const cors = require('cors')
配置中间件：app.use(cors())

`,l:"backEnd/nodejs/Express.html#cors-中间件解决跨域",a:"cors-中间件解决跨域"},"11.11":{t:"CORS\r",p:`
CORS（Cross-Origin Resource Sharing，跨域资源共享）解决跨域，是通过 HTTP 响应头决定浏览器是否阻止前端 JS 代码跨域获取资源
浏览器的同源安全策略默认会阻止网 ...`,l:"backEnd/nodejs/Express.html#cors",a:"cors"},"11.12":{t:"CORS 常见响应头\r",p:`
Access-Control-Allow-Origin：制定了允许访问资源的外域 URL

res.setHeader('Access-Control-Allow-Origin', 'http:// ...`,l:"backEnd/nodejs/Express.html#cors-常见响应头",a:"cors-常见响应头"},"11.13":{t:"CORS 请求分类\r",p:"\r",l:"backEnd/nodejs/Express.html#cors-请求分类",a:"cors-请求分类"},"11.14":{t:"简单请求\r",p:`
请求方式：GET、POST、HEAD 三者之一
HTTP 头部信息不超过以下几种字段：无自定义头部字段、Accept、Accept-Language、Content-Language、DPR、Dow ...`,l:"backEnd/nodejs/Express.html#简单请求",a:"简单请求"},"11.15":{t:"预检请求\r",p:`
请求方式为 GET、POST、HEAD 之外的请求 Method 类型
请求头中包含自定义头部字段
向服务器发送了 application/json 格式的数据

在浏览器与服务器正式通信之前，浏览 ...`,l:"backEnd/nodejs/Express.html#预检请求",a:"预检请求"},"12.0":{t:"# Nodejs 介绍\r",p:`官网传送门
`,l:"backEnd/nodejs/index.html",a:"nodejs-介绍"},"12.1":{t:"初识 Nodejs\r",p:`
Node.js® is an open-source, cross-platform JavaScript runtime environment.
Node.js® 是一个基于 Chrome V8 ...`,l:"backEnd/nodejs/index.html#初识-nodejs",a:"初识-nodejs"},"12.2":{t:"Nodejs 的特点\r",p:`
异步、非阻塞 IO 模型
事件循环
单线程
总结：轻量和高效
Node.js 的性能和效率非常高。

传统的 Java 语言是一个请求开启一个线程，当请求处理完毕后就关闭这个线程。而 Node.js ...`,l:"backEnd/nodejs/index.html#nodejs-的特点",a:"nodejs-的特点"},"12.3":{t:"使用 Node.js 时的劣势\r",p:`
程序运行不稳定，可能会出现服务不可用的情况
程序运行效率较低，每秒的请求数维持在一个较低的水平

`,l:"backEnd/nodejs/index.html#使用-node-js-时的劣势",a:"使用-node-js-时的劣势"},"13.0":{t:"# Nodejs内置模块\r",p:"\r",l:"backEnd/nodejs/innerModule.html",a:"nodejs内置模块"},"13.1":{t:"fs 文件系统模块\r",p:`
fs 模块中所有的操作都有两种形式可供选择:同步和异步
同步文件系统会阻塞程序的执行，也就是除非操作完毕，否则不会向下执行代码
异步文件系统不会阻塞程序的执行，而是在操作完成时，通过回调函数将结果返 ...`,l:"backEnd/nodejs/innerModule.html#fs-文件系统模块",a:"fs-文件系统模块"},"13.2":{t:"读取文件\r",p:"\r",l:"backEnd/nodejs/innerModule.html#读取文件",a:"读取文件"},"13.3":{t:"简单文件读取\r",p:`语法格式：
fs.readFile(path[, options], callback)


path：文件路径
options：配置选项，若是字符串则指定编码格式

encoding：编码格式
fl ...`,l:"backEnd/nodejs/innerModule.html#简单文件读取",a:"简单文件读取"},"13.4":{t:"流式文件读取\r",p:`
简单文件读取的方式会一次性读取文件内容到内存中，若文件较大，会占用过多内存影响系统性能，且读取速度慢
大文件适合用流式文件读取，它会分多次将文件读取到内存中

var fs = require('f ...`,l:"backEnd/nodejs/innerModule.html#流式文件读取",a:"流式文件读取"},"13.5":{t:"写入文件\r",p:"\r",l:"backEnd/nodejs/innerModule.html#写入文件",a:"写入文件"},"13.6":{t:"简单文件写入\r",p:`语法格式：
fs.writeFile(file, data[, options], callback)


file：文件路径
data：写入内容
options：配置选项，包含 encoding,  ...`,l:"backEnd/nodejs/innerModule.html#简单文件写入",a:"简单文件写入"},"13.7":{t:"流式文件写入\r",p:`// 同步、异步、简单文件的写入都不适合大文件的写入，性能较差，容易导致内存溢出
var fs = require('fs')

// 创建一个可写流
var ws = fs.createWriteS ...`,l:"backEnd/nodejs/innerModule.html#流式文件写入",a:"流式文件写入"},"13.8":{t:"Buffer 缓冲区\r",p:`
Buffer 缓冲区文档


Buffer 的结构与数组类似，操作方法也与数组类似
数组不能存储二进制文件，Buffer 是专门存储二进制数据的
Buffer 存储的是二进制数据，显示时以 16 进 ...`,l:"backEnd/nodejs/innerModule.html#buffer-缓冲区",a:"buffer-缓冲区"},"13.9":{t:"路径动态拼接问题 `__dirname`\r",p:`
在使用 fs 模块操作文件时，如果提供的操作路径是以 ./ 或 ../ 开头的相对路径时，容易出现路径动态拼接错误的问题
原因：代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操 ...`,l:"backEnd/nodejs/innerModule.html#路径动态拼接问题-dirname",a:"路径动态拼接问题-dirname"},"13.10":{t:"其它操作\r",p:`验证路径是否存在：

fs.exists(path, callback)
fs.existsSync(path)

获取文件信息：

fs.stat(path, callback)
fs.stat(p ...`,l:"backEnd/nodejs/innerModule.html#其它操作",a:"其它操作"},"13.11":{t:"path 路径模块\r",p:`path 模块是 Node.js 官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。
`,l:"backEnd/nodejs/innerModule.html#path-路径模块",a:"path-路径模块"},"13.12":{t:"路径拼接 `path.join()`\r",p:`const path = require('path')
const fs = require('fs')

// 注意 ../ 会抵消前面的路径
// ./ 会被忽略
const pathStr = ...`,l:"backEnd/nodejs/innerModule.html#路径拼接-path-join",a:"路径拼接-path-join"},"13.13":{t:"获取路径中文件名 `path.basename()`\r",p:`使用 path.basename() 方法，可以获取路径中的最后一部分，常通过该方法获取路径中的文件名
path.basename(path[, ext])


path: 文件路径
ext: 文件扩 ...`,l:"backEnd/nodejs/innerModule.html#获取路径中文件名-path-basename",a:"获取路径中文件名-path-basename"},"13.14":{t:"获取路径中文件扩展名 `path.extname()`\r",p:`const path = require('path')

const fpath = '/a/b/c/index.html'

const fext = path.extname(fpath)
co ...`,l:"backEnd/nodejs/innerModule.html#获取路径中文件扩展名-path-extname",a:"获取路径中文件扩展名-path-extname"},"13.15":{t:"http 模块\r",p:`http 模块是 Node.js 官方提供的、用来创建 web 服务器的模块。
`,l:"backEnd/nodejs/innerModule.html#http-模块",a:"http-模块"},"13.16":{t:"创建基本 Web 服务器\r",p:`const http = require('http')

// 创建 web 服务器实例
const server = http.createServer()

// 为服务器实例绑定 reques ...`,l:"backEnd/nodejs/innerModule.html#创建基本-web-服务器",a:"创建基本-web-服务器"},"13.17":{t:"实现简陋路由效果\r",p:`const http = require('http')
const server = http.createServer()

server.on('request', (req, res) =&g ...`,l:"backEnd/nodejs/innerModule.html#实现简陋路由效果",a:"实现简陋路由效果"},"14.0":{t:"# 模块化\r",p:"\r",l:"backEnd/nodejs/module.html",a:"模块化"},"14.1":{t:"基本概念\r",p:"\r",l:"backEnd/nodejs/module.html#基本概念",a:"基本概念"},"14.2":{t:"什么是模块化\r",p:`概念：

模块化是指解决一个复杂问题时，自顶向下逐层把系统划分为若干模块的过程，模块是可组合、分解和更换的单元。
模块化可提高代码的复用性和可维护性，实现按需加载。
模块的内部数据、实现是私有的, 只 ...`,l:"backEnd/nodejs/module.html#什么是模块化",a:"什么是模块化"},"14.3":{t:"模块化的好处\r",p:`
避免命名空间的冲突
提高代码的复用性
提高维护性
更好的分离，实现按需加载

`,l:"backEnd/nodejs/module.html#模块化的好处",a:"模块化的好处"},"14.4":{t:"Nodejs 中模块化\r",p:"\r",l:"backEnd/nodejs/module.html#nodejs-中模块化",a:"nodejs-中模块化"},"14.5":{t:"Node.js 中模块的分类\r",p:`
内置模块
自定义模块
第三方模块

`,l:"backEnd/nodejs/module.html#node-js-中模块的分类",a:"node-js-中模块的分类"},"14.6":{t:"Node.js 中的模块作用域\r",p:`
和函数作用域类似，在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域
防止全局变量污染

`,l:"backEnd/nodejs/module.html#node-js-中的模块作用域",a:"node-js-中的模块作用域"},"14.7":{t:"模块作用域的成员\r",p:`
自定义模块中都有一个 module 对象，存储了和当前模块有关的信息
在自定义模块中，可以使用 module.exports 对象，将模块内的成员共享出去，供外界使用。导入自定义模块时，得到的就是  ...`,l:"backEnd/nodejs/module.html#模块作用域的成员",a:"模块作用域的成员"},"14.8":{t:"CommonJS 模块化规范\r",p:`
每个模块内部，module 变量代表当前模块
module 变量是一个对象，module.exports 是对外的接口
加载某个模块即加载该模块的 module.exports 属性

`,l:"backEnd/nodejs/module.html#commonjs-模块化规范",a:"commonjs-模块化规范"},"14.9":{t:"模块加载机制\r",p:`模块第一次加载后会被缓存，即多次调用 require() 不会导致模块的代码被执行多次，提高模块加载效率。
`,l:"backEnd/nodejs/module.html#模块加载机制",a:"模块加载机制"},"14.10":{t:"内置模块加载\r",p:`内置模块加载优先级最高。
`,l:"backEnd/nodejs/module.html#内置模块加载",a:"内置模块加载"},"14.11":{t:"自定义模块加载\r",p:`加载自定义模块时，路径要以 ./ 或 ../ 开头，否则会作为内置模块或第三方模块加载。
导入自定义模块时，若省略文件扩展名，则 Node.js 会按顺序尝试加载文件：

按确切的文件名加载
补全 . ...`,l:"backEnd/nodejs/module.html#自定义模块加载",a:"自定义模块加载"},"14.12":{t:"第三方模块加载\r",p:`
若导入第三方模块， Node.js 会从当前模块的父目录开始，尝试从 /node_modules 文件夹中加载第三方模块。
如果没有找到对应的第三方模块，则移动到再上一层父目录中，进行加载，直到文件 ...`,l:"backEnd/nodejs/module.html#第三方模块加载",a:"第三方模块加载"},"14.13":{t:"目录作为模块加载\r",p:`当把目录作为模块标识符进行加载的时候，有三种加载方式：

在被加载的目录下查找 package.json 的文件，并寻找 main 属性，作为 require() 加载的入口
如果没有 package ...`,l:"backEnd/nodejs/module.html#目录作为模块加载",a:"目录作为模块加载"},"14.14":{t:"npm 与包\r",p:"\r",l:"backEnd/nodejs/module.html#npm-与包",a:"npm-与包"},"14.15":{t:"包\r",p:`Node.js 中的第三方模块又叫做包
不同于 Node.js 中的内置模块与自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。Node.js 中的包都是免费且开源的。

由于 Node ...`,l:"backEnd/nodejs/module.html#包",a:"包"},"14.16":{t:"npm 安装\r",p:`在项目中安装包的命令
npm install 包的元整名称
或者
npm i 包的元整名称

现在也有其他的包管理工具，如 yarn、pnpm，
下载安装速度是比 npm 要快的
`,l:"backEnd/nodejs/module.html#npm-安装",a:"npm-安装"},"14.17":{t:"通过切换源解决 npm 的下包速度慢的问题\r",p:`npm config get registry  # 查看当前包镜像源
npm config get registry=http:registry.npm.taobao.org/ # 切换源头
npm ...`,l:"backEnd/nodejs/module.html#通过切换源解决-npm-的下包速度慢的问题",a:"通过切换源解决-npm-的下包速度慢的问题"},"14.18":{t:"开发包\r",p:`
注册 npm 账号
初始化包的基本结构

新建文件夹（包名），新建如下三个文件




package.json (包管理配置文件)
index.js (包的入口文件)
README.md (包的说 ...`,l:"backEnd/nodejs/module.html#开发包",a:"开发包"},"14.19":{t:"模块的加载机制\r",p:`模块在第一次加载后会被缓存，多次调用 require()模块的代码只会被执行一次。不论是内置模块、用户自定义模块、还是第三方模块，他们都会优先从缓存中加载，从而提高模块的加载效率。
`,l:"backEnd/nodejs/module.html#模块的加载机制",a:"模块的加载机制"},"14.20":{t:"内置模块的加载机制\r",p:`
内置模块的加载优先级最高

`,l:"backEnd/nodejs/module.html#内置模块的加载机制",a:"内置模块的加载机制"},"14.21":{t:"自定义模块的加载机制\r",p:`
使用 require()加载自定义模块时，必须指定以./或../开头的路径标识符。在加载自定义模块时，如果没有指定./或../这样的路径标识符，则 node 会把它当作内置模块或第三方模块进行加载。 ...`,l:"backEnd/nodejs/module.html#自定义模块的加载机制",a:"自定义模块的加载机制"},"14.22":{t:"第三方模块的加载机制\r",p:`
如果传递给 require()的模块标识符不是一个内置模块，也没有以./或../开头，则 Nodejs 会从当前模块的父目录开始，尝试从/node_modules 文件夹中加载第三方模块
如果没有找 ...`,l:"backEnd/nodejs/module.html#第三方模块的加载机制",a:"第三方模块的加载机制"},"14.23":{t:"目录作为模块\r",p:`
当把目录作为模块标识符，传递给 require()进行加载的时候，有三种加载方式

a. 在被加载的目录下查找一个叫做 package.json 的文件，并寻找 main 属性值作为 require ...`,l:"backEnd/nodejs/module.html#目录作为模块",a:"目录作为模块"},"15.0":{t:"# 数据库和身份认证\r",p:"\r",l:"backEnd/nodejs/mysql.html",a:"数据库和身份认证"},"15.1":{t:"Node 操作 mysql\r",p:"\r",l:"backEnd/nodejs/mysql.html#node-操作-mysql",a:"node-操作-mysql"},"15.2":{t:"配置 mysql 模块\r",p:`
安装 mysql 模块

npm install mysql


建立连接

const mysql = require('mysql')

const db = mysql.createPool( ...`,l:"backEnd/nodejs/mysql.html#配置-mysql-模块",a:"配置-mysql-模块"},"15.3":{t:"操作 mysql 数据库\r",p:`
查询数据

db.query('select * from users', (err, results) =&gt; {
  ...
})


插入数据

// ? 表示占位符
const sql  ...`,l:"backEnd/nodejs/mysql.html#操作-mysql-数据库",a:"操作-mysql-数据库"},"15.4":{t:"Web 开发模式\r",p:"\r",l:"backEnd/nodejs/mysql.html#web-开发模式",a:"web-开发模式"},"15.5":{t:"服务端渲染\r",p:`服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接动态生成的。因此客户端不需要使用 Ajax 额外请求页面的数据。
app.get('/index.html', (req, res) = ...`,l:"backEnd/nodejs/mysql.html#服务端渲染",a:"服务端渲染"},"15.6":{t:"前后端分离\r",p:`前后端分离的开发模式，依赖于 Ajax 技术的广泛应用。后端只负责提供 API 接口，前端使用 Ajax 调用接口。
优点：

开发体验好。前端专业页面开发，后端专注接口开发。
用户体验好。页面局部刷 ...`,l:"backEnd/nodejs/mysql.html#前后端分离",a:"前后端分离"},"15.7":{t:"如何选择\r",p:`
企业级网站，主要功能是展示，没有复杂交互，且需要良好的 SEO，可考虑服务端渲染
后台管理项目，交互性强，无需考虑 SEO，可使用前后端分离
为同时兼顾首页渲染速度和前后端分离开发效率，可采用首屏服 ...`,l:"backEnd/nodejs/mysql.html#如何选择",a:"如何选择"},"15.8":{t:"身份认证\r",p:"\r",l:"backEnd/nodejs/mysql.html#身份认证",a:"身份认证"},"15.9":{t:"Session 认证机制\r",p:`服务端渲染推荐使用 Session 认证机制
`,l:"backEnd/nodejs/mysql.html#session-认证机制",a:"session-认证机制"},"15.10":{t:"Session 工作原理\r",p:`!session
`,l:"backEnd/nodejs/mysql.html#session-工作原理",a:"session-工作原理"},"15.11":{t:"Express 中使用 Session 认证\r",p:`
安装 express-session 中间件

npm install express-session


配置中间件

const session = require('express-sessi ...`,l:"backEnd/nodejs/mysql.html#express-中使用-session-认证",a:"express-中使用-session-认证"},"15.12":{t:"JWT 认证机制\r",p:`前后端分离推荐使用 JWT（JSON Web Token）认证机制，是目前最流行的跨域认证解决方案
`,l:"backEnd/nodejs/mysql.html#jwt-认证机制",a:"jwt-认证机制"},"15.13":{t:"JWT 工作原理\r",p:`Session 认证的局限性：

Session 认证机制需要配合 Cookie 才能实现。由于 Cookie 默认不支持跨域访问，所以，当涉及到前端跨域请求后端接口的时候，需要做很多额外的配置，才能 ...`,l:"backEnd/nodejs/mysql.html#jwt-工作原理",a:"jwt-工作原理"},"15.14":{t:"Express 使用 JWT\r",p:`
安装


jsonwebtoken 用于生成 JWT 字符串
express-jwt 用于将 JWT 字符串解析还原成 JSON 对象

npm install jsonwebtoken expre ...`,l:"backEnd/nodejs/mysql.html#express-使用-jwt",a:"express-使用-jwt"},"16.0":{t:"# CSS 选择器\r",p:"\r",l:"frontEnd/css3/base/css选择器.html",a:"css-选择器"},"16.1":{t:"通配符选择器\r",p:`
选择页面所有元素
用于清除内外边距

* {
  padding: 0;
  margin: 0;
}

`,l:"frontEnd/css3/base/css选择器.html#通配符选择器",a:"通配符选择器"},"16.2":{t:"元素选择器\r",p:`
通过标签名选择元素
优点：可快速为同类型标签统一设置样式
缺点：不能涉及差异化样式，只能选择全部标签

h1 {
  color: #ccc;
}

`,l:"frontEnd/css3/base/css选择器.html#元素选择器",a:"元素选择器"},"16.3":{t:"类选择器\r",p:`
通过类名选择元素

.container {
  color: pink;
}

`,l:"frontEnd/css3/base/css选择器.html#类选择器",a:"类选择器"},"16.4":{t:"id 选择器\r",p:`
通过元素 id 属性选择元素

#md {
  font-weight: 600;
}

`,l:"frontEnd/css3/base/css选择器.html#id-选择器",a:"id-选择器"},"16.5":{t:"交集选择器\r",p:`&lt;p class=&quot;good&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;good beaauty&quot;&gt;&lt;/p&gt;

/* 语法 ...`,l:"frontEnd/css3/base/css选择器.html#交集选择器",a:"交集选择器"},"16.6":{t:"并集选择器\r",p:`
作用：选中多个选择器对应的元素，又称：分组选择器
语法：选择器1, 选择器2, 选择器3,... 选择器 n {}

h1,
h2,
h3 {
  text-align: center;
}

`,l:"frontEnd/css3/base/css选择器.html#并集选择器",a:"并集选择器"},"16.7":{t:"后代选择器\r",p:`
在所有后代节点中选

ul li {
  color: blue;
}

`,l:"frontEnd/css3/base/css选择器.html#后代选择器",a:"后代选择器"},"16.8":{t:"子选择器\r",p:`
只在亲儿子中选

div &gt; a {
  color: green;
}

`,l:"frontEnd/css3/base/css选择器.html#子选择器",a:"子选择器"},"16.9":{t:"兄弟选择器\r",p:`
选择所有指定元素的相邻后一个兄弟节点

&lt;h1&gt;h1-2&lt;/h1&gt;
&lt;p&gt;p0 被选中&lt;/p&gt;
&lt;div class=&quot;contain ...`,l:"frontEnd/css3/base/css选择器.html#兄弟选择器",a:"兄弟选择器"},"16.10":{t:"伪类选择器\r",p:`
根据元素状态或所处 DOM 结构选择元素

`,l:"frontEnd/css3/base/css选择器.html#伪类选择器",a:"伪类选择器"},"16.11":{t:"动态伪类选择器\r",p:`按这个顺序声明
a:link 链接一开始的样式
a:visited 链接访问后的样式
a:hover 光标经过链接的样式
a:active 链接被按下时的样式

:focus 用于选择获取焦点的表单元 ...`,l:"frontEnd/css3/base/css选择器.html#动态伪类选择器",a:"动态伪类选择器"},"16.12":{t:"结构伪类选择器(C3)\r",p:`


选择符
含义




E:first-child
第一个子元素 E


E:last-child
最后一个子元素 E


E:nth-child(n)
第 n 个子元素 E


E:first- ...`,l:"frontEnd/css3/base/css选择器.html#结构伪类选择器-c3",a:"结构伪类选择器-c3"},"16.13":{t:"属性选择器(C3)\r",p:`


选择符
含义




E[att]
选择具有 att 属性的 E 元素


E[att=&quot;val&quot;]
选择具有 att 属性且属性值等于 val 的 E 元素


E[att ...`,l:"frontEnd/css3/base/css选择器.html#属性选择器-c3",a:"属性选择器-c3"},"16.14":{t:"伪元素选择器(C3)\r",p:`
伪元素选择器利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构
before 和 after 创建了一个行内元素，在 DOM 树中无法找到，故为伪元素
必须有 cont ...`,l:"frontEnd/css3/base/css选择器.html#伪元素选择器-c3",a:"伪元素选择器-c3"},"16.15":{t:"相关链接\r",p:`一篇搞清伪类和伪元素
`,l:"frontEnd/css3/base/css选择器.html#相关链接",a:"相关链接"},"17.0":{t:"# 选择器优先级\r",p:`一般情况下，选择器的优先级为

!important 行内 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器
相同级别的选择器，显示最后面的样式。

`,l:"frontEnd/css3/base/选择器优先级.html",a:"选择器优先级"},"17.1":{t:"CSS 权重\r",p:`::: tip 详细描述

计算方式：每个选择器，都可以算出一组权重，格式为（a,b,c)


格式: (a, b, c)

a: ID 选择器的个数
b: 类、伪类、属性 选择器的个数
c: 元素、 ...`,l:"frontEnd/css3/base/选择器优先级.html#css-权重",a:"css-权重"},"18.0":{t:"# css",p:"",l:"frontEnd/css3/index.html",a:"css"},"19.0":{t:"# 滚动条样式\r",p:`/* 滚动条 */
::-webkit-scrollbar {
  /* 纵向 */
  width: 8px;
  /* 横向 */
  height: 8px;
  background-colo ...`,l:"frontEnd/css3/tricks/scrollbar.html",a:"滚动条样式"},"20.0":{t:"# html5 音视频标签\r",p:`音视频标签中的资源除了可以用 src 属性来指定外，还可以用 source 标签，而且可以指定多个，可以用来解决某些兼容问题。
&lt;audio controls=&quot;controls&qu ...`,l:"frontEnd/html5/audio_video.html",a:"html5-音视频标签"},"20.1":{t:"音视频频格式的 MIME 类型\r",p:"\r",l:"frontEnd/html5/audio_video.html#音视频频格式的-mime-类型",a:"音视频频格式的-mime-类型"},"20.2":{t:"音频格式\r",p:`


Format
MIME-type




MP3
audio/mpeg


Ogg
audio/ogg


Wav
audio/wav



`,l:"frontEnd/html5/audio_video.html#音频格式",a:"音频格式"},"20.3":{t:"视频格式\r",p:`


格式
MIME-type




MP4
video/mp4


WebM
video/webm


Ogg
video/ogg



`,l:"frontEnd/html5/audio_video.html#视频格式",a:"视频格式"},"20.4":{t:"音视频标签描述\r",p:"\r",l:"frontEnd/html5/audio_video.html#音视频标签描述",a:"音视频标签描述"},"20.5":{t:"HTML5 Audio 标签\r",p:`


标签
描述




&lt;audio&gt;
定义了声音内容


&lt;source&gt;
规定了多媒体资源, 可以是多个，在 &lt;video&gt; 与 &lt;audio&gt;标 ...`,l:"frontEnd/html5/audio_video.html#html5-audio-标签",a:"html5-audio-标签"},"20.6":{t:"HTML5 Video 标签\r",p:`| 标签 | 描述 |
|&lt;video&gt; |定义一个视频|
|&lt;source&gt;| 定义多种媒体资源,比如 &lt;video&gt; 和&lt;audio&gt;|
|&lt; ...`,l:"frontEnd/html5/audio_video.html#html5-video-标签",a:"html5-video-标签"},"20.7":{t:"`<video>`标签的属性\r",p:`


属性
描述




src
要播放的视频的 URL


width/height
视频显示区域的宽高


controls
用户控制界面


poster
视频封面


autoplay
自动播 ...`,l:"frontEnd/html5/audio_video.html#video-标签的属性",a:"video-标签的属性"},"20.8":{t:"音视频对象的方法\r",p:`


方法名
作用




play()
播放


psuse()
暂停


load()
重新加载



`,l:"frontEnd/html5/audio_video.html#音视频对象的方法",a:"音视频对象的方法"},"20.9":{t:"代码实例\r",p:"\r",l:"frontEnd/html5/audio_video.html#代码实例",a:"代码实例"},"20.10":{t:"audio 音频\r",p:`    // ......html、css部分...........
    //获取
    let v = document.querySelector(&quot;#video&quot;);
 ...`,l:"frontEnd/html5/audio_video.html#audio-音频",a:"audio-音频"},"20.11":{t:"video 视频\r",p:`&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;button onclick=&quot;playPause()&quot;&gt;播放/暂 ...`,l:"frontEnd/html5/audio_video.html#video-视频",a:"video-视频"},"21.0":{t:"# HTML5\r",p:`
asdas

`,l:"frontEnd/html5/index.html",a:"html5"},"21.1":{t:"html\r",p:`111
`,l:"frontEnd/html5/index.html#html",a:"html"},"22.0":{t:"# input\r",p:"\r",l:"frontEnd/html5/input.html",a:"input"},"22.1":{t:'input type="password" 浏览器自动填充账号和密码\r',p:"&lt;a-input type=&quot;password&quot; placeholder=&quot;请输入登录密码&quot; v-model=&quot;model.password&q ...",l:"frontEnd/html5/input.html#input-type-password-浏览器自动填充账号和密码",a:"input-type-password-浏览器自动填充账号和密码"},"23.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"frontEnd/react/index.html",a:"该内容正在努力建设中"},"24.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"frontEnd/vue/index.html",a:"该内容正在努力建设中"},"25.0":{t:"# vue3 API\r",p:`
vue在线学习工具


在 vue3.2 中，我们只需在script标签中添加setup。就可以做到，组件只需引入不用注册，属性和方法也不用 return 才能于 template 中使用，也不用写 ...`,l:"frontEnd/vue/v3/api.html",a:"vue3-api"},"25.1":{t:"setup\r",p:`
理解：Vue3.0 中一个新的配置项，值为一个函数。
setup() 函数是 Vue3 新增的一个选项，它是组合式 API 的统一入口，简单来说，就是所有的 CompositionAPI 新特性都应 ...`,l:"frontEnd/vue/v3/api.html#setup",a:"setup"},"25.2":{t:"ref 和 reactive\r",p:`
ref() 函数用来根据给定的值创建一个响应式的数据对象，ref() 函数调用的返回值是一个对象，这个对象上只包含一个 value 属性, 只在setup函数内部访问ref函数需要加.value，其 ...`,l:"frontEnd/vue/v3/api.html#ref-和-reactive",a:"ref-和-reactive"},"25.3":{t:"ref全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#ref全家桶",a:"ref全家桶"},"25.4":{t:"isRef\r",p:`判断是不是一个ref对象
import { ref,isRef } from 'vue'
let message = ref(&quot;我是message&quot;)
let notRef:num ...`,l:"frontEnd/vue/v3/api.html#isref",a:"isref"},"25.5":{t:"shallowRef\r",p:`创建一个跟踪自身 .value 变化的 ref，但不会使其值也变成响应式的
修改其属性是非响应式的这样是不会改变的
&lt;template&gt;
  &lt;div&gt;
    &lt;but ...`,l:"frontEnd/vue/v3/api.html#shallowref",a:"shallowref"},"25.6":{t:"triggerRef\r",p:`强制更新页面DOM
import {Ref,shallowRef,triggerRef} from 'vue'
type Obj = {
    name:string
}
let message:R ...`,l:"frontEnd/vue/v3/api.html#triggerref",a:"triggerref"},"25.7":{t:"customRef\r",p:`自定义ref
customRef 是个工厂函数要求我们返回一个对象 并且实现 get 和 set  适合去做防抖之类的
&lt;template&gt;
  &lt;div ref=&quot;div ...`,l:"frontEnd/vue/v3/api.html#customref",a:"customref"},"25.8":{t:"reactive全家桶\r",p:`reactive是不可以绑定普通的数据类型这样是不允许 会给我们报错
import { reactive} from 'vue'
let person = reactive('zhangsan')
/ ...`,l:"frontEnd/vue/v3/api.html#reactive全家桶",a:"reactive全家桶"},"25.9":{t:"readonly\r",p:`readonly 接受一个对象 (不论是响应式还是普通的) 或是一个 ref，返回一个原值的只读代理。


`,l:"frontEnd/vue/v3/api.html#readonly",a:"readonly"},"25.10":{t:"shallowReactive\r",p:`只能对浅层的数据 如果是深层的数据只会改变值 不会改变视图
&lt;template&gt;
  &lt;div&gt;
    &lt;div&gt;{{ state }}&lt;/div&gt;
 ...`,l:"frontEnd/vue/v3/api.html#shallowreactive",a:"shallowreactive"},"25.11":{t:"to系列全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#to系列全家桶",a:"to系列全家桶"},"25.12":{t:"toRef\r",p:`把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref
如果原始对象是非响应式的，数据是会变的，但不会更新视图。
&lt;template&gt;
  &lt;div&g ...`,l:"frontEnd/vue/v3/api.html#toref",a:"toref"},"25.13":{t:"toRefs\r",p:`toRefs相当于对对象内每个属性调用toRef，toRefs返回的对象内的属性使用时需要加.value,主要是方便我们解构使用
&lt;template&gt;
  &lt;div&gt;
     ...`,l:"frontEnd/vue/v3/api.html#torefs",a:"torefs"},"25.14":{t:"toRaw\r",p:`将响应式对象修改为普通对象
&lt;template&gt;
  &lt;div&gt;
    &lt;button @click=&quot;change&quot;&gt;按钮&lt;/butt ...`,l:"frontEnd/vue/v3/api.html#toraw",a:"toraw"},"25.15":{t:"computed\r",p:`computed() 与 Vue2 中的 computed 作用基本一致，它可以接收一个函数或对象作为参数，会返回一个只读的 ref 对象。
&lt;template&gt;
  &lt;div&gt ...`,l:"frontEnd/vue/v3/api.html#computed",a:"computed"},"25.16":{t:"watch\r",p:`vue3 watch 的作用和 Vue2 中的 watch 作用是一样的，他们都是用来监听响应式状态发生变化的，当响应式状态发生变化时，就会触发一个回调函数。
watch(data,()=&gt;{} ...`,l:"frontEnd/vue/v3/api.html#watch",a:"watch"},"25.17":{t:"1、监听ref定义的一个响应式数据\r",p:`import { ref, watch } from 'vue'
let message = ref({
    nav:{
        bar:{
            name:&quot; ...`,l:"frontEnd/vue/v3/api.html#_1、监听ref定义的一个响应式数据",a:"_1、监听ref定义的一个响应式数据"},"25.18":{t:"2、监听多个ref\r",p:`写法变为数组的形式
import { ref, watch ,reactive} from 'vue'

let message = ref('')
let message2 = ref('')

w ...`,l:"frontEnd/vue/v3/api.html#_2、监听多个ref",a:"_2、监听多个ref"},"25.19":{t:"3、监听Reactive定义的响应式对象\r",p:`使用reactive监听深层对象开启和不开启deep 效果一样
import { ref, watch ,reactive} from 'vue'

let message = reactive({
 ...`,l:"frontEnd/vue/v3/api.html#_3、监听reactive定义的响应式对象",a:"_3、监听reactive定义的响应式对象"},"25.20":{t:"4、监听reactive 定义响应式对象的单一属性\r",p:`import { ref, watch ,reactive} from 'vue'
let message = reactive({
    name:&quot;&quot;,
    name2: ...`,l:"frontEnd/vue/v3/api.html#_4、监听reactive-定义响应式对象的单一属性",a:"_4、监听reactive-定义响应式对象的单一属性"},"25.21":{t:"WatchEffect\r",p:`
立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
不用直接指定要监视的数据, 回调函数中使用的哪些响应式数据就监视哪些响应式数据
默认初始时就会执行第一次, 从而可以收 ...`,l:"frontEnd/vue/v3/api.html#watcheffect",a:"watcheffect"},"25.22":{t:"清除副作用\r",p:`
watchEffect 的第一个参数——effect函数——可以接收一个参数：叫onInvalidate，也是一个函数，用于清除 effect 产生的副作用
就是在触发监听之前会调用一个函数可以处理 ...`,l:"frontEnd/vue/v3/api.html#清除副作用",a:"清除副作用"},"25.23":{t:"停止监听\r",p:`- 当 watchEffect 在组件的 setup() 函数或生命周期钩子被调用时，侦听器会被链接到该组件的生命周期，并在组件卸载时自动停止。
- 但是我们采用异步的方式创建了一个监听器，这个时候监 ...`,l:"frontEnd/vue/v3/api.html#停止监听",a:"停止监听"},"25.24":{t:"配置选项\r",p:`

watchEffect的第二个参数，用来定义副作用刷新时机，可以作为一个调试器来使用


flush （更新时机）：

pre：组件更新前执行
sync：强制效果始终同步触发
post：组件更新后 ...`,l:"frontEnd/vue/v3/api.html#配置选项",a:"配置选项"},"25.25":{t:"生命周期\r",p:`简单来说就是一个组件从创建 到 销毁的 过程 成为生命周期
在我们使用Vue3 组合式API 是没有 beforeCreate 和 created 这两个生命周期的
!img
`,l:"frontEnd/vue/v3/api.html#生命周期",a:"生命周期"},"25.26":{t:"自定义指令\r",p:"",l:"frontEnd/vue/v3/api.html#自定义指令",a:"自定义指令"},"25.27":{t:"Vue3指令的钩子函数\r",p:`
created 元素初始化的时候
beforeMount 指令绑定到元素后调用 只调用一次
mounted 元素插入父级dom调用
beforeUpdate 元素被更新之前调用
update 这个周 ...`,l:"frontEnd/vue/v3/api.html#vue3指令的钩子函数",a:"vue3指令的钩子函数"},"25.28":{t:"在setup内定义局部指令\r",p:`这里有一个需要注意的限制：必须以 vNameOfDirective 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。

const vMoveDirective: Directive =  ...`,l:"frontEnd/vue/v3/api.html#在setup内定义局部指令",a:"在setup内定义局部指令"},"25.29":{t:"生命周期钩子参数详解\r",p:`第一个 el  当前绑定的DOM 元素
第二个 binding

instance：使用指令的组件实例。
value：传递给指令的值。例如，在 v-my-directive=&quot;1 + 1&q ...`,l:"frontEnd/vue/v3/api.html#生命周期钩子参数详解",a:"生命周期钩子参数详解"},"25.30":{t:"案列 - 自定义拖拽指令\r",p:`&lt;template&gt;
  &lt;div v-move class=&quot;box&quot;&gt;
    &lt;div class=&quot;header&quot;&gt; ...`,l:"frontEnd/vue/v3/api.html#案列-自定义拖拽指令",a:"案列-自定义拖拽指令"},"25.31":{t:"自定义hooks\r",p:`在 vue2 中有个东西叫 mixins，他可以将多个组件中相同的逻辑抽离出来，实现一次写代码，多组件受益的效果。
但是 mixins 的副作用就是引用的多了变量的来源就不清晰了，而且还会有变量来源不 ...`,l:"frontEnd/vue/v3/api.html#自定义hooks",a:"自定义hooks"},"26.0":{t:"# vue3 组件通信方式\r",p:"\r",l:"frontEnd/vue/v3/communication.html",a:"vue3-组件通信方式"},"26.1":{t:"通信方式\r",p:`&lt;!-- 通信仓库地址:项目地址 --&gt;
不管是 vue2 还是 vue3,组件通信方式很重要,不管是项目还是面试都是经常用到的知识点。
比如:vue2 组件通信方式
**props:** ...`,l:"frontEnd/vue/v3/communication.html#通信方式",a:"通信方式"},"26.2":{t:"1、props\r",p:`props 可以实现父子组件通信,在 vue3 中我们可以通过 defineProps 获取父组件传递的数据。且在组件内部不需要引入 defineProps 方法可以直接使用！
父组件给子组件传递数据 ...`,l:"frontEnd/vue/v3/communication.html#_1、props",a:"_1、props"},"26.3":{t:"2、自定义事件\r",p:`在 vue 框架中事件分为两种:一种是原生的 DOM 事件，另外一种自定义事件。
原生 DOM 事件可以让用户与网页进行交互，比如 click、dbclick、change、mouseenter、mo ...`,l:"frontEnd/vue/v3/communication.html#_2、自定义事件",a:"_2、自定义事件"},"26.4":{t:"1. 原生 DOM 事件\r",p:`代码如下:
&lt;pre @click=&quot;handler&quot;&gt;
      我是祖国的老花骨朵
 &lt;/pre&gt;

当前代码级给 pre 标签绑定原生 DOM 事件 ...`,l:"frontEnd/vue/v3/communication.html#_1-原生-dom-事件",a:"_1-原生-dom-事件"},"26.5":{t:"2. 自定义事件\r",p:`自定义事件可以实现子组件给父组件传递数据.在项目中是比较常用的。
比如在父组件内部给子组件(Event2)绑定一个自定义事件
&lt;Event2 @xxx=&quot;handler3&quot;& ...`,l:"frontEnd/vue/v3/communication.html#_2-自定义事件",a:"_2-自定义事件"},"26.6":{t:"3、全局事件总线\r",p:`全局事件总线可以实现任意组件通信，在 vue2 中可以根据 VM 与 VC 关系推出全局事件总线。
但是在 vue3 中没有 Vue 构造函数，也就没有 Vue.prototype.以及组合式 API ...`,l:"frontEnd/vue/v3/communication.html#_3、全局事件总线",a:"_3、全局事件总线"},"26.7":{t:"4、v-model\r",p:`v-model 指令可是收集表单数据(数据双向绑定)，除此之外它也可以实现父子组件数据同步。
而 v-model 实指利用 props[modelValue]与自定义事件[update:modelVa ...`,l:"frontEnd/vue/v3/communication.html#_4、v-model",a:"_4、v-model"},"26.8":{t:"5、useAttrs\r",p:`在 Vue3 中可以利用 useAttrs 方法获取组件的属性与事件(包含:原生 DOM 事件或者自定义事件),次函数功能类似于 Vue2 框架中$attrs属性与$listeners 方法。
比如: ...`,l:"frontEnd/vue/v3/communication.html#_5、useattrs",a:"_5、useattrs"},"26.9":{t:"6、ref 与$parent\r",p:`ref,提及到 ref 可能会想到它可以获取元素的 DOM 或者获取子组件实例的 VC。既然可以在父组件内部通过 ref 获取子组件实例 VC，那么子组件内部的方法与响应式数据父组件可以使用的。
比如 ...`,l:"frontEnd/vue/v3/communication.html#_6、ref-与-parent",a:"_6、ref-与-parent"},"26.10":{t:"7、provide 与 inject\r",p:`provide[提供]
**inject[注入]vue3 提供两个方法 provide 与 inject,可以实现隔辈组件传递参数
组件组件提供数据:
provide 方法用于提供数据，此方法执需要传 ...`,l:"frontEnd/vue/v3/communication.html#_7、provide-与-inject",a:"_7、provide-与-inject"},"26.11":{t:"8、piniapinia 官网:https://pinia.web3doc.top/**\r",p:`pinia 也是集中式管理状态容器,类似于 vuex。但是核心概念没有 mutation、modules,使用方式参照官网
`,l:"frontEnd/vue/v3/communication.html#_8、piniapinia-官网-https-pinia-web3doc-top",a:"_8、piniapinia-官网-https-pinia-web3doc-top"},"26.12":{t:"9、slot\r",p:`插槽：默认插槽、具名插槽、作用域插槽可以实现父子组件通信.
默认插槽:
在子组件内部的模板中书写 slot 全局组件标签
&lt;template&gt;
  &lt;div&gt;
    &lt; ...`,l:"frontEnd/vue/v3/communication.html#_9、slot",a:"_9、slot"},"27.0":{t:"# Vue3 深入组件\r",p:"\r",l:"frontEnd/vue/v3/components.html",a:"vue3-深入组件"},"27.1":{t:"注册\r",p:"\r",l:"frontEnd/vue/v3/components.html#注册",a:"注册"},"27.2":{t:"全局组件\r",p:`在 main.ts 引入组件跟随在 createApp(App) 后面，切记不能放到 mount 后面
//main.js
import { createApp } from 'vue'
import ...`,l:"frontEnd/vue/v3/components.html#全局组件",a:"全局组件"},"27.3":{t:" ",p:"",l:"frontEnd/vue/v3/components.html#",a:""},"27.4":{t:"批量注册全局组件 -->\r",p:"\r",l:"frontEnd/vue/v3/components.html#批量注册全局组件",a:"批量注册全局组件"},"27.5":{t:"局部组件\r",p:`局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。
在使用 \`
&lt;template&gt ...`,l:"frontEnd/vue/v3/components.html#局部组件",a:"局部组件"},"27.6":{t:"父子组件传参\r",p:`
父组件通过 v-bind 绑定一个数据，然后子组件通过 defineProps 接受传过来的值
传递非字符串类型需要加 v-bind 简写 冒号

父组件
&lt;template&gt;
  &l ...`,l:"frontEnd/vue/v3/components.html#父子组件传参",a:"父子组件传参"},"27.7":{t:"插槽\r",p:"\r",l:"frontEnd/vue/v3/components.html#插槽",a:"插槽"},"27.8":{t:"匿名插槽\r",p:`在子组件放置一个插槽
// Child.vue
&lt;template&gt;
  &lt;div&gt;child&lt;/div&gt;
  &lt;slot&gt;&lt;/slot&gt;
 ...`,l:"frontEnd/vue/v3/components.html#匿名插槽",a:"匿名插槽"},"27.9":{t:"具名插槽\r",p:`具名插槽其实就是给插槽取个名字。一个子组件可以放多个插槽，而且可以放在不同的地方，而父组件填充内容时，可以根据这个名字把内容填充到对应插槽中
&lt;div&gt;
  &lt;slot name=& ...`,l:"frontEnd/vue/v3/components.html#具名插槽",a:"具名插槽"},"27.10":{t:"作用域插槽\r",p:`插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的。
在子组件动态绑定参数 派发给父组件的 slot 去使用
&lt;span&gt;{{ message }}&lt;/sp ...`,l:"frontEnd/vue/v3/components.html#作用域插槽",a:"作用域插槽"},"27.11":{t:"动态插槽\r",p:`插槽可以是一个变量名
&lt;template&gt;
  &lt;div&gt;
    &lt;p&gt;父组件&lt;/p&gt;
    &lt;Child&gt;
      &lt;tem ...`,l:"frontEnd/vue/v3/components.html#动态插槽",a:"动态插槽"},"27.12":{t:"异步组件\r",p:`在大型应用中，需要将应用分割成小一些的代码块，并且减少主包的体积。
通过 defineAsyncComponent 异步加载
&lt;template&gt;
  &lt;Children :msg= ...`,l:"frontEnd/vue/v3/components.html#异步组件",a:"异步组件"},"27.13":{t:"Suspense\r",p:"Suspense 允许应用程序在等待异步组件时渲染一些其它内容,在 Vue2 中，必须使用条件判断(例如 v-if、 v-else等)来检查数据是否已加载并显示一些其它内容；但是，在 Vue3 新增了 ...",l:"frontEnd/vue/v3/components.html#suspense",a:"suspense"},"27.14":{t:"Teleport 传送组件\r",p:`Teleport 是一种能够将我们的模板渲染至指定DOM节点，不受父级style、v-show等属性影响，但data、prop数据依旧能够共用的技术；类似于 React 的 Portal。
主要解决的 ...`,l:"frontEnd/vue/v3/components.html#teleport-传送组件",a:"teleport-传送组件"},"27.15":{t:"Keep-alive 缓存组件\r",p:`
事件挂载的方法等，只执行一次的放在 onMounted中；组件每次进去执行的方法放在 onActivated中


作用和vue2一致，只是生命周期名称有所更改
初次进入时： onMounted&g ...`,l:"frontEnd/vue/v3/components.html#keep-alive-缓存组件",a:"keep-alive-缓存组件"},"27.16":{t:"provide/inject\r",p:`provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。
父组件
&lt;template& ...`,l:"frontEnd/vue/v3/components.html#provide-inject",a:"provide-inject"},"27.17":{t:"v-model 升级\r",p:`
在Vue3 v-model 是破坏性更新的
v-model 是props 和 emit 组合而成的语法糖,vue3中 v-model 有以下改动


变更：value =&gt; modelValu ...`,l:"frontEnd/vue/v3/components.html#v-model-升级",a:"v-model-升级"},"28.0":{t:"# 创建Vue3项目\r",p:"\r",l:"frontEnd/vue/v3/create.html",a:"创建vue3项目"},"28.1":{t:"一、 使用vue-cli创建\r",p:`
`,l:"frontEnd/vue/v3/create.html#一、-使用vue-cli创建",a:"一、-使用vue-cli创建"},"28.2":{t:"安装或者升级\r",p:`npm install -g @vue/cli
`,l:"frontEnd/vue/v3/create.html#安装或者升级",a:"安装或者升级"},"28.3":{t:"保证 vue cli 版本在 4.5.0 以上\r",p:`vue --version
`,l:"frontEnd/vue/v3/create.html#保证-vue-cli-版本在-4-5-0-以上",a:"保证-vue-cli-版本在-4-5-0-以上"},"28.4":{t:"创建项目\r",p:`vue create my-project
然后的步骤

- Please pick a preset - 选择 Manually select features
- Check the featur ...`,l:"frontEnd/vue/v3/create.html#创建项目",a:"创建项目"},"28.5":{t:"二、 使用vite创建(推荐)\r",p:`vite的优势

冷服务   默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入
HMR  速度快到惊人的 模块热更新（HMR）
Rollup打包  它使用 ...`,l:"frontEnd/vue/v3/create.html#二、-使用vite创建-推荐",a:"二、-使用vite创建-推荐"},"28.6":{t:"1. 使用vite初始化一个项目\r",p:`# npm
npm init vite@latest

# yarn
yarn create vite

这两种使用vite创建vue3项目的步骤一样
(1).运行命令 输入项目名称
!img
(2) ...`,l:"frontEnd/vue/v3/create.html#_1-使用vite初始化一个项目",a:"_1-使用vite初始化一个项目"},"28.7":{t:"2. npm init vue@latest\r",p:`!img
`,l:"frontEnd/vue/v3/create.html#_2-npm-init-vue-latest",a:"_2-npm-init-vue-latest"},"29.0":{t:"# 认识Vue3\r",p:"\r",l:"frontEnd/vue/v3/index.html",a:"认识vue3"},"29.1":{t:"一、了解相关信息\r",p:`
Vue.js 3.0 &quot;One Piece&quot; 正式版在今年9月份发布
2年多开发, 100+位贡献者, 2600+次提交, 600+次PR
Vue3支持vue2的大多数特性
更好 ...`,l:"frontEnd/vue/v3/index.html#一、了解相关信息",a:"一、了解相关信息"},"29.2":{t:"二、 性能提升:\r",p:`
打包大小减少41%
初次渲染快55%, 更新渲染快133%
内存减少54%
使用Proxy代替defineProperty实现数据响应式
重写虚拟DOM的实现和Tree-Shaking

`,l:"frontEnd/vue/v3/index.html#二、-性能提升",a:"二、-性能提升"},"29.3":{t:"三、 新增特性\r",p:`

Composition (组合) API


setup

ref 和 reactive
computed 和 watch
新的生命周期函数
provide与inject
...



新组件

 ...`,l:"frontEnd/vue/v3/index.html#三、-新增特性",a:"三、-新增特性"},"31.0":{t:"# Ajax\r",p:"\r",l:"JavaScript/base/ajax.html",a:"ajax"},"31.1":{t:"是什么\r",p:`AJAX 全称(Async Javascript and XML)
即异步的 JavaScript 和 XML，是一种创建交互式网页应用的网页开发技术，可以在不重新加载整个网页的情况下，与服务器交换数 ...`,l:"JavaScript/base/ajax.html#是什么",a:"是什么"},"31.2":{t:"二、实现过程\r",p:`实现 Ajax 异步交互需要服务器逻辑进行配合，需要完成以下步骤：


创建 Ajax 的核心对象 XMLHttpRequest 对象


通过 XMLHttpRequest 对象的 open() 方 ...`,l:"JavaScript/base/ajax.html#二、实现过程",a:"二、实现过程"},"31.3":{t:"1. 创建 XMLHttpRequest 对象\r",p:`通过XMLHttpRequest() 构造函数用于初始化一个 XMLHttpRequest 实例对象
const xhr = new XMLHttpRequest()

`,l:"JavaScript/base/ajax.html#_1-创建-xmlhttprequest-对象",a:"_1-创建-xmlhttprequest-对象"},"31.4":{t:"2. 与服务器建立连接\r",p:`通过 XMLHttpRequest 对象的 open() 方法与服务器建立连接
xhr.open(method, url, [async][, user][, password])

参数说明：


 ...`,l:"JavaScript/base/ajax.html#_2-与服务器建立连接",a:"_2-与服务器建立连接"},"31.5":{t:"3. 给服务端发送数据\r",p:`通过 XMLHttpRequest 对象的 send() 方法，将客户端页面的数据发送给服务端
xhr.send([body])

body: 在 XHR 请求中要发送的数据体，如果不传递数据则为 n ...`,l:"JavaScript/base/ajax.html#_3-给服务端发送数据",a:"_3-给服务端发送数据"},"31.6":{t:"4. 绑定 onreadystatechange 事件\r",p:`onreadystatechange 事件用于监听服务器端的通信状态，主要监听的属性为XMLHttpRequest.readyState ,
关于XMLHttpRequest.readyState属性 ...`,l:"JavaScript/base/ajax.html#_4-绑定-onreadystatechange-事件",a:"_4-绑定-onreadystatechange-事件"},"31.7":{t:"三、封装\r",p:`通过上面对XMLHttpRequest 对象的了解，下面来封装一个简单的ajax请求
//封装一个ajax请求
function ajax(options) {
    //创建XMLHttpRequ ...`,l:"JavaScript/base/ajax.html#三、封装",a:"三、封装"},"32.0":{t:"# JavaScript 数组\r",p:`数组：(Array)是一种可以按顺序保存数据的数据类型
使用场景：如果有多个数据可以用数组保存起来，然后放到一个变量中，管理非常方便

数组中可以存放任意类型的数据，例如字符串，数字，布尔值等。

`,l:"JavaScript/base/array.html",a:"javascript-数组"},"32.1":{t:"创建\r",p:`创建数组有两种方式

利用 new 创建数组
利用数组字面量创建数组

数组的字面量是方括号 [ ]
声明数组并赋值称为数组的初始化
这种字面量方式也是最多的使用方式



// 利用new 创建数组 ...`,l:"JavaScript/base/array.html#创建",a:"创建"},"32.2":{t:"获取数组元素\r",p:`数组的长度
使用数组名.length可以访问数组元素的数量（数组长度）
数组的索引
索引 (下标) ：用来访问数组元素的序号（数组下标从 0 开始）。

数组可以通过索引来访问、设置、修改对应的数组元 ...`,l:"JavaScript/base/array.html#获取数组元素",a:"获取数组元素"},"32.3":{t:" ",p:"",l:"JavaScript/base/array.html#",a:""},"32.4":{t:"数组方法 -->\r",p:"\r",l:"JavaScript/base/array.html#数组方法",a:"数组方法"},"32.5":{t:"一、操作方法\r",p:`数组基本操作可以归纳为 增、删、改、查，需要留意的是哪些方法会对原数组产生影响，哪些方法不会
下面对数组常用的操作方法做一个归纳
`,l:"JavaScript/base/array.html#一、操作方法",a:"一、操作方法"},"32.6":{t:"增\r",p:`下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响

push()
unshift()
splice()
concat()

`,l:"JavaScript/base/array.html#增",a:"增"},"32.7":{t:"push()\r",p:`push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度
let colors = [] // 创建一个数组
let count = colors.push('red', 'bl ...`,l:"JavaScript/base/array.html#push",a:"push"},"32.8":{t:"unshift()\r",p:`unshift()在数组开头添加任意多个值，然后返回新的数组长度
let colors = new Array() // 创建一个数组
let count = colors.unshift('red' ...`,l:"JavaScript/base/array.html#unshift",a:"unshift"},"32.9":{t:"splice()\r",p:`传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组
let colors = ['red', 'green', 'blue']
let removed = colors.sp ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"32.10":{t:"concat()\r",p:`首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组
let colors = ['red', 'green', 'blue']
let color ...`,l:"JavaScript/base/array.html#concat",a:"concat"},"32.11":{t:"删\r",p:`下面三种都会影响原数组，最后一项不影响原数组：

pop()
shift()
splice()
slice()

`,l:"JavaScript/base/array.html#删",a:"删"},"32.12":{t:"pop()\r",p:`pop() 方法用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.pop() / ...`,l:"JavaScript/base/array.html#pop",a:"pop"},"32.13":{t:"shift()\r",p:`shift()方法用于删除数组的第一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.shift() ...`,l:"JavaScript/base/array.html#shift",a:"shift"},"32.14":{t:"splice()\r",p:`传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组
let colors = ['red', 'green', 'blue']
let removed = colors.splice ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"32.15":{t:"slice()\r",p:`slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组
let colors = ['red', 'green', 'blue', 'yellow', 'purple']
 ...`,l:"JavaScript/base/array.html#slice",a:"slice"},"32.16":{t:"改\r",p:`即修改原来数组的内容，常用splice
`,l:"JavaScript/base/array.html#改",a:"改"},"32.17":{t:"splice()\r",p:`传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响
let colors = ['red', 'green', 'blue']
let remo ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"32.18":{t:"查\r",p:`即查找元素，返回元素坐标或者元素值

indexOf()
includes()
find()

`,l:"JavaScript/base/array.html#查",a:"查"},"32.19":{t:"indexOf()\r",p:`返回要查找的元素在数组中的位置，如果没找到则返回 -1
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.indexOf(4) // 3

`,l:"JavaScript/base/array.html#indexof",a:"indexof"},"32.20":{t:"includes()\r",p:`返回要查找的元素在数组中的位置，找到返回true，否则false
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.includes(4) // tr ...`,l:"JavaScript/base/array.html#includes",a:"includes"},"32.21":{t:"find()\r",p:`返回第一个匹配的元素
const people = [
  {
    name: 'Matt',
    age: 27
  },
  {
    name: 'Nicholas',
    age ...`,l:"JavaScript/base/array.html#find",a:"find"},"32.22":{t:"二、排序方法\r",p:`数组有两个方法可以用来对元素重新排序：

reverse()
sort()

`,l:"JavaScript/base/array.html#二、排序方法",a:"二、排序方法"},"32.23":{t:"reverse()\r",p:`顾名思义，将数组元素方向反转
let values = [1, 2, 3, 4, 5]
values.reverse()
console.log(values) // 5,4,3,2,1

`,l:"JavaScript/base/array.html#reverse",a:"reverse"},"32.24":{t:"sort()\r",p:`sort()方法接受一个比较函数，用于判断哪个值应该排在前面
function compare(value1, value2) {
  if (value1 &lt; value2) {
    re ...`,l:"JavaScript/base/array.html#sort",a:"sort"},"32.25":{t:"三、转换方法\r",p:`常见的转换方法有：
`,l:"JavaScript/base/array.html#三、转换方法",a:"三、转换方法"},"32.26":{t:"join()\r",p:`join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串
let colors = ['red', 'green', 'blue']
console.log(colors.join(', ...`,l:"JavaScript/base/array.html#join",a:"join"},"32.27":{t:"四、迭代方法\r",p:`常用来迭代数组的方法（都不改变原数组）有如下：

some()
every()
forEach()
filter()
map()

`,l:"JavaScript/base/array.html#四、迭代方法",a:"四、迭代方法"},"32.28":{t:"some()\r",p:`对数组每一项都运行传入的测试函数，如果至少有 1 个元素返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let some ...`,l:"JavaScript/base/array.html#some",a:"some"},"32.29":{t:"every()\r",p:`对数组每一项都运行传入的测试函数，如果所有元素都返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let everyRes ...`,l:"JavaScript/base/array.html#every",a:"every"},"32.30":{t:"forEach()\r",p:`对数组每一项都运行传入的函数，没有返回值
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.forEach((item, index, array)  ...`,l:"JavaScript/base/array.html#foreach",a:"foreach"},"32.31":{t:"filter()\r",p:`对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let filterResult = nu ...`,l:"JavaScript/base/array.html#filter",a:"filter"},"32.32":{t:"map()\r",p:`对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let mapResult = numbers.m ...`,l:"JavaScript/base/array.html#map",a:"map"},"33.0":{t:"# JavaScript 流程控制\r",p:"\r",l:"JavaScript/base/flow.html",a:"javascript-流程控制"},"33.1":{t:"if 语句\r",p:`流程控制语句可以用来改变程序执行的顺序

条件判断语句
条件分支语句
循环语句

if (i &gt; 1) {
  alert('yes')
} else {
  alert('no')
}

// ...`,l:"JavaScript/base/flow.html#if-语句",a:"if-语句"},"33.2":{t:"if-else\r",p:`if-else 语句：

语法：

if(条件表达式){
  语句...
}else if(条件表达式1){
  语句...
}else if(条件表达式2){
  语句...
}else{
  语句 ...`,l:"JavaScript/base/flow.html#if-else",a:"if-else"},"33.3":{t:"switch 语句\r",p:`switch 语句 - 语法：

switch(表达式){
    case 表达式1:
        代码...
        break
    case 表达式2:
        代码.. ...`,l:"JavaScript/base/flow.html#switch-语句",a:"switch-语句"},"33.4":{t:"循环语句\r",p:`

通过循环语句可以使指定的代码反复执行


JS 中一共有三种循环语句

while 语句
do-while 语句
for 语句 - while 语句 - 语法：



`,l:"JavaScript/base/flow.html#循环语句",a:"循环语句"},"33.5":{t:"while\r",p:`// while(条件表达式){
//     语句...
// }
var i = 0
while (i &lt; 10) {
  i += 2
}

::: tip while 执行流程：
whi ...`,l:"JavaScript/base/flow.html#while",a:"while"},"33.6":{t:"do-while\r",p:`let i = 10
do {
  console.log(i)
  i++
} while (i &lt; 5)

::: tip do-while 执行顺序
do-while 语句在执行时，会先执 ...`,l:"JavaScript/base/flow.html#do-while",a:"do-while"},"33.7":{t:"for\r",p:"\r",l:"JavaScript/base/flow.html#for",a:"for"},"33.8":{t:"`for` 循环\r",p:`for (let i = 0; i &lt; 5; i++) {
  console.log(i)
}

`,l:"JavaScript/base/flow.html#for-循环",a:"for-循环"},"33.9":{t:"`for in` 循环\r",p:`
用于遍历对象的可枚举属性。
语法：

for (变量 in 对象) {
  // 需要执行的代码
}

示例：
const obj = { a: 1, b: 2, c: 3 }
for (let p ...`,l:"JavaScript/base/flow.html#for-in-循环",a:"for-in-循环"},"33.10":{t:"` for of` 循环\r",p:`

用于遍历可迭代的集合，如数组、字符串、映射（Map）、集合（Set）等。


语法：


for (变量 of 可迭代对象) {
  // 需要执行的代码
}


示例：

const arr = ...`,l:"JavaScript/base/flow.html#for-of-循环",a:"for-of-循环"},"33.11":{t:"break 和 continue\r",p:`

break

break 用来终止 switch 和循环语句
break 执行后，当前的 switch 或循环会立刻停止
break 会终止离他最近的循环



for (let i = 0; i ...`,l:"JavaScript/base/flow.html#break-和-continue",a:"break-和-continue"},"34.0":{t:"# JavaScript 函数\r",p:`
在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。
虽然 for 循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数 ...`,l:"JavaScript/base/function.html",a:"javascript-函数"},"34.1":{t:"函数的使用\r",p:"\r",l:"JavaScript/base/function.html#函数的使用",a:"函数的使用"},"34.2":{t:"声明函数\r",p:`function是声明函数的关键字，必须小写
// 声明定义方式
function 函数名() {
    // 函数体代码
}

// 这是函数表达式写法，匿名函数后面跟分号结束
var 变量名 = ...`,l:"JavaScript/base/function.html#声明函数",a:"声明函数"},"34.3":{t:"调用函数\r",p:`函数名();
// 函数使用分为两步： 声明函数 和 调用函数
// 1. 声明函数
// function 函数名() {
//     // 函数体
// }
function sayHi() { ...`,l:"JavaScript/base/function.html#调用函数",a:"调用函数"},"34.4":{t:"函数的封装\r",p:`函数的封装：是把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。
`,l:"JavaScript/base/function.html#函数的封装",a:"函数的封装"},"34.5":{t:"函数的参数\r",p:"\r",l:"JavaScript/base/function.html#函数的参数",a:"函数的参数"},"34.6":{t:"形参和实参\r",p:`
在声明函数时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为形参
在调用该函数时，同样也需要传递相应的参数，这些参数被称为实参

参数的作用: 在函数内部某些值不能固定，我们可以通过参数在 ...`,l:"JavaScript/base/function.html#形参和实参",a:"形参和实参"},"34.7":{t:"函数形参和实参个数不匹配问题\r",p:`


参数个数
说明




实参个数等于形参个数
输出正确结果


实参个数多于形参个数
只取到形参的个数


实参个数少于形参个数
多的参数定义为 undefined



// 函数形参实参个数 ...`,l:"JavaScript/base/function.html#函数形参和实参个数不匹配问题",a:"函数形参和实参个数不匹配问题"},"34.8":{t:"函数的返回值\r",p:`有的时候，我们会希望函数将值返回给调用者，此时通过使用 return 语句就可以实现。
语法格式
// 声明函数
function 函数名（）{
    ...
    return  需要返回的值； ...`,l:"JavaScript/base/function.html#函数的返回值",a:"函数的返回值"},"34.9":{t:"break、continue、return 的区别\r",p:`
break：结束当前的循环体（如 for、while）
continue：跳出本次循环，继续执行下次循环（如 for、while）
return：不仅可以退出循环，还能够返回 return 语句中的 ...`,l:"JavaScript/base/function.html#break、continue、return-的区别",a:"break、continue、return-的区别"},"34.10":{t:"匿名函数\r",p:`函数可以分为具名函数和匿名函数
匿名函数：没有名字的函数,无法直接使用。
`,l:"JavaScript/base/function.html#匿名函数",a:"匿名函数"},"34.11":{t:"函数表达式\r",p:`// 声明
let fn = function () {
  console.log('函数表达式')
}
// 调用
fn()

`,l:"JavaScript/base/function.html#函数表达式",a:"函数表达式"},"34.12":{t:"立即执行函数\r",p:`(function(){ xxx  })();
(function(){ xxxx }());

::: tip
无需调用，立即执行，其实本质已经调用了
多个立即执行函数之间用分号隔开
:::
`,l:"JavaScript/base/function.html#立即执行函数",a:"立即执行函数"},"35.0":{t:"# JavaScript 基本语法\r",p:`JavaScript 是一种脚本语言，通常用于在 Web 浏览器中编写交互式前端代码。它也可以在服务器端运行，用于编写后端代码。
JavaScript 的语法类似于 C 语言，但它是一种解释性语言，不 ...`,l:"JavaScript/base/index.html",a:"javascript-基本语法"},"35.1":{t:"输出语句\r",p:`以下是一个简单的 JavaScript 示例：
// 输出Hello, World!
console.log('Hello, World!')

document.write('Hello World ...`,l:"JavaScript/base/index.html#输出语句",a:"输出语句"},"35.2":{t:"引入方式\r",p:`
JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 script 标签将 JavaScript 代码引入到 HTML 中，有两种 ...`,l:"JavaScript/base/index.html#引入方式",a:"引入方式"},"35.3":{t:"内部方式\r",p:`通过 script 标签包裹 JavaScript 代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
  ...`,l:"JavaScript/base/index.html#内部方式",a:"内部方式"},"35.4":{t:"外部方式\r",p:`
一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 script 标签的 src 属性引入
script标签如果带src属性，那么内部的 js 代码没有作用



`,l:"JavaScript/base/index.html#外部方式",a:"外部方式"},"35.5":{t:"注释\r",p:"\r",l:"JavaScript/base/index.html#注释",a:"注释"},"35.6":{t:"单行注释\r",p:`使用 //  注释单行代码， 快捷键 Ctrl + /


`,l:"JavaScript/base/index.html#单行注释",a:"单行注释"},"35.7":{t:"多行注释\r",p:`使用/* */注释多行代码，快捷键 Shift+Alt+A


`,l:"JavaScript/base/index.html#多行注释",a:"多行注释"},"36.0":{t:"# JavaScript 对象\r",p:"\r",l:"JavaScript/base/object.html",a:"javascript-对象"},"36.1":{t:"对象是什么\r",p:`对象是 JS 中的一种复合数据类型，
它相当于一个容器，在对象中可以存储各种不同类型数据。
真实生活中，一辆汽车是一个对象。
对象有它的属性，如重量和颜色等，方法有启动停止等:
在 JavaScrip ...`,l:"JavaScript/base/object.html#对象是什么",a:"对象是什么"},"36.2":{t:"创建对象\r",p:"\r",l:"JavaScript/base/object.html#创建对象",a:"创建对象"},"36.3":{t:"利用 `new Object` 创建对象\r",p:`var person = new Person()
person.name = '张三'
person.age = 18
person.sex = '男'
person.sayHi = functio ...`,l:"JavaScript/base/object.html#利用-new-object-创建对象",a:"利用-new-object-创建对象"},"36.4":{t:"利用字面量创建对象\r",p:`var person = {
  name: '张三',
  age: 18,
  sex: '男',
  sayHi: function () {
    alert('大家好啊~')
  }
}
 ...`,l:"JavaScript/base/object.html#利用字面量创建对象",a:"利用字面量创建对象"},"36.5":{t:"利用构造函数创建对象\r",p:`构造函数：是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 运算符一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。
::: tip 注意
 ...`,l:"JavaScript/base/object.html#利用构造函数创建对象",a:"利用构造函数创建对象"},"36.6":{t:"常用方法\r",p:`
Object.assign(target, …sources)：复制一个或多个对象的属性到目标对象。
Object.create(proto, [propertiesObject])：创建一个新对象 ...`,l:"JavaScript/base/object.html#常用方法",a:"常用方法"},"36.7":{t:"Object.assign(target, …sources)\r",p:`const obj1 = { a: 1 }
const obj2 = { b: 2 }
const obj3 = { c: 3 }
const mergedObj = Object.assign(ob ...`,l:"JavaScript/base/object.html#object-assign-target-sources",a:"object-assign-target-sources"},"36.8":{t:"Object.create(proto, [propertiesObject])\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(newObj.greet ...`,l:"JavaScript/base/object.html#object-create-proto-propertiesobject",a:"object-create-proto-propertiesobject"},"36.9":{t:"Object.entries(obj)\r",p:`const obj = { a: 1, b: 2, c: 3 }
const entries = Object.entries(obj)
console.log(entries) // [[&quot ...`,l:"JavaScript/base/object.html#object-entries-obj",a:"object-entries-obj"},"36.10":{t:"Object.freeze(obj)\r",p:`const obj = { name: 'John' }

`,l:"JavaScript/base/object.html#object-freeze-obj",a:"object-freeze-obj"},"36.11":{t:"Object.freeze(obj)\r",p:`obj.name = 'Jane' // 修改无效，不会影响原对象
console.log(obj.name) // John

`,l:"JavaScript/base/object.html#object-freeze-obj",a:"object-freeze-obj"},"36.12":{t:"Object.getOwnPropertyDescriptor(obj, prop)\r",p:`const obj = { name: 'John' }
const descriptor = Object.getOwnPropertyDescriptor(obj, 'name')
console ...`,l:"JavaScript/base/object.html#object-getownpropertydescriptor-obj-prop",a:"object-getownpropertydescriptor-obj-prop"},"36.13":{t:"Object.getOwnPropertyNames(obj)\r",p:`const obj = { name: 'John', age: 30 }
const propNames = Object.getOwnPropertyNames(obj)
console.log( ...`,l:"JavaScript/base/object.html#object-getownpropertynames-obj",a:"object-getownpropertynames-obj"},"36.14":{t:"Object.getOwnPropertySymbols(obj)\r",p:`const sym = Symbol('mySymbol')
const obj = { [sym]: 'value' }
const symbols = Object.getOwnPropertyS ...`,l:"JavaScript/base/object.html#object-getownpropertysymbols-obj",a:"object-getownpropertysymbols-obj"},"36.15":{t:"Object.getPrototypeOf(obj)\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(Object.getPr ...`,l:"JavaScript/base/object.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"36.16":{t:"Object.is(value1, value2)\r",p:`console.log(Object.is(5, 5)) // true
console.log(Object.is(0, -0)) // false
console.log(Object.is(Na ...`,l:"JavaScript/base/object.html#object-is-value1-value2",a:"object-is-value1-value2"},"36.17":{t:"Object.keys(obj)\r",p:`const obj = { name: 'John', age: 30 }
const keys = Object.keys(obj)
console.log(keys) // [&quot;name ...`,l:"JavaScript/base/object.html#object-keys-obj",a:"object-keys-obj"},"36.18":{t:"Object.seal(obj)\r",p:`const obj = { name: 'John' }

`,l:"JavaScript/base/object.html#object-seal-obj",a:"object-seal-obj"},"36.19":{t:"Object.seal(obj)\r",p:`obj.age = 30 // 添加属性无效，不会影响原对象
delete obj.name // 删除属性无效，不会影响原对象
console.log(obj.name) // John
conso ...`,l:"JavaScript/base/object.html#object-seal-obj",a:"object-seal-obj"},"36.20":{t:"Object.values(obj)\r",p:`const obj = { name: 'John', age: 30 }
const values = Object.values(obj)
console.log(values) // [&quo ...`,l:"JavaScript/base/object.html#object-values-obj",a:"object-values-obj"},"36.21":{t:"Object.hasOwnProperty(prop)\r",p:`const obj = { name: 'John' }
console.log(obj.hasOwnProperty('name')) // true
console.log(obj.hasOwnP ...`,l:"JavaScript/base/object.html#object-hasownproperty-prop",a:"object-hasownproperty-prop"},"37.0":{t:"# JavaScript 运算符\r",p:"\r",l:"JavaScript/base/operator.html",a:"javascript-运算符"},"37.1":{t:"运算符\r",p:`运算符也被称为操作符，是用于实现赋值、比较和执行算数运算等动能的符号。
JavaScript 中常用的运算符有：

算数运算符
递增和递减运算符
比较运算符
逻辑运算符
赋值运算符

`,l:"JavaScript/base/operator.html#运算符",a:"运算符"},"37.2":{t:"算数运算符\r",p:`


运算符
描述
实例




+
加
1 + 2 = 3


-
减
3 - 2 = 1


*
乘
2 * 4 = 8


/
除
10 / 2 = 5


**
幂运算
2 ** 4 = 16 ...`,l:"JavaScript/base/operator.html#算数运算符",a:"算数运算符"},"37.3":{t:"赋值运算符\r",p:`


运算符名称
描述
实例




=
赋值
let a = 10


??=
空赋值&lt;br /&gt;只有当变量的值为 null 或 undefined 时才会对变量进行赋值
3 - 2 = ...`,l:"JavaScript/base/operator.html#赋值运算符",a:"赋值运算符"},"37.4":{t:"自增和自减\r",p:"\r",l:"JavaScript/base/operator.html#自增和自减",a:"自增和自减"},"37.5":{t:"++ 自增运算符\r",p:`
++ 使用后会使得原来的变量立刻增加 1
自增分为前自增(++a)和后自增(a++)
无论是++a 还是 a++都会使原变量立刻增加 1
不同的是++a 和 a++所返回的值不同
a++ 是自增前的 ...`,l:"JavaScript/base/operator.html#自增运算符",a:"自增运算符"},"37.6":{t:"-- 自减运算符\r",p:`
使用后会使得原来的变量立刻减小 1
自减分为前自减(--a)和后自减(a--)
无论是--a 还是 a--都会使原变量立刻减少 1
不同的是--a 和 a--的值不同
--a 是新值
a-- 是旧值 ...`,l:"JavaScript/base/operator.html#自减运算符",a:"自减运算符"},"37.7":{t:"比较运行符\r",p:`


运算符名称
描述
案列
结果




&lt;
小于号
1 &lt; 2
true


&gt;
大于号
1 &gt; 2
false


&lt;=
小于等于号
2 &lt;= 2
true
 ...`,l:"JavaScript/base/operator.html#比较运行符",a:"比较运行符"},"37.8":{t:"逻辑运算符\r",p:"\r",l:"JavaScript/base/operator.html#逻辑运算符",a:"逻辑运算符"},"37.9":{t:"逻辑与 `&&`\r",p:`一假即假


可以对两个值进行与运算


当&amp;&amp;左右都为 true 时，则返回 true，否则返回 false


与运算是短路的与，如果第一个值为 false，则不看第二个值


与 ...`,l:"JavaScript/base/operator.html#逻辑与",a:"逻辑与"},"37.10":{t:"逻辑或 `||`\r",p:`一真即真


可以对两个值进行或运算


当||左右有 true 时，则返回 true，否则返回 false


或运算也是短路的或，如果第一个值为 true，则不看第二个值


或运算是找 true ...`,l:"JavaScript/base/operator.html#逻辑或",a:"逻辑或"},"37.11":{t:"逻辑非 `!`\r",p:`console.log(!false) // true

`,l:"JavaScript/base/operator.html#逻辑非",a:"逻辑非"},"37.12":{t:"条件运算符\r",p:`
条件表达式 ? 表达式 1 : 表达式 2

::: tip 执行顺序：
条件运算符在执行时，会先对条件表达式进行求值判断

如果结果为 true，则执行表达式 1
如果结果为 false，则执行表 ...`,l:"JavaScript/base/operator.html#条件运算符",a:"条件运算符"},"37.13":{t:" 运算符的优先级\r",p:`JavaScript 各种运算符的优先级别（Operator Precedence）是不一样的。优先级高的运算符先执行，优先级低的运算符后执行。
4 + 5 * 6 // 34

圆括号（()）可以用 ...`,l:"JavaScript/base/operator.html#运算符的优先级",a:"运算符的优先级"},"38.0":{t:"# Js 字符串的常用方法\r",p:"\r",l:"JavaScript/base/string.html",a:"js-字符串的常用方法"},"38.1":{t:"一、操作方法\r",p:`我们也可将字符串常用的操作方法归纳为增、删、改、查，需要知道字符串的特点是一旦创建了，就不可变
`,l:"JavaScript/base/string.html#一、操作方法",a:"一、操作方法"},"38.2":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"JavaScript/base/string.html#增",a:"增"},"38.3":{t:"concat()\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = 'hello '
let result = stringValue.concat('world')
console.log ...`,l:"JavaScript/base/string.html#concat",a:"concat"},"38.4":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"JavaScript/base/string.html#删",a:"删"},"38.5":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"JavaScript/base/string.html#改",a:"改"},"38.6":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = ' hello world '
let trimmedStringValue = stringValue.trim() ...`,l:"JavaScript/base/string.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"38.7":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = 'na '
let copyResult = stringValue.repeat(2)  ...`,l:"JavaScript/base/string.html#repeat",a:"repeat"},"38.8":{t:"padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
let stringValue = 'foo'
console.log(stringValue.padStart(6)) // & ...`,l:"JavaScript/base/string.html#padend",a:"padend"},"38.9":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = 'hello world'
console.log(stringValue.toUpperCase()) // &quot;HELLO WORLD&qu ...`,l:"JavaScript/base/string.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"38.10":{t:"查\r",p:`除了通过索引的方式获取字符串的值，还可通过：


chatAt()


indexOf()


startWith()


includes()


`,l:"JavaScript/base/string.html#查",a:"查"},"38.11":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = 'abcde'
console.log(message.charAt(2)) // &quot;c&quot;

`,l:"JavaScript/base/string.html#charat",a:"charat"},"38.12":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = 'hello world'
console.log(stringValue.indexOf ...`,l:"JavaScript/base/string.html#indexof",a:"indexof"},"38.13":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = 'foobarbaz'
console.log(message.startsWith('foo')) // tr ...`,l:"JavaScript/base/string.html#startwith-、includes",a:"startwith-、includes"},"38.14":{t:"二、转换方法\r",p:"\r",l:"JavaScript/base/string.html#二、转换方法",a:"二、转换方法"},"38.15":{t:"split()\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = '12+23+34'
let arr = str.split('+') // [12,23,34]

`,l:"JavaScript/base/string.html#split",a:"split"},"38.16":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"JavaScript/base/string.html#三、模板匹配方法",a:"三、模板匹配方法"},"38.17":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = 'cat, bat, sat, fat'
let pattern = /.at/
let mat ...`,l:"JavaScript/base/string.html#match",a:"match"},"38.18":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = 'cat, bat, sat, fat'
let pos = text ...`,l:"JavaScript/base/string.html#search",a:"search"},"38.19":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = 'cat, bat, sat, fat'
let result = text.replace('at', ...`,l:"JavaScript/base/string.html#replace",a:"replace"},"39.0":{t:"# JavaScript 数据类型\r",p:"\r",l:"JavaScript/base/types.html",a:"javascript-数据类型"},"39.1":{t:"一、基本类型\r",p:`基本类型主要为以下 6 种：

Number
String
Boolean
Undefined
null
symbol

`,l:"JavaScript/base/types.html#一、基本类型",a:"一、基本类型"},"39.2":{t:"Number\r",p:`数值最常见的整数类型格式则为十进制，还可以设置八进制（零开头）、十六进制（0x 开头）
let intNum = 55 // 10进制的55
let num1 = 070 // 8进制的56
let  ...`,l:"JavaScript/base/types.html#number",a:"number"},"39.3":{t:"Undefined\r",p:`Undefined 类型只有一个值，就是特殊值 undefined。当使用 var 或 let 声明了变量但没有初始化时，就相当于给变量赋予了 undefined 值
let message
cons ...`,l:"JavaScript/base/types.html#undefined",a:"undefined"},"39.4":{t:"String\r",p:`字符串可以使用双引号（&quot;）、单引号（'）或反引号（\`）标示
let firstName = 'John'
let lastName = 'Jacob'
let lastName = \`Jin ...`,l:"JavaScript/base/types.html#string",a:"string"},"39.5":{t:"Null\r",p:`Null 类型同样只有一个值，即特殊值 null
逻辑上讲， null 值表示一个空对象指针，这也是给typeof 传一个 null 会返回 &quot;object&quot; 的原因
let ca ...`,l:"JavaScript/base/types.html#null",a:"null"},"39.6":{t:"Boolean\r",p:`Boolean （布尔值）类型有两个字面值： true 和 false
通过Boolean可以将其他类型的数据转化成布尔值
规则如下：
数据类型      				转换为 true 的值      	 ...`,l:"JavaScript/base/types.html#boolean",a:"boolean"},"39.7":{t:"Symbol\r",p:`Symbol （符号）是原始值，且符号实例是唯一、不可变的。符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险
let genericSymbol = Symbol()
let other ...`,l:"JavaScript/base/types.html#symbol",a:"symbol"},"39.8":{t:"二、引用类型\r",p:`复杂类型统称为Object，我们这里主要讲述下面三种：

Object
Array
Function

`,l:"JavaScript/base/types.html#二、引用类型",a:"二、引用类型"},"39.9":{t:"Object\r",p:`创建object常用方式为对象字面量表示法，属性名可以是字符串或数值
let person = {
  name: 'Nicholas',
  age: 29,
  5: true
}

`,l:"JavaScript/base/types.html#object",a:"object"},"39.10":{t:"Array\r",p:`JavaScript数组是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。并且，数组也是动态大小的，会随着数据添加而自动增长
let colors = ['red', 2, ...`,l:"JavaScript/base/types.html#array",a:"array"},"39.11":{t:"Function\r",p:`函数实际上是对象，每个函数都是 Function类型的实例，而 Function 也有属性和方法，跟其他引用类型一样
函数存在三种常见的表达方式：

函数声明

// 函数声明
function su ...`,l:"JavaScript/base/types.html#function",a:"function"},"39.12":{t:"其他引用类型\r",p:`除了上述说的三种之外，还包括Date、RegExp、Map、Set等......
`,l:"JavaScript/base/types.html#其他引用类型",a:"其他引用类型"},"39.13":{t:"三、类型转换\r",p:`类型转换指将一种数据类型转换为其他类型
`,l:"JavaScript/base/types.html#三、类型转换",a:"三、类型转换"},"39.14":{t:"转换为字符串\r",p:`// 1. 把数字转换为字符串型 变量.toString()
var num = 10
var str = num.toString()
console.log(typeof str, str) // ...`,l:"JavaScript/base/types.html#转换为字符串",a:"转换为字符串"},"39.15":{t:"转换为数字型\r",p:`
将其他的数据类型转换为数值

使用 Number()函数来将其他类型转换为数值
转换的情况：

字符串：

如果字符串是一个合法的数字，则会自动转换为对应的数字
如果字符串不是合法数字，则转换为 N ...`,l:"JavaScript/base/types.html#转换为数字型",a:"转换为数字型"},"39.16":{t:"转换为布尔型\r",p:`使用 Boolean()函数来将其他类型转换为布尔值


转换的情况：
数字：

0 和 NaN 转换为 false
其余是 true

字符串：

空串 转换为 false
其余是 true

nu ...`,l:"JavaScript/base/types.html#转换为布尔型",a:"转换为布尔型"},"39.17":{t:"四、存储区别\r",p:`基本数据类型和引用数据类型存储在内存中的位置不同：


基本数据类型存储在栈中


引用类型的对象存储于堆中


当我们把变量赋值给一个变量时，解析器首先要确认的就是这个值是基本类型值还是引用类型值
 ...`,l:"JavaScript/base/types.html#四、存储区别",a:"四、存储区别"},"39.18":{t:"基本类型\r",p:`let a = 10
let b = a // 赋值操作
b = 20
console.log(a) // 10值

a的值为一个基本类型，是存储在栈中，将a的值赋给b，虽然两个变量的值相等，但是两个 ...`,l:"JavaScript/base/types.html#基本类型",a:"基本类型"},"39.19":{t:"引用类型\r",p:`var obj1 = {}
var obj2 = obj1
obj2.name = 'zs'
console.log(obj1.name) // zs

引用类型数据存放在堆中，每个堆内存对象都有对应 ...`,l:"JavaScript/base/types.html#引用类型",a:"引用类型"},"39.20":{t:"小结\r",p:`
声明变量时不同的内存地址分配：

简单类型的值存放在栈中，在栈中存放的是对应的值
引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址


不同的类型数据导致赋值变量时的不同：

简单类型赋值 ...`,l:"JavaScript/base/types.html#小结",a:"小结"},"40.0":{t:"# JavaScript 变量\r",p:"\r",l:"JavaScript/base/variable.html",a:"javascript-变量"},"40.1":{t:"var 关键字\r",p:`var msg // 默认 undefined

声明后可以改变类型，但不推荐
var msg = 'hi'
msg = 100 // 合法，但不推荐

var 声明作用域，一个函数内部定义一个变量， ...`,l:"JavaScript/base/variable.html#var-关键字",a:"var-关键字"},"40.2":{t:"let 声明\r",p:`let 声明的范围是块作用域：
if (true) {
  var name = 'zhangsan'
  console.log(name) // zhangsan
}
console.log(na ...`,l:"JavaScript/base/variable.html#let-声明",a:"let-声明"},"40.3":{t:"暂时性死区\r",p:`// name 会被提升
console.log(name) // undefined
var name = 'zhangsan'
// age 不会被提升
console.log(age) // R ...`,l:"JavaScript/base/variable.html#暂时性死区",a:"暂时性死区"},"40.4":{t:"全局声明\r",p:`let 在全局作用域中声明的变量不会成为 window 对象的属性（var 声明的变量则会）
var name = 'zhangsan'
console.log(window.name) // 'zh ...`,l:"JavaScript/base/variable.html#全局声明",a:"全局声明"},"40.5":{t:"条件声明\r",p:`


JavaScript 引擎会自动将多余的声明在作用域顶部合并为一个声明。但是 let 是块级作用域，所以检查不到之前是否声明过。



try/catch 语句或 typeof 操作符也不能解决 ...`,l:"JavaScript/base/variable.html#条件声明",a:"条件声明"},"40.6":{t:"for 循环中的 let 声明\r",p:`使用 var 时变量会渗透到外面
for (var i = 0; i &lt; 5; ++i) {
  // 循环逻辑
}
console.log(i) // 5

let 之后则不会，因为遇到 {} ...`,l:"JavaScript/base/variable.html#for-循环中的-let-声明",a:"for-循环中的-let-声明"},"40.7":{t:"const 声明\r",p:`const 的行为与 let 基本相同，但是他是常量，声明之后不能修改，尝试修改 const 声明的变量会导致运行时错误。
const age = 18
age = 30 // TypeError:  ...`,l:"JavaScript/base/variable.html#const-声明",a:"const-声明"},"40.8":{t:"函数声明提升与 var 声明提升\r",p:`var a = 'Tom'
function a() {}

console.log(a) // 'Tom'

function与var都存在变量提升，但function比var优先级高。上面的代码就 ...`,l:"JavaScript/base/variable.html#函数声明提升与-var-声明提升",a:"函数声明提升与-var-声明提升"},"41.0":{t:"# BOM document 对象\r",p:`Document 对象代表当前窗口或标签页中加载的文档。它提供了对文档内容进行访问和操作的方法和属性。
`,l:"JavaScript/BOM/document.html",a:"bom-document-对象"},"41.1":{t:"常见操作\r",p:`
获取元素：可以使用document.getElementById(id)获取具有指定 id 的元素。
修改文档结构：可以使用document.createElement(tagName)创建新元素， ...`,l:"JavaScript/BOM/document.html#常见操作",a:"常见操作"},"41.2":{t:"示例\r",p:`// 获取具有id为&quot;myElement&quot;的元素
var element = document.getElementById('myElement')

// 创建一个新的段落元素 ...`,l:"JavaScript/BOM/document.html#示例",a:"示例"},"42.0":{t:"# BOM history 对象\r",p:`History 对象提供了对浏览器历史记录的操作。可以使用它向前或向后导航，加载历史记录中的不同页面。
`,l:"JavaScript/BOM/history.html",a:"bom-history-对象"},"42.1":{t:"常见方法\r",p:`
history.back()：导航到上一个页面。
history.forward()：导航到下一个页面。
history.go(delta)：导航到相对于当前页面的偏移量为delta的页面。

`,l:"JavaScript/BOM/history.html#常见方法",a:"常见方法"},"42.2":{t:"示例\r",p:`// 导航到上一个页面
history.back()

// 导航到下一个页面
history.forward()

// 导航到相对于当前页面的偏移量为2的页面
history.go(2)

`,l:"JavaScript/BOM/history.html#示例",a:"示例"},"43.0":{t:"# JavaScript BOM\r",p:`BOM（Browser Object Model）是 JavaScript 中用于与浏览器交互的一组对象和方法集合。它提供了访问和控制浏览器窗口及其内容的功能。以下是一些常见的 BOM 对象：


w ...`,l:"JavaScript/BOM/index.html",a:"javascript-bom"},"44.0":{t:"# BOM location 对象\r",p:`Location 对象提供了与当前窗口的 URL 相关的信息和操作。它包含了 URL 的各个部分，如协议、主机名、路径和查询参数等。
`,l:"JavaScript/BOM/location.html",a:"bom-location-对象"},"44.1":{t:"常见属性和方法\r",p:`
location.href：当前窗口的完整 URL。
location.protocol：URL 的协议部分。
location.hostname：URL 的主机名部分。
location.path ...`,l:"JavaScript/BOM/location.html#常见属性和方法",a:"常见属性和方法"},"44.2":{t:"示例\r",p:`// 获取当前窗口的URL
console.log(location.href)

// 获取URL的协议
console.log(location.protocol)

// 将页面重定向到新的UR ...`,l:"JavaScript/BOM/location.html#示例",a:"示例"},"45.0":{t:"# BOM navigator 对象\r",p:`Navigator 对象提供了关于浏览器的信息，如浏览器的名称、版本、用户代理字符串等。它还可以用于检测浏览器的功能和特性。
`,l:"JavaScript/BOM/navigator.html",a:"bom-navigator-对象"},"45.1":{t:"常见属性\r",p:`
navigator.userAgent：包含用户代理字符串，用于识别浏览器和操作系统。
navigator.appName：浏览器的名称。
navigator.appVersion：浏览器的版本。
 ...`,l:"JavaScript/BOM/navigator.html#常见属性",a:"常见属性"},"45.2":{t:"示例\r",p:`// 获取用户代理字符串
console.log(navigator.userAgent)

// 获取浏览器的名称
console.log(navigator.appName)

// 获取浏览器的 ...`,l:"JavaScript/BOM/navigator.html#示例",a:"示例"},"46.0":{t:"# BOM screen 对象\r",p:`Screen 对象提供了关于用户屏幕的信息，如屏幕的尺寸、分辨率等。可以使用它来调整页面在不同屏幕上的显示。
`,l:"JavaScript/BOM/screen.html",a:"bom-screen-对象"},"46.1":{t:"常见属性\r",p:`
screen.width：屏幕的宽度。
screen.height：屏幕的高度。
screen.availWidth：屏幕的可用宽度，不包括系统任务栏或工具栏。
screen.availHeight ...`,l:"JavaScript/BOM/screen.html#常见属性",a:"常见属性"},"46.2":{t:"示例\r",p:`// 获取屏幕的宽度
console.log('屏幕宽度：' + screen.width + ' 像素')

// 获取屏幕的高度
console.log('屏幕高度：' + screen.heig ...`,l:"JavaScript/BOM/screen.html#示例",a:"示例"},"47.0":{t:"# BOM window 对象\r",p:`Window 对象是 BOM 的顶级对象，表示浏览器窗口或标签页。它提供了操作浏览器窗口的方法和属性，以及与窗口内容交互的功能。
`,l:"JavaScript/BOM/window.html",a:"bom-window-对象"},"47.1":{t:"常见属性和方法\r",p:`
window.open(url, name, specs)：打开一个新的浏览器窗口或标签页。
window.close()：关闭当前窗口。
window.resizeTo(width, height ...`,l:"JavaScript/BOM/window.html#常见属性和方法",a:"常见属性和方法"},"47.2":{t:"示例\r",p:`// 打开一个新窗口
window.open('https://www.example.com', '_blank')

// 关闭当前窗口
window.close()

// 调整窗口大小
win ...`,l:"JavaScript/BOM/window.html#示例",a:"示例"},"48.0":{t:"# 闭包\r",p:"\r",l:"JavaScript/core/closure.html",a:"闭包"},"48.1":{t:"什么是闭包\r",p:`一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）
也就是说，闭包让你可以在一个内层函数中访问到其 ...`,l:"JavaScript/core/closure.html#什么是闭包",a:"什么是闭包"},"49.0":{t:"# 节流和防抖\r",p:"\r",l:"JavaScript/core/debounce.html",a:"节流和防抖"},"49.1":{t:"是什么\r",p:`本质上是优化高频率执行代码的一种手段
如：浏览器的 resize、scroll、keypress、mousemove 等事件在触发时，会不断地调用绑定在事件上的回调函数，极大地浪费资源，降低前端性能
 ...`,l:"JavaScript/core/debounce.html#是什么",a:"是什么"},"49.2":{t:"定义\r",p:`节流: n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效
防抖: n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时
`,l:"JavaScript/core/debounce.html#定义",a:"定义"},"49.3":{t:"代码实现\r",p:"\r",l:"JavaScript/core/debounce.html#代码实现",a:"代码实现"},"49.4":{t:"节流\r",p:`
使用时间戳写法，事件会立即执行，停止触发后没有办法再次执行

function throttled1(fn, delay = 500) {
  let oldtime = Date.now()
   ...`,l:"JavaScript/core/debounce.html#节流",a:"节流"},"49.5":{t:"防抖\r",p:`
简单版本的实现

function debounce(func, wait) {
  let timeout

  return function () {
    let context = th ...`,l:"JavaScript/core/debounce.html#防抖",a:"防抖"},"50.0":{t:"# 深拷贝\r",p:`function deepCopy(obj) {
  // 如果不是对象或者为null，直接返回
  if (typeof obj !== 'object' || obj === null) {
   ...`,l:"JavaScript/core/deepCopy.html",a:"深拷贝"},"51.0":{t:"# 数组去重\r",p:`const arr = [1, 1, '1', 17, true, true, false, false, 'true', 'a', {}, {}]
// =&gt; [1, '1', 17, tru ...`,l:"JavaScript/core/duplicate.html",a:"数组去重"},"51.1":{t:"1. 使用 set\r",p:`const newArr = Array.from(new Set(arr))

`,l:"JavaScript/core/duplicate.html#_1-使用-set",a:"_1-使用-set"},"51.2":{t:"2. for 循环\r",p:`const unique = (arr) =&gt; {
  let len = arr.length
  for (let i = 0; i &lt; len; i++) {
    for (le ...`,l:"JavaScript/core/duplicate.html#_2-for-循环",a:"_2-for-循环"},"51.3":{t:"3. 使用 indexOf\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (re ...`,l:"JavaScript/core/duplicate.html#_3-使用-indexof",a:"_3-使用-indexof"},"51.4":{t:"4. 使用 include\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (!r ...`,l:"JavaScript/core/duplicate.html#_4-使用-include",a:"_4-使用-include"},"51.5":{t:"5. 使用 filter\r",p:`const unique = (arr) =&gt; {
  return arr.filter((item, index) =&gt; {
    return arr.indexOf(item)  ...`,l:"JavaScript/core/duplicate.html#_5-使用-filter",a:"_5-使用-filter"},"51.6":{t:"6. 使用 Map\r",p:`const unique = (arr) =&gt; {
  const map = new Map()
  const res = []
  for (let i = 0; i &lt; arr.l ...`,l:"JavaScript/core/duplicate.html#_6-使用-map",a:"_6-使用-map"},"52.0":{t:"# 数组扁平化\r",p:`
数组扁平化是指将一个多维数组变为一个一维数组

const arr = [1, [2, [3, [4, 5]]], 6]
// =&gt; [1, 2, 3, 4, 5, 6]

`,l:"JavaScript/core/flattening.html",a:"数组扁平化"},"52.1":{t:"1. 使用 flat()\r",p:`const res1 = arr.flat()
// 使用Infinity，无论多少层都将扁平化为一维数组。
const res1 = arr.flat(Infinity)

`,l:"JavaScript/core/flattening.html#_1-使用-flat",a:"_1-使用-flat"},"52.2":{t:"2. 利用正则\r",p:`const res2 = JSON.stringify(arr).replace(/\\[|\\]/g, '').split(',')

// 优化
const res3 = JSON.parse('[' ...`,l:"JavaScript/core/flattening.html#_2-利用正则",a:"_2-利用正则"},"52.3":{t:"3. 使用 reduce\r",p:`const flatten = (arr) =&gt; {
  return arr.reduce((pre, cur) =&gt; {
    return pre.concat(Array.isA ...`,l:"JavaScript/core/flattening.html#_3-使用-reduce",a:"_3-使用-reduce"},"52.4":{t:"4. 函数递归\r",p:`const res5 = []
const fn = (arr) =&gt; {
  for (let i = 0; i &lt; arr.length; i++) {
    if (Array.i ...`,l:"JavaScript/core/flattening.html#_4-函数递归",a:"_4-函数递归"},"53.0":{t:"# promise\r",p:"\r",l:"JavaScript/core/promise.html",a:"promise"},"53.1":{t:"是什么\r",p:`promise是一种异步编程的解决方案，它可以避免回调地狱，使代码更加简洁易读。promise对象代表一个异步操作的最终完成或失败，并返回一个值。
在 JavaScript 中，promise有三种状 ...`,l:"JavaScript/core/promise.html#是什么",a:"是什么"},"53.2":{t:"实现一个 promise\r",p:`// 实现一个promise
class MyPromise {
  constructor(executor) {
    this.status = 'pending' // 初始状态为pendi ...`,l:"JavaScript/core/promise.html#实现一个-promise",a:"实现一个-promise"},"54.0":{t:"# JavaScript DOM\r",p:"DOM（Document Object Model）是一种用于表示和操作 HTML、XML 等文档结构的编程接口。它将文档表示为一个树状结构，每个节点都是文档中的一个元素、属性、文本或其他类型的内容。 ...",l:"JavaScript/DOM/index.html",a:"javascript-dom"},"54.1":{t:"**获取和修改元素**：\r",p:`
getElementById(): 根据元素的 ID 获取元素节点。
getElementsByClassName(): 根据类名获取元素节点集合。
getElementsByTagName():  ...`,l:"JavaScript/DOM/index.html#获取和修改元素",a:"获取和修改元素"},"54.2":{t:"**创建和操作元素**：\r",p:`
createElement(): 创建新的元素节点。
appendChild(): 将一个节点添加为另一个节点的子节点。
removeChild(): 删除指定的子节点。
setAttribute( ...`,l:"JavaScript/DOM/index.html#创建和操作元素",a:"创建和操作元素"},"54.3":{t:"**事件处理**：\r",p:`
addEventListener(): 添加事件监听器。
removeEventListener(): 移除事件监听器。
事件处理函数：响应事件的函数，可以通过事件对象获取相关信息。

`,l:"JavaScript/DOM/index.html#事件处理",a:"事件处理"},"54.4":{t:"**样式和类操作**：\r",p:`
style: 获取或设置元素的样式属性。
classList: 获取元素的类列表，可用于添加、删除或切换类。

DOM 提供了丰富的功能和方法，使开发者能够通过 JavaScript 与网页进行交互 ...`,l:"JavaScript/DOM/index.html#样式和类操作",a:"样式和类操作"},"55.0":{t:"# DOM 事件处理\r",p:`DOM 事件处理是 JavaScript 中常用的一项功能，它允许你监听和响应用户与网页元素之间的交互。下面是一些常见的方法和技巧来处理 DOM 事件：
`,l:"JavaScript/DOM/事件处理.html",a:"dom-事件处理"},"55.1":{t:"添加事件监听器\r",p:`

使用 addEventListener 方法来添加事件监听器：
element.addEventListener('eventName', eventHandler)

其中 'eventName ...`,l:"JavaScript/DOM/事件处理.html#添加事件监听器",a:"添加事件监听器"},"55.2":{t:"事件对象\r",p:`

事件处理程序的第一个参数是事件对象 event，它包含有关事件的信息，例如事件类型、目标元素等。你可以在事件处理程序中使用这些信息来执行逻辑操作。


阻止事件默认行为：使用 event.prev ...`,l:"JavaScript/DOM/事件处理.html#事件对象",a:"事件对象"},"55.3":{t:"事件冒泡和事件捕获\r",p:`

事件冒泡：默认情况下，事件会从触发它的元素向上冒泡到祖先元素。你可以使用 event.stopPropagation() 方法来停止事件冒泡。


事件捕获：可以通过将第三个参数设置为 true  ...`,l:"JavaScript/DOM/事件处理.html#事件冒泡和事件捕获",a:"事件冒泡和事件捕获"},"55.4":{t:"常见事件类型\r",p:`以下是一些常见的 DOM 事件类型：


鼠标事件：click、mouseover、mouseout、mousemove 等。


键盘事件：keyup、keydown、keypress 等。


表 ...`,l:"JavaScript/DOM/事件处理.html#常见事件类型",a:"常见事件类型"},"55.5":{t:"事件委托\r",p:`事件委托是一种处理多个子元素的事件的技术。通过将事件监听器添加到父元素上，可以捕获子元素触发的事件，并根据需要执行相应的操作。这样可以减少事件监听器的数量，提高性能。
parentElement.ad ...`,l:"JavaScript/DOM/事件处理.html#事件委托",a:"事件委托"},"56.0":{t:"# DOM 创建和操作元素\r",p:"\r",l:"JavaScript/DOM/创建和操作元素.html",a:"dom-创建和操作元素"},"56.1":{t:"创建元素\r",p:`使用 createElement 方法创建新元素：
const newElement = document.createElement('tagName')

其中 tagName 是你想要创建的元素 ...`,l:"JavaScript/DOM/创建和操作元素.html#创建元素",a:"创建元素"},"56.2":{t:"设置元素属性和内容\r",p:`设置元素的属性：使用 setAttribute 方法：
element.setAttribute('attributeName', 'attributeValue')

设置元素的文本内容：使用 te ...`,l:"JavaScript/DOM/创建和操作元素.html#设置元素属性和内容",a:"设置元素属性和内容"},"56.3":{t:"操作元素的父子关系\r",p:`将新元素添加到父元素中：使用 appendChild 方法：
parentElement.appendChild(newElement)

这将把 newElement 添加为 parentEleme ...`,l:"JavaScript/DOM/创建和操作元素.html#操作元素的父子关系",a:"操作元素的父子关系"},"57.0":{t:"# DOM 样式和类操作\r",p:`在 JavaScript 中，可以使用 DOM（文档对象模型）来操作元素的样式和类。以下是一些常用的方法和技巧：
`,l:"JavaScript/DOM/样式和类操作.html",a:"dom-样式和类操作"},"57.1":{t:"样式操作\r",p:`

修改元素的内联样式：使用 style 对象来访问和修改元素的样式属性。
element.style.property = 'value'

这里的 property 是你要修改的 CSS 样式属性 ...`,l:"JavaScript/DOM/样式和类操作.html#样式操作",a:"样式操作"},"57.2":{t:"类操作\r",p:`

添加类名：使用 classList 属性的 add 方法。
element.classList.add('className')



移除类名：使用 classList 属性的 remove 方 ...`,l:"JavaScript/DOM/样式和类操作.html#类操作",a:"类操作"},"58.0":{t:"# DOM 获取和修改元素\r",p:"\r",l:"JavaScript/DOM/获取和修改元素.html",a:"dom-获取和修改元素"},"58.1":{t:"获取元素\r",p:`通过 ID 获取元素：使用 getElementById 方法，传入元素的 ID。
const element = document.getElementById('elementId')

通过类名 ...`,l:"JavaScript/DOM/获取和修改元素.html#获取元素",a:"获取元素"},"58.2":{t:"修改元素\r",p:`修改元素的文本内容：使用 textContent 属性或 innerText 属性。
element.textContent = 'New content'

// 或者
element.innerT ...`,l:"JavaScript/DOM/获取和修改元素.html#修改元素",a:"修改元素"},"59.0":{t:"# 内置对象 Date\r",p:"\r",l:"JavaScript/内置对象/Date.html",a:"内置对象-date"},"59.1":{t:"Date 方法\r",p:`


方法
描述




getDate()
获取日期（月份中的日期），返回值为 1 到 31 之间的整数。


getDay()
获取星期几，返回值为 0（表示星期日）到 6（表示星期六）之间的整数 ...`,l:"JavaScript/内置对象/Date.html#date-方法",a:"date-方法"},"59.2":{t:"创建日期\r",p:`Date 对象用于处理日期和时间。
可以通过 new 关键词来定义 Date 对象。以下代码定义了名为 myDate 的 Date 对象：
有四种方式初始化日期:
new Date();
new Da ...`,l:"JavaScript/内置对象/Date.html#创建日期",a:"创建日期"},"59.3":{t:"设置日期\r",p:`通过使用针对日期对象的方法，我们可以很容易地对日期进行操作。
在下面的例子中，我们为日期对象设置了一个特定的日期 (2050 年 1 月 10 日)：
var myDate = new Date()
 ...`,l:"JavaScript/内置对象/Date.html#设置日期",a:"设置日期"},"59.4":{t:"两个日期比较\r",p:`var x = new Date()
x.setFullYear(2100, 0, 14)
var today = new Date()

if (x &gt; today) {
  alert('今 ...`,l:"JavaScript/内置对象/Date.html#两个日期比较",a:"两个日期比较"},"60.0":{t:"# JavaScript 内置对象简介\r",p:`内置对象：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用或者基本而必要的功能（属性和方法），用于处理各种不同类型的数据和操作。
::: tip 简介
JavaScript 的内置对 ...`,l:"JavaScript/内置对象/index.html",a:"javascript-内置对象简介"},"60.1":{t:"JavaScript 的内置对象：\r",p:`


内置对象
对象说明




Object
基础对象


Array
数组


String
字符串对象


Number
数值对象


Boolean
布尔对象


Date
日期时间


Ma ...`,l:"JavaScript/内置对象/index.html#javascript-的内置对象",a:"javascript-的内置对象"},"60.2":{t:"Object\r",p:`Object 是 JavaScript 的基础对象，其他对象都继承自它。Object 提供了一系列通用的方法，如对象的创建、属性的设置和获取等。它是构建其他对象的基石。
`,l:"JavaScript/内置对象/index.html#object",a:"object"},"60.3":{t:"Array\r",p:`Array 是用于表示和操作数组的对象。它提供了一系列的方法来操作和处理数据集合，如添加、删除、查询、排序等。Array 的灵活性使得它在处理列表和集合数据时非常便利。
`,l:"JavaScript/内置对象/index.html#array",a:"array"},"60.4":{t:"String\r",p:`String 是用于表示和操作字符串的对象。它提供了许多字符串相关的方法，如拼接、查找、替换等。这些方法可以帮助我们处理文本数据，进行字符串操作和处理。
`,l:"JavaScript/内置对象/index.html#string",a:"string"},"60.5":{t:"Number\r",p:`Number 是用于表示和操作数字的对象。它提供了一系列数字相关的方法，如四舍五入、转换为字符串、计算等。Number 可以进行基本的数学计算，还可以用于日期和时间处理。
`,l:"JavaScript/内置对象/index.html#number",a:"number"},"60.6":{t:"Boolean\r",p:`Boolean 是表示和操作布尔值的对象，包括 true 和 false 两个值。它提供了逻辑运算和条件判断的功能，用于控制流程和决策。
`,l:"JavaScript/内置对象/index.html#boolean",a:"boolean"},"60.7":{t:"Date\r",p:`Date 是用于表示日期和时间的对象。它提供了一系列的方法来操作日期和时间，如获取当前时间、设置时间、格式化等。Date 可以用于处理时间相关的任务，如计算时间差、添加或减去日期等。
`,l:"JavaScript/内置对象/index.html#date",a:"date"},"60.8":{t:"Math\r",p:`Math 是用于进行数学计算的对象。它提供了一系列数学运算方法，如求绝对值、计算平方根、生成随机数等。Math 可以用于复杂的数值计算和处理。
`,l:"JavaScript/内置对象/index.html#math",a:"math"},"60.9":{t:"RegExp\r",p:`RegExp 是用于进行正则表达式匹配的对象。它提供了一系列与正则表达式相关的方法，如匹配、替换等。RegExp 可以用于文本匹配、分割、替换等复杂的文本处理任务。
除了上述常用的内置对象外，还有一些 ...`,l:"JavaScript/内置对象/index.html#regexp",a:"regexp"},"61.0":{t:"# 内置对象 Number 和 Math\r",p:"\r",l:"JavaScript/内置对象/Number.html",a:"内置对象-number-和-math"},"61.1":{t:"Number\r",p:"\r",l:"JavaScript/内置对象/Number.html#number",a:"number"},"61.2":{t:"数字方法\r",p:`


方法
描述




Number.parseFloat()
将字符串转换成浮点数，和全局方法 parseFloat() 作用一致。


Number.parseInt()
将字符串转换成整型数字 ...`,l:"JavaScript/内置对象/Number.html#数字方法",a:"数字方法"},"61.3":{t:"Math\r",p:`Math 是 JavaScript 中内置的对象，称为数学对象，这个对象下即包含了属性，也包含了许多的方法。
`,l:"JavaScript/内置对象/Number.html#math",a:"math"},"61.4":{t:"属性\r",p:`
Math.PI，获取圆周率

// 圆周率
console.log(Math.PI)

`,l:"JavaScript/内置对象/Number.html#属性",a:"属性"},"61.5":{t:"方法\r",p:`
Math.random，生成 0 到 1 间的随机数

// 0 ~ 1 之间的随机数, 包含 0 不包含 1
Math.random()


Math.ceil，数字向上取整

// 舍弃小数部分 ...`,l:"JavaScript/内置对象/Number.html#方法",a:"方法"},"62.0":{t:"# 内置对象 RegExp\r",p:"\r",l:"JavaScript/内置对象/RegExp.html",a:"内置对象-regexp"},"62.1":{t:"什么是 RegExp？\r",p:"RegExp（正则表达式）是一种用于匹配和操作字符串模式的强大工具。它是一种模式匹配的语法，可以用来搜索、替换和提取字符串中的特定部分。在 JavaScript 中，RegExp 是一个内置的对象类型 ...",l:"JavaScript/内置对象/RegExp.html#什么是-regexp",a:"什么是-regexp"},"62.2":{t:"元字符\r",p:`
.：匹配除换行符之外的任何单个字符。
^：匹配字符串的开头。
$：匹配字符串的结尾。
\\*：匹配前面的元素零次或多次。
+：匹配前面的元素一次或多次。
?：匹配前面的元素零次或一次。
[]：定义字符 ...`,l:"JavaScript/内置对象/RegExp.html#元字符",a:"元字符"},"62.3":{t:"模式修饰符\r",p:`
g：全局匹配，找到所有匹配项而不止第一个。
i：忽略大小写匹配。
m：多行匹配。

除了上述元字符和模式修饰符，正则表达式还支持一系列特殊的转义字符和预定义字符类，如\\d（匹配任意数字字符）、\\w（ ...`,l:"JavaScript/内置对象/RegExp.html#模式修饰符",a:"模式修饰符"},"62.4":{t:"正则表达式的方法\r",p:`
test(): 检测字符串是否与正则表达式匹配，返回布尔值。
exec(): 在字符串中执行正则表达式匹配，返回匹配结果的数组或 null。
match(): 在字符串中查找正则表达式匹配，返回匹配 ...`,l:"JavaScript/内置对象/RegExp.html#正则表达式的方法",a:"正则表达式的方法"},"63.0":{t:"# 内置对象 String\r",p:"\r",l:"JavaScript/内置对象/String.html",a:"内置对象-string"},"63.1":{t:"一、操作方法\r",p:"\r",l:"JavaScript/内置对象/String.html#一、操作方法",a:"一、操作方法"},"63.2":{t:"字符串截取\r",p:"\r",l:"JavaScript/内置对象/String.html#字符串截取",a:"字符串截取"},"63.3":{t:"slice()\r",p:`语法
新字符串 = str.slice(开始索引, 结束索引) //两个参数都是索引值。包左不包右。

解释

从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。

::: tip  ...`,l:"JavaScript/内置对象/String.html#slice",a:"slice"},"63.4":{t:"substring()\r",p:`语法
新字符串 = str.substring(开始索引, 结束索引) //两个参数都是索引值。包左不包右。

解释

从字符串中截取指定的内容。和 slice()类似。

substring()和  ...`,l:"JavaScript/内置对象/String.html#substring",a:"substring"},"63.5":{t:"substr()\r",p:`语法
字符串 = str.substr(开始索引, 截取的长度)

解释

从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。

::: warning 注意
这个方法的第二个参数截 ...`,l:"JavaScript/内置对象/String.html#substr",a:"substr"},"63.6":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"JavaScript/内置对象/String.html#增",a:"增"},"63.7":{t:"concat()\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = 'hello '
let result = stringValue.concat('world')
console.log ...`,l:"JavaScript/内置对象/String.html#concat",a:"concat"},"63.8":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"JavaScript/内置对象/String.html#删",a:"删"},"63.9":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"JavaScript/内置对象/String.html#改",a:"改"},"63.10":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = ' hello world '
let trimmedStringValue = stringValue.trim() ...`,l:"JavaScript/内置对象/String.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"63.11":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = 'na '
let copyResult = stringValue.repeat(2)  ...`,l:"JavaScript/内置对象/String.html#repeat",a:"repeat"},"63.12":{t:"padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
let stringValue = 'foo'
console.log(stringValue.padStart(6)) // & ...`,l:"JavaScript/内置对象/String.html#padend",a:"padend"},"63.13":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = 'hello world'
console.log(stringValue.toUpperCase()) // &quot;HELLO WORLD&qu ...`,l:"JavaScript/内置对象/String.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"63.14":{t:"查\r",p:`除了通过索引的方式获取字符串的值，还可通过：


chatAt()


indexOf()


startWith()


includes()


`,l:"JavaScript/内置对象/String.html#查",a:"查"},"63.15":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = 'abcde'
console.log(message.charAt(2)) // &quot;c&quot;

`,l:"JavaScript/内置对象/String.html#charat",a:"charat"},"63.16":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = 'hello world'
console.log(stringValue.indexOf ...`,l:"JavaScript/内置对象/String.html#indexof",a:"indexof"},"63.17":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = 'foobarbaz'
console.log(message.startsWith('foo')) // tr ...`,l:"JavaScript/内置对象/String.html#startwith-、includes",a:"startwith-、includes"},"63.18":{t:"二、转换方法\r",p:"\r",l:"JavaScript/内置对象/String.html#二、转换方法",a:"二、转换方法"},"63.19":{t:"split()\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = '12+23+34'
let arr = str.split('+') // [12,23,34]

`,l:"JavaScript/内置对象/String.html#split",a:"split"},"63.20":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"JavaScript/内置对象/String.html#三、模板匹配方法",a:"三、模板匹配方法"},"63.21":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = 'cat, bat, sat, fat'
let pattern = /.at/
let mat ...`,l:"JavaScript/内置对象/String.html#match",a:"match"},"63.22":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = 'cat, bat, sat, fat'
let pos = text ...`,l:"JavaScript/内置对象/String.html#search",a:"search"},"63.23":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = 'cat, bat, sat, fat'
let result = text.replace('at', ...`,l:"JavaScript/内置对象/String.html#replace",a:"replace"},"64.0":{t:"# 前端导航\r",p:`&lt;!--
`,l:"nav/index.html",a:"前端导航"},"64.1":{t:" ",p:"",l:"nav/index.html#",a:""},"64.2":{t:"常用工具 -->\r",p:"&lt;NavLinks v-for=&quot;{title,items} in NAV_DATA&quot; :title='title' :items=&quot;items&quot;/&gt ...",l:"nav/index.html#常用工具",a:"常用工具"},"65.0":{t:"# Axios\r",p:"\r",l:"others/axios/index.html",a:"axios"},"65.1":{t:"什么是axios？\r",p:`Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。
`,l:"others/axios/index.html#什么是axios",a:"什么是axios"},"65.2":{t:"安装\r",p:`使用npm：
npm install axios

使用cdn：


`,l:"others/axios/index.html#安装",a:"安装"},"65.3":{t:"使用\r",p:`
执行GET请求

let name = 'zs'
axios.get(\`/api/xxxx?name=\${name}\`)
  .then(function (result) {
    consol ...`,l:"others/axios/index.html#使用",a:"使用"},"65.4":{t:"拦截器\r",p:`拦截器，我们大致可以分为两类， 一类是 请求接口前的统一处理（请求拦截） 、 一类是 请求接口后的统一处理（响应拦截）

请求拦截

请求调整
用户标识


响应拦截

网络错误处理
授权错误处理
普 ...`,l:"others/axios/index.html#拦截器",a:"拦截器"},"65.5":{t:"错误处理\r",p:`axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // 发出请求后，服务器用状态 ...`,l:"others/axios/index.html#错误处理",a:"错误处理"},"66.0":{t:"# 封装 axios\r",p:"\r",l:"others/axios/封装axios.html",a:"封装-axios"},"66.1":{t:"1.封装目的\r",p:`实现一个简单的封装，主要实现以下目的：

实现请求、响应拦截器功能
api 集中式管理
请求头设置，一般可以在请求头中携带公共的参数：token
可以简化服务器返回的数据，处理 http 网络错误

`,l:"others/axios/封装axios.html#_1-封装目的",a:"_1-封装目的"},"66.2":{t:"2.初始化 axios 实例\r",p:`import axios from 'axios'
let apiBaseUrl = ''
const service = axios.create({
  baseURL: apiBaseUrl,  ...`,l:"others/axios/封装axios.html#_2-初始化-axios-实例",a:"_2-初始化-axios-实例"},"66.3":{t:"3.设置请求拦截\r",p:`// 创建请求拦截
service.interceptors.request.use(
  (config) =&gt; {
    // 如果开启 token 认证
    if (serverCo ...`,l:"others/axios/封装axios.html#_3-设置请求拦截",a:"_3-设置请求拦截"},"66.4":{t:"4.设置响应拦截\r",p:`// 创建响应拦截
service.interceptors.response.use(
  (res) =&gt; {
    let data = res.data
    // 处理自己的业务逻 ...`,l:"others/axios/封装axios.html#_4-设置响应拦截",a:"_4-设置响应拦截"},"66.5":{t:"5.封装常见的方法\r",p:`//get
export function getAction(url, parameter) {
  return service({
    url: url,
    method: 'get' ...`,l:"others/axios/封装axios.html#_5-封装常见的方法",a:"_5-封装常见的方法"},"66.6":{t:"6.使用\r",p:`示例：
let param = {
    username:'zs',
    password:'123456'
}

// 定义接口方法
const login = (params)=&gt;p ...`,l:"others/axios/封装axios.html#_6-使用",a:"_6-使用"},"66.7":{t:"相关文章\r",p:`关于 Axios 的再再再封装，总是会有所不一样
十分钟封装一个好用的 axios，省时又省力他不香吗
前端架构带你 封装 axios，一次封装终身受益「美团后端连连点赞」
`,l:"others/axios/封装axios.html#相关文章",a:"相关文章"},"67.0":{t:"# Git基本命令使用\r",p:"\r",l:"others/git/git.html",a:"git基本命令使用"},"67.1":{t:"账户配置\r",p:`
配置全局账户，对所有 Git 仓库有效

git config --global user.name 'Your Name'
git config --global user.email 'Your ...`,l:"others/git/git.html#账户配置",a:"账户配置"},"67.2":{t:"本地基本操作\r",p:"\r",l:"others/git/git.html#本地基本操作",a:"本地基本操作"},"67.3":{t:"初始化本地库\r",p:`git init

`,l:"others/git/git.html#初始化本地库",a:"初始化本地库"},"67.4":{t:"查看状态\r",p:`git status

`,l:"others/git/git.html#查看状态",a:"查看状态"},"67.5":{t:"添加暂存区 git add\r",p:`
将当前目录及其子目录下所有变更添加到暂存区

git add .


将本地库所有变更添加到暂存区

git add -A


指定文件添加暂存区

git add file1 file2 ...
 ...`,l:"others/git/git.html#添加暂存区-git-add",a:"添加暂存区-git-add"},"67.6":{t:"提交本地库 git commit\r",p:`
提交所有变更

git commit
# or
git commit -m '日志信息' -a


提交当前目录及其子目录的变更

git commit -m '日志信息' .


提交指定文件

 ...`,l:"others/git/git.html#提交本地库-git-commit",a:"提交本地库-git-commit"},"67.7":{t:"比较差异 git diff\r",p:`
比较工作区和暂存区的所有差异，只能查看旧文件的变更（包括修改和删除），不能查看新文件（因为新文件还为被 git 追踪）

git diff


比较指定文件工作区和暂存区的差异

git diff  ...`,l:"others/git/git.html#比较差异-git-diff",a:"比较差异-git-diff"},"67.8":{t:"查看日志信息 git log\r",p:`
查看简要日志信息

git reflog


查看详细日志信息

git log


查看极简日志信息

git log --oneline


查看最近 n 次的版本信息

git log -n
 ...`,l:"others/git/git.html#查看日志信息-git-log",a:"查看日志信息-git-log"},"67.9":{t:"分支命令\r",p:"\r",l:"others/git/git.html#分支命令",a:"分支命令"},"67.10":{t:"创建分支\r",p:`
基于当前分支创建分支

git branch 新分支


基于指定分支创建分支

git branch 新分支 已有分支


基于某个 commit 创建分支

git branch 新分支 com ...`,l:"others/git/git.html#创建分支",a:"创建分支"},"67.11":{t:"查看本地分支\r",p:`git branch -v

`,l:"others/git/git.html#查看本地分支",a:"查看本地分支"},"67.12":{t:"删除分支\r",p:`
安全删除本地分支

git branch -d 分支


强制删除本地分支

git branch -D 分支

`,l:"others/git/git.html#删除分支",a:"删除分支"},"67.13":{t:"切换分支\r",p:`git checkout 分支名

`,l:"others/git/git.html#切换分支",a:"切换分支"},"67.14":{t:"合并分支\r",p:`merge 和 rebase的区别有待学习实践 :worried:

将 A 分支合并到当前分支，且为 merge 创建 commit

git merge A


将 A 分支合并到 B 分支，且为 ...`,l:"others/git/git.html#合并分支",a:"合并分支"},"67.15":{t:"版本穿梭与回滚\r",p:`
工作区指定文件恢复成和暂存区一样

git checkout file1 file2 ...

# tips in the Git Bash
# use &quot;git restore &lt; ...`,l:"others/git/git.html#版本穿梭与回滚",a:"版本穿梭与回滚"},"67.16":{t:"修改 commit 记录\r",p:`
往最后一次 commit 追加记录，而不新建 commit - reference

git commit --amend


合并 commit 记录 - reference

git rebas ...`,l:"others/git/git.html#修改-commit-记录",a:"修改-commit-记录"},"67.17":{t:"远程仓库交互\r",p:"\r",l:"others/git/git.html#远程仓库交互",a:"远程仓库交互"},"67.18":{t:"git remote\r",p:`
查看所有远程仓库地址别名

git remote -v


为远程仓库起别名

git remote add 别名 地址


删除远程仓库别名

git remote remove 别名


修改别 ...`,l:"others/git/git.html#git-remote",a:"git-remote"},"67.19":{t:"git clone\r",p:`
克隆远程仓库到本地

git clone 地址


克隆远程仓库指定分支到本地

git clone -b 远程仓库分支名 地址

`,l:"others/git/git.html#git-clone",a:"git-clone"},"67.20":{t:"git pull\r",p:`
拉取远程分支，并与本地分支合并

git pull 别名 分支名

`,l:"others/git/git.html#git-pull",a:"git-pull"},"67.21":{t:"git push\r",p:`
推送本地指定分支到仓库指定分支

git push 别名 本地分支:远程分支


如果远程分支被省略，表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 ...`,l:"others/git/git.html#git-push",a:"git-push"},"68.0":{t:"# git安装\r",p:"\r",l:"others/git/install.html",a:"git安装"},"68.1":{t:"**1.Git官网下载安装git客户端：https://git-scm.com/downloads/**\r",p:`\r
\r
\r`,l:"others/git/install.html#_1-git官网下载安装git客户端-https-git-scm-com-downloads",a:"_1-git官网下载安装git客户端-https-git-scm-com-downloads"},"68.2":{t:"**2.安装完成后，在空白处点鼠标右键选择“Git Bush Here” ，打开git bash命令窗口**\r",p:`\r
\r
\r`,l:"others/git/install.html#_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口",a:"_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口"},"68.3":{t:"**3.配置用户名和邮箱**\r",p:`git config —global user.name “xxx”
git config —global user.email “xxxx@xxx.com”
配置后结果：git config --l ...`,l:"others/git/install.html#_3-配置用户名和邮箱",a:"_3-配置用户名和邮箱"},"68.4":{t:"4.执行命令生成ssh pub_key\r",p:`ssh-keygen -t rsa -C &quot;XXXX@XXX.com&quot;

直接按三次回车，会生成 id_rsa.pub 文件，这个文件一般在C盘的.ssh目录下。
`,l:"others/git/install.html#_4-执行命令生成ssh-pub-key",a:"_4-执行命令生成ssh-pub-key"},"68.5":{t:"**5.打开生成后的id_rsa.pub文件，copy内容到git ssh个人设置**\r",p:`!image-20230222160826601
!image-20230222161109182
`,l:"others/git/install.html#_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置",a:"_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置"},"68.6":{t:"**6.本地拉取代码**\r",p:`就可以克隆ssh地址了
`,l:"others/git/install.html#_6-本地拉取代码",a:"_6-本地拉取代码"},"68.7":{t:"TortoiseGit安装\r",p:`TortoiseGit安装和配置详细说明
`,l:"others/git/install.html#tortoisegit安装",a:"tortoisegit安装"},"69.0":{t:"# 基本类型\r",p:"\r",l:"others/TypeScript/basic.html",a:"基本类型"},"69.1":{t:"字符串类型\r",p:`// 普通声明
let a: string = '123'

// 也可以使用es6的字符串模板
let str: string = \`ddd\${a}\`

`,l:"others/TypeScript/basic.html#字符串类型",a:"字符串类型"},"69.2":{t:"数字类型\r",p:`// 支持十六进制、十进制、八进制和二进制。
let notANumber: number = NaN //NaN
let num: number = 123.321 //普通数字
let infin ...`,l:"others/TypeScript/basic.html#数字类型",a:"数字类型"},"69.3":{t:"布尔类型\r",p:`let b1: boolean = true //可以直接使用布尔值
let b2: boolean = false //也可以通过函数返回布尔值

let b2: boolean = Boolean ...`,l:"others/TypeScript/basic.html#布尔类型",a:"布尔类型"},"69.4":{t:"数组\r",p:`TypeScript 像 JavaScript 一样可以操作数组元素。 有两种方式可以定义数组。 第一种，可以在元素类型后面接上 []，表示由此类型元素组成的一个数组：
let list: numbe ...`,l:"others/TypeScript/basic.html#数组",a:"数组"},"69.5":{t:"元组 Tuple\r",p:`元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。
比如：可以定义一对值分别为string和num ...`,l:"others/TypeScript/basic.html#元组-tuple",a:"元组-tuple"},"69.6":{t:"枚举\r",p:`enum类型是对 JavaScript 标准数据类型的一个补充。使用枚举类型可以为一组数值赋予友好的名字。
枚举的值可以是数字，也可以是字符串。

数字枚举

enum Types {
  Red = ...`,l:"others/TypeScript/basic.html#枚举",a:"枚举"},"69.7":{t:"Any 任意类型\r",p:`没有强制限定哪种类型，随时切换类型都可以 我们可以对 any 进行任何操作，不需要检查类型
let value: Any
value = true // OK
value = 42 // OK
val ...`,l:"others/TypeScript/basic.html#any-任意类型",a:"any-任意类型"},"69.8":{t:"Void\r",p:`可以用 void 表示没有任何返回值的函数
function voidFn(): void {
  console.log('test void')
  // return // 不能带有return ...`,l:"others/TypeScript/basic.html#void",a:"void"},"69.9":{t:"Null 和 Undefined\r",p:`let u: undefined = undefined //定义undefined
let n: null = null //定义null

默认情况下 null 和 undefined 是所有类型 ...`,l:"others/TypeScript/basic.html#null-和-undefined",a:"null-和-undefined"},"69.10":{t:"Never\r",p:`never 类型表示的是那些永不存在的值的类型。
// 返回never的函数必须存在无法达到的终点

// 因为必定抛出异常，所以 error 将不会有返回值
function error(messa ...`,l:"others/TypeScript/basic.html#never",a:"never"},"69.11":{t:"Never 与 Void 的差异\r",p:`//void类型只是没有返回值 但本身不会出错
function Void(): void {
  console.log()
}

//只会抛出异常没有返回值
function Never(): n ...`,l:"others/TypeScript/basic.html#never-与-void-的差异",a:"never-与-void-的差异"},"69.12":{t:"联合类型\r",p:`联合类型用|分隔，表示取值可以为多种类型中的一种
// a可以为数字或者布尔类型，不能为字符串类型，
// 因为定义的联合类型只有数字和布尔值并没有字符串
let a:num|boolean
a =  ...`,l:"others/TypeScript/basic.html#联合类型",a:"联合类型"},"69.13":{t:"交叉类型\r",p:`交叉类型就是跟联合类型相反，用&amp;操作符表示，交叉类型就是两个类型必须存在
interface People {
  age: number,
  height： number
}
interf ...`,l:"others/TypeScript/basic.html#交叉类型",a:"交叉类型"},"69.14":{t:"类型断言\r",p:"通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。 类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScrip ...",l:"others/TypeScript/basic.html#类型断言",a:"类型断言"},"70.0":{t:"# 类\r",p:"ES6提供了更接近传统语言的写法，引入了Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。基本上，ES6的class可以看作只是一个语法糖，它的绝大部分功能，ES5都可以做到 ...",l:"others/TypeScript/class.html",a:"类"},"70.1":{t:"基本实例\r",p:`// 类的基本定义与使用
class Person{
  // 声明属性
    name:string
    age:number

    // 构造方法
    constructor(nam ...`,l:"others/TypeScript/class.html#基本实例",a:"基本实例"},"70.2":{t:"继承\r",p:`在TypeScript 里，我们可以使用常用的面向对象模式。 基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类。
// 类的继承
class Animal {
  run (distan ...`,l:"others/TypeScript/class.html#继承",a:"继承"},"70.3":{t:"类的修饰符\r",p:`总共有三个 public private protected
`,l:"others/TypeScript/class.html#类的修饰符",a:"类的修饰符"},"70.4":{t:"默认为 public\r",p:`使用public修饰符 可以让你定义的变量 内部访问 也可以外部访问 如果不写默认就是public
`,l:"others/TypeScript/class.html#默认为-public",a:"默认为-public"},"70.5":{t:"理解 private\r",p:`使用private修饰符 代表定义的变量私有的只能在内部访问 不能在外部访问
`,l:"others/TypeScript/class.html#理解-private",a:"理解-private"},"70.6":{t:"理解 protected\r",p:`使用protected修饰符 代表定义的变量私有的只能在内部和继承的子类中访问 不能在外部访问
class Person{
    public name:string
    private age ...`,l:"others/TypeScript/class.html#理解-protected",a:"理解-protected"},"70.7":{t:"readonly 修饰符\r",p:`你可以使用 readonly 关键字将属性设置为只读的。 只读属性必须在声明时或构造函数里被初始化。
class Person {
  readonly name: string = 'abc'
   ...`,l:"others/TypeScript/class.html#readonly-修饰符",a:"readonly-修饰符"},"70.8":{t:"static 静态属性 和 静态方法\r",p:`我们用static 定义的属性 不可以通过this 去访问 只能通过类名去调用
class Person {
  public name: string;
  static age: number = ...`,l:"others/TypeScript/class.html#static-静态属性-和-静态方法",a:"static-静态属性-和-静态方法"},"70.9":{t:"interface 定义 类\r",p:`ts interface 定义类 使用关键字 implements 后面跟interface的名字多个用逗号隔开 继承还是用extends

interface PersonClass {
    g ...`,l:"others/TypeScript/class.html#interface-定义-类",a:"interface-定义-类"},"70.10":{t:"存储器\r",p:`TypeScript 支持通过 getters/setters 来截取对对象成员的访问。 它能帮助你有效的控制对对象成员的访问。
下面来看如何把一个简单的类改写成使用 get 和 set。 首先，我们 ...`,l:"others/TypeScript/class.html#存储器",a:"存储器"},"70.11":{t:"抽象类\r",p:`抽象类做为其它派生类的基类使用。 它们一般不会直接被实例化，只能实例化实现了所有抽象方法的子类。 不同于接口，抽象类可以包含成员的实现细节。
abstract: 用abstract关键字声明的类叫做抽 ...`,l:"others/TypeScript/class.html#抽象类",a:"抽象类"},"71.0":{t:"# 函数\r",p:`
函数涉及的类型实际上指的是：函数参数和返回值的类型

`,l:"others/TypeScript/function.html",a:"函数"},"71.1":{t:"函数的类型\r",p:`js的函数
// 命名函数
function add(x, y) {
  return x + y
}

// 匿名函数 箭头函数
let myAdd = (x, y) =&gt; {
  retur ...`,l:"others/TypeScript/function.html#函数的类型",a:"函数的类型"},"71.2":{t:"可选参数`?`\r",p:`通过?表示该参数为可选参数
function add(x: number, y?: number): number {
  return y ? x + y : x;
}


const fn = ( ...`,l:"others/TypeScript/function.html#可选参数",a:"可选参数"},"71.3":{t:"默认参数\r",p:`function add(x: number, y: number = 20): number {
  return x + y;
}
add(10)  // 30

`,l:"others/TypeScript/function.html#默认参数",a:"默认参数"},"71.4":{t:"剩余参数\r",p:"必要参数，默认参数和可选参数有个共同点：它们表示某一个参数。 有时，你想同时操作多个参数，或者你并不知道会有多少参数传递进来。 在 JavaScript 里，你可以使用 arguments 来访问所有 ...",l:"others/TypeScript/function.html#剩余参数",a:"剩余参数"},"71.5":{t:"函数重载\r",p:`重载是方法名字相同，而参数不同，返回类型可以相同也可以不同。
// 重载函数声明
function add (x: string, y: string): string
function add (x ...`,l:"others/TypeScript/function.html#函数重载",a:"函数重载"},"72.0":{t:"# 泛型\r",p:`
指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定具体类型的一种特性。

`,l:"others/TypeScript/generic.html",a:"泛型"},"72.1":{t:"函数泛型\r",p:"\r",l:"others/TypeScript/generic.html#函数泛型",a:"函数泛型"},"72.2":{t:"给函数加上类型\r",p:`下面这是两个函数，除了类型的不同，实现的功能是一样的。
function num(a: number, b: number): Array&lt;number&gt; {
  return [a, b ...`,l:"others/TypeScript/generic.html#给函数加上类型",a:"给函数加上类型"},"72.3":{t:"使用泛型优化\r",p:`语法为函数名字后面跟一个&lt;参数名&gt; 参数名可以随便写 例如我这儿写了 T
当我们使用这个函数的时候把参数的类型传进去就可以了 （也就是动态类型）
function Add&lt;T&gt; ...`,l:"others/TypeScript/generic.html#使用泛型优化",a:"使用泛型优化"},"72.4":{t:"多个泛型参数的函数\r",p:`一个函数可以定义多个泛型参数
function swap&lt;K, V&gt;(a: K, b: V): [K, V] {
  return [a, b]
}
const result = swap ...`,l:"others/TypeScript/generic.html#多个泛型参数的函数",a:"多个泛型参数的函数"},"72.5":{t:"泛型接口\r",p:`在定义接口时, 为接口中的属性或方法定义泛型类型 
在使用接口时, 再指定具体的泛型类型
interface KeyValue&lt;T,U&gt; {
  key: T;
  value: U;
} ...`,l:"others/TypeScript/generic.html#泛型接口",a:"泛型接口"},"72.6":{t:"泛型类\r",p:`在定义类时, 为类中的属性或方法定义泛型类型 在创建类的实例时, 再指定特定的泛型类型
class clacArray&lt;T&gt;{
    private arr:T[] = [];

    ...`,l:"others/TypeScript/generic.html#泛型类",a:"泛型类"},"72.7":{t:"泛型约束\r",p:`我们期望在一个泛型的变量上面，获取其length参数，但是，有的数据类型是没有length属性的
// 没有泛型约束
function getLen&lt;T&gt;(arg:T) {
  retur ...`,l:"others/TypeScript/generic.html#泛型约束",a:"泛型约束"},"73.0":{t:"# 初识TypeScript\r",p:`
TypeScript中文网

`,l:"others/TypeScript/index.html",a:"初识typescript"},"73.1":{t:"TS是什么？\r",p:`TS：是TypeScript的简称，是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。
`,l:"others/TypeScript/index.html#ts是什么",a:"ts是什么"},"73.2":{t:"TS和JS的关系\r",p:`对比于JS，TS是JS的超集，简单的说就是在 JavaScript 的基础上加入了类型系统，让每个参数都有明确的意义，从而带来了更加智能的提示。
相对于JS而言，TS属于强类型语言，所以对于项目而言， ...`,l:"others/TypeScript/index.html#ts和js的关系",a:"ts和js的关系"},"73.3":{t:"TS和JS的区别\r",p:`
JavaScript 属于动态编程语言，而ts 属于静态编程语言。

js：边解释边执行，错误只有在运行的时候才能发现
ts：先编译再执行，在写的时候就会发现错误了（ts不能直接执行，需要先编译成  ...`,l:"others/TypeScript/index.html#ts和js的区别",a:"ts和js的区别"},"73.4":{t:"TypeScript的优缺点\r",p:"",l:"others/TypeScript/index.html#typescript的优缺点",a:"typescript的优缺点"},"73.5":{t:"优点\r",p:`
增强代码的可维护性，尤其在大型项目的时候效果显著
友好地在编辑器里提示错误，编译阶段就能检查类型发现大部分错误
支持最新的JavaScript新特特性
周边生态繁荣，vue3已全面支持 typesc ...`,l:"others/TypeScript/index.html#优点",a:"优点"},"73.6":{t:"缺点\r",p:`
需要一定的学习成本
和一些插件库的兼容并不是特别完美，如以前在 vue2 项目里使用 typescript就并不是那么顺畅
增加前期开发的成本，毕竟你需要写更多的代码（但是便于后期的维护）

`,l:"others/TypeScript/index.html#缺点",a:"缺点"},"73.7":{t:"安装\r",p:`# 安装 typescript
npm install -g typescript
//或者
yarn global add typescript

# 查看版本
tsc -v

# 编译
tsc i ...`,l:"others/TypeScript/index.html#安装",a:"安装"},"73.8":{t:"监视编译和在node下运行typescript\r",p:"",l:"others/TypeScript/index.html#监视编译和在node下运行typescript",a:"监视编译和在node下运行typescript"},"73.9":{t:"一、使用tsc -w进行随时热更新watch\r",p:`tsc -w

`,l:"others/TypeScript/index.html#一、使用tsc-w进行随时热更新watch",a:"一、使用tsc-w进行随时热更新watch"},"73.10":{t:"二、使用ts-node直接运行ts的node项目\r",p:`首先全局安装ts-node
npm install -g ts-node

直接进行ts-node 启动文件名
`,l:"others/TypeScript/index.html#二、使用ts-node直接运行ts的node项目",a:"二、使用ts-node直接运行ts的node项目"},"74.0":{t:"# 接口和对象类型\r",p:`
TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述)

`,l:"others/TypeScript/interface.html",a:"接口和对象类型"},"74.1":{t:"对象的类型\r",p:`在typescript中，我们定义对象的方式要用关键字interface（接口），我的理解是使用interface来定义一种约束，让数据的结构满足约束的格式。定义方式如下：
//这样写是会报错的 因为 ...`,l:"others/TypeScript/interface.html#对象的类型",a:"对象的类型"},"74.2":{t:"重名interface 会合并\r",p:`interface A{name:string}
interface A{age:number}

let a:A = {
    name:'zs',
    age:18
}

`,l:"others/TypeScript/interface.html#重名interface-会合并",a:"重名interface-会合并"},"74.3":{t:"继承\r",p:`interface A {
    name:stirng
}
interface B extends A {
    age:number
}

let obj:B = {
    age:18,
 ...`,l:"others/TypeScript/interface.html#继承",a:"继承"},"74.4":{t:"可选属性 使用`?`操作符\r",p:`可选属性的好处之一是可以对可能存在的属性进行预定义，好处之二是可以捕获引用了不存在的属性时的错误。
可选属性的含义是该属性可以不存在，带有可选属性的接口与普通的接口定义差不多，在可选属性名字定义的后面 ...`,l:"others/TypeScript/interface.html#可选属性-使用-操作符",a:"可选属性-使用-操作符"},"74.5":{t:"任意属性\r",p:`需要注意的是，一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：
//在这个例子当中我们看到接口中并没有定义C但是并没有报错
//应为我们定义了[propName: string ...`,l:"others/TypeScript/interface.html#任意属性",a:"任意属性"},"74.6":{t:"只读属性 readonly\r",p:`readonly只读属性是不允许被赋值的，只能读取
//这样写是会报错的
//应为a是只读的不允许重新赋值
interface Person {
    b?: string,
    readonl ...`,l:"others/TypeScript/interface.html#只读属性-readonly",a:"只读属性-readonly"},"74.7":{t:"添加函数\r",p:`interface Person {
    cb:()=&gt;void
}
const person: Person = {
    cb:()=&gt;{
        console.log ...`,l:"others/TypeScript/interface.html#添加函数",a:"添加函数"},"75.0":{t:"# 对象类型\r",p:`这里所说的对象类型，就是我们常说的函数、{}、数组、类
`,l:"others/TypeScript/object.html",a:"对象类型"},"75.1":{t:"object,Object 和类型\r",p:`
object

object 类型用于表示所有的非原始类型，即我们不能把 number、string、boolean、symbol 等 原始类型赋值给 object。在严格模式下，null 和 un ...`,l:"others/TypeScript/object.html#",a:""},"76.0":{t:"# tsconfig.json 配置文件\r",p:`{
  &quot;compilerOptions&quot;: {
    /* 基本选项 */

    // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5' ...`,l:"others/TypeScript/tsconfig.html",a:"tsconfig-json-配置文件"},"77.0":{t:"# 类型推论|类型别名\r",p:`\r
\r`,l:"others/TypeScript/type.html",a:"类型推论-类型别名"},"77.1":{t:"类型推论\r",p:`TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。
/* 定义变量时赋值了, 推断为对应的类型 */
let n1 = 10 // number
// 相当于 let n1 ...`,l:"others/TypeScript/type.html#类型推论",a:"类型推论"},"77.2":{t:"类型别名\r",p:`type 关键字（可以给一个类型定义一个名字）多用于复合类型

定义类型别名

type s = string

let str:s = &quot;abcd&quot;

console.log(s ...`,l:"others/TypeScript/type.html#类型别名",a:"类型别名"},"78.0":{t:"# vue3 项目配置文档\r",p:"\r",l:"project/configuration.html",a:"vue3-项目配置文档"},"78.1":{t:"一、搭建后台管理系统模板\r",p:"\r",l:"project/configuration.html#一、搭建后台管理系统模板",a:"一、搭建后台管理系统模板"},"78.2":{t:"1.1 项目初始化\r",p:"搭建一个 vue3 版本的后台管理系统，一个项目要有统一的规范，需要使用 eslint+stylelint+prettier 来对我们的代码质量做检测和修复，需要使用 husky 来做 commit  ...",l:"project/configuration.html#_1-1-项目初始化",a:"_1-1-项目初始化"},"78.3":{t:"1.1.1 环境准备\r",p:`
node 16+
pnpm 8.3.1

`,l:"project/configuration.html#_1-1-1-环境准备",a:"_1-1-1-环境准备"},"78.4":{t:"1.1.2 初始化项目\r",p:`本项目使用 vite 进行构建，vite 官方中文文档参考：cn.vitejs.dev/guide/
pnpm:performant npm ，意味“高性能的 npm”。pnpm由 npm/yarn  ...`,l:"project/configuration.html#_1-1-2-初始化项目",a:"_1-1-2-初始化项目"},"78.5":{t:"1.2 项目配置\r",p:"\r",l:"project/configuration.html#_1-2-项目配置",a:"_1-2-项目配置"},"78.6":{t:"一、eslint 配置\r",p:`eslint 中文官网:http://eslint.cn/
ESLint 最初是由Nicholas C. Zakas 于 2013 年 6 月创建的开源项目。它的目标是提供一个插件化的javascri ...`,l:"project/configuration.html#一、eslint-配置",a:"一、eslint-配置"},"78.7":{t:"1.1.1 vue3 环境代码校验插件\r",p:`# 让所有与prettier规则存在冲突的Eslint rules失效，并使用prettier进行代码检查
&quot;eslint-config-prettier&quot;: &quot;^8.6 ...`,l:"project/configuration.html#_1-1-1-vue3-环境代码校验插件",a:"_1-1-1-vue3-环境代码校验插件"},"78.8":{t:"1.1.2 修改.eslintrc.cjs 配置文件\r",p:`// @see https://eslint.bootcss.com/docs/rules/

module.exports = {
  env: {
    browser: true,
    e ...`,l:"project/configuration.html#_1-1-2-修改-eslintrc-cjs-配置文件",a:"_1-1-2-修改-eslintrc-cjs-配置文件"},"78.9":{t:"2.5 集成 sass\r",p:"我们目前在组件内部已经可以使用 scss 样式,因为在配置 styleLint 工具的时候，项目当中已经安装过 sass sass-loader,因此我们再组件内可以使用 scss 语法！！！需要加上 ...",l:"project/configuration.html#_2-5-集成-sass",a:"_2-5-集成-sass"},"78.10":{t:"2.6 mock 数据\r",p:`安装依赖:https://www.npmjs.com/package/vite-plugin-mock
pnpm install -D vite-plugin-mock mockjs

在 vite. ...`,l:"project/configuration.html#_2-6-mock-数据",a:"_2-6-mock-数据"},"78.11":{t:"2.7 axios 二次封装\r",p:`在开发项目的时候避免不了与后端进行交互,因此我们需要使用 axios 插件实现发送网络请求。在开发项目的时候
我们经常会把 axios 进行二次封装。
目的:
1:使用请求拦截器，可以在请求拦截器中处 ...`,l:"project/configuration.html#_2-7-axios-二次封装",a:"_2-7-axios-二次封装"},"78.12":{t:"2.8 API 接口统一管理\r",p:`在开发项目的时候,接口可能很多需要统一管理。在 src 目录下去创建 api 文件夹去统一管理项目的接口；
比如:下面方式
//统一管理咱们项目用户相关的接口

import request from ...`,l:"project/configuration.html#_2-8-api-接口统一管理",a:"_2-8-api-接口统一管理"},"79.0":{t:"# 初始 Canvas\r",p:"\r",l:"visual/canvas/base/初识Canvas.html",a:"初始-canvas"},"79.1":{t:"什么是 canvas？\r",p:`
Canvas 是 HTML5 中的一个元素，允许使用 JavaScript 脚本在矩形区域中绘制图像、动画和其他复杂的视觉效果。它提供了许多 API，允许控制绘图区域、颜色、线条、文本、图像等多种元 ...`,l:"visual/canvas/base/初识Canvas.html#什么是-canvas",a:"什么是-canvas"},"79.2":{t:"一. Canvas 的基础知识\r",p:"\r",l:"visual/canvas/base/初识Canvas.html#一-canvas-的基础知识",a:"一-canvas-的基础知识"},"79.3":{t:"1.1 坐标系统\r",p:"Canvas 使用直角坐标系，原点坐标为（0, 0），x 轴向右延伸，y 轴向下延伸。可以通过 Canvas API 访问 x 轴和 y 轴上的位置以及宽度和高度等信息，通过为图形或其他元素设置 x  ...",l:"visual/canvas/base/初识Canvas.html#_1-1-坐标系统",a:"_1-1-坐标系统"},"79.4":{t:"1.2 绘图上下文\r",p:"Canvas 可以绘制 SVG 和其他类型的矢量图形，但在大多数情况下，使用 Canvas 的绘图上下文进行绘制是最基本和有效的方法。Canvas API 提供了两种基本的绘图上下文，2D 和 Web ...",l:"visual/canvas/base/初识Canvas.html#_1-2-绘图上下文",a:"_1-2-绘图上下文"},"79.5":{t:"1.3 绘图元素\r",p:"Canvas 提供了多种绘图元素，包括路径和图形、文本、图像、矩形和其他形状等。绘图元素可以通过 Canvas API 进行控制，可以简单地绘制圆形、矩形、线条等图形，也可以绘制更高级的元素，如 3D ...",l:"visual/canvas/base/初识Canvas.html#_1-3-绘图元素",a:"_1-3-绘图元素"},"79.6":{t:"二. 使用 Canvas 创造交互式效果\r",p:`除了基本的绘图功能之外，Canvas 还可以创造交互式效果，用来展示和操控数据、陈述观点、以及制作各种绚丽的视觉展示等。
例如，您可以通过 Canvas 在一个网页上创造一个交互式地图，让用户点击地图 ...`,l:"visual/canvas/base/初识Canvas.html#二-使用-canvas-创造交互式效果",a:"二-使用-canvas-创造交互式效果"},"79.7":{t:"三. 使用 Canvas 创造动画\r",p:"由于 Canvas 非常适合处理像素级别的控制，利用 JavaScript 脚本使 Canvas 绘制出具有动态效果的图像和视觉艺术也显得非常合适。通过 Canvas API，您可以控制图形元素的位移 ...",l:"visual/canvas/base/初识Canvas.html#三-使用-canvas-创造动画",a:"三-使用-canvas-创造动画"},"79.8":{t:"四. Canvas 的局限性\r",p:"Canvas 虽然在 HTML5 中提供了许多优势，但也存在一些限制。例如，不同的浏览器可能解释 Canvas API 时存在差异，因此需要在开发过程中进行跨浏览器的测试。此外，在处理大量的图像和其他 ...",l:"visual/canvas/base/初识Canvas.html#四-canvas-的局限性",a:"四-canvas-的局限性"},"80.0":{t:"# Canvas 图像变换\r",p:`以下方法用于图像变换。

CanvasRenderingContext2D.rotate()：图像旋转
CanvasRenderingContext2D.scale()：图像缩放
CanvasRend ...`,l:"visual/canvas/base/图像变换.html",a:"canvas-图像变换"},"80.1":{t:"1.rotate()\r",p:`CanvasRenderingContext2D.rotate()方法用于图像旋转。它接受一个弧度值作为参数，表示顺时针旋转的度数。
context.rotate((45 * Math.PI) / 1 ...`,l:"visual/canvas/base/图像变换.html#_1-rotate",a:"_1-rotate"},"80.2":{t:"2.scale()\r",p:"CanvasRenderingContext2D.scale()方法用于缩放图像。它接受两个参数，分别是x轴方向的缩放因子和y轴方向的缩放因子。默认情况下，一个单位就是一个像素，缩放因子可以缩放单位， ...",l:"visual/canvas/base/图像变换.html#_2-scale",a:"_2-scale"},"80.3":{t:"3.translate()\r",p:`CanvasRenderingContext2D.translate()方法用于平移图像。它接受两个参数，分别是 x 轴和 y 轴移动的距离（单位像素）。
context.fillRect(0, 0, ...`,l:"visual/canvas/base/图像变换.html#_3-translate",a:"_3-translate"},"80.4":{t:"4.transform()\r",p:`CanvasRenderingContext2D.transform()方法接受一个变换矩阵的六个元素作为参数，完成缩放、旋转、移动和倾斜等变形。
它的使用格式如下。
context.transfor ...`,l:"visual/canvas/base/图像变换.html#_4-transform",a:"_4-transform"},"80.5":{t:"5.setTransform()\r",p:`CanvasRenderingContext2D.setTransform()方法取消前面的图形变换，将画布恢复到该方法指定的状态。该方法的参数与transform()方法完全一致。
context. ...`,l:"visual/canvas/base/图像变换.html#_5-settransform",a:"_5-settransform"},"81.0":{t:"# Canvas 图像合成\r",p:`
在默认情况之下，如果在 Canvas 之中将某个物体（源）绘制在另一个物体（目标）之上，那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面。


在 Canvas 中，把图像源和目标图像，通过 ...`,l:"visual/canvas/base/图像合成.html",a:"canvas-图像合成"},"81.1":{t:"属性\r",p:`


source-over
默认。在目标图像上显示源图像。




source-atop
在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的。


source-in
在目标图像中显 ...`,l:"visual/canvas/base/图像合成.html#属性",a:"属性"},"82.0":{t:"# Canvas 使用\r",p:"\r",l:"visual/canvas/base/基本使用.html",a:"canvas-使用"},"82.1":{t:"使用\r",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;您的浏览器不支持 Canvas&lt; ...",l:"visual/canvas/base/基本使用.html#使用",a:"使用"},"82.2":{t:"属性方法\r",p:`
strokeStyle 设置或返回描边颜色
fillStyle 设置或返回填充颜色
stroke() 描边已定义绘图（路径）
fill() 填充当前绘图（路径）
moveTo(x,y) 把路径移动到 ...`,l:"visual/canvas/base/基本使用.html#属性方法",a:"属性方法"},"83.0":{t:"# Canvas 样式控制\r",p:"\r",l:"visual/canvas/base/样式控制.html",a:"canvas-样式控制"},"83.1":{t:"1.线性\r",p:`以下的方法和属性控制线条的视觉特征。

CanvasRenderingContext2D.lineWidth：指定线条的宽度，默认为 1.0。
CanvasRenderingContext2D.lin ...`,l:"visual/canvas/base/样式控制.html#_1-线性",a:"_1-线性"},"83.2":{t:"2.渐变色\r",p:`以下方法用于设置渐变效果和图像填充效果。

CanvasRenderingContext2D.createLinearGradient()：定义线性渐变样式。
CanvasRenderingConte ...`,l:"visual/canvas/base/样式控制.html#_2-渐变色",a:"_2-渐变色"},"83.3":{t:"3.图像填充\r",p:`createPattern()方法定义一个图像填充样式，在指定方向上不断重复该图像，填充指定的区域。
context.createPattern(image, repetition)

该方法接受两个 ...`,l:"visual/canvas/base/样式控制.html#_3-图像填充",a:"_3-图像填充"},"83.4":{t:"4.阴影\r",p:`以下属性用于设置阴影。

CanvasRenderingContext2D.shadowBlur：阴影的模糊程度，默认为0。
CanvasRenderingContext2D.shadowColor： ...`,l:"visual/canvas/base/样式控制.html#_4-阴影",a:"_4-阴影"},"84.0":{t:"# Canvas 状态\r",p:`
save() 保存当前环境的状态。
restore() 返回之前保存过的路径状态和属性。

context.fillStyle = 'red'
context.fillRect(0, 0, 100, ...`,l:"visual/canvas/base/状态.html",a:"canvas-状态"},"85.0":{t:"# Canvas 绘制图形、图像、文字\r",p:"\r",l:"visual/canvas/base/绘制.html",a:"canvas-绘制图形、图像、文字"},"85.1":{t:"绘制图形\r",p:"\r",l:"visual/canvas/base/绘制.html#绘制图形",a:"绘制图形"},"85.2":{t:"绘制矩形\r",p:`//绘制矩形fillRect|strokeRect(位置x，位置y，宽度，高度)
context.strokeRect(150, 50, 100, 100) // 路径
context.fillRec ...`,l:"visual/canvas/base/绘制.html#绘制矩形",a:"绘制矩形"},"85.3":{t:"绘制圆弧\r",p:`
圆弧

// context.arc(圆心x,圆心y,半径,开始的角度,结束的角度)
// 顺时针false 逆时针true 默认值false
context.arc(300, 200, 50, 0 ...`,l:"visual/canvas/base/绘制.html#绘制圆弧",a:"绘制圆弧"},"85.4":{t:"绘制线段\r",p:`context.beginPath()
context.moveTo(100, 300)
context.lineTo(300, 300)
context.lineTo(200, 150)
conte ...`,l:"visual/canvas/base/绘制.html#绘制线段",a:"绘制线段"},"85.5":{t:"绘制图像\r",p:`
三种绘制图片的的方式

context.drawImage(image, dx, dy)
context.drawImage(image, dx, dy, dWidth, dHeight)
cont ...`,l:"visual/canvas/base/绘制.html#绘制图像",a:"绘制图像"},"85.6":{t:"绘制文本\r",p:`以下方法和属性用于绘制文本。

CanvasRenderingContext2D.fillText()：在指定位置绘制实心字符。
CanvasRenderingContext2D.strokeText ...`,l:"visual/canvas/base/绘制.html#绘制文本",a:"绘制文本"},"86.0":{t:"# Canvas 贝塞尔曲线\r",p:"\r",l:"visual/canvas/base/贝塞尔曲线.html",a:"canvas-贝塞尔曲线"},"86.1":{t:"绘制贝塞尔二次曲线\r",p:`
聊天框

context.moveTo(200, 300)
// quadraticCurveTo(控制点x,控制点y,终点x,终点y)
context.quadraticCurveTo(150,  ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔二次曲线",a:"绘制贝塞尔二次曲线"},"86.2":{t:"绘制贝塞尔三次曲线\r",p:`
爱心

context.moveTo(300, 120)
// bezierCurveTo(控制点1 x,控制点1 y,控制点2 x,控制点2 y,终点x,终点y)
context.bezierCu ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔三次曲线",a:"绘制贝塞尔三次曲线"},"87.0":{t:"# 刮刮乐\r",p:"\r",l:"visual/canvas/example/刮刮乐.html",a:"刮刮乐"},"87.1":{t:"示例\r",p:`&lt;Cbtn text='再来一次' @click='again' /&gt;
&lt;div style='height:400px'&gt;
&lt;Scratchcard v-if='sho ...`,l:"visual/canvas/example/刮刮乐.html#示例",a:"示例"},"87.2":{t:"代码\r",p:`&lt;div id=&quot;ggk&quot;&gt;谢谢惠顾&lt;/div&gt;
&lt;canvas id=&quot;myCanvas&quot; width=&quot;600&qu ...`,l:"visual/canvas/example/刮刮乐.html#代码",a:"代码"},"88.0":{t:"# 时钟\r",p:"\r",l:"visual/canvas/example/时钟.html",a:"时钟"},"88.1":{t:"示例\r",p:`&lt;Clock /&gt;
`,l:"visual/canvas/example/时钟.html#示例",a:"示例"},"88.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/时钟.html#代码",a:"代码"},"88.3":{t:"js 实现\r",p:`var canvas = document.getElementById('canvas')
var context = canvas.getContext('2d')
function render ...`,l:"visual/canvas/example/时钟.html#js-实现",a:"js-实现"},"88.4":{t:"vue3 实现\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/时钟.html#vue3-实现",a:"vue3-实现"},"89.0":{t:"# 梅花特效\r",p:`
参考视频教程

`,l:"visual/canvas/example/梅花特效.html",a:"梅花特效"},"89.1":{t:"示例\r",p:`&lt;Plum /&gt;
`,l:"visual/canvas/example/梅花特效.html#示例",a:"示例"},"89.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/梅花特效.html#代码",a:"代码"},"90.0":{t:"# 画板\r",p:"\r",l:"visual/canvas/example/画板.html",a:"画板"},"90.1":{t:"示例\r",p:`&lt;Draw /&gt;
`,l:"visual/canvas/example/画板.html#示例",a:"示例"},"90.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/画板.html#代码",a:"代码"},"90.3":{t:"JS 实现\r",p:`&lt;button id=&quot;boldBtn&quot;&gt;粗线条&lt;/button&gt;
&lt;button id=&quot;thinBtn&quot;&gt;细线条&lt; ...`,l:"visual/canvas/example/画板.html#js-实现",a:"js-实现"},"90.4":{t:"Vue3 实现\r",p:`&lt;template&gt;
  &lt;div class=&quot;btns&quot;&gt;
    &lt;CBtn @click=&quot;boldBtn&quot; text=& ...`,l:"visual/canvas/example/画板.html#vue3-实现",a:"vue3-实现"},"91.0":{t:"<!-- # echarts -->\r",p:`该内容正在努力建设中 ......
`,l:"visual/echarts/index.html",a:"echarts"},"92.0":{t:"# PixiJs 事件交互\r",p:"\r",l:"visual/pixiJs/事件交互.html",a:"pixijs-事件交互"},"92.1":{t:"为精灵添加事件\r",p:`// 为精灵添加交互事件
sprite.interactive = true

// 精灵派加点击事件
sprite.on('click', (e) =&gt; {
  console.log(e,  ...`,l:"visual/pixiJs/事件交互.html#为精灵添加事件",a:"为精灵添加事件"},"92.2":{t:"为图形添加事件\r",p:`// 创建矩形
const rect = new PIXI.Graphics()
rect.beginFill(0xff0000)
rect.drawRect(300, 300, 150, 150)
 ...`,l:"visual/pixiJs/事件交互.html#为图形添加事件",a:"为图形添加事件"},"93.0":{t:"# 初识 PixiJs\r",p:`官方网站
`,l:"visual/pixiJs/初识PixiJs.html",a:"初识-pixijs"},"93.1":{t:"是什么\r",p:`
PixiJS 是一个基于 WebGL 和 Canvas 技术的快速、轻量级的 JavaScript 库，用于创建交互式 2D 图形和动画。它提供了简单易用的 API 和强大的渲染能力，使开发者能够轻 ...`,l:"visual/pixiJs/初识PixiJs.html#是什么",a:"是什么"},"93.2":{t:"特点\r",p:"\r",l:"visual/pixiJs/初识PixiJs.html#特点",a:"特点"},"93.3":{t:"1. 快速高效\r",p:`PixiJS 利用 WebGL 技术进行硬件加速渲染，能够处理大量的图形元素并实现流畅的动画效果。它还支持使用 Canvas 进行降级渲染，以确保在不支持 WebGL 的设备上也能正常运行。
`,l:"visual/pixiJs/初识PixiJs.html#_1-快速高效",a:"_1-快速高效"},"93.4":{t:"2. 简单易用\r",p:`PixiJS 提供了简洁而直观的 API，使开发者能够快速上手并高效地创建图形和动画。它具有一致的接口设计和详细的文档，方便开发者查阅和学习。
`,l:"visual/pixiJs/初识PixiJs.html#_2-简单易用",a:"_2-简单易用"},"93.5":{t:"3. 丰富的功能\r",p:`PixiJS 提供了一系列强大的功能，包括精灵(Sprite)、纹理(Texture)、滤镜(Filters)、事件处理等。开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏。
`,l:"visual/pixiJs/初识PixiJs.html#_3-丰富的功能",a:"_3-丰富的功能"},"93.6":{t:"4. 跨平台支持\r",p:`PixiJS 可以在现代浏览器上运行，并提供了针对移动设备的优化。它支持响应式设计，使开发者能够创建适应不同屏幕大小和分辨率的应用。
`,l:"visual/pixiJs/初识PixiJs.html#_4-跨平台支持",a:"_4-跨平台支持"},"93.7":{t:"用法示例\r",p:`下面是一个简单的 PixiJS 示例，展示了如何创建一个基本的场景并添加一个可交互的精灵：
// 创建一个场景
let app = new PIXI.Application({ width: 800, ...`,l:"visual/pixiJs/初识PixiJs.html#用法示例",a:"用法示例"},"94.0":{t:"# PixiJs 基本使用\r",p:"\r",l:"visual/pixiJs/基本使用.html",a:"pixijs-基本使用"},"94.1":{t:"使用\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/基本使用.html#使用",a:"使用"},"94.2":{t:"Graphics 类详解\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/基本使用.html#graphics-类详解",a:"graphics-类详解"},"95.0":{t:"# PixiJs 文字与遮罩\r",p:"\r",l:"visual/pixiJs/文字与遮罩.html",a:"pixijs-文字与遮罩"},"95.1":{t:"添加文字\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/文字与遮罩.html#添加文字",a:"添加文字"},"95.2":{t:"使用文字作为精灵的遮罩\r",p:`// 创建一个精灵
const sprite = PIXI.Sprite.from(
  'https://pic.rmb.bdstatic.com/05b0ea405c9e690ab51627853 ...`,l:"visual/pixiJs/文字与遮罩.html#使用文字作为精灵的遮罩",a:"使用文字作为精灵的遮罩"},"96.0":{t:"# 波纹涟漪效果\r",p:"\r",l:"visual/pixiJs/波纹涟漪效果.html",a:"波纹涟漪效果"},"96.1":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/波纹涟漪效果.html#代码",a:"代码"},"97.0":{t:"# PixiJs 滤镜特效\r",p:"\r",l:"visual/pixiJs/滤镜特效.html",a:"pixijs-滤镜特效"},"97.1":{t:"创建应用\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/滤镜特效.html#创建应用",a:"创建应用"},"97.2":{t:"添加滤镜\r",p:`// 创建模糊滤镜
const blurFilter = new PIXI.BlurFilter()
// 设置模糊滤镜的模糊程度
blurFilter.blur = 10
// 将模糊滤镜添加到精灵 ...`,l:"visual/pixiJs/滤镜特效.html#添加滤镜",a:"添加滤镜"},"97.3":{t:"使用 pixi-filters 库\r",p:`npm install pixi-filters

// 创建轮廓滤镜
const outlineFilter = new OutlineFilter(5, 0xffff00) // 轮廓宽度，颜色
 ...`,l:"visual/pixiJs/滤镜特效.html#使用-pixi-filters-库",a:"使用-pixi-filters-库"},"98.0":{t:"# PixiJs 精灵与动画\r",p:"\r",l:"visual/pixiJs/精灵与动画.html",a:"pixijs-精灵与动画"},"98.1":{t:"1.创建应用\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/精灵与动画.html#_1-创建应用",a:"_1-创建应用"},"98.2":{t:"2.创建纹理与精灵\r",p:`// 创建一个纹理
const texture = PIXI.Texture.from('./vite.svg')

// 创建一个精灵
const sprite = new PIXI.Sprite( ...`,l:"visual/pixiJs/精灵与动画.html#_2-创建纹理与精灵",a:"_2-创建纹理与精灵"},"98.3":{t:"3.设置属性\r",p:`// 锚点
sprite.anchor.set(0.5, 0.5)

// 设置位置
sprite.x = app.screen.width / 2
sprite.y = app.screen.hei ...`,l:"visual/pixiJs/精灵与动画.html#_3-设置属性",a:"_3-设置属性"},"98.4":{t:"4.实现动画\r",p:`// ticker 实现动画
app.ticker.add((delta) =&gt; {
  sprite.rotation += 0.01 delta
})

`,l:"visual/pixiJs/精灵与动画.html#_4-实现动画",a:"_4-实现动画"},"99.0":{t:"# PixiJs 绘制图形\r",p:"\r",l:"visual/pixiJs/绘制图形.html",a:"pixijs-绘制图形"},"99.1":{t:"绘制椭圆\r",p:`const ellipse = new PIXI.Graphics()
ellipse.beginFill(0x66ccff)
ellipse.drawEllipse(0, 0, 164, 64)
e ...`,l:"visual/pixiJs/绘制图形.html#绘制椭圆",a:"绘制椭圆"},"99.2":{t:"绘制多边形\r",p:`const polygon = new PIXI.Graphics()
polygon.beginFill(0x660000)
// 参数一个数组，数组中的每一个元素是一个点的坐标，每两个元素是一个点 ...`,l:"visual/pixiJs/绘制图形.html#绘制多边形",a:"绘制多边形"},"99.3":{t:"创建圆角矩形\r",p:`const roundedRectangle = new PIXI.Graphics()
roundedRectangle.beginFill(0x66ccff, 0.9)

// 绘制圆角矩形 x  ...`,l:"visual/pixiJs/绘制图形.html#创建圆角矩形",a:"创建圆角矩形"},"99.4":{t:"绘制圆弧\r",p:`const arc = new PIXI.Graphics()
arc.beginFill(0x660000)
// arc(x坐标,y坐标,半径,其实角度,结束角度,顺/逆时针)
arc.arc(0 ...`,l:"visual/pixiJs/绘制图形.html#绘制圆弧",a:"绘制圆弧"},"99.5":{t:"绘制线段\r",p:`const line = new PIXI.Graphics()
line.lineStyle(10, 0x660000, 0.6) // 宽度，颜色，透明度
line.moveTo(0, 0)
li ...`,l:"visual/pixiJs/绘制图形.html#绘制线段",a:"绘制线段"},"100.0":{t:"# 谷歌恐龙小游戏\r",p:"\r",l:"visual/pixiJs/谷歌恐龙小游戏.html",a:"谷歌恐龙小游戏"},"100.1":{t:"素材图片\r",p:`!谷歌恐龙小游戏素材
`,l:"visual/pixiJs/谷歌恐龙小游戏.html#素材图片",a:"素材图片"},"100.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;app&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/谷歌恐龙小游戏.html#代码",a:"代码"},"101.0":{t:"# PixiJs 资源管理\r",p:`
PIXI.Assets用于加载资源
使用PIXI.Container创建容器，对多个资源分组，设置容器属性即可应用到容器内的精灵

`,l:"visual/pixiJs/资源管理.html",a:"pixijs-资源管理"},"101.1":{t:"单次添加资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#单次添加资源",a:"单次添加资源"},"101.2":{t:"一次添加多个资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#一次添加多个资源",a:"一次添加多个资源"},"102.0":{t:"# SVG\r",p:"\r",l:"visual/svg/index.html",a:"svg"},"102.1":{t:"是什么\r",p:`
SVG 是 Scalable Vector Graphics 的缩写 意为可缩放矢量图形
SVG 是一个基于文本的开放网络标准，用来定义用于网络的矢量图形
SVG 图像在放大或改变尺寸的情况下其图形 ...`,l:"visual/svg/index.html#是什么",a:"是什么"},"102.2":{t:"基本图形\r",p:"\r",l:"visual/svg/index.html#基本图形",a:"基本图形"},"102.3":{t:"线条（line）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性 style 是看不出效果的 --&gt;
  &lt;line x1=&quot;50&quot; x2=&quot;50&quot; y1 ...`,l:"visual/svg/index.html#线条-line",a:"线条-line"},"102.4":{t:"矩形（rect）\r",p:`&lt;svg&gt;
  &lt;rect x=&quot;400&quot; y=&quot;200&quot; width=&quot;150&quot; height=&quot;50&quo ...`,l:"visual/svg/index.html#矩形-rect",a:"矩形-rect"},"102.5":{t:"圆形（circle）\r",p:`&lt;svg&gt;
  &lt;circle cx=&quot;370&quot; cy=&quot;95&quot; r=&quot;50&quot; style=&quot;stroke:gr ...`,l:"visual/svg/index.html#圆形-circle",a:"圆形-circle"},"102.6":{t:"椭圆（cllipse）\r",p:`&lt;svg&gt;
  &lt;ellipse cx=&quot;100&quot; cy=&quot;100&quot; rx=&quot;100&quot; ry=&quot;50&quot; ...`,l:"visual/svg/index.html#椭圆-cllipse",a:"椭圆-cllipse"},"102.7":{t:"多边形（polygon）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性style是看不出效果的 并且polygon默认为填充需要把fill属性设置为none --&gt;
  &lt;polygon
    po ...`,l:"visual/svg/index.html#多边形-polygon",a:"多边形-polygon"},"102.8":{t:"折线（polyline）\r",p:`&lt;svg&gt;
  &lt;polyline points=&quot;300 300,50 100,120 300,200,30&quot; fill-opacity=&quot;0&quo ...`,l:"visual/svg/index.html#折线-polyline",a:"折线-polyline"},"102.9":{t:"路径（path）\r",p:`&lt;svg&gt;
  &lt;path
    fill-opacity=&quot;0&quot;
    stroke=&quot;skyblue&quot;
    d=&quot;
   ...`,l:"visual/svg/index.html#路径-path",a:"路径-path"},"103.0":{t:"# VitePress 从 0 开始搭建个人网站\r",p:`
lemon's blog 从无到有的过程
VitePress 官方网站
VitePress 中文网

`,l:"vitepress.html",a:"vitepress-从-0-开始搭建个人网站"},"103.1":{t:"一、 创建项目\r",p:`\r
\r`,l:"vitepress.html#一、-创建项目",a:"一、-创建项目"},"103.2":{t:"二、 基本配置\r",p:"\r",l:"vitepress.html#二、-基本配置",a:"二、-基本配置"},"103.3":{t:"1. 创建项目\r",p:`

在gitbub上新建项目，建议勾选Add a README file


新建文件夹 blog
可以使用 npm，yarn，pnpm，如果没有安装 pnpm 可以全局安装


npm i pnpm ...`,l:"vitepress.html#_1-创建项目",a:"_1-创建项目"},"103.4":{t:"2. 配置网站\r",p:"\r",l:"vitepress.html#_2-配置网站",a:"_2-配置网站"},"103.5":{t:"配置导航栏部分\r",p:"在目录下新建 docs 文件夹，在其中新建.vitepress 文件夹和 config.js 文件，config.js 文件就是我们的配置文件，新建一个 index.html 作为我们的主页，在新建一 ...",l:"vitepress.html#配置导航栏部分",a:"配置导航栏部分"},"103.6":{t:"配置侧边栏部分\r",p:`themeConfig: {
  // ...省略前面的内容
  // 侧边栏
  sidebar: {
    &quot;/articles/other&quot;: [
      {
     ...`,l:"vitepress.html#配置侧边栏部分",a:"配置侧边栏部分"},"103.7":{t:"3. 配置首页\r",p:`vitepress 支持用户使用 yaml 配置页面的内容，在 docs/index.html 写下如下内容，更多配置请查看
---
layout: home

title: 选项卡标题
titleT ...`,l:"vitepress.html#_3-配置首页",a:"_3-配置首页"},"103.8":{t:"三、 部署到 github.io\r",p:`新建脚本文件 deploy.sh，与 docs 文件夹处于同一级
#!/usr/bin/env sh

# 确保脚本抛出遇到的错误
set -e

# 生成静态文件
yarn docs:build

 ...`,l:"vitepress.html#三、-部署到-github-io",a:"三、-部署到-github-io"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"情输入关键词",allow:[],ignore:[]},a={INDEX_DATA:t,PREVIEW_LOOKUP:e,Options:n};export{a as default};
