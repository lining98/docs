const t={map:'[{"关于作者":["0.0"],"算法":["1.0"],"demo2":["2.0"],"demo3":["3.0"],"该内容正在努力建设中":["4.0","36.0","46.0"],"nginx":["5.0"],"nginx部署项目":["5.1"],"mysql":["8.0"],"安装mysql":["9.0"],"express":["11.0","11.1","11.4","11.5","15.11","15.14"],"基本使用":["11.2"],"托管静态资源":["11.3"],"全局中间件":["11.6"],"局部中间件":["11.7"],"中间件分类":["11.8"],"cors":["11.9","11.10","11.11","11.12","11.13"],"简单请求":["11.14"],"预检请求":["11.15"],"nodejs":["12.0","12.2","14.4"],"初识":["12.1"],"使用":["12.3","16.3","63.1"],"nodejs内置模块":["13.0"],"fs":["13.1"],"读取文件":["13.2"],"简单文件读取":["13.3"],"流式文件读取":["13.4"],"写入文件":["13.5"],"简单文件写入":["13.6"],"流式文件写入":["13.7"],"buffer":["13.8"],"路径动态拼接问题":["13.9"],"其它操作":["13.10"],"path":["13.11"],"路径拼接":["13.12"],"获取路径中文件名":["13.13"],"获取路径中文件扩展名":["13.14"],"http":["13.15"],"创建基本":["13.16"],"实现简陋路由效果":["13.17"],"模块化":["14.0"],"基本概念":["14.1"],"什么是模块化":["14.2"],"模块化的好处":["14.3"],"node":["14.5","14.6","15.1"],"模块作用域的成员":["14.7"],"commonjs":["14.8"],"模块加载机制":["14.9"],"内置模块加载":["14.10"],"自定义模块加载":["14.11"],"第三方模块加载":["14.12"],"目录作为模块加载":["14.13"],"npm":["14.14","14.16"],"包":["14.15"],"通过切换源解决":["14.17"],"开发包":["14.18"],"模块的加载机制":["14.19"],"内置模块的加载机制":["14.20"],"自定义模块的加载机制":["14.21"],"第三方模块的加载机制":["14.22"],"目录作为模块":["14.23"],"数据库和身份认证":["15.0"],"配置":["15.2"],"操作":["15.3"],"web":["15.4"],"服务端渲染":["15.5"],"前后端分离":["15.6"],"如何选择":["15.7"],"身份认证":["15.8"],"session":["15.9","15.10"],"jwt":["15.12","15.13"],"axios":["16.0"],"什么是axios":["16.1"],"安装":["16.2","41.7"],"拦截器":["16.4"],"错误处理":["16.5"],"封装axios":["17.0"],"相关文章":["17.7"],"css":["18.0","19.1","20.0"],"通配符选择器":["18.1"],"元素选择器":["18.2"],"类选择器":["18.3"],"id":["18.4"],"交集选择器":["18.5"],"并集选择器":["18.6"],"后代选择器":["18.7"],"子选择器":["18.8"],"兄弟选择器":["18.9"],"伪类选择器":["18.10"],"动态伪类选择器":["18.11"],"结构伪类选择器":["18.12"],"属性选择器":["18.13"],"伪元素选择器":["18.14"],"相关链接":["18.15"],"选择器优先级":["19.0"],"滚动条样式":["21.0"],"html5":["22.0","22.5","22.6","23.0"],"音视频频格式的":["22.1"],"音频格式":["22.2"],"视频格式":["22.3"],"音视频标签描述":["22.4"],"video":["22.7","22.11"],"音视频对象的方法":["22.8"],"代码实例":["22.9"],"audio":["22.10"],"html":["23.1"],"input":["24.0","24.1"],"闭包":["25.0"],"什么是闭包":["25.1"],"节流和防抖":["26.0"],"是什么":["26.1","30.1","32.1","69.1"],"定义":["26.2"],"代码实现":["26.3"],"节流":["26.4"],"防抖":["26.5"],"深拷贝":["27.0"],"数组去重":["28.0"],"数组扁平化":["29.0"],"promise":["30.0"],"实现一个":["30.2"],"javascript":["31.0"],"ajax":["32.0"],"二":["32.2","33.18","34.8","35.14","41.10","50.2","55.13","60.6","70.2"],"三":["32.7","33.21","34.13","35.16","50.3","60.7","70.8"],"数组方法":["33.0"],"一":["33.1","34.1","35.1","41.9","50.1","55.1","55.18","60.2","70.1"],"增":["33.2","35.2"],"push":["33.3"],"unshift":["33.4"],"splice":["33.5","33.10","33.13"],"concat":["33.6","35.3"],"删":["33.7","35.4"],"pop":["33.8"],"shift":["33.9"],"slice":["33.11"],"改":["33.12","35.5"],"查":["33.14","35.10"],"indexof":["33.15","35.12"],"includes":["33.16"],"find":["33.17"],"reverse":["33.19"],"sort":["33.20"],"join":["33.22"],"四":["33.23","60.8"],"some":["33.24"],"every":["33.25"],"foreach":["33.26"],"filter":["33.27"],"map":["33.28"],"数据类型":["34.0"],"number":["34.2"],"undefined":["34.3"],"string":["34.4"],"null":["34.5","37.9"],"boolean":["34.6"],"symbol":["34.7"],"object":["34.9"],"array":["34.10"],"function":["34.11"],"其他引用类型":["34.12"],"基本类型":["34.14","37.0"],"引用类型":["34.15"],"小结":["34.16"],"js字符串的常用方法":["35.0"],"trim":["35.6"],"repeat":["35.7"],"padend":["35.8"],"tolowercase":["35.9"],"charat":["35.11"],"startwith":["35.13"],"split":["35.15"],"match":["35.17"],"search":["35.18"],"replace":["35.19"],"字符串类型":["37.1"],"数字类型":["37.2"],"布尔类型":["37.3"],"数组":["37.4"],"元组":["37.5"],"枚举":["37.6"],"any":["37.7"],"void":["37.8"],"never":["37.10","37.11"],"联合类型":["37.12"],"交叉类型":["37.13"],"类型断言":["37.14"],"类":["38.0"],"基本实例":["38.1"],"继承":["38.2","42.3"],"类的修饰符":["38.3"],"默认为":["38.4"],"理解":["38.5","38.6"],"readonly":["38.7","47.9"],"static":["38.8"],"interface":["38.9"],"存储器":["38.10"],"抽象类":["38.11"],"函数":["39.0"],"函数的类型":["39.1"],"可选参数":["39.2"],"默认参数":["39.3"],"剩余参数":["39.4"],"函数重载":["39.5"],"泛型":["40.0"],"函数泛型":["40.1"],"给函数加上类型":["40.2"],"使用泛型优化":["40.3"],"多个泛型参数的函数":["40.4"],"泛型接口":["40.5"],"泛型类":["40.6"],"泛型约束":["40.7"],"初识typescript":["41.0"],"ts是什么":["41.1"],"ts和js的关系":["41.2"],"ts和js的区别":["41.3"],"typescript的优缺点":["41.4"],"优点":["41.5"],"缺点":["41.6"],"监视编译和在node下运行typescript":["41.8"],"接口和对象类型":["42.0"],"对象的类型":["42.1"],"重名interface":["42.2"],"可选属性":["42.4"],"任意属性":["42.5"],"只读属性":["42.6"],"添加函数":["42.7"],"对象类型":["43.0"],"tsconfig":["44.0"],"类型推论":["45.0","45.1"],"类型别名":["45.2"],"vue3":["47.0","48.0","55.0","57.4"],"setup":["47.1"],"ref":["47.2"],"ref全家桶":["47.3"],"isref":["47.4"],"shallowref":["47.5"],"triggerref":["47.6"],"customref":["47.7"],"reactive全家桶":["47.8"],"shallowreactive":["47.10"],"to系列全家桶":["47.11"],"toref":["47.12"],"torefs":["47.13"],"toraw":["47.14"],"computed":["47.15"],"watch":["47.16"],"watcheffect":["47.21"],"清除副作用":["47.22"],"停止监听":["47.23"],"配置选项":["47.24"],"生命周期":["47.25"],"自定义指令":["47.26"],"vue3指令的钩子函数":["47.27"],"在setup内定义局部指令":["47.28"],"生命周期钩子参数详解":["47.29"],"案列":["47.30"],"自定义hooks":["47.31"],"注册":["48.1"],"全局组件":["48.2"],"批量注册全局组件":["48.4"],"局部组件":["48.5"],"父子组件传参":["48.6"],"插槽":["48.7"],"匿名插槽":["48.8"],"具名插槽":["48.9"],"作用域插槽":["48.10"],"动态插槽":["48.11"],"异步组件":["48.12"],"suspense":["48.13"],"teleport":["48.14"],"keep":["48.15"],"provide":["48.16"],"v":["48.17"],"创建vue3项目":["49.0"],"安装或者升级":["49.2"],"保证":["49.3"],"创建项目":["49.4"],"认识vue3":["50.0"],"前端导航":["52.0"],"常用工具":["52.2"],"git基本命令使用":["53.0"],"账户配置":["53.1"],"本地基本操作":["53.2"],"初始化本地库":["53.3"],"查看状态":["53.4"],"添加暂存区":["53.5"],"提交本地库":["53.6"],"比较差异":["53.7"],"查看日志信息":["53.8"],"分支命令":["53.9"],"创建分支":["53.10"],"查看本地分支":["53.11"],"删除分支":["53.12"],"切换分支":["53.13"],"合并分支":["53.14"],"版本穿梭与回滚":["53.15"],"修改":["53.16"],"远程仓库交互":["53.17"],"git":["53.18","53.19","53.20","53.21"],"git安装":["54.0"],"tortoisegit安装":["54.7"],"刮刮乐":["56.0"],"示例":["56.2","57.1","58.1","59.2"],"代码":["56.3","57.2","58.2","59.3"],"时钟":["57.0"],"js":["57.3"],"梅花特效":["58.0"],"画板":["59.0"],"初始":["60.0"],"什么是":["60.1"],"canvas":["61.0","62.0","63.0","64.0","65.0","66.0","67.0"],"属性":["62.1"],"属性方法":["63.2"],"绘制图形":["66.1"],"绘制矩形":["66.2"],"绘制圆弧":["66.3"],"绘制线段":["66.4"],"绘制图像":["66.5"],"绘制文本":["66.6"],"绘制贝塞尔二次曲线":["67.1"],"绘制贝塞尔三次曲线":["67.2"],"echarts":["68.0"],"svg":["69.0"],"基本图形":["69.2"],"线条":["69.3"],"矩形":["69.4"],"圆形":["69.5"],"椭圆":["69.6"],"多边形":["69.7"],"折线":["69.8"],"路径":["69.9"],"vitepress":["70.0"],"配置导航栏部分":["70.5"],"配置侧边栏部分":["70.6"]},{"0":["33.5","47.1","57.3","64.1"],"1":["5.1","11.8","14.18","15.2","15.3","15.11","15.14","17.1","19.1","26.4","26.5","28.1","29.1","32.3","33.24","47.1","47.17","49.1","53.1","53.7","53.8","53.14","53.15","53.16","53.18","53.19","53.21","54.1","55.2","55.3","55.4","55.5","55.6","55.7","55.8","55.9","55.10","55.11","55.12","55.14","55.16","55.19","55.20","55.23","60.3","60.4","60.5","61.1","64.1","69.1","70.3"],"2":["11.8","14.18","15.3","15.11","15.14","17.2","28.2","29.2","32.4","47.18","49.5","54.2","55.3","55.4","55.5","55.14","55.15","55.16","55.17","55.19","55.20","60.4","61.2","64.2","70.4"],"3":["17.3","28.3","29.3","32.5","47.19","54.3","55.6","55.21","55.22","55.23","55.24","60.5","61.3","64.3","70.7"],"4":["17.4","28.4","29.4","32.6","47.20","54.4","55.7","61.4","64.4"],"5":["17.5","28.5","54.5","55.8","55.21","61.5"],"6":["17.6","28.6","54.6","55.9","55.22"],"7":["55.10","55.23"],"8":["55.11","55.24"],"9":["55.12"],"50":["66.3"],"100":["66.4"],"111":["23.1"],"123":["1.1"],"200":["66.3","67.1"],"300":["57.3","66.3","67.1"],"400":["56.3","57.3"],"404":["5.0"],"500":["26.4"],"600":["56.3","57.3","63.1"],"800":["57.3"],"2013":["55.18"],"12345":["16.5"],"qq":["0.0"],"部署刷新":["5.0"],"问题":["5.0"],"yarn":["5.1"],"build打包项目":["5.1"],"官网传送门":["11.0"],"初体验":["11.1"],"安装":["11.2","14.16","15.2","15.11","15.14"],"express":["11.2","11.3","11.7","11.8"],"bash":["11.2","14.17","15.11","15.14","41.7","53.1","53.3","53.4","53.8","53.10","53.11","53.13","53.15","53.21","55.22","70.8"],"npm":["11.2","14.17","14.18","15.11","15.14","41.7","49.2","70.3"],"install":["11.2","15.11","15.14","55.22"],"创建服务器":["11.2"],"监听客户端请求":["11.2"],"并返回内容":["11.2"],"js":["11.2","11.4","11.6","11.7","11.12","12.1","13.3","13.4","13.6","13.7","13.12","13.14","13.16","13.17","14.5","14.6","14.12","14.15","15.3","16.3","16.5","17.2","17.3","17.4","17.5","17.6","22.10","26.4","26.5","27.0","28.0","28.2","28.6","29.0","29.4","30.2","32.7","33.11","33.17","33.20","33.28","34.2","34.14","34.15","35.3","35.13","39.1","47.4","47.6","47.17","55.20","61.4","64.2","64.3","65.0","66.2","66.3","66.4","66.5","67.1","67.2","70.5","70.6"],"const":["11.2","11.4","11.6","11.7","13.12","13.16","13.17","15.3","28.0","28.2","29.4","30.2","32.7","33.17","47.28"],"通过":["11.3","11.6","11.8","32.4","32.5","39.2"],"static":["11.3"],"方法可创建静态资源服务器":["11.3"],"向外开放访问静态资源":["11.3"],"在指定的静态目录中查找文件":["11.3"],"并对外提供资源的访问路径":["11.3"],"路由":["11.4"],"创建路由模块":["11.4"],"router":["11.4","11.8"],"require":["11.4","11.7","13.4","13.12","13.16","13.17","14.21","14.22","14.23"],"中间件":["11.5","15.11"],"中间件是指流程的中间处理环节":["11.5"],"服务器收到请求后":["11.5"],"app":["11.6","11.7","11.8","48.2"],"use":["11.6","11.8","17.3","17.4"],"定义的中间件为全局中间件":["11.6"],"定义中间件函数":["11.7"],"应用级别的中间件":["11.8"],"或":["11.8","14.22"],"get":["11.8","11.14","11.15","16.3","16.5","17.5","38.10","47.7"],"post":["11.8","11.14","11.15"],"绑定到":["11.8"],"实例上的中间件":["11.8"],"路由级别的中间件":["11.8"],"叫做路由级别的中间件":["11.8"],"用法和应用级别中间件没有区别":["11.8"],"跨域资源共享":["11.9"],"中间件解决跨域":["11.10"],"cross":["11.11"],"origin":["11.11","11.12"],"resource":["11.11"],"sharing":["11.11"],"常见响应头":["11.12"],"access":["11.12"],"control":["11.12"],"allow":["11.12"],"制定了允许访问资源的外域":["11.12"],"url":["11.12"],"res":["11.12","17.4"],"setheader":["11.12"],"http":["11.12","13.16","13.17","55.18"],"请求分类":["11.13"],"请求方式":["11.14"],"head":["11.14"],"请求方式为":["11.15"],"介绍":["12.0"],"nodejs":["12.1"],"node":["12.1","12.3","14.12","14.15","55.20"],"is":["12.1"],"an":["12.1"],"的特点":["12.2"],"异步":["12.2","13.7"],"非阻塞":["12.2"],"io":["12.2","70.8"],"模型":["12.2"],"文件系统模块":["13.1"],"模块中所有的操作都有两种形式可供选择":["13.1"],"同步和异步":["13.1"],"同步文件系统会阻塞程序的执行":["13.1"],"也就是除非操作完毕":["13.1"],"语法格式":["13.3","13.6"],"fs":["13.3","13.4","13.6","13.9","13.10"],"readfile":["13.3"],"path":["13.3","13.10","13.12","13.13","13.14","69.9"],"options":["13.3","13.6","32.7"],"callback":["13.3","13.6","13.10"],"文件路径":["13.3"],"简单文件读取的方式会一次性读取文件内容到内存中":["13.4"],"若文件较大":["13.4"],"会占用过多内存影响系统性能":["13.4"],"且读取速度慢":["13.4"],"大文件适合用流式文件读取":["13.4"],"它会分多次将文件读取到内存中":["13.4"],"var":["13.4","34.15","57.3"],"创建一个可读流":["13.4"],"writefile":["13.6"],"file":["13.6","70.3"],"data":["13.6","17.4"],"同步":["13.7"],"简单文件的写入都不适合大文件的写入":["13.7"],"性能较差":["13.7"],"容易导致内存溢出":["13.7"],"缓冲区":["13.8"],"缓冲区文档":["13.8"],"的结构与数组类似":["13.8"],"操作方法也与数组类似":["13.8"],"dirname":["13.9"],"在使用":["13.9"],"模块操作文件时":["13.9"],"验证路径是否存在":["13.10"],"exists":["13.10"],"existssync":["13.10"],"获取文件信息":["13.10"],"stat":["13.10"],"删除文件":["13.10"],"路径模块":["13.11"],"join":["13.12"],"basename":["13.13"],"使用":["13.13","14.21","15.14","17.6","28.3","28.4","28.5","28.6","29.1","29.3","38.6","42.4","60.6","60.7","63.0"],"方法":["13.13"],"extname":["13.14"],"模块":["13.15","15.2"],"web":["13.16","31.0"],"服务器":["13.16"],"创建":["13.16","34.9"],"服务器实例":["13.16"],"server":["13.17"],"createserver":["13.17"],"概念":["14.2"],"避免命名空间的冲突":["14.3"],"中模块化":["14.4"],"自定义模块中都有一个":["14.7"],"module":["14.7","44.0","55.20"],"对象":["14.7","15.14","66.6"],"模块化规范":["14.8"],"模块第一次加载后会被缓存":["14.9"],"内置模块加载优先级最高":["14.10"],"加载自定义模块时":["14.11","14.21"],"路径要以":["14.11"],"若导入第三方模块":["14.12"],"会从":["14.12"],"当前模块的父目录":["14.12"],"开始":["14.12"],"当把目录作为模块标识符进行加载的时候":["14.13"],"有三种加载方式":["14.13","14.23"],"在被加载的目录下查找":["14.13"],"与包":["14.14"],"中的第三方模块又叫做":["14.15"],"在项目中安装包的命令":["14.16"],"的下包速度慢的问题":["14.17"],"注册":["14.18"],"账号":["14.18"],"初始化包的基本结构":["14.18"],"模块在第一次加载后会被缓存":["14.19"],"内置模块的加载优先级最高":["14.20"],"必须指定以":["14.21"],"如果传递给":["14.22"],"的模块标识符不是一个内置模块":["14.22"],"也没有以":["14.22"],"开头":["14.22","34.2"],"则":["14.22"],"当把目录作为模块标识符":["14.23"],"传递给":["14.23"],"进行加载的时候":["14.23"],"操作":["15.1"],"mysql":["15.2","15.3"],"数据库":["15.3"],"查询数据":["15.3"],"db":["15.3"],"query":["15.3"],"select":["15.3","49.4"],"from":["15.3"],"users":["15.3"],"err":["15.3"],"results":["15.3"],"插入数据":["15.3"],"表示占位符":["15.3"],"sql":["15.3"],"开发模式":["15.4"],"服务器发送给客户端的":["15.5"],"html":["15.5","18.5","18.9","18.14","22.10","22.11","24.1","48.9","56.3","59.3","63.1","69.3","69.4","69.5","69.7","69.8","69.9","70.7"],"页面":["15.5"],"是在服务器通过字符串的拼接动态生成的":["15.5"],"因此客户端不需要使用":["15.5"],"ajax":["15.5","15.6","32.1","32.2","32.7"],"前后端分离的开发模式":["15.6"],"依赖于":["15.6"],"技术的广泛应用":["15.6"],"企业级网站":["15.7"],"认证机制":["15.9","15.12"],"工作原理":["15.10","15.13"],"中使用":["15.11"],"session":["15.11","15.13"],"认证":["15.11"],"配置中间件":["15.11"],"认证的局限性":["15.13"],"认证机制需要配合":["15.13"],"cookie":["15.13"],"才能实现":["15.13"],"由于":["15.13","60.7"],"默认不支持跨域访问":["15.13"],"jwt":["15.14"],"jsonwebtoken":["15.14"],"用于生成":["15.14"],"字符串":["15.14"],"用于将":["15.14"],"字符串解析还原成":["15.14"],"json":["15.14","44.0","55.19"],"定义":["15.14","38.9"],"secret":["15.14"],"密钥":["15.14"],"为保证":["15.14"],"axios":["16.1","16.3","16.5","55.23"],"使用npm":["16.2"],"执行":["16.3"],"请求":["16.3","32.7"],"let":["16.3","17.4","17.6","22.10","26.4","26.5","33.11","33.28","34.14","37.2","37.3","37.9"],"name":["16.3","38.1","59.3"],"zs":["16.3"],"我们大致可以分为两类":["16.4"],"一类是":["16.4"],"请求接口前的统一处理":["16.4"],"请求拦截":["16.4"],"请求接口后的统一处理":["16.4"],"user":["16.5"],"catch":["16.5"],"function":["16.5","17.5","26.4","26.5","27.0","32.7","33.20","39.1","39.3","39.5","40.4","57.3"],"封装目的":["17.1"],"初始化axios实例":["17.2"],"设置请求拦截":["17.3"],"创建请求拦截":["17.3"],"service":["17.3","17.4"],"interceptors":["17.3","17.4"],"request":["17.3"],"config":["17.3","55.22","70.5"],"设置响应拦截":["17.4"],"创建响应拦截":["17.4"],"response":["17.4"],"处理自己的业务逻辑":["17.4"],"封装常见的方法":["17.5"],"export":["17.5"],"示例":["17.6"],"param":["17.6"],"username":["17.6"],"关于":["17.7","32.6"],"选择器":["18.0","18.4"],"选择页面所有元素":["18.1"],"通过标签名选择元素":["18.2"],"通过类名选择元素":["18.3"],"p":["18.5"],"class":["18.5","30.2","38.1","38.6","38.8","40.6"],"good":["18.5"],"作用":["18.6"],"选中多个选择器对应的元素":["18.6"],"在所有后代节点中选":["18.7"],"只在亲儿子中选":["18.8"],"选择所有指定元素的":["18.9"],"相邻":["18.9"],"后一个兄弟节点":["18.9"],"h1":["18.9"],"根据元素状态或所处":["18.10"],"css":["18.11","18.14","21.0"],"按这个顺序声明":["18.11"],"c3":["18.12","18.13","18.14"],"选择符":["18.12","18.13"],"含义":["18.12","18.13"],"e":["18.12","18.13"],"first":["18.12"],"child":["18.12","48.8"],"第一个子元素":["18.12"],"last":["18.12"],"最后一个子元素":["18.12"],"att":["18.13"],"选择具有":["18.13"],"伪元素选择器利用":["18.14"],"创建新标签元素":["18.14"],"而不需要":["18.14"],"标签":["18.14","22.0"],"从而简化":["18.14"],"结构":["18.14"],"before":["18.14"],"和":["18.14","37.5","37.9","38.8","38.10","47.2","47.7","53.14"],"after":["18.14"],"一篇搞清伪类和伪元素":["18.15"],"一般情况下":["19.0"],"权重":["19.1"],"tip":["19.1"],"详细描述":["19.1"],"计算方式":["19.1"],"每个选择器":["19.1"],"都可以算出一组权重":["19.1"],"格式为":["19.1"],"a":["19.1","24.1","34.14","49.4","53.14","70.3"],"滚动条":["21.0"],"webkit":["21.0"],"scrollbar":["21.0"],"纵向":["21.0"],"width":["21.0","56.3","63.1"],"8px":["21.0"],"音视频标签":["22.0"],"音视频标签中的资源除了可以用":["22.0"],"src":["22.0","55.24"],"属性来指定外":["22.0"],"还可以用":["22.0"],"source":["22.0","62.1"],"而且可以指定多个":["22.0"],"mime":["22.1"],"format":["22.2"],"格式":["22.3"],"audio":["22.5"],"video":["22.6"],"标签的属性":["22.7"],"属性":["22.7"],"描述":["22.7"],"方法名":["22.8"],"音频":["22.10"],"css部分":["22.10"],"获取":["22.10"],"v":["22.10","48.6","55.7"],"document":["22.10","57.3"],"视频":["22.11"],"div":["22.11","48.9","55.12","56.3"],"style":["22.11"],"text":["22.11"],"align":["22.11"],"center":["22.11"],"button":["22.11","59.3"],"onclick":["22.11"],"playpause":["22.11"],"播放":["22.11"],"asdas":["23.0"],"type":["24.1","45.2","59.3"],"password":["24.1"],"浏览器自动填充账号和密码":["24.1"],"一个函数和对其周围状态":["25.1"],"lexical":["25.1"],"本质上是优化高频率执行代码的一种手段":["26.1"],"如":["26.1"],"节流":["26.2"],"使用时间戳写法":["26.4"],"事件会立即执行":["26.4"],"停止触发后没有办法再次执行":["26.4"],"throttled1":["26.4"],"fn":["26.4"],"delay":["26.4"],"oldtime":["26.4"],"date":["26.4"],"now":["26.4"],"简单版本的实现":["26.5"],"debounce":["26.5"],"func":["26.5"],"wait":["26.5"],"timeout":["26.5"],"return":["26.5"],"deepcopy":["27.0"],"obj":["27.0"],"如果不是对象或者为null":["27.0"],"直接返回":["27.0"],"if":["27.0"],"typeof":["27.0"],"object":["27.0","43.1"],"for":["28.2"],"循环":["28.2"],"indexof":["28.3"],"include":["28.4"],"map":["28.6"],"数组扁平化是指将一个多维数组变为一个一维数组":["29.0"],"利用正则":["29.2"],"reduce":["29.3"],"函数递归":["29.4"],"promise":["30.1","30.2"],"是一种异步编程的解决方案":["30.1"],"它可以避免回调地狱":["30.1"],"使代码更加简洁易读":["30.1"],"对象代表一个异步操作的最终完成或失败":["30.1"],"并返回一个值":["30.1"],"在":["30.1","39.4","47.0","47.31","48.2","48.13","55.2","55.6","55.8","55.22","55.24","70.7"],"实现一个promise":["30.2"],"mypromise":["30.2"],"constructor":["30.2"],"executor":["30.2"],"this":["30.2"],"status":["30.2"],"pending":["30.2"],"初始状态为pending":["30.2"],"value":["30.2","47.2","47.5","47.29"],"undefined":["30.2","37.9"],"成功的值":["30.2"],"reason":["30.2"],"失败的原因":["30.2"],"简介":["31.0"],"是一种脚本语言":["31.0"],"通常用于在":["31.0"],"浏览器中编写交互式前端代码":["31.0"],"它也可以在服务器端运行":["31.0"],"用于编写后端代码":["31.0"],"的语法类似于":["31.0"],"c":["31.0","55.18"],"语言":["31.0"],"但它是一种解释性语言":["31.0"],"不需要编译":["31.0"],"全称":["32.1"],"async":["32.1"],"实现过程":["32.2"],"实现":["32.2","57.3","57.4"],"与服务器建立连接":["32.4"],"xmlhttprequest":["32.4","32.5","32.6","32.7"],"给服务端发送数据":["32.5"],"绑定":["32.6"],"onreadystatechange":["32.6"],"事件":["32.6","55.4"],"事件用于监听服务器端的通信状态":["32.6"],"主要监听的属性为":["32.6"],"readystate":["32.6"],"封装":["32.7"],"通过上面对":["32.7"],"对象的了解":["32.7"],"下面来封装一个简单的":["32.7"],"封装一个ajax请求":["32.7"],"创建xmlhttprequest对象":["32.7"],"xhr":["32.7"],"操作方法":["33.1","35.1"],"下面前三种是对原数组产生影响的增添方法":["33.2"],"方法接收任意数量的参数":["33.3"],"在数组开头添加任意多个值":["33.4"],"传入三个参数":["33.5","33.13"],"分别是开始位置":["33.5","33.10","33.13"],"要删除的元素数量":["33.5"],"首先会创建一个当前数组的副本":["33.6"],"然后再把它的参数添加到副本末尾":["33.6"],"最后返回这个新构建的数组":["33.6"],"不会影响原始数组":["33.6","33.11"],"下面三种都会影响原数组":["33.7"],"方法用于删除数组的最后一项":["33.8"],"同时减少数组的":["33.8","33.9"],"方法用于删除数组的第一项":["33.9"],"传入两个参数":["33.10"],"删除元素的数量":["33.10"],"用于创建一个包含原有数组中一个或多个元素的新数组":["33.11"],"即修改原来数组的内容":["33.12"],"要删除元素的数量":["33.13"],"要插入的任意多个元素":["33.13"],"即查找元素":["33.14"],"返回要查找的元素在数组中的位置":["33.15","33.16"],"如果没找到则返回":["33.15"],"找到返回":["33.16"],"返回第一个匹配的元素":["33.17"],"排序方法":["33.18"],"顾名思义":["33.19"],"将数组元素方向反转":["33.19"],"方法接受一个比较函数":["33.20"],"用于判断哪个值应该排在前面":["33.20"],"compare":["33.20"],"value1":["33.20"],"value2":["33.20"],"转换方法":["33.21","35.14"],"方法接收一个参数":["33.22"],"即字符串分隔符":["33.22"],"迭代方法":["33.23"],"对数组每一项都运行传入的测试函数":["33.24","33.25"],"如果至少有":["33.24"],"个元素返回":["33.24"],"如果所有元素都返回":["33.25"],"true":["33.25","33.27","34.6","55.20"],"对数组每一项都运行传入的函数":["33.26","33.27","33.28"],"没有返回值":["33.26"],"函数返回":["33.27"],"的项会组成数组之后返回":["33.27"],"返回由每次函数调用的结果构成的数组":["33.28"],"基本类型":["34.1"],"数值最常见的整数类型格式则为十进制":["34.2"],"还可以设置八进制":["34.2"],"零开头":["34.2"],"十六进制":["34.2"],"0x":["34.2"],"类型只有一个值":["34.3"],"就是特殊值":["34.3"],"字符串可以使用双引号":["34.4"],"单引号":["34.4"],"或反引号":["34.4"],"类型同样只有一个值":["34.5"],"即特殊值":["34.5"],"布尔值":["34.6"],"类型有两个字面值":["34.6"],"符号":["34.7"],"是原始值":["34.7"],"且符号实例是唯一":["34.7"],"引用类型":["34.8"],"javascript":["34.10","37.4","37.6","39.4","41.3"],"数组是一组有序的数据":["34.10"],"函数实际上是对象":["34.11"],"每个函数都是":["34.11"],"类型的实例":["34.11"],"而":["34.11"],"除了上述说的三种之外":["34.12"],"存储区别":["34.13"],"obj1":["34.15"],"声明变量时不同的内存地址分配":["34.16"],"这里增的意思并不是说直接增添内容":["35.2"],"用于将一个或多个字符串拼接成一个新字符串":["35.3"],"这里的删的意思并不是说删除原字符串的内容":["35.4"],"而是创建字符串的一个副本":["35.4"],"再进行操作":["35.4"],"常见的有":["35.4"],"slice":["35.4"],"substr":["35.4"],"substring":["35.4"],"这里改的意思也不是改变原字符串":["35.5"],"trimleft":["35.6"],"trimright":["35.6"],"删除前":["35.6"],"接收一个整数参数":["35.7"],"复制字符串":["35.8"],"如果小于指定长度":["35.8"],"touppercase":["35.9"],"大小写转化":["35.9"],"除了通过索引的方式获取字符串的值":["35.10"],"返回给定索引位置的字符":["35.11"],"从字符串开头去搜索传入的字符串":["35.12"],"并返回位置":["35.12"],"includes":["35.13"],"从字符串中搜索传入的字符串":["35.13"],"并返回一个表示是否包含的布尔值":["35.13"],"把字符串按照指定的分割符":["35.15"],"拆分成数组中的每一项":["35.15"],"模板匹配方法":["35.16"],"接收一个参数":["35.17","35.18"],"可以是一个正则表达式字符串":["35.17","35.18"],"也可以是一个":["35.17","35.18"],"接收两个参数":["35.19"],"第一个参数为匹配的内容":["35.19"],"第二个参数为替换的元素":["35.19"],"ts":["37.1","37.2","37.3","37.9","37.10","37.12","37.13","38.1","38.6","38.8","38.9","39.2","39.3","39.5","40.2","40.4","40.6","40.7","41.1","42.2","42.3","42.7","45.1","45.2","48.2","55.22"],"支持十六进制":["37.2"],"十进制":["37.2"],"八进制和二进制":["37.2"],"b1":["37.3"],"boolean":["37.3","43.1"],"typescript":["37.4","37.14","38.10","41.7","42.0"],"像":["37.4"],"tuple":["37.5"],"元组类型允许表示一个已知":["37.5"],"元素数量":["37.5"],"类型":["37.5"],"的数组":["37.5"],"各元素的类型不必相同":["37.5"],"enum类型是对":["37.6"],"标准数据类型的一个补充":["37.6"],"使用枚举类型可以为一组数值赋予友好的名字":["37.6"],"枚举的值可以是数字":["37.6"],"任意类型":["37.7"],"没有强制限定哪种类型":["37.7"],"随时切换类型都可以":["37.7"],"我们可以对":["37.7"],"可以用":["37.8"],"表示没有":["37.8"],"任何返回值":["37.8"],"的":["37.8"],"函数":["37.8"],"u":["37.9"],"定义undefined":["37.9"],"类型表示的是那些永不存在的值的类型":["37.10"],"与":["37.11","47.15","55.9","55.10","70.8"],"void":["37.11"],"联合类型用":["37.12"],"分隔":["37.12"],"表示取值可以为多种类型中的一种":["37.12"],"a可以为数字或者布尔类型":["37.12"],"交叉类型就是跟联合类型相反":["37.13"],"用":["37.13","38.11"],"操作符表示":["37.13"],"交叉类型就是两个类型必须存在":["37.13"],"通过类型断言这种方式可以告诉编译器":["37.14"],"相信我":["37.14"],"我知道自己在干什么":["37.14"],"类型断言好比其它语言里的类型转换":["37.14"],"但是不进行特殊的数据检查和解构":["37.14"],"它没有运行时的影响":["37.14"],"只是在编译阶段起作用":["37.14"],"会假设你":["37.14"],"es6提供了更接近传统语言的写法":["38.0"],"引入了class":["38.0"],"类的基本定义与使用":["38.1"],"person":["38.1","38.6","42.7"],"声明属性":["38.1"],"在typescript":["38.2"],"里":["38.2","39.4"],"我们可以使用常用的面向对象模式":["38.2"],"基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类":["38.2"],"总共有三个":["38.3"],"public":["38.4","38.6"],"private":["38.5"],"protected":["38.6"],"修饰符":["38.6","38.7"],"代表定义的变量私有的只能在内部和继承的子类中访问":["38.6"],"不能在外部访问":["38.6"],"你可以使用":["38.7"],"静态属性":["38.8"],"静态方法":["38.8"],"我们用static":["38.8"],"定义的属性":["38.8"],"不可以通过this":["38.8"],"去访问":["38.8"],"只能通过类名去调用":["38.8"],"类":["38.9"],"定义类":["38.9"],"使用关键字":["38.9"],"支持通过":["38.10"],"getters":["38.10"],"setters":["38.10"],"来截取对对象成员的访问":["38.10"],"它能帮助你有效的控制对对象成员的访问":["38.10"],"下面来看如何把一个简单的类改写成使用":["38.10"],"抽象类做为其它派生类的基类使用":["38.11"],"它们一般":["38.11"],"不会直接被实例化":["38.11"],"只能实例化实现了所有抽象方法的子类":["38.11"],"不同于接口":["38.11"],"抽象类可以包含成员的实现细节":["38.11"],"abstract":["38.11"],"函数涉及的类型实际上指的是":["39.0"],"js的函数":["39.1"],"命名函数":["39.1"],"add":["39.1","39.5","53.5"],"表示该参数为可选参数":["39.2"],"必要参数":["39.4"],"默认参数和可选参数有个共同点":["39.4"],"它们表示某一个参数":["39.4"],"有时":["39.4"],"你想同时操作多个参数":["39.4"],"或者你并不知道会有多少参数传递进来":["39.4"],"重载是方法名字相同":["39.5"],"而参数不同":["39.5"],"返回类型可以相同也可以不同":["39.5"],"重载函数声明":["39.5"],"x":["39.5","61.2"],"string":["39.5","43.1"],"y":["39.5","61.2"],"指在定义函数":["40.0"],"下面这是两个函数":["40.2"],"除了类型的不同":["40.2"],"实现的功能是一样的":["40.2"],"语法为函数名字后面跟一个":["40.3"],"参数名":["40.3"],"参数名可以随便写":["40.3"],"例如我这儿写了":["40.3"],"t":["40.3"],"一个函数可以定义多个泛型参数":["40.4"],"在定义接口时":["40.5"],"为接口中的属性或方法定义泛型类型":["40.5"],"在使用接口时":["40.5"],"再指定具体的泛型类型":["40.5"],"在定义类时":["40.6"],"为类中的属性或方法定义泛型类型":["40.6"],"在创建类的实例时":["40.6"],"再指定特定的泛型类型":["40.6"],"我们期望在一个泛型的变量上面":["40.7"],"获取其length参数":["40.7"],"但是":["40.7","47.31"],"有的数据类型是没有length属性的":["40.7"],"typescript中文网":["41.0"],"对比于js":["41.2"],"ts是js的":["41.2"],"属于动态编程语言":["41.3"],"增强代码的可维护性":["41.5"],"需要一定的学习成本":["41.6"],"使用tsc":["41.9"],"使用ts":["41.10"],"在typescript中":["42.1"],"我们定义对象的方式要用关键字interface":["42.1"],"接口":["42.1"],"会合并":["42.2"],"interface":["42.3","42.7"],"操作符":["42.4"],"需要注意的是":["42.5"],"一旦定义了任意属性":["42.5"],"那么确定属性和可选属性的类型都必须是它的类型的子集":["42.5"],"readonly":["42.6"],"readonly只读属性是不允许被赋值的":["42.6"],"只能读取":["42.6"],"这里所说的对象类型":["43.0"],"类型用于表示所有的非原始类型":["43.1"],"即我们不能把":["43.1"],"number":["43.1"],"symbol":["43.1"],"等":["43.1"],"原始类型赋值给":["43.1"],"在严格模式下":["43.1"],"null":["43.1"],"配置文件":["44.0","55.20"],"compileroptions":["44.0"],"基本选项":["44.0"],"指定":["44.0"],"ecmascript":["44.0"],"目标版本":["44.0"],"es3":["44.0"],"default":["44.0"],"es5":["44.0"],"es6":["44.0"],"es2015":["44.0"],"es2016":["44.0"],"es2017":["44.0"],"or":["44.0"],"esnext":["44.0"],"target":["44.0"],"commonjs":["44.0"],"指定使用模块":["44.0"],"amd":["44.0"],"system":["44.0"],"类型别名":["45.0"],"typescript里":["45.1"],"在有些没有明确指出类型的地方":["45.1"],"类型推论会帮助提供类型":["45.1"],"关键字":["45.2"],"可以给一个类型定义一个名字":["45.2"],"多用于复合类型":["45.2"],"定义类型别名":["45.2"],"api":["47.0","55.24"],"vue在线学习工具":["47.0"],"理解":["47.1"],"vue3":["47.1","47.16","55.1","55.2","55.8","55.19"],"reactive":["47.2"],"函数用来根据给定的值创建一个响应式的数据对象":["47.2"],"函数调用的返回值是一个对象":["47.2"],"这个对象上只包含一个":["47.2"],"判断是不是一个ref对象":["47.4"],"import":["47.4","47.6","55.22"],"ref":["47.4","55.9"],"创建一个跟踪自身":["47.5"],"变化的":["47.5"],"强制更新页面dom":["47.6"],"自定义ref":["47.7"],"是个工厂函数要求我们返回一个对象":["47.7"],"并且实现":["47.7"],"reactive是不可以绑定普通的":["47.8"],"数据类型":["47.8"],"只能对浅层的数据":["47.10"],"如果是深层的数据只会改变值":["47.10"],"把一个响应式对象转换成普通对象":["47.12"],"该普通对象的每个":["47.12"],"torefs相当于对对象内每个属性调用toref":["47.13"],"torefs返回的对象内的属性使用时需要加":["47.13"],"将响应式对象修改为普通对象":["47.14"],"的作用和":["47.16"],"监听ref定义的一个响应式数据":["47.17"],"监听多个ref":["47.18"],"写法变为数组的形式":["47.18"],"监听reactive定义的响应式对象":["47.19"],"使用reactive监听深层对象开启和不开启deep":["47.19"],"监听reactive":["47.20"],"定义响应式对象的单一属性":["47.20"],"立即执行传入的一个函数":["47.21"],"watcheffect":["47.22"],"vue":["47.23","47.28","47.30","48.8","48.11","49.3","49.4","50.1","55.5","55.12","55.20","58.2"],"watcheffect的第二个参数":["47.24"],"用来定义副作用刷新时机":["47.24"],"简单来说就是一个组件从创建":["47.25"],"created":["47.27"],"元素初始化的时候":["47.27"],"这里有一个需要注意的限制":["47.28"],"必须以":["47.28"],"vnameofdirective":["47.28"],"的形式来命名本地自定义指令":["47.28"],"以使得它们可以直接在模板中使用":["47.28"],"vmovedirective":["47.28"],"第一个":["47.29"],"el":["47.29"],"当前绑定的dom":["47.29"],"元素":["47.29"],"第二个":["47.29"],"binding":["47.29"],"instance":["47.29"],"使用指令的组件实例":["47.29"],"自定义拖拽指令":["47.30"],"vue2":["47.31","48.13"],"中有个东西叫":["47.31"],"mixins":["47.31"],"他可以将多个组件中相同的逻辑抽离出来":["47.31"],"实现一次写代码":["47.31"],"多组件受益的效果":["47.31"],"的副作用就是引用的多了变量的来源就不清晰了":["47.31"],"而且还会有变量来源不明确":["47.31"],"深入组件":["48.0"],"main":["48.2"],"引入组件跟随在":["48.2"],"createapp":["48.2"],"局部注册的组件需要在使用它的父组件中显式导入":["48.5"],"父组件通过":["48.6"],"bind":["48.6"],"绑定一个数据":["48.6"],"然后子组件通过":["48.6"],"defineprops":["48.6"],"在子组件放置一个插槽":["48.8"],"具名插槽其实就是给插槽取个名字":["48.9"],"一个子组件可以放多个插槽":["48.9"],"而且可以放在不同的地方":["48.9"],"而父组件填充内容时":["48.9"],"可以根据这个名字把内容填充到对应插槽中":["48.9"],"slot":["48.9","55.12"],"插槽内容可以访问到父组件的数据作用域":["48.10"],"因为插槽内容本身是在父组件模板中定义的":["48.10"],"插槽可以是一个变量名":["48.11"],"在大型应用中":["48.12"],"需要将应用分割成小一些的代码块":["48.12"],"允许应用程序在等待异步组件时渲染一些其它内容":["48.13"],"中":["48.13"],"必须使用条件判断":["48.13"],"传送组件":["48.14"],"是一种能够将我们的模板渲染至指定dom节点":["48.14"],"不受父级style":["48.14"],"alive":["48.15"],"缓存组件":["48.15"],"事件挂载的方法等":["48.15"],"只执行一次的放在":["48.15"],"onmounted中":["48.15"],"组件每次进去执行的方法放在":["48.15"],"onactivated中":["48.15"],"inject":["48.16"],"可以在祖先组件中指定我们想要提供给后代组件的数据或方法":["48.16"],"而在任何后代组件中":["48.16"],"model":["48.17","55.7"],"升级":["48.17"],"在vue3":["48.17"],"是破坏性更新的":["48.17"],"是props":["48.17"],"create":["49.4"],"my":["49.4"],"project":["49.4"],"然后的步骤":["49.4"],"please":["49.4"],"pick":["49.4"],"preset":["49.4"],"选择":["49.4"],"manually":["49.4"],"使用vite创建":["49.5"],"推荐":["49.5"],"vite的优势":["49.5"],"冷服务":["49.5"],"默认的构建目标浏览器是能":["49.5"],"了解相关信息":["50.1"],"性能提升":["50.2"],"新增特性":["50.3"],"composition":["50.3"],"组合":["50.3"],"mnavlinks":["52.2"],"配置全局账户":["53.1"],"对所有":["53.1"],"git":["53.1","53.5","53.6","53.7","53.8","53.10","53.15"],"仓库有效":["53.1"],"commit":["53.6","53.16"],"提交所有变更":["53.6"],"diff":["53.7"],"比较工作区和暂存区的所有差异":["53.7"],"只能查看旧文件的变更":["53.7"],"包括修改和删除":["53.7"],"不能查看新文件":["53.7"],"因为新文件还为被":["53.7"],"log":["53.8"],"查看简要日志信息":["53.8"],"基于当前分支创建分支":["53.10"],"安全删除本地分支":["53.12"],"merge":["53.14"],"rebase":["53.14"],"的区别有待学习实践":["53.14"],"worried":["53.14"],"将":["53.14"],"工作区指定文件恢复成和暂存区一样":["53.15"],"checkout":["53.15"],"file1":["53.15"],"file2":["53.15"],"tips":["53.15"],"记录":["53.16"],"remote":["53.18"],"查看所有远程仓库地址别名":["53.18"],"clone":["53.19"],"pull":["53.20"],"push":["53.21"],"推送本地指定分支到仓库指定分支":["53.21"],"配置用户名和邮箱":["54.3"],"执行命令生成ssh":["54.4"],"tortoisegit安装和配置详细说明":["54.7"],"项目配置文档":["55.0"],"组件通信方式":["55.1"],"通信仓库地址":["55.1"],"项目地址":["55.1"],"props":["55.2"],"可以实现父子组件通信":["55.2"],"原生":["55.4"],"dom":["55.4"],"自定义事件":["55.5"],"自定义事件可以实现子组件给父组件传递数据":["55.5"],"在项目中是比较常用的":["55.5"],"比如在父组件内部给子组件":["55.5"],"event2":["55.5"],"绑定一个自定义事件":["55.5"],"全局事件总线":["55.6"],"全局事件总线可以实现任意组件通信":["55.6"],"指令可是收集表单数据":["55.7"],"数据双向绑定":["55.7"],"useattrs":["55.8"],"中可以利用":["55.8"],"parent":["55.9"],"提及到":["55.9"],"provide":["55.10"],"插槽":["55.12"],"默认插槽":["55.12"],"具名插槽":["55.12"],"作用域插槽可以实现父子组件通信":["55.12"],"在子组件内部的模板中书写":["55.12"],"全局组件标签":["55.12"],"template":["55.12"],"在父组件内部提供结构":["55.12"],"搭建后台管理系统模板":["55.13"],"项目初始化":["55.14"],"初始化项目":["55.16"],"本项目使用":["55.16"],"vite":["55.16","55.22"],"进行构建":["55.16"],"eslint":["55.18","55.19","55.20"],"配置":["55.18"],"中文官网":["55.18"],"cn":["55.18"],"最初是由nicholas":["55.18"],"zakas":["55.18"],"于":["55.18"],"环境代码校验插件":["55.19"],"让所有与prettier规则存在冲突的eslint":["55.19"],"rules失效":["55.19"],"并使用prettier进行代码检查":["55.19"],"修改":["55.20"],"eslintrc":["55.20"],"cjs":["55.20"],"see":["55.20"],"https":["55.20","55.22"],"bootcss":["55.20"],"com":["55.20","55.22"],"docs":["55.20","70.5","70.7","70.8"],"rules":["55.20"],"exports":["55.20"],"env":["55.20","70.8"],"browser":["55.20"],"es2021":["55.20"],"jest":["55.20"],"指定如何解析语法":["55.20"],"parser":["55.20"],"优先级低于":["55.20"],"parse":["55.20"],"的语法解析配置":["55.20"],"集成":["55.21"],"sass":["55.21"],"我们目前在组件内部已经可以使用":["55.21"],"scss":["55.21"],"样式":["55.21"],"因为在配置":["55.21"],"stylelint":["55.21"],"工具的时候":["55.21"],"项目当中已经安装过":["55.21"],"mock":["55.22"],"数据":["55.22"],"安装依赖":["55.22"],"www":["55.22"],"npmjs":["55.22"],"package":["55.22"],"plugin":["55.22"],"pnpm":["55.22"],"d":["55.22"],"mockjs":["55.22"],"配置文件启用插件":["55.22"],"二次封装":["55.23"],"在开发项目的时候避免不了与后端进行交互":["55.23"],"因此我们需要使用":["55.23"],"插件实现发送网络请求":["55.23"],"在开发项目的时候":["55.23","55.24"],"我们经常会把":["55.23"],"进行二次封装":["55.23"],"目的":["55.23"],"接口统一管理":["55.24"],"接口可能很多需要统一管理":["55.24"],"目录下去创建":["55.24"],"scratchcard":["56.2"],"id":["56.3","59.3","63.1"],"ggk":["56.3"],"谢谢惠顾":["56.3"],"canvas":["56.3","57.3","60.0","60.1","60.2","60.6","60.7","60.8","63.1"],"mycanvas":["56.3"],"height":["56.3"],"当前浏览器不支持canvas":["56.3"],"请下载最新的浏览器":["56.3"],"clock":["57.1"],"getelementbyid":["57.3"],"context":["57.3","64.2","64.3","65.0","66.3","66.4","66.5","67.1","67.2"],"getcontext":["57.3"],"2d":["57.3"],"render":["57.3"],"clearrect":["57.3"],"存档":["57.3"],"保存当前坐标位置和上下文对象":["57.3"],"save":["57.3","65.0"],"translate":["57.3","61.3"],"rotate":["57.3","61.1"],"math":["57.3"],"参考视频教程":["58.0"],"plum":["58.1"],"draw":["59.2"],"boldbtn":["59.3"],"粗线条":["59.3"],"thinbtn":["59.3"],"细线条":["59.3"],"savebtn":["59.3"],"保存签名":["59.3"],"input":["59.3"],"inputcolor":["59.3"],"color":["59.3"],"clearbtn":["59.3"],"橡皮擦":["59.3"],"nullbtn":["59.3"],"坐标系统":["60.3"],"绘图上下文":["60.4"],"绘图元素":["60.5"],"创造交互式效果":["60.6"],"创造动画":["60.7"],"的局限性":["60.8"],"图像变换":["61.0"],"以下方法用于图像变换":["61.0"],"canvasrenderingcontext2d":["61.1","61.2","61.3","61.4","61.5","64.1","64.2","64.4","66.6"],"scale":["61.2"],"方法用于缩放图像":["61.2"],"它接受两个参数":["61.2"],"分别是":["61.2"],"轴方向的缩放因子和":["61.2"],"transform":["61.4"],"方法接受一个变换矩阵的六个元素作为参数":["61.4"],"完成缩放":["61.4"],"旋转":["61.4"],"移动和倾斜等变形":["61.4"],"它的使用格式如下":["61.4"],"settransform":["61.5"],"方法取消前面的图形变换":["61.5"],"将画布恢复到该方法指定的状态":["61.5"],"该方法的参数与":["61.5"],"图像合成":["62.0"],"在默认情况之下":["62.0"],"over":["62.1"],"默认":["62.1"],"在目标图像上显示源图像":["62.1"],"atop":["62.1"],"在目标图像顶部显示源图像":["62.1"],"源图像位于目标图像之外的部分是不可见的":["62.1"],"strokestyle":["63.2"],"设置或返回描边颜色":["63.2"],"fillstyle":["63.2","65.0"],"设置或返回填充颜色":["63.2"],"stroke":["63.2"],"样式控制":["64.0"],"线性":["64.1"],"以下的方法和属性控制线条的视觉特征":["64.1"],"linewidth":["64.1"],"指定线条的宽度":["64.1"],"默认为":["64.1"],"渐变色":["64.2"],"以下方法用于设置渐变效果和图像填充效果":["64.2"],"createlineargradient":["64.2"],"定义线性渐变样式":["64.2"],"createradialgradient":["64.2"],"定义辐射渐变样式":["64.2"],"createpattern":["64.2","64.3"],"定义图像填充样式":["64.2"],"方法按照给定直线":["64.2"],"生成线性渐变的样式":["64.2"],"x0":["64.2"],"图像填充":["64.3"],"方法定义一个图像填充样式":["64.3"],"在指定方向上不断重复该图像":["64.3"],"填充指定的区域":["64.3"],"image":["64.3","66.5"],"阴影":["64.4"],"以下属性用于设置阴影":["64.4"],"shadowblur":["64.4"],"阴影的模糊程度":["64.4"],"状态":["65.0"],"保存当前环境的状态":["65.0"],"restore":["65.0"],"返回之前保存过的路径状态和属性":["65.0"],"绘制图形":["66.0"],"绘制矩形fillrect":["66.2"],"strokerect":["66.2"],"位置x":["66.2"],"位置y":["66.2"],"宽度":["66.2"],"圆弧":["66.3"],"arc":["66.3"],"圆心x":["66.3"],"圆心y":["66.3"],"半径":["66.3"],"开始的角度":["66.3"],"结束的角度":["66.3"],"顺时针false":["66.3"],"逆时针true":["66.3"],"默认值false":["66.3"],"beginpath":["66.4"],"moveto":["66.4","67.1","67.2"],"三种绘制图片的的方式":["66.5"],"drawimage":["66.5"],"dx":["66.5"],"dy":["66.5"],"以下方法和属性用于绘制文本":["66.6"],"filltext":["66.6"],"在指定位置绘制实心字符":["66.6"],"stroketext":["66.6"],"在指定位置绘制空心字符":["66.6"],"measuretext":["66.6"],"返回一个":["66.6"],"textmetrics":["66.6"],"font":["66.6"],"指定字型大小和字体":["66.6"],"贝塞尔曲线":["67.0"],"聊天框":["67.1"],"爱心":["67.2"],"该内容正在努力建设中":["68.0"],"svg":["69.1","69.7","69.9"],"是":["69.1"],"scalable":["69.1"],"line":["69.3"],"rect":["69.4"],"circle":["69.5"],"cllipse":["69.6"],"polygon":["69.7"],"polyline":["69.8"],"从":["70.0"],"创建项目":["70.1","70.3"],"基本配置":["70.2"],"在gitbub上新建项目":["70.3"],"建议勾选add":["70.3"],"readme":["70.3"],"新建文件夹":["70.3"],"blog":["70.3"],"可以使用":["70.3"],"在目录下新建":["70.5"],"文件夹":["70.5"],"在其中新建":["70.5"],"vitepress":["70.5","70.7"],"文件夹和":["70.5"],"文件":["70.5"],"文件就是我们的配置文件":["70.5"],"themeconfig":["70.6"],"省略前面的内容":["70.6"],"配置首页":["70.7"],"支持用户使用":["70.7"],"yaml":["70.7"],"配置页面的内容":["70.7"],"index":["70.7"],"部署到":["70.8"],"github":["70.8"],"新建脚本文件":["70.8"],"deploy":["70.8"],"sh":["70.8"],"文件夹处于同一级":["70.8"],"usr":["70.8"],"bin":["70.8"]},{"0":["32.6","55.14","55.19","60.3","61.2","64.4","65.0","66.3","69.9","70.0"],"1":["28.0","32.6","33.15","33.20","33.27","33.28","43.1","47.29","53.20","55.15","56.3","59.3"],"2":["5.1","15.2","18.9","33.28","47.0","47.1","53.7","53.8","53.21","55.23","56.3","57.3","59.3","66.3","69.1"],"3":["33.28","50.1","53.8"],"4":["33.28"],"5":["61.2"],"6":["55.18","55.19"],"8":["55.19","57.3"],"10":["34.14"],"12":["57.3"],"16":["13.8"],"18":["38.8"],"27":["55.19"],"50":["61.2","61.5","66.2"],"55":["34.2"],"100":["65.0","66.2"],"120":["67.2"],"150":["66.2","66.3"],"170":["57.3"],"190":["57.3"],"300":["66.4","67.2"],"400":["63.1"],"404":["13.17"],"600":["59.3"],"1000":["59.3"],"123456":["17.6"],"2357490894":["0.0"],"location":["5.0"],"root":["5.0"],"c":["5.0","13.4","19.1","61.4"],"users":["5.0","13.4"],"打开nginx":["5.1"],"conf文件":["5.1"],"基于":["11.0"],"node":["11.0","12.2","14.22"],"require":["11.2","11.6","13.7","13.14","15.11","15.14"],"创建":["11.2","32.2","32.3","53.14"],"web":["11.2"],"服务器":["11.2"],"app":["11.2","11.3","15.5","15.11"],"监听客户端的":["11.2"],"get":["11.2","11.4","14.17","15.5","32.7"],"和":["11.2","30.1","31.0","34.6","43.1","48.17","49.5","64.2"],"post":["11.2"],"请求":["11.2"],"存放静态文件的目录名不会出现在":["11.3"],"url":["11.3","13.17","17.5","22.7"],"中":["11.3","30.1","47.0","47.29"],"访问静态资源时":["11.3"],"会根据托管顺序查找文件":["11.3"],"可为静态资源访问路径添加前缀":["11.3"],"js":["11.3","11.8","12.2","12.3","13.13","15.2","15.5","15.11","15.14","28.3","28.4","28.5","29.1","29.2","29.3","31.0","32.4","33.3","33.4","33.5","33.6","33.10","33.13","33.15","33.19","33.22","33.24","33.25","33.26","33.27","34.4","34.7","35.4","35.6","35.8","35.9","35.11","35.15","35.19","41.3","47.8","47.18","47.19","47.20","48.2","50.1","56.3","59.3","61.1","61.5","63.1"],"创建路由对象":["11.4"],"挂载具体路由":["11.4"],"可先调用中间件进行预处理":["11.5"],"中间件是一个函数":["11.5"],"包含":["11.5","13.6","55.8"],"express":["11.6"],"定义第一个全局中间件":["11.6"],"mw1":["11.7"],"req":["11.7","11.8","13.17"],"res":["11.7","11.8","13.17"],"next":["11.7","11.8"],"console":["11.7","11.8","15.3","16.3","16.5","22.10","35.4","35.13","37.8","45.2","47.28"],"log":["11.7","11.8","15.3","22.10","37.8","45.2","47.28"],"调用了第一个局部生效的中间件":["11.7"],"应用级别中间件是绑定到":["11.8"],"实例上":["11.8"],"路由级别中间件绑定到":["11.8"],"const":["11.8","13.14","15.11","15.14","17.6","28.3","28.4","28.6","29.0","29.2","29.3","42.7"],"function":["11.8","16.3","22.10","37.8","39.2","40.2","40.3","40.7"],"安装中间件":["11.10"],"npm":["11.10","15.2"],"跨域资源共享":["11.11"],"解决跨域":["11.11"],"是通过":["11.11"],"http":["11.11","11.14","55.23"],"响应头决定浏览器是否阻止前端":["11.11"],"bruceblog":["11.12"],"io":["11.12"],"headers":["11.12","17.3"],"默认情况下":["11.12","37.9","61.2"],"仅支持客户端向服务器发送如下的":["11.12"],"三者之一":["11.14"],"头部信息不超过以下几种字段":["11.14"],"无自定义头部字段":["11.14"],"head":["11.15"],"之外的请求":["11.15"],"method":["11.15"],"官网传送门":["12.0"],"open":["12.1","32.4","32.6"],"source":["12.1"],"cross":["12.1"],"platform":["12.1"],"javascript":["12.1","30.1","32.1","41.2","44.0","55.18","60.7"],"事件循环":["12.2"],"单线程":["12.2"],"总结":["12.2"],"轻量和高效":["12.2"],"否则不会向下执行代码":["13.1"],"异步文件系统不会阻塞程序的执行":["13.1"],"而是在操作完成时":["13.1"],"通过回调函数将结果返回":["13.1"],"实际开发很少用同步方式":["13.1"],"因此只介绍异步方式":["13.1"],"打开模式":["13.1"],"配置选项":["13.3","13.6"],"若是字符串则指定编码格式":["13.3"],"encoding":["13.3","13.6"],"编码格式":["13.3"],"flag":["13.3"],"打开方式":["13.3"],"回调函数":["13.3"],"err":["13.3"],"错误信息":["13.3"],"rs":["13.4"],"createreadstream":["13.4"],"笔记":["13.4"],"mp3":["13.4"],"创建一个可写流":["13.4","13.7"],"ws":["13.4"],"createwritestream":["13.4"],"a":["13.4","14.23","18.11","37.12","38.10","40.2","40.4","42.2","42.3","43.1","48.9","61.4"],"文件路径":["13.6"],"写入内容":["13.6"],"mode":["13.6"],"var":["13.7","34.3","56.3","59.3"],"fs":["13.7","13.12"],"数组不能存储二进制文件":["13.8"],"是专门存储二进制数据的":["13.8"],"存储的是二进制数据":["13.8"],"显示时以":["13.8"],"如果提供的操作路径是以":["13.9"],"或":["13.9","14.11","14.21","34.3"],"开头的相对路径时":["13.9"],"容易出现路径动态拼接错误的问题":["13.9"],"unlink":["13.10"],"unlinksync":["13.10"],"列出文件":["13.10"],"readdir":["13.10"],"options":["13.10"],"readdirsync":["13.10"],"注意":["13.12"],"会抵消前面的路径":["13.12"],"可以获取路径中的最后一部分":["13.13"],"常通过该方法获取路径中的文件名":["13.13"],"server":["13.16"],"createserver":["13.16"],"为服务器实例绑定":["13.16"],"request":["13.16","13.17","55.23","55.24"],"事件":["13.16"],"监听客户端的请求":["13.16"],"on":["13.16","13.17"],"设置默认的响应内容为":["13.17"],"模块化是指解决一个复杂问题时":["14.2"],"自顶向下逐层把系统划分为若干模块的过程":["14.2"],"提高代码的复用性":["14.3"],"中模块的分类":["14.5"],"中的模块作用域":["14.6"],"存储了和当前模块有关的信息":["14.7"],"在自定义模块中":["14.7"],"可以使用":["14.7"],"每个模块内部":["14.8"],"module":["14.8"],"即多次调用":["14.9"],"开头":["14.11"],"否则会作为内置模块或第三方模块加载":["14.11"],"尝试从":["14.12","14.22"],"modules":["14.12","14.22"],"文件夹中加载第三方模块":["14.12","14.22"],"如果没有找到对应的第三方模块":["14.12","14.22"],"则移动到再":["14.12"],"上一层父目录":["14.12"],"package":["14.13","14.18","14.23"],"json":["14.13","14.18","14.23"],"的文件":["14.13","14.23"],"并寻找":["14.13"],"不同于":["14.15"],"bash":["14.16","15.2","16.2","53.5","53.6","53.7","53.12","53.14","53.18","53.19","55.18","70.3"],"config":["14.17","53.1","54.3","55.19"],"新建文件夹":["14.18"],"包名":["14.18"],"新建如下三个文件":["14.18"],"包管理配置文件":["14.18"],"index":["14.18","15.5","70.5"],"多次调用":["14.19"],"开头的路径标识符":["14.21"],"在加载自定义模块时":["14.21"],"如果没有指定":["14.21"],"nodejs":["14.22"],"会从当前模块的父目录开始":["14.22"],"则移动到再上一层父目录中":["14.22"],"在被加载的目录下查找一个叫做":["14.23"],"mysql":["15.1"],"install":["15.2","41.7","49.2"],"建立连接":["15.2"],"insert":["15.3"],"into":["15.3"],"values":["15.3","33.19"],"使用数组的形式为占位符指定具体的值":["15.3"],"username":["15.3"],"password":["15.3","17.6"],"if":["15.3","16.5","17.3","17.4","26.4","30.2","33.20","48.13"],"return":["15.3","17.4","17.5","26.4","27.0","33.20","39.1","55.22"],"message":["15.3","17.4","35.13","48.9"],"额外请求页面的数据":["15.5"],"后端只负责提供":["15.6"],"api":["15.6","16.3","50.3"],"接口":["15.6"],"前端使用":["15.6"],"主要功能是展示":["15.7"],"没有复杂交互":["15.7"],"服务端渲染推荐使用":["15.9"],"use":["15.11","53.15"],"secret":["15.11"],"bruce":["15.11"],"的值为任意字符串":["15.11"],"resave":["15.11"],"false":["15.11","33.16","34.6","66.3"],"前后端分离推荐使用":["15.12"],"所以":["15.13","37.10"],"当涉及到前端跨域请求后端接口的时候":["15.13"],"需要做很多额外的配置":["15.13"],"才能实现跨域":["15.13"],"认证":["15.13","17.3"],"当前端请求后端接口不存在跨域问题的时候":["15.13"],"推荐使用":["15.13"],"身份认证机制":["15.13"],"当前端需要跨域请求后端接口的时候":["15.13"],"字符串的安全性":["15.14"],"防止其在网络传输过程中被破解":["15.14"],"需定义用于加密和解密的":["15.14"],"生成":["15.14"],"字符串时":["15.14"],"使用密钥加密信息":["15.14"],"得到加密好的":["15.14"],"把":["15.14"],"对象时":["15.14"],"使用密钥解密":["15.14"],"expressjwt":["15.14"],"是一个基于":["16.1"],"xxxx":["16.3"],"then":["16.3"],"result":["16.3"],"响应拦截":["16.4"],"请求调整":["16.4"],"用户标识":["16.4"],"网络错误处理":["16.4"],"授权错误处理":["16.4"],"error":["16.5","17.4"],"response":["16.5"],"发出请求后":["16.5"],"服务器用状态码进行响应":["16.5"],"这超出了2xx的范围":["16.5"],"实现一个简单的封装":["17.1"],"主要实现以下目的":["17.1"],"import":["17.2","47.17","47.18","47.19","47.20","55.19","55.24"],"axios":["17.2","17.7"],"from":["17.2","47.4","47.6","47.17","55.22","55.24"],"如果开启":["17.3"],"token":["17.3","17.4"],"serverconfig":["17.3"],"usetokenauthorization":["17.3"],"authorization":["17.3"],"比如判断":["17.4"],"是否过期等等":["17.4"],"代码块":["17.4"],"switch":["17.4"],"getaction":["17.5"],"parameter":["17.5"],"service":["17.5"],"zs":["17.6"],"定义接口方法":["17.6"],"login":["17.6"],"params":["17.6"],"用于清除内外边距":["18.1"],"优点":["18.2"],"css":["18.3","18.5","18.7","18.8","31.0"],"通过元素":["18.4"],"beaauty":["18.5"],"语法":["18.5","37.14","55.21"],"中间没有空格":["18.5"],"又称":["18.6"],"分组选择器":["18.6"],"p":["18.9"],"p0":["18.9"],"dom":["18.10","18.14","55.8","55.9"],"link":["18.11"],"链接一开始的样式":["18.11"],"nth":["18.12"],"n":["18.12","26.2","37.9"],"第":["18.12"],"个子元素":["18.12"],"of":["18.12"],"type":["18.12","22.2","22.3","32.7"],"指定元素":["18.12"],"属性的":["18.13"],"元素":["18.13","64.3"],"创建了一个行内元素":["18.14"],"在":["18.14","47.29","49.5","55.3","55.5","55.21"],"树中无法找到":["18.14"],"故为伪元素":["18.14"],"必须有":["18.14"],"content":["18.14","48.9"],"属性":["18.14","47.2"],"选择器":["18.14"],"含义":["18.14"],"在元素内部前面插入内容":["18.14"],"选择器的优先级为":["19.0"],"important":["19.0"],"b":["19.1","34.14","61.4"],"格式":["19.1"],"id":["19.1"],"选择器的个数":["19.1"],"横向":["21.0"],"height":["21.0","37.13","59.3","63.1"],"background":["21.0"],"color":["21.0"],"ededed":["21.0"],"滚动条上的按钮":["21.0"],"可以用来解决某些兼容问题":["22.0"],"html":["22.0","31.0","69.6","70.5"],"audio":["22.0"],"controls":["22.0"],"filename":["22.0"],"ogg":["22.0"],"类型":["22.1","37.14"],"mime":["22.2","22.3"],"标签":["22.5","22.6"],"src":["22.7"],"要播放的视频的":["22.7"],"width":["22.7","59.3"],"作用":["22.8"],"queryselector":["22.10"],"video":["22.10"],"在视频被重新加载时触发":["22.10"],"onabort":["22.10"],"暂停":["22.11"],"makebig":["22.11"],"放大":["22.11"],"makesmall":["22.11"],"缩小":["22.11"],"placeholder":["24.1"],"请输入登录密码":["24.1"],"v":["24.1","40.4","47.29","48.13","48.14","52.2","53.18"],"model":["24.1"],"environment":["25.1"],"词法环境":["25.1"],"浏览器的":["26.1"],"resize":["26.1"],"scroll":["26.1"],"秒内只运行一次":["26.2"],"args":["26.4","26.5","47.28"],"newtime":["26.4"],"apply":["26.4"],"null":["26.4","27.0"],"context":["26.5","59.3","61.4","61.5","66.2"],"this":["26.5","48.9"],"保存this指向":["26.5"],"arguments":["26.5","39.4"],"拿到event对象":["26.5"],"cleartimeout":["26.5"],"let":["27.0","28.2","33.4","33.5","33.6","33.10","33.13","33.15","33.19","33.22","33.25","33.26","33.27","34.2","34.3","34.4","35.3","35.4","35.9","35.13","35.15","35.19","37.1","37.5","37.12","43.1","45.1","45.2","47.4","57.3","59.3"],"copy":["27.0"],"如果是数组":["27.0"],"遍历每个元素进行深拷贝":["27.0"],"array":["27.0","47.28"],"arr":["28.0","28.2","28.3","28.4","28.6","29.0","29.4","40.6"],"使用":["28.1","38.4","38.5"],"set":["28.1","38.10","47.7","70.8"],"unique":["28.2","28.3","28.4","28.6"],"len":["28.2"],"length":["28.2","33.8","33.9"],"filter":["28.5"],"flat":["29.1"],"res2":["29.2"],"flatten":["29.3"],"res5":["29.4"],"fn":["29.4"],"有三种状态":["30.1"],"pending":["30.1"],"进行中":["30.1"],"fulfilled":["30.1","30.2"],"已成功":["30.1"],"resolve":["30.2"],"状态变为fulfilled":["30.2"],"保存成功的值":["30.2"],"reject":["30.2"],"可以与":["31.0"],"一起使用":["31.0"],"用于创建动态网页和":["31.0"],"应用程序":["31.0"],"以下是一个简单的":["31.0"],"示例":["31.0"],"输出hello":["31.0"],"and":["32.1"],"xml":["32.1"],"异步交互需要服务器逻辑进行配合":["32.2"],"需要完成以下步骤":["32.2"],"xmlhttprequest":["32.3"],"对象的":["32.4","32.5"],"方法与服务器建立连接":["32.4"],"xhr":["32.4"],"send":["32.5"],"方法":["32.5"],"将客户端页面的数据发送给服务端":["32.5"],"属性有五个状态":["32.6"],"如下显示":["32.6"],"值":["32.6","33.8","33.9","37.14"],"状态":["32.6"],"描述":["32.6"],"unsent":["32.6"],"未打开":["32.6"],"方法还未被调用":["32.6"],"opened":["32.6"],"new":["32.7"],"初始化参数的内容":["32.7"],"touppercase":["32.7"],"datatype":["32.7"],"数组基本操作可以归纳为":["33.1"],"第四种则不会对原数组产生影响":["33.2"],"并将它们添加到数组末尾":["33.3"],"返回数组的最新长度":["33.3"],"然后返回新的数组长度":["33.4"],"插入的元素":["33.5"],"返回空数组":["33.5"],"colors":["33.6","33.10","33.11"],"red":["33.6","33.11","37.6","65.0"],"最后一项不影响原数组":["33.7"],"返回被删除的项":["33.8","33.9"],"返回包含删除元素的数组":["33.10"],"green":["33.11"],"blue":["33.11"],"yellow":["33.11"],"purple":["33.11"],"常用":["33.12"],"返回删除元素的数组":["33.13"],"对原数组产生影响":["33.13"],"返回元素坐标或者元素值":["33.14"],"true":["33.16","33.24","37.3","44.0","70.7"],"否则":["33.16"],"people":["33.17","37.13"],"name":["33.17","38.6","38.8","42.3","48.9","53.1"],"matt":["33.17"],"数组有两个方法可以用来对元素重新排序":["33.18"],"else":["33.20"],"常见的转换方法有":["33.21"],"返回包含所有项的字符串":["33.22"],"常用来迭代数组的方法":["33.23"],"则这个方法返回":["33.24","33.25"],"numbers":["33.26","33.27","33.28"],"基本类型主要为以下":["34.1"],"intnum":["34.2"],"10进制的55":["34.2"],"num1":["34.2"],"070":["34.2"],"8进制的56":["34.2"],"当使用":["34.3"],"声明了变量但没有初始化时":["34.3"],"标示":["34.4"],"逻辑上讲":["34.5"],"值表示一个空对象指针":["34.5"],"这也是给":["34.5"],"typeof":["34.5"],"通过":["34.6","48.12"],"不可变的":["34.7"],"符号的用途是确保对象属性使用唯一标识符":["34.7"],"不会发生属性冲突的危险":["34.7"],"复杂类型统称为":["34.8"],"常用方式为对象字面量表示法":["34.9"],"但跟其他语言不同的是":["34.10"],"数组中每个槽位可以存储任意类型的数据":["34.10"],"也有属性和方法":["34.11"],"跟其他引用类型一样":["34.11"],"函数存在三种常见的表达方式":["34.11"],"函数声明":["34.11"],"还包括":["34.12"],"基本数据类型和引用数据类型存储在内存中的位置不同":["34.13"],"obj2":["34.15"],"简单类型的值存放在栈中":["34.16"],"在栈中存放的是对应的值":["34.16"],"我们也可将字符串常用的操作方法归纳为增":["35.1"],"而是创建字符串的一个副本":["35.2","35.5"],"stringvalue":["35.3","35.4","35.9"],"hello":["35.3","35.4"],"这三个方法都返回调用它们的字符串的一个子字符串":["35.4"],"而且都接收一或两个参数":["35.4"],"world":["35.4"],"再进行操作":["35.5"],"后或前后所有空格符":["35.6"],"再返回新的字符串":["35.6"],"表示要将字符串复制多少次":["35.7"],"然后返回拼接所有副本后的结果":["35.7"],"则在相应一边填充字符":["35.8"],"直至满足长度条件":["35.8"],"还可通过":["35.10"],"由传给方法的整数参数指定":["35.11"],"如果没找到":["35.12"],"则返回":["35.12"],"foobarbaz":["35.13"],"针对正则表达式":["35.16"],"regexp":["35.17","35.18"],"对象":["35.17","35.18"],"返回数组":["35.17"],"找到则返回匹配索引":["35.18"],"可用函数":["35.19"],"普通声明":["37.1"],"notanumber":["37.2"],"number":["37.2","37.13","38.1","38.6","38.8","39.2","39.5","40.2"],"nan":["37.2"],"可以直接使用布尔值":["37.3"],"b2":["37.3"],"一样可以操作数组元素":["37.4"],"有两种方式可以定义数组":["37.4"],"第一种":["37.4"],"如果一个方法需要返回多个值":["37.5"],"可以把这多个值作为元组返回":["37.5"],"而不需要创建额外的类来表示":["37.5"],"比如":["37.5","55.24"],"可以定义一对值分别为string和number类型的元组":["37.5"],"ts":["37.5","37.6","37.7","37.8","37.11","38.2","38.7","38.10","40.3","40.5","42.5","42.6","43.1","55.24"],"x":["37.5","39.1","39.2","39.3","61.3","67.2"],"也可以是字符串":["37.6"],"数字枚举":["37.6"],"enum":["37.6"],"types":["37.6"],"进行任何操作":["37.7"],"不需要检查类型":["37.7"],"voidfn":["37.8"],"定义null":["37.9"],"返回never的函数必须存在无法达到的终点":["37.10"],"因为必定抛出异常":["37.10"],"的差异":["37.11"],"void类型只是没有返回值":["37.11"],"不能为字符串类型":["37.12"],"因为定义的联合类型只有数字和布尔值并没有字符串":["37.12"],"num":["37.12","40.2"],"boolean":["37.12"],"interface":["37.13","40.5","42.2","42.6"],"age":["37.13","38.1","38.6","38.8"],"程序员":["37.14"],"已经进行了必须的检查":["37.14"],"方式一":["37.14"],"as":["37.14"],"value":["37.14","40.6","47.13","48.17"],"这个概念":["38.0"],"string":["38.1","38.6","38.8","38.10","45.2"],"构造方法":["38.1"],"constructor":["38.1","38.6","38.8"],"类的继承":["38.2"],"class":["38.2","38.7","38.10"],"animal":["38.2"],"run":["38.2"],"public":["38.3","38.8","70.5"],"private":["38.6","40.6"],"some":["38.6"],"any":["38.6"],"关键字将属性设置为只读的":["38.7"],"只读属性必须在声明时或构造函数里被初始化":["38.7"],"person":["38.8","38.10"],"implements":["38.9"],"后面跟interface的名字多个用逗号隔开":["38.9"],"继承还是用extends":["38.9"],"personclass":["38.9"],"首先":["38.10"],"我们从一个没有使用存取器的例子开始":["38.10"],"firstname":["38.10"],"关键字声明的类叫做":["38.11"],"声明的方法叫做":["38.11"],"抽象方法":["38.11"],"指不能被实例化":["38.11"],"因为它里面包含一个或多个抽象方法":["38.11"],"函数参数":["39.0"],"y":["39.1"],"add":["39.2","39.3","40.3","40.6"],"你可以使用":["39.4"],"来访问所有传入的参数":["39.4"],"typescript":["39.4","49.4","55.20"],"你可以把所有参数收集到一个变量里":["39.4"],"剩余参数会被当做个数不限的可选参数":["39.4"],"可以一个都没有":["39.4"],"定义函数实现":["39.5"],"接口或类的时候":["40.0"],"当我们使用这个函数的时候把参数的类型传进去就可以了":["40.3"],"也就是动态类型":["40.3"],"swap":["40.4"],"k":["40.4"],"keyvalue":["40.5"],"t":["40.5","40.6","40.7"],"clacarray":["40.6"],"没有泛型约束":["40.7"],"getlen":["40.7"],"arg":["40.7"],"是":["41.1","60.1"],"超集":["41.2"],"简单的说就是在":["41.2"],"而ts":["41.3"],"属于静态编程语言":["41.3"],"尤其在大型项目的时候效果显著":["41.5"],"和一些插件库的兼容并不是特别完美":["41.6"],"g":["41.7","70.3"],"或者":["41.7"],"yarn":["41.7","70.3","70.8"],"w进行随时热更新watch":["41.9"],"node直接运行ts的node项目":["41.10"],"首先全局安装ts":["41.10"],"的核心原则之一是对值所具有的结构进行类型检查":["42.0"],"我们使用接口":["42.0"],"我的理解是使用interface来定义一种约束":["42.1"],"让数据的结构满足约束的格式":["42.1"],"定义方式如下":["42.1"],"可选属性的好处之一是可以对可能存在的属性进行预定义":["42.4"],"好处之二是可以捕获引用了不存在的属性时的错误":["42.4"],"可选属性的含义是该属性可以不存在":["42.4"],"在这个例子当中我们看到接口中并没有定义c但是并没有报错":["42.5"],"应为我们定义了":["42.5"],"这样写是会报错的":["42.6"],"应为a是只读的不允许重新赋值":["42.6"],"cb":["42.7"],"void":["42.7"],"就是我们常说的":["43.0"],"undefined":["43.1"],"类型也不能赋给":["43.1"],"obj":["43.1"],"报错":["43.1"],"原始类型":["43.1"],"umd":["44.0"],"lib":["44.0"],"指定要包含在编译中的库文件":["44.0"],"allowjs":["44.0"],"允许编译":["44.0"],"文件":["44.0"],"checkjs":["44.0"],"报告":["44.0"],"文件中的错误":["44.0"],"jsx":["44.0","55.20"],"preserve":["44.0"],"代码的生成":["44.0"],"react":["44.0","55.20"],"native":["44.0"],"定义变量时赋值了":["45.1"],"推断为对应的类型":["45.1"],"n1":["45.1"],"s":["45.2"],"str":["45.2"],"abcd":["45.2"],"我们只需在":["47.0"],"中一个新的配置项":["47.1"],"值为一个函数":["47.1"],"只在setup函数内部访问":["47.2"],"函数需要加":["47.2"],"其用途创建独立的原始值":["47.2"],"函数接收一个普通对象":["47.2"],"返回一个响应式的数据对象":["47.2"],"vue":["47.4","47.5","47.7","47.10","47.14","55.3","55.4","55.21","55.22","57.4"],"ref":["47.5","47.6","47.7","47.12","47.17","47.18","47.19","47.20","50.3"],"但不会使其值也变成响应式的":["47.5"],"修改其属性是非响应式的这样是不会改变的":["47.5"],"shallowref":["47.6"],"适合去做防抖之类的":["47.7"],"template":["47.7","47.10","47.14","47.30","48.8","48.11","55.5","57.4","58.2"],"div":["47.7","47.30","48.8","48.11","55.5","58.2"],"这样是不允许":["47.8"],"会给我们报错":["47.8"],"接受一个对象":["47.9"],"不会改变视图":["47.10"],"property":["47.12"],"都是一个":["47.12"],"主要是方便我们解构使用":["47.13"],"vue2":["47.15","47.16","55.1","55.6"],"中的":["47.15","47.16"],"作用是一样的":["47.16"],"watch":["47.17","47.18","47.20"],"效果一样":["47.19"],"同时":["47.21"],"的第一个参数":["47.22"],"effect函数":["47.22"],"当":["47.23"],"watcheffect":["47.23"],"可以作为一个调试器来使用":["47.24"],"flush":["47.24"],"到":["47.25"],"销毁的":["47.25"],"beforemount":["47.27","47.28"],"指令绑定到元素后调用":["47.27"],"directive":["47.28","47.29"],"created":["47.28"],"初始化":["47.28"],"传递给指令的值":["47.29"],"例如":["47.29","48.13"],"my":["47.29"],"不利于阅读":["47.31"],"容易使代码变得难以维护":["47.31"],"vue3":["47.31","55.14","55.20"],"的":["47.31"],"hook函数":["47.31"],"相当于":["47.31"],"mixin":["47.31"],"不同在与":["47.31"],"hooks":["47.31"],"是函数":["47.31"],"后面":["48.2"],"切记不能放到":["48.2"],"mount":["48.2"],"并且只能在该父组件中使用":["48.5"],"它的优点是使组件之间的依赖关系更加明确":["48.5"],"接受传过来的值":["48.6"],"传递非字符串类型需要加":["48.6"],"简写":["48.6"],"冒号":["48.6"],"父组件":["48.6"],"msg":["48.9"],"is":["48.9"],"在子组件":["48.10"],"动态绑定":["48.10"],"参数":["48.10"],"并且减少主包的体积":["48.12"],"else等":["48.13"],"来检查数据是否已加载并显示一些其它内容":["48.13"],"但是":["48.13"],"show等属性影响":["48.14"],"但data":["48.14"],"prop数据依旧能够共用的技术":["48.14"],"类似于":["48.14"],"作用和vue2一致":["48.15"],"只是生命周期名称有所更改":["48.15"],"初次进入时":["48.15"],"onmounted":["48.15"],"onactivated":["48.15"],"退出后触发":["48.15"],"deactivated":["48.15"],"再次进入":["48.15"],"我们都可以使用":["48.16"],"来接收":["48.16"],"提供的数据或方法":["48.16"],"emit":["48.17"],"组合而成的语法糖":["48.17"],"vue3中":["48.17"],"有以下改动":["48.17"],"变更":["48.17"],"使用vue":["49.1"],"cli":["49.3"],"features":["49.4"],"check":["49.4"],"the":["49.4","53.15"],"needed":["49.4"],"for":["49.4","52.2","57.3"],"your":["49.4","53.1"],"选择上":["49.4"],"特别注意点空格是选择":["49.4"],"点回车是下一步":["49.4"],"script":["49.5"],"标签上支持原生":["49.5"],"esm":["49.5"],"原生":["49.5","55.8"],"打包大小减少41":["50.2"],"setup":["50.3"],"global":["53.1","54.3"],"user":["53.1"],"git":["53.3","53.4","53.11","53.12","53.13","53.14","54.3"],"将当前目录及其子目录下所有变更添加到暂存区":["53.5"],"追踪":["53.7"],"比较指定文件工作区和暂存区的差异":["53.7"],"reflog":["53.8"],"查看详细日志信息":["53.8"],"branch":["53.10"],"新分支":["53.10"],"基于指定分支创建分支":["53.10"],"分支合并到当前分支":["53.14"],"且为":["53.14"],"commit":["53.14"],"in":["53.15","62.1"],"restore":["53.15"],"file":["53.15"],"to":["53.15"],"往最后一次":["53.16"],"追加记录":["53.16"],"克隆远程仓库到本地":["53.19"],"别名":["53.21"],"本地分支":["53.21"],"远程分支":["53.21"],"如果远程分支被省略":["53.21"],"git官网下载安装git客户端":["54.1"],"安装完成后":["54.2"],"pub":["54.4"],"key":["54.4"],"ssh":["54.4"],"打开生成后的id":["54.5"],"本地拉取代码":["54.6"],"涉及到技术栈包含":["55.0"],"不管是":["55.1"],"还是":["55.1"],"组件通信方式很重要":["55.1"],"中我们可以通过":["55.2"],"defineprops":["55.2"],"获取父组件传递的数据":["55.2"],"且在组件内部不需要引入":["55.2"],"方法可以直接使用":["55.2"],"父组件给子组件传递数据":["55.2"],"自定义事件":["55.3"],"代码如下":["55.4"],"pre":["55.4"],"click":["55.4"],"handler":["55.4"],"我是祖国的老花骨朵":["55.4"],"xxx":["55.5"],"handler3":["55.5"],"子组件内部触发这个自定义事件":["55.5"],"中可以根据":["55.6"],"vm":["55.6"],"与":["55.6"],"vc":["55.6","55.9"],"除此之外它也可以实现父子组件数据同步":["55.7"],"而":["55.7"],"实指利用":["55.7"],"props":["55.7"],"modelvalue":["55.7"],"与自定义事件":["55.7"],"update":["55.7"],"方法获取组件的属性与事件":["55.8"],"事件或者自定义事件":["55.8"],"可能会想到它可以获取元素的":["55.9"],"或者获取子组件实例的":["55.9"],"既然可以在父组件内部通过":["55.9"],"inject":["55.10"],"提供":["55.10"],"piniapinia":["55.11"],"官网":["55.11"],"todo":["55.12"],"即为子组件":["55.12"],"在父组件内部使用的时候":["55.12"],"在双标签内部书写结构传递给子组件":["55.12"],"注意开发项目的时候默认插槽一般只有一个":["55.12"],"h1":["55.12"],"我是默认插槽填充的结构":["55.12"],"顾名思义":["55.12"],"此插槽带有名字在组件内部留多个指定名字的插槽":["55.12"],"下面是一个子组件内部":["55.12"],"模板中留两个插槽":["55.12"],"今天来带大家从":["55.14"],"开始搭建一个":["55.14"],"官方中文文档参考":["55.16"],"cn":["55.16"],"vitejs":["55.16","55.22"],"dev":["55.16"],"guide":["55.16"],"pnpm":["55.16","55.18","70.3"],"performant":["55.16"],"年":["55.18"],"月创建的开源项目":["55.18"],"它的目标是提供一个插件化的":["55.18"],"代码检测工具":["55.18"],"首先安装":["55.18"],"i":["55.18","57.3","70.3"],"d":["55.18","61.4"],"生成配置文件":["55.18"],"prettier":["55.19","55.20"],"plugin":["55.19","55.20"],"parseroptions":["55.20"],"ecmaversion":["55.20"],"latest":["55.20"],"sourcetype":["55.20"],"jsxpragma":["55.20"],"ecmafeatures":["55.20"],"继承已有的规则":["55.20"],"extends":["55.20"],"recommended":["55.20"],"essential":["55.20"],"plugins":["55.20","55.22"],"off":["55.20"],"loader":["55.21"],"因此我们再组件内可以使用":["55.21"],"需要加上":["55.21"],"lang":["55.21"],"接下来我们为项目添加一些全局的样式":["55.21"],"userconfigexport":["55.22"],"configenv":["55.22"],"vitemockserve":["55.22"],"export":["55.22"],"default":["55.22"],"command":["55.22"],"localenabled":["55.22"],"serve":["55.22"],"在根目录创建":["55.22"],"文件夹":["55.22"],"使用请求拦截器":["55.23"],"可以在请求拦截器中处理一些业务":["55.23"],"开始进度条":["55.23"],"请求头携带公共参数":["55.23"],"使用响应拦截器":["55.23"],"可以在响应拦截器中处理一些业务":["55.23"],"进度条结束":["55.23"],"简化服务器返回的数据":["55.23"],"处理":["55.23"],"网络错误":["55.23"],"在根目录下创建":["55.23"],"utils":["55.23","55.24"],"文件夹去统一管理项目的接口":["55.24"],"下面方式":["55.24"],"统一管理咱们项目用户相关的接口":["55.24"],"找到画布":["56.3"],"document":["56.3","59.3"],"getelementbyid":["56.3","59.3"],"pi":["57.3","66.3"],"绘制小时的刻度":["57.3"],"beginpath":["57.3","66.3"],"moveto":["57.3"],"lineto":["57.3","66.4"],"linewidth":["57.3"],"strokestyle":["57.3"],"gray":["57.3"],"stroke":["57.3","69.9"],"closepath":["57.3"],"清空画布":["59.3"],"br":["59.3"],"canvas":["59.3","60.3","60.4","60.5","64.3"],"c1":["59.3"],"当前浏览器不支持canvas":["59.3"],"请下载最新的浏览器":["59.3"],"获取canvas画布和绘制的上下文对象":["59.3"],"getcontext":["59.3"],"2d":["59.3"],"获取输入框和按钮":["59.3"],"html5":["60.1"],"的基础知识":["60.2"],"使用直角坐标系":["60.3"],"原点坐标为":["60.3"],"可以绘制":["60.4"],"svg":["60.4","69.3","69.4","69.5","69.6","69.8"],"和其他类型的矢量图形":["60.4"],"提供了多种绘图元素":["60.5"],"包括路径和图形":["60.5"],"除了基本的绘图功能之外":["60.6"],"还可以创造交互式效果":["60.6"],"用来展示和操控数据":["60.6"],"非常适合处理像素级别的控制":["60.7"],"利用":["60.7"],"虽然在":["60.8"],"canvasrenderingcontext2d":["61.0"],"rotate":["61.0"],"方法用于图像旋转":["61.1"],"它接受一个弧度值作为参数":["61.1"],"表示顺时针旋转的度数":["61.1"],"轴方向的缩放因子":["61.2"],"一个单位就是一个像素":["61.2"],"缩放因子可以缩放单位":["61.2"],"比如缩放因子":["61.2"],"表示将大小缩小为原来的":["61.2"],"缩放因子":["61.2"],"方法用于平移图像":["61.3"],"它接受两个参数":["61.3"],"分别是":["61.3"],"e":["61.4","70.8"],"f":["61.4"],"水平缩放":["61.4"],"transform":["61.5"],"方法完全一致":["61.5"],"translate":["61.5"],"如果在":["62.0"],"之中将某个物体":["62.0"],"在目标图像中显示源图像":["62.1"],"只有目标图像内的源图像部分会显示":["62.1"],"目标图像是透明的":["62.1"],"out":["62.1"],"在目标图像之外显示源图像":["62.1"],"您的浏览器不支持":["63.1"],"描边已定义绘图":["63.2"],"路径":["63.2"],"fill":["63.2","66.3","69.9"],"填充当前绘图":["63.2"],"linecap":["64.1"],"指定线条末端的样式":["64.1"],"有三个可能的值":["64.1"],"butt":["64.1"],"默认值":["64.1"],"末端为矩形":["64.1"],"round":["64.1"],"末端为圆形":["64.1"],"square":["64.1"],"末端为突出的矩形":["64.1"],"矩形宽度不变":["64.1"],"y0":["64.2"],"x1":["64.2"],"y1":["64.2"],"方法接受四个参数":["64.2"],"是起点的横坐标和纵坐标":["64.2"],"是终点的横坐标和纵坐标":["64.2"],"通过不同的坐标值":["64.2"],"可以生成从上至下":["64.2"],"repetition":["64.3"],"该方法接受两个参数":["64.3"],"第一个参数是图像数据":["64.3"],"它可以是":["64.3"],"img":["64.3"],"也可以是另一个":["64.3"],"或者一个表示图像的":["64.3"],"默认为":["64.4"],"shadowcolor":["64.4"],"阴影的颜色":["64.4"],"black":["64.4"],"fillrect":["65.0"],"图像":["66.0"],"高度":["66.2"],"math":["66.3"],"绘制笑脸":["66.3"],"dwidth":["66.5"],"dheight":["66.5"],"sx":["66.5"],"默认值为":["66.6"],"10px":["66.6"],"sans":["66.6"],"serif":["66.6"],"textalign":["66.6"],"文本的对齐方式":["66.6"],"start":["66.6"],"direction":["66.6"],"文本的方向":["66.6"],"inherit":["66.6"],"quadraticcurveto":["67.1"],"控制点x":["67.1"],"控制点y":["67.1"],"终点x":["67.1"],"终点y":["67.1"],"beziercurveto":["67.2"],"控制点1":["67.2"],"vector":["69.1"],"graphics":["69.1"],"的缩写":["69.1"],"意为可缩放矢量图形":["69.1"],"不设置样式属性":["69.3"],"style":["69.3"],"不设置样式属性style是看不出效果的":["69.7"],"并且polygon默认为填充需要把fill属性设置为none":["69.7"],"points":["69.8"],"opacity":["69.9"],"开始搭建个人网站":["70.0"],"如果没有安装":["70.3"],"可以全局安装":["70.3"],"然后初始化":["70.3"],"配置网站":["70.4"],"新建一个":["70.5"],"作为我们的主页":["70.5"],"在新建一个":["70.5"],"文件夹用于静态资源的引用":["70.5"],"目录结构如下":["70.5"],"侧边栏":["70.6"],"sidebar":["70.6"],"articles":["70.6"],"写下如下内容":["70.7"],"更多配置请查看":["70.7"],"md":["70.7"],"layout":["70.7"],"home":["70.7"],"title":["70.7"],"选项卡标题":["70.7"],"titletemplate":["70.7"],"选项卡描述":["70.7"],"editlink":["70.7"],"确保脚本抛出遇到的错误":["70.8"],"生成静态文件":["70.8"],"build":["70.8"],"进入生成的文件夹":["70.8"],"cd":["70.8"],"vitepress":["70.8"],"dist":["70.8"],"如果是发布到自定义域名":["70.8"],"echo":["70.8"],"www":["70.8"]},{"0":["13.8","27.0","28.2","29.4","33.20","50.1","55.20","56.3","61.5","64.2","69.7"],"1":["22.10","29.0","33.11","33.19","33.25","33.26","35.12","35.18","37.6","47.24","55.22","63.1","64.2"],"2":["26.4","26.5","29.0","32.6","33.19","33.24","33.25","33.26","33.27","37.6","47.29","53.14","53.18"],"3":["5.1","11.8","15.11","15.14","32.6","33.19","33.25","33.26","33.27","35.4","37.6","53.7","61.2","69.1"],"4":["11.8","33.27","49.3","53.8"],"5":["33.27","33.28","55.19"],"6":["34.1"],"9":["11.12"],"10":["37.5","45.1","61.2","69.9"],"11":["55.19"],"12":["35.15"],"17":["28.0"],"20":["11.2","69.7"],"27":["33.17"],"45":["61.1"],"50":["69.8"],"60":["57.3"],"100":["61.5","66.3"],"123":["37.2","37.12"],"150":["66.4","67.1"],"180":["57.3"],"200":["15.14","66.4"],"300":["69.8"],"302":["17.4"],"321":["37.2"],"350":["66.2"],"370":["69.5"],"400":["17.4","69.4"],"401":["17.4"],"4870":["55.22"],"55520":["15.3"],"微信":["0.0"],"index":["5.0","55.21"],"html":["5.0","48.15"],"配置对应的信息":["5.1"],"检查配置文件是否配置成功":["5.1"],"js":["11.0","11.11","14.18","28.1","32.5","33.8","33.9","33.16","34.3","34.6","34.9","34.11","35.7","35.12","35.17","35.18","47.31","49.4","55.18","61.2","66.6"],"平台":["11.0"],"并向客户端响应具体的内容":["11.2"],"user":["11.2","11.4","15.3","15.5","32.4","54.3","55.22"],"req":["11.2","11.4","11.5","11.6","13.16","15.5","15.11","15.14"],"res":["11.2","11.4","11.5","11.6","13.16","15.5","15.14","28.3","28.4","28.6"],"send":["11.2","11.4","15.14","32.6"],"name":["11.2","14.18","15.5","34.15","38.7","38.11","42.2","47.7","54.3","55.12","70.7"],"zs":["11.2","34.15"],"age":["11.2","15.5","33.17"],"gender":["11.2"],"use":["11.3"],"public":["11.3","38.11"],"files":["11.3"],"list":["11.4"],"next":["11.5","11.6"],"三个参数":["11.5"],"console":["11.6","13.4","31.0","34.15","38.2","42.7"],"mw2":["11.7"],"调用了第二个局部生效的中间件":["11.7"],"两种定义局部中间件的方式":["11.7"],"错误级别的中间件":["11.8"],"用来捕获整个项目中发生的异常错误":["11.8"],"从而防止项目异常崩溃的问题":["11.8"],"错误级别中间件的处理函数中":["11.8"],"必须有":["11.8"],"个形参":["11.8"],"形参顺序从前到后分别是":["11.8"],"err":["11.8"],"错误级别的中间件必须注册在所有路由之后":["11.8"],"require":["11.8","13.3","13.6","14.9","14.19","15.2"],"install":["11.10","14.16"],"代码跨域获取资源":["11.11"],"浏览器的同源安全策略默认会阻止网页":["11.11"],"跨域":["11.11"],"获取资源":["11.11"],"但如果接口服务器配置了":["11.11"],"个请求头":["11.12"],"accept":["11.12","11.14"],"language":["11.12","11.14"],"content":["11.12","11.14","13.17"],"dpr":["11.12"],"downlink":["11.12"],"save":["11.12"],"data":["11.12","13.3","16.5","32.7","48.6"],"viewport":["11.12"],"width":["11.12","22.11"],"type":["11.12","22.0","38.9","47.6","55.24","63.1"],"类型":["11.15","40.7"],"请求头中包含自定义头部字段":["11.15"],"向服务器发送了":["11.15"],"runtime":["12.1"],"environment":["12.1"],"是一个基于":["12.1"],"的性能和效率非常高":["12.2"],"传统的":["12.2"],"java":["12.2"],"语言是一个请求开启一个线程":["12.2"],"当请求处理完毕后就关闭这个线程":["12.2"],"而":["12.2"],"时的劣势":["12.3"],"模式":["13.1"],"说明":["13.1"],"r":["13.1"],"读取文件":["13.1"],"文件不存在抛异常":["13.1"],"读取的数据":["13.3"],"如果未指定编码格式则返回一个":["13.3"],"buffer":["13.3"],"const":["13.3","13.6","13.13","15.2","15.5","28.5","29.1","39.4","55.20"],"监听流的开启和关闭":["13.4"],"这几个监听不是必须的":["13.4"],"once":["13.4","13.7"],"open":["13.4","32.7"],"function":["13.4","13.16","37.10","37.11","55.22"],"log":["13.4","16.3","16.5","31.0","34.15","35.4","35.13","38.2"],"可读流打开了":["13.4"],"close":["13.4"],"flag":["13.6"],"若是字符串则指定编码格式":["13.6"],"回调函数":["13.6"],"ws":["13.7"],"createwritestream":["13.7"],"hello3":["13.7"],"txt":["13.7"],"进制的形式显示":["13.8"],"每一个元素范围是":["13.8"],"00":["13.8"],"ff":["13.8"],"即":["13.8"],"原因":["13.9"],"代码在运行的时候":["13.9"],"会以执行":["13.9"],"node":["13.9","13.11","13.15","14.21","41.10","55.15","55.19"],"命令时所处的目录":["13.9"],"截断文件":["13.10"],"truncate":["13.10"],"len":["13.10"],"truncatesync":["13.10"],"建立目录":["13.10"],"mkdir":["13.10"],"mode":["13.10"],"模块是":["13.11","13.15"],"会被忽略":["13.12"],"pathstr":["13.12"],"a":["13.12","37.1","40.3","55.12","70.8"],"ext":["13.13"],"文件路径":["13.13"],"文件扩展名":["13.13"],"fpath":["13.14"],"url":["13.16","32.4","32.7","55.24"],"method":["13.16","17.5","32.4"],"not":["13.17"],"found":["13.17"],"let":["13.17","17.2","28.3","28.4","29.4","33.3","33.8","33.9","33.16","33.20","33.24","34.7","35.6","35.7","35.8","35.11","35.17","37.4","37.7","37.14","39.1","47.17","47.18","47.20","55.20","55.23"],"h1":["13.17","55.5"],"判断用户请求的是否为":["13.17"],"或":["13.17","16.4","30.1","55.20"],"模块是可组合":["14.2"],"分解和更换的单元":["14.2"],"提高维护性":["14.3"],"内置模块":["14.5"],"和函数作用域类似":["14.6"],"在自定义模块中定义的变量":["14.6"],"exports":["14.7","55.18"],"将模块内的成员共享出去":["14.7"],"变量代表当前模块":["14.8"],"导入自定义模块时":["14.11"],"若省略文件扩展名":["14.11"],"则":["14.11","14.21"],"中":["14.12"],"进行加载":["14.12","14.22"],"直到":["14.12"],"文件系统的根目录":["14.12"],"例如":["14.12","60.6"],"假设在":["14.12","14.22"],"c":["14.12","14.22"],"main":["14.13","14.23"],"属性":["14.13","19.1","38.8"],"作为":["14.13"],"中的内置模块与自定义模块":["14.15"],"包是由第三方个人或团队开发出来的":["14.15"],"免费供所有人使用":["14.15"],"包的元整名称":["14.16"],"或者":["14.16","16.3","37.9"],"registry":["14.17"],"查看当前包镜像源":["14.17"],"包的入口文件":["14.18"],"readme":["14.18"],"md":["14.18","70.5"],"包的说明文档":["14.18"],"模块的代码只会被执行一次":["14.19"],"这样的路径标识符":["14.21"],"会把它当作内置模块或第三方模块进行加载":["14.21"],"在使用":["14.21"],"直到文件系统的根目录":["14.22"],"users":["14.22"],"lemomn":["14.22"],"project":["14.22"],"并寻找":["14.23"],"属性值作为":["14.23"],"加载的入口":["14.23"],"b":["14.23","38.10","40.2","40.3","40.4","42.3","42.6","53.14","55.12"],"db":["15.2"],"affectedrows":["15.3"],"插入成功":["15.3"],"向表中新增数据时":["15.3"],"如果数据对象的每个属性和数据表的字段一一对应":["15.3"],"则可以通过如下方式快速插入数据":["15.3"],"bruce":["15.3","15.5","15.14"],"调用接口":["15.6"],"优点":["15.6"],"开发体验好":["15.6"],"前端专业页面开发":["15.6"],"后端专注接口开发":["15.6"],"且需要良好的":["15.7"],"seo":["15.7"],"saveuninitalized":["15.11"],"true":["15.11","28.0","43.1"],"向":["15.11"],"中存数据":["15.11"],"中间件配置成功后":["15.11"],"可通过":["15.11"],"访问":["15.11"],"对象":["15.11","32.2","32.3","64.2","64.3"],"存储用户信息":["15.11"],"不推荐使用":["15.13"],"认证机制":["15.13"],"工作原理图":["15.13"],"用户的信息通过":["15.13"],"token":["15.13"],"字符串的形式":["15.13"],"密钥为任意字符串":["15.14"],"secretkey":["15.14"],"app":["15.14"],"post":["15.14","17.5"],"api":["15.14"],"login":["15.14","55.24"],"status":["15.14","17.4","53.4"],"message":["15.14","35.11","47.4","47.17"],"登录成功":["15.14"],"sign":["15.14"],"promise":["16.1"],"的":["16.1","18.13","47.12","48.14"],"npm":["16.2","55.16"],"catch":["16.3","16.4","30.2"],"error":["16.3","30.2","37.10","40.7","55.20"],"普通错误处理":["16.4"],"代码异常处理":["16.4"],"在请求或响应被":["16.4"],"then":["16.4","30.2"],"处理前拦截它们":["16.4"],"实现请求拦截":["17.1"],"apibaseurl":["17.2"],"localstorage":["17.3"],"getitem":["17.3"],"请求头携带":["17.3"],"设置请求头":["17.3"],"case":["17.4"],"接口重定向了":["17.4"],"break":["17.4"],"参数不正确":["17.4"],"params":["17.5","32.7"],"postaction":["17.6"],"sys":["17.6"],"在页面中调用":["17.6"],"import":["17.6","47.8","47.31","48.2","55.23"],"from":["17.6","47.8","47.18","47.19","47.20","48.2","55.23"],"的再再再封装":["17.7"],"总是会有所不一样":["17.7"],"css":["18.1"],"可快速为同类型标签统一设置样式":["18.2"],"缺点":["18.2"],"container":["18.3","18.9"],"属性选择元素":["18.4"],"good类的p元素":["18.5"],"color":["18.5"],"yellow":["18.5"],"类名包含good和beauty的元素":["18.5"],"语法":["18.6"],"选择器1":["18.6"],"选择器2":["18.6"],"ul":["18.7"],"div":["18.8","18.9","47.2","47.5","47.10","47.13","47.14","48.6","57.4"],"被选中":["18.9"],"class":["18.9","38.11","47.30","48.6"],"结构选择元素":["18.10"],"visited":["18.11"],"链接访问后的样式":["18.11"],"的第一个":["18.12"],"的最后一个":["18.12"],"val":["18.13"],"属性且属性值等于":["18.13"],"在元素内部后面插入内容":["18.14"],"伪元素字体图标":["18.14"],"p":["18.14","48.11"],"e91e":["18.14"],"position":["18.14"],"absolute":["18.14"],"right":["18.14"],"20px":["18.14"],"top":["18.14"],"10px":["18.14"],"font":["18.14"],"行内":["19.0"],"类":["19.1"],"伪类":["19.1"],"元素":["19.1"],"伪元素":["19.1"],"上下箭头":["21.0"],"button":["21.0","47.5","47.14","55.5"],"display":["21.0"],"none":["21.0"],"滚动条轨道":["21.0"],"mp3":["22.0","22.2"],"audio":["22.2"],"mp4":["22.3"],"video":["22.3"],"描述":["22.5","22.6"],"height":["22.7"],"视频显示区域的宽高":["22.7"],"controls":["22.7"],"play":["22.8"],"播放结束后触发":["22.10"],"onended":["22.10"],"播放完成后":["22.10"],"播放下一个":["22.10"],"视频":["22.10"],"makenormal":["22.11"],"普通":["22.11"],"br":["22.11"],"id":["22.11"],"video1":["22.11"],"再":["24.1"],"标签上设置属性":["24.1"],"为":["24.1"],"很容易被浏览器识别":["24.1"],"的引用捆绑在一起":["25.1"],"或者说函数被引用包围":["25.1"],"keypress":["26.1"],"mousemove":["26.1"],"等事件在触发时":["26.1"],"若在":["26.2"],"使用定时器写法":["26.4"],"毫秒后第一次执行":["26.4"],"第二次事件停止触发后依然会再一次执行":["26.4"],"throttled2":["26.4"],"settimeout":["26.5"],"apply":["26.5"],"防抖如果需要立即执行":["26.5"],"isarray":["27.0"],"for":["27.0","28.3","28.4","28.6","29.4"],"i":["27.0","28.2","29.4"],"length":["27.0","40.7"],"unique":["28.5"],"arr":["28.5","29.2","29.3"],"new":["28.6","33.4"],"res1":["29.1"],"json":["29.2","32.7","70.3","70.5"],"stringify":["29.2"],"return":["29.3","37.8","38.10","40.7"],"rejected":["30.1","30.2"],"已失败":["30.1"],"当":["30.1"],"对象的状态从":["30.1"],"变为":["30.1"],"状态变为rejected":["30.2"],"保存失败的原因":["30.2"],"try":["30.2"],"执行executor函数":["30.2"],"如果执行过程中出现错误":["30.2"],"直接reject":["30.2"],"onfulfilled":["30.2"],"world":["31.0","35.9"],"hello":["31.0","35.6","35.9","37.5"],"在上面的示例中":["31.0"],"函数用于将文本输出到控制台":["31.0"],"还有许多其他的内置函数和对象":["31.0"],"可以用于处理字符串":["31.0"],"数字":["31.0"],"数组":["31.0"],"即异步的":["32.1"],"和":["32.1","39.0","47.29","50.3"],"的核心对象":["32.2"],"xmlhttprequest":["32.2"],"通过":["32.2","32.3","38.0","60.7"],"async":["32.4"],"xhr":["32.5"],"body":["32.5"],"未发送":["32.6"],"headers":["32.6"],"received":["32.6"],"以获取响应头":["32.6"],"方法已经被调用":["32.6"],"响应头和响应状态已经返回":["32.6"],"loading":["32.6"],"正在下载响应体":["32.6"],"发送请求":["32.7"],"if":["32.7","39.5"],"增":["33.1"],"删":["33.1","35.1"],"push":["33.2","40.6"],"colors":["33.3","33.4","33.5","33.8","33.9","33.13","33.22"],"array":["33.4","39.4","40.2"],"red":["33.5","33.8","33.9","33.10","33.13","33.22"],"green":["33.5","33.6","33.10","33.13","33.22","37.6"],"blue":["33.5","33.6","33.10","33.13","37.6","65.0"],"colors2":["33.6","33.11"],"pop":["33.7"],"splice":["33.12"],"indexof":["33.14"],"numbers":["33.15","33.16","33.24","33.25"],"reverse":["33.18"],"values":["33.20"],"都不改变原数组":["33.23"],"有如下":["33.23"],"种":["34.1"],"hexnum1":["34.2"],"0xa":["34.2"],"16进制的10":["34.2"],"浮点类型则在数值汇总必须包含小数点":["34.2"],"还可通过科学计数法表示":["34.2"],"就相当于给变量赋予了":["34.3"],"值":["34.3"],"firstname":["34.4"],"john":["34.4"],"lastname":["34.4","38.10"],"传一个":["34.5"],"会返回":["34.5"],"object":["34.5","34.8"],"的原因":["34.5"],"可以将其他类型的数据转化成布尔值":["34.6"],"规则如下":["34.6"],"数据类型":["34.6"],"转换为":["34.6"],"genericsymbol":["34.7"],"属性名可以是字符串或数值":["34.9"],"并且":["34.10"],"数组也是动态大小的":["34.10"],"会随着数据添加而自动增长":["34.10"],"sum":["34.11"],"num1":["34.11"],"date":["34.12"],"基本数据类型存储在栈中":["34.13"],"赋值操作":["34.14"],"引用类型对应的值存储在堆中":["34.16"],"再进行操作":["35.2"],"result":["35.3"],"lo":["35.4"],"常见的有":["35.5"],"trim":["35.5"],"stringvalue":["35.6","35.8"],"foo":["35.8","35.13"],"chatat":["35.10"],"startswith":["35.13"],"str":["35.15"],"字符串设计了几个方法":["35.16"],"text":["35.17","35.19","70.6","70.7"],"cat":["35.17","35.19"],"否则返回":["35.18"],"bat":["35.19"],"string":["37.1","37.5","37.13","37.14","38.11","42.2","42.5","42.6"],"num":["37.2"],"普通数字":["37.2"],"false":["37.3","37.12"],"也可以通过函数返回布尔值":["37.3"],"可以在元素类型后面接上":["37.4"],"表示由此类型元素组成的一个数组":["37.4"],"ts":["37.4","37.14","38.11","39.4","41.3","42.1","44.0","55.23"],"number":["37.5","37.9","38.2","39.3","39.4","45.1"],"ok":["37.5"],"增长枚举":["37.6"],"value":["37.7","40.5"],"test":["37.8"],"不能带有return":["37.8"],"也可以定义":["37.8"],"undefined":["37.8"],"是所有类型的子类型":["37.9"],"就是说你可以把":["37.9"],"赋值给":["37.9"],"将不会有返回值":["37.10"],"但本身不会出错":["37.11"],"编译成功":["37.12"],"man":["37.13"],"sex":["37.13"],"方式二":["37.14"],"使用any临时断言":["37.14"],"somevalue":["37.14"],"作为对象的模板":["38.0"],"this":["38.1","38.6","38.8","38.10","40.6"],"distance":["38.2"],"private":["38.3"],"person":["38.7","38.11","42.6"],"在类型":["38.8"],"上不存在":["38.8"],"get":["38.9"],"boolean":["38.9"],"personclass2":["38.9"],"set":["38.9"],"fullname":["38.10"],"是指不包含具体实现的方法":["38.11"],"constructor":["38.11"],"匿名函数":["39.1"],"箭头函数":["39.1"],"myadd":["39.1"],"y":["39.2","39.3","60.3","61.3","63.2","67.2"],"同样也可以有任意个":["39.4"],"编译器创建参数数组":["39.4"],"名字是你在省略号":["39.4"],"后面给定的名字":["39.4"],"你可以在函数体内使用这个数组":["39.4"],"fn1":["39.4"],"在实现上我们要注意严格判断两个参数的类型是否相等":["39.5"],"而不能简单的写一个":["39.5"],"typeof":["39.5"],"不预先指定具体的类型":["40.0"],"u":["40.5"],"key":["40.5"],"getvalue":["40.6"],"typescript":["41.1","55.0"],"的简称":["41.1"],"的基础上加入了类型系统":["41.2"],"让每个参数都有明确的意义":["41.2"],"从而带来了更加":["41.2"],"边解释边执行":["41.3"],"错误只有在运行的时候才能发现":["41.3"],"友好地在编辑器里提示错误":["41.5"],"如以前在":["41.6"],"vue2":["41.6","55.8"],"global":["41.7"],"add":["41.7","70.8"],"查看版本":["41.7"],"tsc":["41.7"],"bash":["41.9","41.10"],"interfaces":["42.0"],"这样写是会报错的":["42.1"],"因为我们在person定义了name":["42.1"],"stirng":["42.3"],"带有可选属性的接口与普通的接口定义差不多":["42.4"],"在可选属性名字定义的后面加一个":["42.4"],"符号":["42.4"],"propname":["42.5"],"any":["42.5","47.28"],"允许添加新的任意属性":["42.5"],"函数":["43.0","47.31"],"编译正确":["43.1"],"declaration":["44.0"],"生成相应的":["44.0"],"d":["44.0","53.12","69.9"],"sourcemap":["44.0"],"map":["44.0"],"outfile":["44.0"],"将输出文件合并为一个文件":["44.0"],"outdir":["44.0"],"指定输出目录":["44.0"],"rootdir":["44.0"],"用来控制输出目录结构":["44.0"],"removecomments":["44.0"],"删除编译后的所有的注释":["44.0"],"noemit":["44.0"],"不生成输出文件":["44.0"],"importhelpers":["44.0"],"相当于":["45.1"],"定义函数别名":["45.2"],"script":["47.0","70.3"],"标签中添加":["47.0"],"setup":["47.0","47.23"],"就可以做到":["47.0"],"函数是":["47.1"],"新增的一个选项":["47.1"],"它是组合式":["47.1"],"使用reactive":["47.2"],"去修改值无须":["47.2"],"ref其实也是内部调用":["47.2"],"来实现的":["47.2"],"vue":["47.2","47.6","47.13","47.16","47.17","47.18","47.19","47.20","48.2","48.6","48.9","48.12","48.16","55.0","55.2","55.6","55.9"],"template":["47.2","47.5","47.13","48.6","48.9","48.16","55.9"],"我是message":["47.4"],"obj":["47.6"],"hr":["47.7"],"reactive":["47.8","47.18","47.19","47.20","50.3"],"不论是响应式还是普通的":["47.9"],"state":["47.10"],"如果原始对象是":["47.12"],"非响应式":["47.12"],"作用基本一致":["47.15"],"他们都是用来监听响应式状态发生变化的":["47.16"],"当响应式状态发生变化时":["47.16"],"就会触发一个回调函数":["47.16"],"watch":["47.19"],"响应式":["47.21"],"追踪其依赖":["47.21"],"可以接收一个参数":["47.22"],"叫oninvalidate":["47.22"],"在组件的":["47.23"],"更新时机":["47.24"],"过程":["47.25"],"成为生命周期":["47.25"],"只调用一次":["47.27"],"mounted":["47.27","47.28"],"元素插入父级dom调用":["47.27"],"在元素上做些操作":["47.28"],"初始化一次":["47.28"],"el":["47.28"],"该值为":["47.29"],"oldvalue":["47.29"],"先前的值":["47.29"],"仅在":["47.29"],"beforeupdate":["47.29"],"updated":["47.29"],"中可用":["47.29"],"v":["47.30","55.12"],"move":["47.30"],"可以帮助我们提高代码的复用性":["47.31"],"让我们能在不同的组件中都利用":["47.31"],"案列":["47.31"],"实现一个窗口改变时获取宽高的":["47.31"],"hook":["47.31"],"并且对":["48.5"],"layout":["48.6"],"menu":["48.6"],"slot":["48.8","48.10"],"footer":["48.9"],"父组件使用需对应名称":["48.9"],"派发给父组件的":["48.10"],"去使用":["48.10"],"父组件":["48.11","48.16"],"defineasynccomponent":["48.12"],"异步加载":["48.12"],"vue3":["48.13","55.6","55.10"],"新增了":["48.13"],"了":["48.13"],"就不必跟踪何时加载数据并呈现相应的内容":["48.13"],"react":["48.14"],"portal":["48.14"],"主要解决的问题":["48.14"],"因为teleport节点挂载在其他指定的dom节点下":["48.14"],"只会触发":["48.15"],"基本":["48.15"],"component":["48.15"],"children":["48.16"],"modelvalue":["48.17"],"update":["48.17"],"input":["48.17"],"新增":["48.17"],"一个组件可以设置多个":["48.17"],"cli创建":["49.1"],"g":["49.2"],"版本在":["49.3"],"choose":["49.4"],"version":["49.4"],"of":["49.4"],"that":["49.4"],"you":["49.4"],"want":["49.4"],"to":["49.4"],"start":["49.4"],"动态导入":["49.5"],"hmr":["49.5"],"速度快到惊人的":["49.5"],"模块热更新":["49.5"],"rollup打包":["49.5"],"它使用":["49.5"],"one":["50.1"],"piece":["50.1"],"初次渲染快55":["50.2"],"computed":["50.3"],"title":["52.2"],"items":["52.2"],"email":["53.1"],"init":["53.3","55.18","70.3","70.8"],"将本地库所有变更添加到暂存区":["53.5"],"or":["53.6"],"m":["53.6","69.9","70.8"],"filename":["53.7"],"比较暂存区和":["53.7"],"head":["53.7"],"的所有差异":["53.7"],"查看极简日志信息":["53.8"],"oneline":["53.8"],"查看最近":["53.8"],"branch":["53.11","53.12"],"checkout":["53.13"],"分支合并到":["53.14"],"分支":["53.14"],"discard":["53.15"],"changes":["53.15"],"working":["53.15"],"directory":["53.15"],"而不新建":["53.16"],"reference":["53.16"],"为远程仓库起别名":["53.18"],"拉取远程分支":["53.20"],"并与本地分支合并":["53.20"],"表示将本地分支推送到与之存在追踪关系的远程分支":["53.21"],"通常两者同名":["53.21"],"如果该远程分支不存在":["53.21"],"则会被新建":["53.21"],"https":["54.1","55.11","70.8"],"在空白处点鼠标右键选择":["54.2"],"xxx":["54.3"],"keygen":["54.4"],"t":["54.4"],"rsa":["54.4","54.5"],"pub文件":["54.5"],"就可以克隆ssh地址了":["54.6"],"不管是项目还是面试都是经常用到的知识点":["55.1"],"比如":["55.1","55.9"],"props":["55.1"],"child":["55.2","55.7"],"info":["55.2"],"我爱祖国":["55.2"],"money":["55.2"],"子组件获取父组件传递数据":["55.2"],"框架中事件分为两种":["55.3"],"一种是原生的":["55.3"],"dom":["55.3"],"当前代码级给":["55.4"],"标签绑定原生":["55.4"],"事件点击事件":["55.4"],"默认会给事件回调注入":["55.4"],"我是子组件2":["55.5"],"click":["55.5"],"handler":["55.5"],"点击我触发xxx自定义事件":["55.5"],"关系推出全局事件总线":["55.6"],"但是在":["55.6"],"中没有":["55.6"],"实现的":["55.7"],"下方代码":["55.7"],"相当于给组件":["55.7"],"传递一个":["55.7"],"次函数功能类似于":["55.8"],"框架中":["55.8"],"attrs属性与":["55.8"],"listeners":["55.8"],"方法":["55.8"],"获取子组件实例":["55.9"],"那么子组件内部的方法与响应式数据父组件可以使用的":["55.9"],"在父组件挂载完毕获取组件实例":["55.9"],"父组件内部代码":["55.9"],"注入":["55.10"],"提供两个方法":["55.10"],"pinia":["55.11"],"父组件内部向指定的具名插槽传递结构":["55.12"],"需要注意":["55.12"],"可以替换为":["55.12"],"版本的后台管理系统":["55.14"],"一个项目要有统一的规范":["55.14"],"需要使用":["55.14"],"环境准备":["55.15"],"意味":["55.16"],"高性能的":["55.16"],"pnpm由":["55.16"],"yarn":["55.16"],"项目配置":["55.17"],"cjs":["55.18"],"npx":["55.18"],"配置文件":["55.18"],"module":["55.18"],"运行环境":["55.18"],"env":["55.18"],"运行更漂亮的eslint":["55.19"],"使prettier规则优先级更高":["55.19"],"eslint优先级低":["55.19"],"关闭规则":["55.20"],"warn":["55.20"],"打开的规则作为警告":["55.20"],"不影响代码执行":["55.20"],"规则作为一个错误":["55.20"],"代码不能执行":["55.20"],"界面报错":["55.20"],"no":["55.20"],"var":["55.20","63.1"],"要求使用":["55.20"],"而不是":["55.20"],"multiple":["55.20"],"empty":["55.20"],"src":["55.21"],"styles":["55.21"],"目录下创建一个":["55.21"],"文件":["55.21","55.22"],"当然项目中需要用到清除默认样式":["55.21"],"因此在":["55.21"],"引入":["55.21"],"reset":["55.21"],"去创建我们需要":["55.22"],"数据与接口":["55.22"],"文件夹内部创建一个":["55.22"],"用户信息数据":["55.22"],"createuserlist":["55.22"],"userid":["55.22"],"avatar":["55.22"],"wpimg":["55.22"],"wallstcn":["55.22"],"f778738c":["55.22"],"e4f8":["55.22"],"b634":["55.22"],"56703b4acafe":["55.22"],"gif":["55.22"],"username":["55.22"],"admin":["55.22"],"elmessage":["55.23"],"element":["55.23"],"plus":["55.23"],"创建axios实例":["55.23"],"loginformdata":["55.24"],"loginresponsedata":["55.24"],"userinforeponsedata":["55.24"],"项目用户相关的请求地址":["55.24"],"enum":["55.24"],"获取画笔":["56.3"],"context":["56.3","61.1","61.2","66.6"],"getcontext":["56.3"],"2d":["56.3"],"fillstyle":["56.3"],"ccc":["56.3"],"fillrect":["56.3","61.2","61.5","66.2"],"restore":["57.3"],"绘制分钟的刻度":["57.3"],"canvas":["57.4","58.2"],"ref":["58.2"],"queryselector":["59.3"],"连接初圆润":["59.3"],"linejoin":["59.3","64.1"],"round":["59.3"],"中的一个元素":["60.1"],"允许使用":["60.1"],"javascript":["60.1"],"x":["60.3","63.2","64.3","69.4"],"轴向右延伸":["60.3"],"但在大多数情况下":["60.4"],"使用":["60.4"],"的绘图上下文进行绘制是最基本和有效的方法":["60.4"],"文本":["60.5"],"图像":["60.5"],"矩形和其他形状等":["60.5"],"绘图元素可以通过":["60.5"],"陈述观点":["60.6"],"以及制作各种绚丽的视觉展示等":["60.6"],"您可以通过":["60.6"],"脚本使":["60.7"],"绘制出具有动态效果的图像和视觉艺术也显得非常合适":["60.7"],"html5":["60.8"],"中提供了许多优势":["60.8"],"但也存在一些限制":["60.8"],"图像旋转":["61.0"],"scale":["61.0"],"math":["61.1"],"pi":["61.1"],"表示放大十倍":["61.2"],"轴和":["61.3"],"轴移动的距离":["61.3"],"单位像素":["61.3"],"默认值1":["61.4"],"单位倍数":["61.4"],"水平倾斜":["61.4"],"默认值0":["61.4"],"单位弧度":["61.4"],"垂直倾斜":["61.4"],"源":["62.0"],"绘制在另一个物体":["62.0"],"目标":["62.0"],"只会显示目标图像之外源图像部分":["62.1"],"destination":["62.1"],"在源图像上方显示目标图像":["62.1"],"在源图像顶部显示目标图像":["62.1"],"源图像之外的目标图像部分不会被显示":["62.1"],"htmlcanvaselement":["63.1"],"找到画布":["63.1"],"moveto":["63.2"],"把路径移动到画布中的指定点":["63.2"],"不创建线条":["63.2"],"高度为线条宽度的一半":["64.1"],"指定线段交点的样式":["64.1"],"交点为扇形":["64.1"],"bevel":["64.1"],"交点为三角形底边":["64.1"],"miter":["64.1"],"从左到右的渐变等等":["64.2"],"该方法的返回值是一个":["64.2"],"canvasgradient":["64.2"],"该对象只有一个":["64.2"],"addcolorstop":["64.2"],"方向":["64.2"],"用来指定渐变点的颜色":["64.2"],"方法接受两个参数":["64.2"],"第一个参数是":["64.2"],"到":["64.2"],"之间的一个位置量":["64.2"],"表示起点":["64.2"],"表示终点":["64.2"],"第二个参数是一个字符串":["64.2","64.3"],"blob":["64.3"],"有四个可能的值":["64.3"],"分别是":["64.3"],"repeat":["64.3"],"双向重复":["64.3"],"水平重复":["64.3"],"shadowoffsetx":["64.4"],"阴影的水平位移":["64.4"],"文字":["66.0","66.6"],"路径":["66.2"],"stroke":["66.3"],"closepath":["66.3"],"嘴巴":["66.3"],"sy":["66.5"],"swidth":["66.5"],"sheight":["66.5"],"获取图片":["66.5"],"textbaseline":["66.6"],"文本的垂直位置":["66.6"],"alphabetic":["66.6"],"大小":["66.6"],"字体":["66.6"],"100px":["66.6"],"microsoft":["66.6"],"yahei":["66.6"],"填充渲染文字":["66.6"],"控制点2":["67.2"],"是一个基于文本的开放网络标准":["69.1"],"用来定义用于网络的矢量图形":["69.1"],"是看不出效果的":["69.3"],"cx":["69.5","69.6"],"cy":["69.5"],"ellipse":["69.6"],"points":["69.7"],"skyblue":["69.9"],"lemon":["70.0"],"安装":["70.3"],"vitepress":["70.3"],"package":["70.3","70.5"],"添加":["70.3"],"在":["70.5"],"中可以开始我们的配置":["70.5"],"先写上如下内容":["70.5"],"这是网站的标题和描述":["70.5"],"标题会在浏览器标签上展示":["70.5"],"other":["70.6"],"关于侧边栏":["70.6"],"collapsible":["70.6"],"lastupdated":["70.7"],"hero":["70.7"],"组件库名称":["70.7"],"组件库文本":["70.7"],"tagline":["70.7"],"组件库副标题描述":["70.7"],"image":["70.7"],"example":["70.8"],"com":["70.8"],"cname":["70.8"],"git":["70.8"],"commit":["70.8"],"如果发布到":["70.8"]},{"0":["14.18","15.2","18.12","28.3","28.4","28.6","34.2","40.6","47.31","61.3"],"1":["13.3","18.5","18.14","28.2","33.13","33.16","34.2","37.3","37.4","61.5"],"2":["13.6","17.1","19.1","22.10","33.15","33.16","53.1","53.15","53.19","55.22"],"3":["15.3","29.0","33.15","33.16","33.24","49.4","53.14","53.21"],"4":["15.14","29.0","33.11","33.15","33.19","33.24","33.25","33.26","53.7","55.19"],"5":["33.19","33.20","33.24","33.25","33.26","49.3","53.8"],"8":["13.3"],"10":["33.20","64.1"],"15":["33.20"],"20":["34.14","39.3","66.3","69.9"],"23":["35.15"],"29":["15.5","33.17"],"34":["35.15"],"40":["69.7"],"42":["37.7"],"50":["66.6","69.3"],"70":["61.1","69.7"],"80":["69.7"],"95":["69.5"],"100":["61.2","66.6","67.1","69.6","69.8"],"120":["69.8"],"123":["37.1","42.7","47.4"],"127":["15.2"],"180":["61.1"],"200":["64.2","66.6","69.4"],"250":["66.3"],"255":["13.8"],"300":["69.9"],"403":["17.4"],"404":["17.4"],"420":["22.11"],"5000":["55.23"],"111111":["55.22"],"11111111":["13.8"],"img":["0.0","66.5"],"htm":["5.0"],"try":["5.0"],"files":["5.0","13.3","13.6"],"uri":["5.0"],"cmd":["5.1"],"nginx":["5.1"],"t":["5.1"],"快速":["11.0"],"男":["11.2"],"请求成功":["11.2"],"bruce":["11.3","14.12"],"可直接访问":["11.3"],"post":["11.4","15.11","17.3","32.7"],"add":["11.4","53.18"],"参数把流转关系交给下一个中间件或路由":["11.5"],"中间件注意事项":["11.5"],"log":["11.6","13.7","13.12","33.22","34.3","34.7","34.14","35.8","35.9","39.4","40.6","42.7"],"调用了第1个全局中间件":["11.6"],"定义第二个全局中间件":["11.6"],"get":["11.7"],"hello":["11.7","13.6"],"send":["11.7","11.8","32.7"],"throw":["11.8"],"new":["11.8","57.3","66.5"],"error":["11.8","37.5","38.8"],"服务器内部发生了错误":["11.8"],"home":["11.8","55.22"],"page":["11.8"],"定义错误级别的中间件":["11.8"],"捕获整个项目的异常错误":["11.8"],"从而防止程序的崩溃":["11.8"],"导入中间件":["11.10"],"const":["11.10","17.2","28.1","30.1","37.13","38.10","40.5","47.4","47.31"],"相关的":["11.11"],"响应头":["11.11"],"就可解除浏览器端的跨域访问限制":["11.11"],"值仅限于":["11.12"],"text":["11.12","35.18","66.6"],"plain":["11.12"],"multipart":["11.12"],"form":["11.12"],"application":["11.12","11.15"],"x":["11.12","49.4","59.3","66.6"],"www":["11.12"],"urlencoded":["11.12"],"三者之一":["11.12"],"如果客户端向服务器发送了额外的请求头信息":["11.12"],"则需要在服务器端":["11.12"],"通过":["11.12"],"dpr":["11.14"],"downlink":["11.14"],"save":["11.14"],"data":["11.14","47.16"],"json":["11.15","15.12"],"格式的数据":["11.15"],"chrome":["12.1"],"v8":["12.1"],"引擎":["12.1"],"的":["12.1","48.17"],"则完全没有采用这种模型":["12.2"],"它本质上就是一个单线程":["12.2"],"但一个线程如何服务于大量的请求":["12.2"],"如何处理高并发的呢":["12.2"],"程序运行不稳定":["12.3"],"读写文件":["13.1"],"rs":["13.1"],"同步模式下打开文件用于读取":["13.1"],"同步模式下打开文件用于读写":["13.1"],"w":["13.1"],"txt":["13.3","13.6"],"utf":["13.3"],"function":["13.3","13.6","13.7","16.4","47.31","56.3","59.3"],"if":["13.3","13.17","63.1"],"可读流关闭了":["13.4"],"数据读取完毕":["13.4"],"关闭可写流":["13.4"],"end":["13.4"],"nodejs":["13.6","14.21"],"open":["13.7","32.2"],"console":["13.7","13.12","17.6","33.22","34.3","34.5","34.7","34.14","35.8","35.9","37.11","39.4","40.6","55.20"],"流打开了":["13.7"],"00000000":["13.8"],"每一个元素占用一个字节内存":["13.8"],"是对底层内存的直接操作":["13.8"],"动态拼接出被操作文件的完整路径":["13.9"],"解决方案":["13.9"],"mkdirsync":["13.10"],"删除目录":["13.10"],"rmdir":["13.10"],"rmdirsync":["13.10"],"重命名文件和目录":["13.10"],"rename":["13.10"],"oldpath":["13.10"],"newpath":["13.10"],"js":["13.11","13.15","14.11","14.22","16.4","30.1","34.5","34.10","61.3","64.4"],"b":["13.12","13.14"],"c":["13.12","13.14","54.4"],"d":["13.12"],"e":["13.12"],"require":["13.13","14.12","14.13"],"定义文件的存放路径":["13.13"],"fpath":["13.13"],"a":["13.14","14.22","18.8","37.14","38.9","42.5","42.6","53.6"],"str":["13.16"],"your":["13.16","22.0"],"is":["13.16","37.14","48.15"],"and":["13.16"],"index":["13.17","41.7","55.24"],"html":["13.17","48.10"],"首页":["13.17"],"about":["13.17"],"关于页面":["13.17"],"模块化可提高代码的复用性和可维护性":["14.2"],"实现按需加载":["14.2"],"更好的分离":["14.3"],"自定义模块":["14.5"],"方法等成员":["14.6"],"供外界使用":["14.7"],"导入自定义模块时":["14.7","14.21"],"得到的就是":["14.7"],"变量是一个对象":["14.8"],"不会导致模块的代码被执行多次":["14.9"],"node":["14.11"],"会按顺序尝试加载文件":["14.11"],"users":["14.12"],"project":["14.12"],"foo":["14.12","47.29"],"文件里调用了":["14.12"],"加载的入口":["14.13"],"如果没有":["14.13"],"中的包都是免费且开源的":["14.15"],"由于":["14.15"],"i":["14.16","28.3","28.4","28.6"],"包的名称":["14.18"],"version":["14.18"],"不论是内置模块":["14.19"],"如果省略了文件的扩展名":["14.21"],"里调用":["14.22"],"tools":["14.22"],"如果目录里没有":["14.23"],"文件":["14.23"],"或者":["14.23"],"createpool":["15.2"],"host":["15.2"],"set":["15.3"],"更新数据":["15.3"],"update":["15.3"],"h1":["15.5","55.9"],"username":["15.5","15.14","70.8"],"用户体验好":["15.6"],"页面局部刷新":["15.6"],"无需重新请求页面":["15.6"],"减轻服务器的渲染压力":["15.6"],"可考虑服务端渲染":["15.7"],"后台管理项目":["15.7"],"api":["15.11","47.1","55.23","60.4","60.5","60.7"],"login":["15.11"],"res":["15.11","17.6","40.6"],"user":["15.11"],"body":["15.11"],"islogin":["15.11"],"保存在客户端浏览器中":["15.13"],"服务器通过还原":["15.13"],"字符串的形式来认证用户的身份":["15.13"],"组成部分":["15.13"],"header":["15.13"],"payload":["15.13"],"signature":["15.13"],"参数":["15.14"],"用户信息对象":["15.14"],"加密密钥":["15.14"],"配置对象":["15.14"],"token有效期":["15.14"],"尽量不保存敏感信息":["15.14"],"因此只有用户名":["15.14"],"没有密码":["15.14"],"token":["15.14","55.22"],"userinfo":["15.14","55.24"],"expiresin":["15.14"],"10h":["15.14"],"字符串还原为":["15.14"],"客户端访问有权限的接口时":["15.14"],"需通过请求头的":["15.14"],"http":["16.1"],"install":["16.2"],"params":["16.3"],"添加请求拦截器":["16.4"],"axios":["16.4"],"interceptors":["16.4","55.23"],"request":["16.4"],"use":["16.4","49.4"],"status":["16.5"],"headers":["16.5"],"else":["16.5","27.0","32.7","39.5"],"实现响应拦截":["17.1"],"service":["17.2"],"content":["17.3"],"type":["17.3","22.11"],"如果没有设置请求头":["17.3"],"method":["17.3"],"您未登录":["17.4"],"或者登录已经超时":["17.4"],"请先登录":["17.4"],"您没有权限操作":["17.4"],"请求地址出错":["17.4"],"postaction":["17.5"],"xxx":["17.6"],"引入上面login方法所在的文件":["17.6"],"then":["17.6"],"十分钟封装一个好用的axios":["17.7"],"padding":["18.1"],"不能涉及差异化样式":["18.2"],"color":["18.3"],"css":["18.4","64.2","69.1"],"orange":["18.5"],"tip":["18.5"],"注意":["18.5","37.3"],"选择器3":["18.6"],"选择器":["18.6","19.0"],"li":["18.7"],"good":["18.9"],"hover":["18.11"],"光标经过链接的样式":["18.11"],"的第":["18.12"],"个":["18.12"],"可以是数字":["18.12"],"关键字":["18.12","38.0"],"even":["18.12"],"odd":["18.12"],"公式":["18.12"],"从":["18.12","44.0"],"开始":["18.12"],"size":["18.14"],"伪元素清除浮动":["18.14"],"额外标签法":["18.14"],"隔墙法":["18.14"],"在浮动元素后面添加一个块级标签":["18.14"],"如div":["18.14"],"并设置":["18.14"],"clear":["18.14"],"both":["18.14"],"div":["18.14","55.4","55.9"],"id":["19.0"],"比较规则":["19.1"],"按照":["19.1"],"从左到右":["19.1"],"的顺序":["19.1"],"依次比较大小":["19.1"],"当前位胜出后":["19.1"],"后面的不再对比":["19.1"],"例如":["19.1","60.8"],"track":["21.0"],"没有滑块":["21.0"],"mpeg":["22.0","22.2"],"browser":["22.0","55.18"],"does":["22.0"],"not":["22.0"],"support":["22.0"],"the":["22.0"],"定义了声音内容":["22.5"],"source":["22.5","22.6","22.11"],"定义一个视频":["22.6"],"用户控制界面":["22.7"],"poster":["22.7"],"视频封面":["22.7"],"autoplay":["22.7"],"播放":["22.8"],"src":["22.10","22.11","66.5","70.7"],"resource":["22.10"],"mp4":["22.10","22.11"],"play":["22.10"],"播放暂停触发":["22.10"],"mov":["22.11"],"bbb":["22.11"],"然后自动填充以前保存的密码":["24.1"],"这里推荐一种特别简单的方法解决这个问题":["24.1"],"在":["24.1","32.5"],"属性":["24.1"],"这样的组合就是闭包":["25.1"],"closure":["25.1"],"会不断地调用绑定在事件上的回调函数":["26.1"],"极大地浪费资源":["26.1"],"秒内重复触发":["26.2"],"只有一次生效":["26.2"],"timer":["26.4"],"settimeout":["26.4"],"this":["26.4","31.0","37.14"],"可加入第三个参数用于判断":["26.5"],"实现如下":["26.5"],"immediate":["26.5"],"如果是对象":["27.0"],"遍历每个属性进行深拷贝":["27.0"],"false":["28.0","56.3","59.3","70.6"],"newarr":["28.1"],"j":["28.2"],"return":["28.5","34.11","38.1","39.2","39.4","39.5","40.2","40.3","40.4","47.0"],"let":["28.6","34.5","34.9","34.10","35.12","35.18","37.8","40.6","47.6","47.8","47.19","55.2","66.5"],"arr":["29.1"],"replace":["29.2"],"g":["29.2"],"split":["29.2","38.10"],"pre":["29.3","47.24"],"cur":["29.3"],"length":["29.4"],"时":["30.1"],"会调用相应的回调函数":["30.1"],"以下是一个简单的":["30.1"],"示例":["30.1"],"onrejected":["30.2"],"如果状态为fulfilled":["30.2"],"执行onfulfilled函数":["30.2"],"如果状态为rejected":["30.2"],"执行onrejected函数":["30.2"],"使用示例":["30.2"],"日期等数据类型":["31.0"],"也支持面向对象编程":["31.0"],"可以使用":["31.0"],"class":["31.0","38.0","38.9","49.4"],"关键字定义类和对象":["31.0"],"以下是一个简单的类定义示例":["31.0"],"person":["31.0","34.9","42.5"],"constructor":["31.0","38.7"],"name":["31.0","38.9","47.6","47.17","47.20"],"age":["31.0","38.11","42.1","42.2"],"是一种创建交互式网页应用的网页开发技术":["32.1"],"可以在不重新加载整个网页的情况下":["32.1"],"对象的":["32.2"],"方法与服务端建立连接":["32.2"],"构造函数用于初始化一个":["32.3"],"password":["32.4","55.22"],"参数说明":["32.4"],"表示当前的请求方式":["32.4"],"请求中要发送的数据体":["32.5"],"响应体下载中":["32.6"],"responsetext":["32.6"],"已经获取部分数据":["32.6"],"done":["32.6"],"请求完成":["32.6"],"整个请求过程已完毕":["32.6"],"只要":["32.6"],"属性值一变化":["32.6"],"就会触发一次":["32.6"],"readystatechange":["32.6"],"true":["32.7","35.13","37.7","55.18","56.3","59.3"],"null":["32.7","37.8","44.0","64.3"],"改":["33.1","35.1"],"unshift":["33.2"],"创建一个数组":["33.3","33.4"],"count":["33.3"],"removed":["33.5","33.10","33.13"],"yellow":["33.6","65.0"],"black":["33.6"],"shift":["33.7"],"green":["33.8","33.9"],"item":["33.8","33.9"],"colors3":["33.11"],"includes":["33.14"],"nicholas":["33.17"],"sort":["33.18"],"blue":["33.22"],"some":["33.23"],"mapresult":["33.28"],"number":["34.1","37.4","37.14","38.11","47.4"],"floatnum1":["34.2"],"floatnum2":["34.2"],"message":["34.3","37.10","47.6","47.18","47.19","47.20","48.10"],"jacob":["34.4"],"car":["34.5"],"的值":["34.6"],"othergenericsymbol":["34.7"],"我们这里主要讲述下面三种":["34.8"],"num2":["34.11"],"函数表达式":["34.11"],"regexp":["34.12"],"引用类型的对象存储于堆中":["34.13"],"在栈中存放的是指向堆内存的地址":["34.16"],"不同的类型数据导致赋值变量时的不同":["34.16"],"除了常用":["35.2"],"world":["35.3","35.6"],"trimleft":["35.5"],"trimmedstringvalue":["35.6"],"stringvalue":["35.7","35.12"],"na":["35.7"],"indexof":["35.10"],"abcde":["35.11"],"match":["35.16"],"bat":["35.17"],"sat":["35.17","35.19"],"fat":["35.17","35.19"],"cat":["35.18"],"infinitynumber":["37.2"],"infinity":["37.2"],"无穷大":["37.2"],"warning":["37.3"],"list":["37.4"],"ok":["37.7"],"和":["37.8"],"类型":["37.8"],"n":["37.8","45.1","53.8"],"string":["37.9","37.10","38.7","38.9","47.6"],"类型的变量":["37.9"],"而":["37.9"],"void":["37.9","38.9","38.11"],"类型不可以分给其他类型":["37.9"],"这样写会报错":["37.9"],"void类型不可以分给其他类型":["37.9"],"abc":["37.12","38.7"],"报错":["37.12"],"函数中使用联合类型":["37.12"],"p":["37.13","48.9"],"any":["37.14","39.4"],"strlength1":["37.14"],"一般方法":["38.1"],"say":["38.1","38.6","38.8"],"我叫":["38.1"],"m":["38.2"],"protected":["38.3"],"修饰符":["38.4","38.5"],"man":["38.6"],"extends":["38.6","38.11","42.3","55.18"],"super":["38.6"],"你的意思是改为访问静态成员":["38.8"],"吗":["38.8"],"asd":["38.9"],"value":["38.10","47.28"],"names":["38.10"],"setage":["38.11"],"child":["38.11","48.9","48.11"],"返回值":["39.0"],"为上面那个函数添加类型":["39.1"],"ts":["39.1","42.4","55.21"],"items":["39.4"],"而在使用的时候再指定具体类型的一种特性":["40.0"],"array":["40.3"],"person1":["40.5"],"上不存在属性":["40.7"],"我们可以使用泛型约束来实现":["40.7"],"是一种由微软开发的自由和开源的编程语言":["41.1"],"智能":["41.2"],"的提示":["41.2"],"相对于js而言":["41.2"],"先编译再执行":["41.3"],"在写的时候就会发现错误了":["41.3"],"编译阶段就能检查类型发现大部分错误":["41.5"],"项目里使用":["41.6"],"v":["41.7","48.9","53.11"],"编译":["41.7"],"tsc":["41.9"],"npm":["41.10","49.5"],"来定义对象的类型":["42.0"],"接口是对象的状态":["42.0"],"但是对象里面缺少age属性":["42.1"],"使用接口约束的时候不能多一个属性也不能少一个属性":["42.1"],"interface":["42.4","42.5"],"propname":["42.6"],"数组":["43.0"],"大":["43.1"],"代表所有拥有":["43.1"],"tostring":["43.1"],"hasownproperty":["43.1"],"方法的类型":["43.1"],"所以所有原始类型":["43.1"],"非原始类型都可以赋给":["43.1"],"tslib":["44.0"],"导入辅助工具函数":["44.0"],"isolatedmodules":["44.0"],"将每个文件做为单独的模块":["44.0"],"与":["44.0"],"transpilemodule":["44.0"],"类似":["44.0"],"严格的类型检查选项":["44.0"],"strict":["44.0"],"启用所有严格类型检查选项":["44.0"],"noimplicitany":["44.0"],"在表达式和声明上有隐含的":["44.0"],"any类型时报错":["44.0"],"strictnullchecks":["44.0"],"启用严格的":["44.0"],"检查":["44.0"],"noimplicitthis":["44.0"],"我是一个字符串":["45.2"],"定义联合类型别名":["45.2"],"组件只需引入不用注册":["47.0"],"属性和方法也不用":["47.0"],"的统一入口":["47.1"],"简单来说":["47.1"],"就是所有的":["47.1"],"count1":["47.2"],"count2":["47.2"],"val":["47.2"],"notref":["47.4"],"click":["47.5","47.7","47.10","47.13","47.14"],"changemsg":["47.5"],"change":["47.5","47.7"],"button":["47.7","47.10","47.13","55.8"],"修改":["47.7"],"vue":["47.8","47.12","47.31","49.2","55.7","55.8","55.19"],"或是一个":["47.9"],"数据是会变的":["47.12"],"但不会更新视图":["47.12"],"它可以接收一个函数或对象作为参数":["47.15"],"会返回一个只读的":["47.15"],"参数一":["47.16"],"监听的数据":["47.16"],"nav":["47.17","47.19"],"bar":["47.17"],"message2":["47.18"],"并在其依赖变更时重新运行该函数":["47.21"],"也是一个函数":["47.22"],"函数或生命周期钩子被调用时":["47.23"],"组件更新前执行":["47.24"],"在我们使用":["47.25"],"vue3":["47.25","55.5"],"beforeupdate":["47.27"],"元素被更新之前调用":["47.27"],"dir":["47.28"],"directivebinding":["47.28"],"style":["47.28","49.4"],"background":["47.28"],"无论值是否有更改都可用":["47.29"],"arg":["47.29"],"传递给指令的参数":["47.29"],"如果有的话":["47.29"],"例如在":["47.29"],"box":["47.30"],"onmounted":["47.31"],"onunmounted":["47.31"],"ref":["47.31","57.4"],"from":["47.31"],"usewindowresize":["47.31"],"width":["47.31","58.2"],"mycomponent":["48.2"],"tree":["48.5"],"shaking":["48.5"],"title":["48.6","70.5"],"我是标题":["48.6"],"父组件使用插槽":["48.8"],"在父组件给这个插槽填充内容":["48.8"],"父组件":["48.9"],"span":["48.10"],"template":["48.12"],"children":["48.12"],"组件有两个插槽":["48.13"],"它们都只接收一个直接子节点":["48.13"],"default":["48.13"],"插槽里的节点会尽可能展示出来":["48.13"],"如果不能":["48.13"],"则展示":["48.13"],"fallback":["48.13"],"完全不受父级style样式影响":["48.14"],"使用":["48.14"],"通过to":["48.14"],"属性插入到指定元素位置":["48.14"],"如":["48.14"],"view":["48.15"],"多个条件判断的子组件":["48.15"],"子组件":["48.16"],"开发者可以自定义":["48.17"],"model修饰符":["48.17"],"bind":["48.17"],"sync":["48.17"],"修饰符和组件的":["48.17"],"bash":["49.1","49.5","53.16","53.20"],"with":["49.4"],"preview":["49.4"],"component":["49.4"],"syntax":["49.4"],"直接回车":["49.4"],"rollup":["49.5"],"打包你的代码":["49.5"],"并且它是预配置的":["49.5"],"并且支持大部分rollup插件":["49.5"],"使用vite初始化一个项目":["49.5"],"正式版在今年9月份发布":["50.1"],"2年多开发":["50.1"],"更新渲染快133":["50.2"],"watch":["50.3"],"新的生命周期函数":["50.3"],"in":["52.2"],"配置局部账户":["53.1"],"只对当前":["53.1"],"日志信息":["53.6"],"提交当前目录及其子目录的变更":["53.6"],"cached":["53.7"],"比较指定文件暂存区和":["53.7"],"的差异":["53.7"],"次的版本信息":["53.8"],"已有分支":["53.10"],"基于某个":["53.10"],"commit":["53.10"],"分支":["53.12"],"分支名":["53.13"],"把当前分":["53.14"],"基于":["53.14"],"暂存区指定文件恢复成和":["53.15"],"head":["53.15"],"一样":["53.15"],"reset":["53.15"],"git":["53.16","54.1","54.2"],"别名":["53.18"],"地址":["53.18","53.19"],"origin":["53.21"],"master":["53.21","70.8"],"如果省略本地分支名":["53.21"],"xxxx":["54.4"],"copy内容到git":["54.5"],"router":["55.0"],"可以实现父子组件":["55.1"],"子父组件":["55.1"],"甚至兄弟组件通信":["55.1"],"自定义事件":["55.1"],"可以实现子父组件通信":["55.1"],"方式":["55.2"],"事件":["55.3"],"另外一种自定义事件":["55.3"],"event":["55.4","59.3"],"事件对象":["55.4"],"当然点击事件想注入多个参数可以按照下图操作":["55.4"],"但是切记注入的事件对象务必叫做":["55.4"],"我们会发现在":["55.5"],"script":["55.5"],"标签内部":["55.5"],"使用了":["55.5"],"defineemits":["55.5"],"方法":["55.5"],"此方法是":["55.5"],"提供的方法":["55.5"],"不需要引入直接使用":["55.5"],"构造函数":["55.6"],"也就没有":["55.6"],"prototype":["55.6"],"以及组合式":["55.6"],"与绑定一个自定义事件":["55.7"],"实现父子组件数据同步":["55.7"],"msg":["55.7"],"比如":["55.8","55.18"],"在父组件内部使用一个子组件":["55.8"],"my":["55.8"],"ref与":["55.9"],"son":["55.9"],"可以实现隔辈组件传递参数":["55.10"],"组件组件提供数据":["55.10"],"web3doc":["55.11"],"top":["55.11"],"可以用":["55.12"],"a替换":["55.12"],"填入组件a部分的结构":["55.12"],"eslint":["55.14"],"stylelint":["55.14"],"prettier":["55.14"],"来对我们的代码质量做检测和修复":["55.14"],"v16":["55.15"],"衍生而来":["55.16"],"解决了":["55.16"],"内部潜在的":["55.16"],"bug":["55.16"],"极大的优化了性能":["55.16"],"扩展了使用场景":["55.16"],"浏览器端":["55.18"],"es2021":["55.18"],"规则继承":["55.18"],"全部规则默认是关闭的":["55.18"],"这个配置项开启推荐规则":["55.18"],"推荐规则参照文档":["55.18"],"函数不能重名":["55.18"],"对象不能出现重复key":["55.18"],"js的eslint插件":["55.19"],"查找vue语法错误":["55.19"],"发现错误指令":["55.19"],"lines":["55.20"],"max":["55.20"],"不允许多个空行":["55.20"],"process":["55.20"],"production":["55.20"],"debugger":["55.20"],"unexpected":["55.20"],"multiline":["55.20"],"禁止空余的多行":["55.20"],"useless":["55.20"],"escape":["55.20"],"禁止不必要的转义字符":["55.20"],"import":["55.21"],"在入口文件引入":["55.21"],"但是你会发现在":["55.21"],"desc":["55.22"],"平台管理员":["55.22"],"roles":["55.22"],"buttons":["55.22"],"cuser":["55.22"],"detail":["55.22"],"routes":["55.22"],"create":["55.23"],"baseurl":["55.23"],"meta":["55.23"],"env":["55.23"],"vite":["55.23"],"app":["55.23"],"base":["55.23","70.5"],"timeout":["55.23"],"请求拦截器":["55.23"],"admin":["55.24","70.7"],"acl":["55.24"],"info":["55.24"],"isdraw":["56.3","59.3"],"onmousedown":["56.3","59.3"],"onmouseup":["56.3"],"globalcompositeoperation":["56.3"],"获取当前的时间":["57.3"],"time":["57.3"],"date":["57.3"],"hour":["57.3"],"gethours":["57.3"],"min":["57.3"],"getminutes":["57.3"],"sec":["57.3"],"设置允许绘制的变量":["59.3"],"beginpath":["59.3","66.2"],"pagex":["59.3"],"offsetleft":["59.3"],"y":["59.3","64.3","66.6","69.4"],"pagey":["59.3"],"offsettop":["59.3"],"moveto":["59.3"],"onmouseleave":["59.3"],"脚本在矩形区域中绘制图像":["60.1"],"动画和其他复杂的视觉效果":["60.1"],"轴向下延伸":["60.3"],"可以通过":["60.3"],"提供了两种基本的绘图上下文":["60.4"],"进行控制":["60.5"],"在一个网页上创造一个交互式地图":["60.6"],"让用户点击地图上的数据点来查看更多的信息或与其他应用程序进行交互":["60.6"],"您可以控制图形元素的位移":["60.7"],"位置":["60.7"],"颜色和其他属性":["60.7"],"不同的浏览器可能解释":["60.8"],"图像缩放":["61.0"],"fillrect":["61.1","61.3"],"上面代码中":["61.2"],"原来的矩形是":["61.2"],"缩放后展示出来是":["61.2"],"context":["61.3","64.4"],"垂直缩放":["61.4"],"水平位移":["61.4"],"单位像素":["61.4"],"垂直位移":["61.4"],"之上":["62.0"],"那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面":["62.0"],"在源图像中显示目标图像":["62.1"],"只有源图像内的目标图像部分会被显示":["62.1"],"源图像是透明的":["62.1"],"在源图像外显示目标图像":["62.1"],"document":["63.1"],"getelementbyid":["63.1"],"判断是否有getcontext":["63.1"],"lineto":["63.2"],"添加一个新点":["63.2"],"绘制一条从当前位置到指定新点":["63.2"],"交点为菱形":["64.1"],"miterlimit":["64.1"],"指定交点菱形的长度":["64.1"],"该属性只在":["64.1"],"属性的值等于":["64.1"],"时有效":["64.1"],"表示":["64.2"],"颜色":["64.2"],"var":["64.2"],"gradient":["64.2"],"pink":["64.2"],"skyblue":["64.2"],"垂直重复":["64.3"],"no":["64.3"],"不重复":["64.3"],"如果第二个参数是空字符串或":["64.3"],"则等同于":["64.3"],"shadowoffsety":["64.4"],"阴影的垂直位移":["64.4"],"下面是一个例子":["64.4"],"填充":["66.2"],"rect":["66.2"],"左眼":["66.3"],"stroke":["66.4"],"closepath":["66.4"],"两条线段使用fill":["66.4"],"tx":["66.5"],"png":["66.5","70.7"],"文本":["66.6"],"绘制文字最大宽度":["66.6"],"终点x":["67.2"],"终点y":["67.2"],"图像在放大或改变尺寸的情况下其图形质量不会有所损失":["69.1"],"因此能够优雅而简洁地渲染不同大小的图形":["69.1"],"并和":["69.1"],"dom":["69.1"],"x1":["69.3"],"x2":["69.3"],"r":["69.5"],"cy":["69.6"],"l":["69.9"],"s":["70.0","70.5"],"blog":["70.0","70.5"],"scripts":["70.3"],"docs":["70.3"],"dev":["70.3"],"build":["70.3"],"module":["70.5"],"exports":["70.5"],"lemon":["70.5"],"description":["70.5"],"描述":["70.5"],"themeconfig":["70.5"],"sitetitle":["70.5"],"是不是可以动态展开":["70.6"],"collapsed":["70.6"],"logo":["70.7"],"alt":["70.7"],"yyg":["70.7"],"ui":["70.7"],"actions":["70.7"],"theme":["70.7"],"brand":["70.7"],"push":["70.8"],"f":["70.8"]},{"0":["15.11","18.1","19.1","33.10","38.10","49.3","61.1","61.4"],"1":["33.5","33.10","37.9","38.10","39.4","39.5","40.2","40.3","48.15","61.2","61.4"],"2":["18.5","18.14","37.4","39.4","39.5","40.2","40.3","47.24","53.16","61.4","63.1"],"3":["15.2","17.1","18.14","22.0","26.4","37.4","39.4","47.1","53.18","55.4"],"4":["15.11","32.7","33.16","37.6","39.4","69.1"],"5":["15.14","29.0","33.15","33.16","37.6","53.7"],"6":["29.0","35.8","37.2","53.8"],"7":["15.3"],"9":["55.19"],"10":["64.2","64.4"],"14":["55.15"],"18":["38.6"],"20":["38.8"],"30":["57.3","61.1","61.2","69.8","69.9"],"40":["69.9"],"50":["67.2","69.5"],"66":["69.9"],"80":["11.8"],"90":["69.7"],"100":["50.1","61.1","61.3","64.2","69.7"],"120":["69.9"],"123":["38.9","45.2"],"150":["69.4"],"200":["65.0","67.2","69.3","69.7","69.8"],"350":["66.3"],"408":["17.4"],"409":["17.4"],"450":["67.1","67.2"],"500":["67.2"],"600":["57.4","58.2"],"1000":["30.2"],"3000":["11.3"],"qrouter":["5.0"],"加上这一句":["5.0"],"找指定路径下的文件":["5.0"],"c":["5.1","13.13"],"d":["5.1"],"开放":["11.0"],"极简的":["11.0"],"通过":["11.2"],"query":["11.2"],"可以获取到客户端发送过来的查询参数":["11.2"],"console":["11.2","13.3","13.6","13.16","30.2","33.6","33.10","33.11","33.19","33.20","35.3","35.6","35.11","35.12","37.13","38.6","39.5","47.17","63.1"],"log":["11.2","13.3","13.6","13.16","17.6","30.2","33.6","33.11","33.20","34.5","35.3","35.6","35.11","37.11","37.13","38.6","39.5","63.1"],"这里的":["11.2"],"目录下的静态资源":["11.3"],"http":["11.3","11.8","14.17"],"localhost":["11.3"],"images":["11.3"],"bg":["11.3"],"jpg":["11.3"],"new":["11.4","30.1","30.2","32.6","37.10","40.6","64.3"],"向外导出路由对象":["11.4"],"module":["11.4"],"exports":["11.4","14.8"],"注册路由模块":["11.4"],"在注册路由之前注册中间件":["11.5"],"错误级别中间件除外":["11.5"],"中间件可连续调用多个":["11.5"],"调用了第2个全局中间件":["11.6"],"page":["11.7"],"about":["11.7"],"发生了错误":["11.8"],"message":["11.8","13.3","13.6","47.5"],"listen":["11.8"],"server":["11.8"],"running":["11.8"],"at":["11.8","35.17","35.19"],"require":["11.10"],"主要在服务器端进行配置":["11.11"],"客户端浏览器无须做任何额外的配置":["11.11"],"即可请求开启了":["11.11"],"a":["11.12","13.13","14.21","28.0","39.4","39.5","48.15","53.5"],"ccess":["11.12"],"对额外的请求头进行声明":["11.12"],"否则这次请求会失败":["11.12"],"viewport":["11.14"],"width":["11.14","57.4","69.4"],"在浏览器与服务器正式通信之前":["11.15"],"浏览器会先发送":["11.15"],"option":["11.15"],"运行时环境":["12.1"],"基于":["12.1"],"express":["12.1"],"框架":["12.1"],"可以快速构建":["12.1"],"web":["12.1","15.12"],"这是因为":["12.2"],"采用的是异步的":["12.2"],"非阻塞的模型":["12.2"],"这里所谓的":["12.2"],"可能会出现服务不可用的情况":["12.3"],"写文件":["13.1"],"不存在则创建":["13.1"],"存在则覆盖原有内容":["13.1"],"wx":["13.1"],"文件存在打开失败":["13.1"],"return":["13.3","13.6","16.4","39.3","40.6","55.23"],"failed":["13.3","13.6"],"content":["13.3","13.16","48.6"],"可写流打开了":["13.4"],"可写流关闭了":["13.4"],"要读取一个可读流中的数据":["13.4"],"要为可读流绑定一个data事件":["13.4"],"data事件绑定完毕自动开始读取数据":["13.4"],"on":["13.4"],"err":["13.6"],"if":["13.6","26.5","28.2","28.3","28.4","28.6","29.4","48.15","56.3","59.3"],"close":["13.7"],"流关闭了":["13.7"],"通过ws向文件中输出内容":["13.7"],"因此大小一旦确定就不能修改":["13.8"],"常用方法":["13.8"],"from":["13.8","13.10","28.1"],"str":["13.8","13.10","40.2"],"encoding":["13.8"],"直接提供完整的路径":["13.9"],"从而防止路径动态拼接的问题":["13.9"],"renamesync":["13.10"],"监视文件更改":["13.10"],"watchfile":["13.10"],"filename":["13.10"],"listener":["13.10"],"js":["13.10","14.23","32.6","41.7","64.1"],"var":["13.10","64.3"],"hello前端":["13.10"],"buf":["13.10"],"buffer":["13.10"],"官方提供的":["13.11","13.15"],"readfile":["13.12"],"b":["13.13","14.21","39.5","42.4"],"index":["13.13","13.14","33.17","33.28"],"html":["13.13","13.14","48.14"],"fullname":["13.13"],"设置":["13.16"],"type":["13.16","55.2","55.8"],"响应头":["13.16"],"else":["13.17"],"模块的内部数据":["14.2"],"实现是私有的":["14.2"],"实现按需加载":["14.3"],"第三方模块":["14.5"],"只能在当前模块内被访问":["14.6"],"指向的对象":["14.7"],"默认情况下":["14.7"],"是对外的接口":["14.8"],"提高模块加载效率":["14.9"],"按确切的文件名加载":["14.11"],"补全":["14.11","14.21"],"tools":["14.12"],"则":["14.12","14.23"],"会按以下顺序查找":["14.12","14.22"],"文件":["14.13"],"或者":["14.13","17.6"],"的内置模块仅提供了一些底层的":["14.15"],"api":["14.15","55.6","55.22","60.1","60.3","60.8"],"现在也有其他的包管理工具":["14.16"],"版本号":["14.18"],"main":["14.18"],"入口文件":["14.18"],"核心代码":["14.18"],"用户自定义模块":["14.19"],"会按顺序分别尝试加载以下的文件":["14.21"],"按照确切的文件名进行加载":["14.21"],"入口不存在或无法解析":["14.23"],"node":["14.23"],"将会试图加载目录下的":["14.23"],"user":["15.2"],"root":["15.2"],"password":["15.2"],"database":["15.2"],"test":["15.2","37.9"],"where":["15.3"],"id":["15.3","18.5"],"快捷方式":["15.3"],"send":["15.5","15.11"],"页面最终在浏览器里生成":["15.6"],"缺点":["15.6"],"不利于":["15.6"],"seo":["15.6"],"完整的":["15.6"],"交互性强":["15.7"],"无需考虑":["15.7"],"status":["15.11","32.7"],"msg":["15.11","48.12","48.16"],"done":["15.11"],"从":["15.11"],"取数据":["15.11"],"get":["15.11","32.4","32.5"],"username":["15.11"],"token":["15.12"],"是真正的用户信息":["15.13"],"加密后的字符串":["15.13"],"和":["15.13","60.4","69.1"],"是安全性相关部分":["15.13"],"保证":["15.13"],"安全性":["15.13"],"三者使用":["15.13"],"分隔":["15.13"],"authorization":["15.14"],"字段":["15.14"],"将":["15.14"],"字符串发送到服务器进行身份认证":["15.14"],"服务器可以通过":["15.14"],"中间件将客户端发送过来的":["15.14"],"解析还原成":["15.14"],"unless":["15.14"],"path":["15.14"],"指定哪些接口无需访问权限":["15.14"],"use":["15.14","44.0","55.23"],"库":["16.1"],"可以用在浏览器和":["16.1"],"axios":["16.2"],"config":["16.4","17.4","49.4","55.23"],"在发送请求之前做些什么":["16.4"],"error":["16.4","38.6","45.1","55.23"],"对请求错误做些什么":["16.4"],"request":["16.5","32.6"],"提出了要求":["16.5"],"但没有收到答复":["16.5"],"是浏览器中xmlhttprequest的一个实例":["16.5"],"常见错误信息处理":["17.1"],"create":["17.2","38.6","49.5"],"baseurl":["17.2"],"application":["17.3"],"x":["17.3","37.12"],"www":["17.3"],"form":["17.3"],"urlencoded":["17.3"],"请求":["17.3"],"url":["17.4","55.22"],"请求超时":["17.4"],"系统已存在相同数据":["17.4"],"data":["17.5","52.2","55.23","55.24"],"imort":["17.6"],"getaction":["17.6"],"getaction方法所在的文件路径":["17.6"],"省时又省力他不香吗":["17.7"],"前端架构带你":["17.7"],"只能选择全部标签":["18.2"],"css":["18.2","18.6"],"pink":["18.3"],"md":["18.4"],"有标签名":["18.5"],"标签名必须写在前面":["18.5"],"选择器":["18.5"],"理论上可以作为交集的条件":["18.5"],"但实际应用中几乎不用":["18.5"],"n":["18.6"],"color":["18.7","18.8"],"p1":["18.9"],"p2":["18.9"],"active":["18.11"],"链接被按下时的样式":["18.11"],"先找父亲的第":["18.12"],"个孩子":["18.12"],"再看是否为元素":["18.12"],"是成功":["18.12"],"否失败":["18.12"],"是直接找第":["18.12"],"属性且属性值以":["18.13"],"开头的":["18.13"],"style":["18.14","55.21","69.5"],"父级元素添加overflow":["18.14"],"将其属性值设置为":["18.14"],"hidden":["18.14"],"auto":["18.14"],"或":["18.14"],"scroll":["18.14"],"父级添加after伪元素":["18.14"],"类选择器":["19.0"],"元素选择器":["19.0"],"piece":["21.0"],"垂直滚动条和水平滚动条交汇的部分":["21.0"],"tag":["22.0"],"video":["22.0"],"src引入本地媒体文件":["22.0"],"resource":["22.0"],"ogg":["22.2","22.11"],"webm":["22.3"],"规定了多媒体资源":["22.5"],"可以是多个":["22.5"],"定义多种媒体资源":["22.6"],"比如":["22.6"],"自动播放":["22.7"],"muted":["22.7"],"是否静音":["22.7"],"loop":["22.7"],"psuse":["22.8"],"暂停":["22.8"],"onpause":["22.10"],"alert":["22.10"],"已经暂停":["22.10"],"开始播放时触发":["22.10"],"onplay":["22.10"],"您的浏览器不支持":["22.11"],"html5":["22.11"],"标签":["22.11"],"text":["24.1"],"的标签上添加下面的属性":["24.1"],"autocomplete":["24.1"],"off":["24.1"],"也就是说":["25.1"],"闭包让你可以在一个内层函数中访问到其外层函数的作用域":["25.1"],"在":["25.1","55.7","62.0"],"降低前端性能":["26.1"],"为了优化体验":["26.1"],"需要对这类事件进行调用次数的限制":["26.1"],"防抖":["26.2"],"可以将时间戳写法的特性与定时器写法的特性相结合":["26.4"],"实现一个更加精确的节流":["26.4"],"实现如下":["26.4"],"throttled":["26.4"],"key":["27.0"],"in":["27.0"],"hasownproperty":["27.0"],"array":["28.1","29.3","29.4","33.28","37.4"],"length":["28.3","28.4","28.6","37.14"],"item":["28.5","33.27","33.28"],"has":["28.6"],"使用infinity":["29.1"],"无论多少层都将扁平化为一维数组":["29.1"],"优化":["29.2"],"res3":["29.2"],"concat":["29.3"],"isarray":["29.4"],"resolve":["30.1"],"reject":["30.1"],"异步操作":["30.1"],"settimeout":["30.1","30.2"],"result":["30.1","35.19","40.4"],"success":["30.2","55.8"],"输出":["30.2"],"在以上代码中":["30.2"],"是":["30.2"],"javascript":["30.2","60.6","69.1"],"sayhello":["31.0"],"my":["31.0"],"is":["31.0"],"与服务器交换数据":["32.1"],"并且更新部分网页":["32.1"],"的原理简单来说通过":["32.1"],"构建请求所需的数据内容":["32.2"],"并通过":["32.2"],"实例对象":["32.3"],"常见的有":["32.4"],"post":["32.4","55.22"],"服务端地址":["32.4"],"如果不传递数据则为":["32.5"],"null":["32.5"],"如果使用":["32.5"],"属性用于接收服务器端的响应结果":["32.6"],"举个例子":["32.6"],"const":["32.6","38.1","39.2","40.4","40.6","42.6","55.24"],"接收请求":["32.7"],"onreadystatechange":["32.7"],"readystate":["32.7"],"let":["32.7","34.11","39.4","42.2","42.3"],"查":["33.1","35.1"],"splice":["33.2","33.7"],"red":["33.3","34.10","57.3"],"count":["33.4"],"yellow":["33.5"],"orange":["33.5"],"brown":["33.6"],"取得最后一项":["33.8"],"取得第一项":["33.9"],"删除第一项":["33.10"],"purple":["33.13"],"插入两个值":["33.13"],"删除一个元素":["33.13"],"find":["33.14"],"element":["33.17","55.0"],"every":["33.23"],"someresult":["33.24"],"everyresult":["33.25"],"filterresult":["33.27"],"string":["34.1","34.6","37.12","40.4","40.5","42.4","42.7","45.1","55.2"],"boolean":["34.1"],"floatnum3":["34.2"],"有效":["34.2"],"但不推荐":["34.2"],"floatnum":["34.2"],"true":["34.3","37.5","38.6"],"包含":["34.3"],"值的变量跟未定义变量是有区别的":["34.3"],"jingleheimerschmidt":["34.4"],"字符串是不可变的":["34.4"],"意思是一旦创建":["34.4"],"undefined":["34.5"],"非空字符串":["34.6"],"number":["34.6","37.12","39.1","40.3","40.5","40.7","42.2","42.3","42.7","45.2"],"false":["34.7","35.13"],"foosymbol":["34.7"],"name":["34.9","39.2","42.1","42.7","47.19","48.11"],"nicholas":["34.9"],"colors":["34.10"],"map":["34.12"],"当我们把变量赋值给一个变量时":["34.13"],"10值":["34.14"],"引用类型数据存放在堆中":["34.15"],"每个堆内存对象都有对应的引用地址指向它":["34.15"],"引用地址存放在栈中":["34.15"],"简单类型赋值":["34.16"],"是生成相同的值":["34.16"],"以及":["35.2"],"进行字符串拼接之外":["35.2"],"trimright":["35.5"],"repeat":["35.5"],"copyresult":["35.7"],"padstart":["35.8"],"startwith":["35.10"],"hello":["35.12","37.7"],"world":["35.12","37.7"],"bar":["35.13","47.19"],"arr":["35.15","37.5"],"search":["35.16"],"pattern":["35.17"],"bat":["35.18"],"sat":["35.18"],"fat":["35.18"],"也可以使用es6的字符串模板":["37.1"],"decimal":["37.2"],"使用构造函数":["37.3"],"创造的对象不是布尔值":["37.3"],"第二种方式是使用数组泛型":["37.4"],"当赋值或访问一个已知索引的元素时":["37.5"],"会得到正确的类型":["37.5"],"字符串枚举":["37.6"],"u":["37.8"],"warning":["37.8"],"num1":["37.9"],"throw":["37.10"],"只会抛出异常没有返回值":["37.11"],"定义一个一个函数得到一个数字或字符串值的长度":["37.12"],"function":["37.12","66.5"],"getlength":["37.12"],"strlength2":["37.14"],"可以定义类":["38.0"],"基本上":["38.0"],"es6的class可以看作只是一个":["38.0"],"我":["38.1"],"了":["38.1"],"创建类的实例":["38.1"],"p":["38.1","38.10","48.16"],"dog":["38.2"],"extends":["38.2"],"cry":["38.2"],"可以让你定义的变量":["38.4"],"内部访问":["38.4"],"代表定义的变量私有的只能在内部访问":["38.5"],"zs":["38.6"],"属性":["38.6","42.0","64.2"],"this":["38.7","38.9","44.0","55.6"],"静态函数":["38.8"],"同样也是不能通过this":["38.8"],"去调用":["38.8"],"也是通过类名去调用":["38.8"],"constructor":["38.9"],"person":["38.9","42.1","42.4","47.8"],"super":["38.11"],"的类型":["39.0"],"fn":["39.2","42.7"],"树哥":["40.5"],"interface":["40.7","42.1"],"len":["40.7"],"它是":["41.1"],"ts属于":["41.2"],"强类型":["41.2"],"语言":["41.2"],"ts不能直接执行":["41.3"],"需要先编译成":["41.3"],"支持最新的javascript新特特性":["41.5"],"周边生态繁荣":["41.5"],"typescript就并不是那么顺畅":["41.6"],"ts":["41.7","55.20"],"indexts":["41.7"],"升成tsconfig":["41.7"],"w":["41.9"],"install":["41.10"],"g":["41.10","55.16"],"和行为":["42.0"],"必须与接口保持一致":["42.1"],"age":["42.3"],"any":["42.6","44.0","55.20"],"类":["43.0"],"严格模式下":["43.1"],"不可以":["43.1"],"bigobject":["43.1"],"当":["44.0"],"表达式值为":["44.0"],"类型的时候":["44.0"],"生成一个错误":["44.0"],"alwaysstrict":["44.0"],"以严格模式检查每个模块":["44.0"],"并在每个文件里加入":["44.0"],"额外的检查":["44.0"],"nounusedlocals":["44.0"],"有未使用的变量时":["44.0"],"抛出错误":["44.0"],"nounusedparameters":["44.0"],"有未使用的参数时":["44.0"],"noimplicitreturns":["44.0"],"并不是所有函数里的代码都有返回值时":["44.0"],"nofallthroughcasesinswitch":["44.0"],"abc":["45.1"],"不能将类型":["45.1"],"s1":["45.2"],"才能于":["47.0"],"template":["47.0","47.12","48.13","48.14","48.17"],"中使用":["47.0"],"也不用写":["47.0"],"compositionapi":["47.1"],"新特性都应该写在这个函数内部":["47.1"],"组件中所用到的":["47.1"],"count3":["47.2"],"button":["47.2","47.12"],"click":["47.2"],"add":["47.2"],"changemsg":["47.4"],"value":["47.4","47.31"],"change":["47.4","47.13","47.14"],"创建一个自定义的":["47.7"],"并对其依赖项跟踪和更新触发进行显式控制":["47.7"],"需求":["47.7"],"使用":["47.7","70.3"],"zhangsan":["47.8"],"ref":["47.9","47.15"],"change1":["47.10"],"test1":["47.10"],"div":["47.12","48.16"],"按钮":["47.13","47.14"],"对象":["47.15"],"vue":["47.15","48.13","48.14","48.17","55.18"],"参数二":["47.16"],"数据改变时触发的回调函数":["47.16"],"newval":["47.16","47.17"],"oldval":["47.16","47.17"],"name2":["47.20"],"不用直接指定要监视的数据":["47.21"],"回调函数中使用的哪些响应式数据就监视哪些响应式数据":["47.21"],"用于清除":["47.22"],"effect":["47.22"],"侦听器会被链接到该组件的生命周期":["47.23"],"并在组件卸载时自动停止":["47.23"],"sync":["47.24"],"组合式api":["47.25"],"是没有":["47.25"],"update":["47.27"],"这个周期方法被移除":["47.27"],"beforeupdate":["47.28"],"更新之前":["47.28"],"updated":["47.28"],"为":["47.29"],"modifiers":["47.29"],"包含修饰符":["47.29"],"的对象":["47.29"],"header":["47.30","48.6"],"height":["47.31","58.2","69.4"],"onresize":["47.31"],"window":["47.31"],"innerwidth":["47.31"],"components":["48.2","70.7"],"component":["48.2"],"更加友好":["48.5"],"在使用":["48.5"],"right":["48.6","66.6"],"fancybutton":["48.10"],"插槽里的节点":["48.13"],"异步组件":["48.13"],"body":["48.14"],"自定义classname等等":["48.14"],"comp":["48.15"],"v":["48.15"],"选项已移除":["48.17"],"父组件":["48.17"],"modelvalue简写为v":["48.17"],"cli":["49.2"],"babel":["49.4","55.19"],"alongside":["49.4"],"linter":["49.4"],"formatter":["49.4"],"history":["49.4"],"init":["49.5"],"vite":["49.5"],"latest":["49.5"],"yarn":["49.5"],"位贡献者":["50.1"],"内存减少54":["50.2"],"使用proxy代替defineproperty实现数据响应式":["50.2"],"provide与inject":["50.3"],"新组件":["50.3"],"fragment":["50.3"],"nav":["52.2"],"local":["53.1"],"比较两个版本的差异":["53.7"],"以前者为基准看后者的变化":["53.7"],"表示最后一次":["53.7"],"commit":["53.7","55.14"],"对应的版本":["53.7"],"查看所有分支的版本历史":["53.8"],"all":["53.8"],"以图形形式展示版本历史":["53.8"],"强制删除本地分支":["53.12"],"分":["53.14"],"做":["53.14"],"以便把":["53.14"],"合":["53.14"],"到当前分":["53.14"],"amend":["53.16"],"合并":["53.16"],"删除远程仓库别名":["53.18"],"克隆远程仓库指定分支到本地":["53.19"],"等同于推送一个空的本地分支到远程分支":["53.21"],"表示删除指定的远程分支":["53.21"],"等同于":["53.21"],"scm":["54.1"],"bush":["54.2"],"here":["54.2"],"email":["54.3"],"xxxx":["54.3"],"xxx":["54.4"],"com":["54.4"],"直接按三次回车":["54.4"],"ssh个人设置":["54.5"],"image":["54.5"],"pinia":["55.0"],"全局事件总线":["55.1"],"bus":["55.1"],"可以实现任意组件通信":["55.1"],"pubsub":["55.1"],"发布订阅模式实现任意组件通信":["55.1"],"接受的数据类型":["55.2"],"default":["55.2"],"默认参数":["55.2"],"接受默认数据":["55.2"],"原生":["55.3"],"事件可以让用户与网页进行交互":["55.3"],"handler1":["55.4"],"我要传递多个参数":["55.4"],"方法执行":["55.5"],"传递一个数组":["55.5"],"数组元素即为将来组件需要触发的自定义事件类型":["55.5"],"此方执行会返回一个":["55.5"],"emit":["55.5"],"方法用于触发自定义事件":["55.5"],"当点击按钮的时候":["55.5"],"事件回调内部调用":["55.5"],"写法没有":["55.6"],"那么在":["55.6"],"想实现全局事件的总线功能就有点不现实啦":["55.6"],"vue3":["55.7","55.18"],"中一个组件可以通过使用多个":["55.7"],"让父子组件多个数据同步":["55.7"],"下方代码相当于给组件":["55.7"],"size":["55.8"],"small":["55.8"],"title":["55.8"],"标题":["55.8"],"但是需要注意":["55.9"],"如果想让父组件获取子组件的数据或者方法需要通过":["55.9"],"defineexpose":["55.9"],"对外暴露":["55.9"],"方法用于提供数据":["55.10"],"此方法执需要传递两个参数":["55.10"],"分别提供数据的":["55.10"],"也是集中式管理状态容器":["55.11"],"类似于":["55.11"],"b替换":["55.12"],"填入组件b部分的结构":["55.12"],"作用域插槽":["55.12"],"可以理解为":["55.12"],"子组件数据由父组件提供":["55.12"],"但是子组件内部决定不了自身结构与外观":["55.12"],"样式":["55.12"],"子组件":["55.12"],"代码如下":["55.12"],"husky":["55.14"],"来做":["55.14"],"被誉为":["55.16"],"最先进的包管理工具":["55.16"],"安装指令":["55.16"],"bash":["55.16"],"i":["55.16"],"recommended":["55.18"],"vue3语法规则":["55.18"],"plugin":["55.18"],"essential":["55.18"],"ts语法规则":["55.18"],"typescript":["55.18"],"要为特定类型的文件指定处理器":["55.18"],"overrides":["55.18"],"查找违规风格指南":["55.19"],"该解析器允许使用eslint校验所有babel":["55.19"],"code":["55.19"],"io":["55.20"],"unused":["55.20"],"vars":["55.20"],"禁止定义未使用的变量":["55.20"],"prefer":["55.20"],"expect":["55.20"],"禁止使用":["55.20"],"ignore":["55.20"],"explicit":["55.20"],"类型":["55.20"],"全局样式文件中没有办法使用":["55.21"],"变量":["55.21"],"因此需要给项目中引入全局变量":["55.21"],"variable":["55.21"],"创建一个":["55.21"],"system":["55.22"],"系统管理员":["55.22"],"用户登录接口":["55.22"],"login":["55.22"],"请求地址":["55.22"],"method":["55.22"],"请求方式":["55.22"],"response":["55.22","55.23"],"响应拦截器":["55.23"],"处理网络错误":["55.23"],"logout":["55.24"],"登录接口":["55.24"],"export":["55.24"],"reqlogin":["55.24"],"destination":["56.3"],"out":["56.3"],"onmousemove":["56.3","59.3"],"e":["56.3"],"beginpath":["56.3","64.1"],"arc":["56.3"],"pagex":["56.3"],"getseconds":["57.3"],"绘制秒针":["57.3"],"closepath":["59.3","66.2"],"onmouseup":["59.3"],"lineto":["59.3"],"它提供了许多":["60.1"],"访问":["60.3"],"轴和":["60.3"],"2d":["60.4"],"webgl":["60.4"],"它们都通过特定的方法和属性来控制视觉效果":["60.4"],"可以简单地绘制圆形":["60.5"],"矩形":["60.5"],"线条等图形":["60.5"],"在实现过程中":["60.6","60.7"],"您可以使用":["60.6"],"来监控用户的交互":["60.6"],"从而创建动画效果":["60.7"],"您可以通过原生":["60.7"],"translate":["61.0"],"图像平移":["61.0"],"上面代码会显示一个顺时针倾斜":["61.1"],"如果缩放因子为":["61.2"],"就表示图像没有任何缩放":["61.2"],"如果为":["61.2"],"则表示方向翻转":["61.2"],"下面是一个例子":["61.4"],"上面代码中":["61.5","64.2"],"第一个":["61.5"],"中":["62.0"],"只有源图像外的目标图像部分会被显示":["62.1"],"lighter":["62.1"],"显示源图像":["62.1"],"目标图像":["62.1"],"copy":["62.1"],"忽略目标图像":["62.1"],"xor":["62.1"],"getcontext":["63.1"],"当前浏览器不支持canvas":["63.1"],"请下载最新的浏览器":["63.1"],"位置的直线":["63.2"],"linewidth":["63.2"],"设置或返回当前的线条宽度":["63.2"],"linejoin":["63.2"],"getlinedash":["64.1"],"返回一个数组":["64.1"],"表示虚线里面线段和间距的长度":["64.1"],"setlinedash":["64.1"],"数组":["64.1"],"用于指定虚线里面线段和间距的长度":["64.1"],"context":["64.1"],"fillstyle":["64.2"],"fillrect":["64.2"],"定义了渐变样式":["64.2"],"以后":["64.2"],"将这个样式指定给":["64.2"],"然后":["64.2"],"就会生成以这个样式填充的矩形区域":["64.2"],"该方法的返回值是一个":["64.3"],"canvaspattern":["64.3"],"src":["64.3"],"stroke":["66.2"],"显示路径":["66.2"],"右眼":["66.3"],"时会填充为三角形":["66.4"],"onload":["66.5"],"第一种绘制图片的方式":["66.5"],"参数1图片对象":["66.5"],"参数2":["66.5"],"3将图片渲染到画布的水平和垂直位置":["66.5"],"文本对齐选项":["66.6"],"left":["66.6"],"center":["66.6"],"end":["66.6"],"文本基线对齐":["66.6"],"smil":["69.1"],"等其他网络标准无缝衔接":["69.1"],"y1":["69.3"],"rx":["69.6"],"从无到有的过程":["70.0"],"serve":["70.3"],"git":["70.3"],"如果下载了":["70.3"],"可以在当前的文件夹右键":["70.3"],"选择":["70.3"],"左上角的":["70.5"],"logo":["70.5"],"img":["70.5"],"png":["70.5"],"左上角的logo":["70.5"],"注意":["70.5"],"它的路径是从public文件夹开始的":["70.5"],"所以这里引用的是public":["70.5"],"默认是不是展开":["70.6"],"items":["70.6"],"快速开始":["70.7"],"link":["70.7"],"guide":["70.7"],"组件":["70.7"],"features":["70.7"],"icon":["70.7"],"repo":["70.8"],"lining98":["70.8"]},{"0":["11.8","18.14","30.1","34.6","37.5","55.2","59.3","66.5","69.8"],"1":["13.7","13.12","18.12","27.0","28.3","37.5","40.6","44.0","49.5","70.7"],"2":["34.10","40.6","55.2"],"3":["18.5","19.1","34.2","47.24","53.1"],"4":["15.3","17.1","53.14","53.18"],"5":["30.1","39.4","59.3","64.4"],"6":["39.4","44.0"],"7":["13.10","35.4","53.8","55.19"],"8":["13.16","55.15"],"13":["13.10"],"16":["5.1","11.8"],"18":["38.1","40.5"],"19":["55.19"],"20":["34.10","56.3","57.3"],"29":["34.9"],"30":["31.0","69.7"],"40":["33.20"],"50":["61.3","61.4","69.4","69.7","69.9"],"99":["69.9"],"100":["33.20","61.4","64.1","66.5"],"123":["17.6","40.4"],"127":["11.8"],"145":["13.10"],"200":["32.6","32.7","64.1"],"201":["55.22"],"213":["42.6"],"250":["67.1","69.7"],"300":["32.7","62.1","65.0"],"350":["67.2"],"401":["55.23"],"500":["17.4","66.4"],"501":["17.4"],"502":["17.4"],"600":["50.1"],"1234":["48.11"],"2600":["50.1"],"9000":["17.2"],"31250000":["34.2"],"如果不存在":["5.0"],"则转给哪个文件执行":["5.0"],"nginx项目部署500的问题":["5.0"],"vue项目路由不是真实存在的":["5.0"],"conf":["5.1"],"web":["11.0","13.15"],"开发框架":["11.0"],"id":["11.2","54.4","55.12"],"是一个动态的参数":["11.2"],"ids":["11.2"],"username":["11.2"],"params":["11.2","39.5"],"是动态匹配到的":["11.2"],"url":["11.2"],"css":["11.3","18.9"],"style":["11.3"],"app":["11.4"],"别忘记调用":["11.5"],"函数":["11.5","30.2","47.0"],"get":["11.6","11.12","15.14"],"user":["11.6","11.7","15.14"],"send":["11.6","32.2"],"内置中间件":["11.8"],"自":["11.8"],"版本开始":["11.8"],"内置了":["11.8"],"个常用的中间件":["11.8"],"极大的提高了":["11.8"],"项目的开发效率和体验":["11.8"],"static":["11.8"],"配置中间件":["11.10"],"的接口":["11.11"],"在浏览器中有兼容性":["11.11"],"只有支持":["11.11"],"xmlhttprequest":["11.11","32.1"],"level2":["11.11"],"custom":["11.12"],"header":["11.12"],"methods":["11.12"],"仅支持客户端发起":["11.12"],"post":["11.12","16.3","55.24"],"head":["11.12"],"请求":["11.12"],"如果客户端希望通过":["11.12"],"type":["11.14","13.17"],"只有三个值":["11.14"],"application":["11.14"],"x":["11.14","37.14"],"www":["11.14"],"请求进行预检":["11.15"],"以获知服务器是否允许该实际请求":["11.15"],"所以这一次的":["11.15"],"应用":["12.1"],"electron":["12.1"],"可以构建跨平台的桌面应用":["12.1"],"指的是":["12.2"],"的主线程只有一个":["12.2"],"为了确保主线程不被阻塞":["12.2"],"主线程是用于接收客户端请求":["12.2"],"程序运行效率较低":["12.3"],"不存在创建":["13.1"],"存在截断":["13.1"],"读写":["13.1"],"存在打开失败":["13.1"],"复制文件内容":["13.3"],"c":["13.3","13.6","14.21","14.23","38.10"],"users":["13.3","13.6"],"笔记":["13.3"],"mp3":["13.3"],"data":["13.4","16.3","17.3","17.6","47.14","55.22"],"将读取到的数据写入到可写流中":["13.4"],"write":["13.4","13.7"],"简便方式":["13.4"],"success":["13.6","32.7"],"通过可写流写入文件的内容":["13.7"],"将一个字符串转换为":["13.8"],"alloc":["13.8"],"size":["13.8"],"创建指定大小的":["13.8"],"获取文件所处的绝对路径":["13.9"],"js":["13.9","14.21","22.11","32.3","44.0","47.5","62.1"],"readfile":["13.9"],"占用内存的大小":["13.10"],"一个汉字3字节":["13.10"],"console":["13.10","13.13","15.14","33.5","33.8","33.9","33.13","33.27","33.28","35.19","38.1","38.10","38.11","40.4","47.4","47.18","47.19","47.20","56.3"],"log":["13.10","13.13","15.14","33.5","33.8","33.9","33.10","33.13","33.19","33.28","35.12","35.19","38.1","38.10","38.11","47.4","47.17","47.18","47.19","47.20"],"length":["13.10","37.5","37.12"],"字符串的长度":["13.10"],"8进制输出第一个元素":["13.10"],"用来处理路径的模块":["13.11"],"它提供了一系列的方法和属性":["13.11"],"dirname":["13.12"],"files":["13.12"],"txt":["13.12"],"utf8":["13.12"],"function":["13.12","22.11","32.6","37.14","39.4","64.3"],"fext":["13.14"],"用来创建":["13.15"],"解决中文乱码的问题":["13.16"],"setheader":["13.16","13.17"],"text":["13.16","13.17","70.5"],"html":["13.16","15.6","18.12"],"charset":["13.16"],"utf":["13.16"],"只是向外部暴露一些接口":["14.2"],"方法":["14.2","42.0"],"这种模块级别的访问限制":["14.6"],"叫做模块作用域":["14.6"],"和":["14.7","22.6","30.2","47.25"],"加载某个模块即加载该模块的":["14.8"],"扩展名加载":["14.11"],"json":["14.11","14.21","37.8","41.7","70.8"],"入口不存在或无法解析":["14.13"],"则":["14.13"],"node":["14.13","16.1","16.5","44.0"],"导致在基于内置模块进行项目开发时":["14.15"],"效率很低":["14.15"],"包是基于内置模块封装出来的":["14.15"],"如":["14.16","60.5","60.7"],"yarn":["14.16"],"pnpm":["14.16","55.15","55.19"],"taobao":["14.17"],"org":["14.17","55.20"],"切换源头":["14.17"],"description":["14.18"],"介绍包做的什么功能":["14.18"],"描述":["14.18"],"keywords":["14.18"],"关键字":["14.18"],"xxx":["14.18"],"xx":["14.18"],"还是第三方模块":["14.19"],"他们都会优先从缓存中加载":["14.19"],"扩展名进行加载":["14.21"],"b":["14.22","27.0","48.15"],"index":["14.23","28.5","33.24","33.25","33.27","55.12"],"如果以上两步都失败了":["14.23"],"测试是否正常工作":["15.2"],"query":["15.2"],"select":["15.2"],"优点":["15.5"],"前端耗时短":["15.5"],"浏览器只需直接渲染页面":["15.5"],"无需额外请求数据":["15.5"],"有利于":["15.5"],"页面在浏览器拼接完成":["15.6"],"因此爬虫无法爬取页面的有效信息":["15.6"],"vue":["15.6","55.10"],"react":["15.6"],"可使用前后端分离":["15.7"],"if":["15.11","22.11","30.1","32.6","37.12","37.14","55.22"],"return":["15.11","37.12"],"fail":["15.11","32.7"],"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9":["15.13"],"eyjpzci6mtcsinvzzxjuyw1lijoiqnj1y2uilcjwyxnzd29yzci6iiisim5py2tuyw1lijoiagvsbg8ilcjlbwfpbci6innjdxracxeuy29tiiwidxnlcl9wawmioiiilcjpyxqioje2nde4nju3mzesimv4cci6mty0mtkwmtczmx0":["15.13"],"bmqzaknszgd8izxrggyvlvwgl7egmtwitvjgd":["15.13"],"a5u5c":["15.13"],"使用方式":["15.13"],"客户端会把":["15.13"],"获取用户信息":["15.14","55.24"],"当":["15.14"],"中间件配置成功后":["15.14"],"即可在那些有权限的接口中":["15.14"],"来访问从":["15.14"],"字符串中解析出来的用户信息":["15.14"],"admin":["15.14"],"getinfo":["15.14"],"使用cdn":["16.2"],"const":["16.3","27.0","31.0","32.3","38.2","42.4","42.5","47.6","55.22"],"promise":["16.4"],"reject":["16.4"],"添加响应拦截器":["16.4"],"response":["16.4"],"也是http的实例":["16.5"],"http":["16.5"],"clientrequest":["16.5"],"in":["16.5","55.12"],"请求头设置":["17.1"],"基础请求地址":["17.2"],"timeout":["17.2"],"qs":["17.3"],"stringify":["17.3"],"序列化":["17.3"],"比如表单数据":["17.3"],"else":["17.3","30.1","48.15","59.3"],"服务器内部错误":["17.4"],"服务未实现":["17.4"],"网关错误":["17.4"],"put":["17.5"],"delete":["17.5"],"httpaction":["17.5"],"userid":["17.6"],"userlist":["17.6"],"封装axios":["17.7"],"margin":["18.1"],"h1":["18.2","18.6"],"font":["18.4"],"weight":["18.4"],"因为没有意义":["18.5"],"交集选择器中":["18.5"],"不可能":["18.5"],"出现":["18.5"],"两个元素选择器":["18.5"],"h2":["18.6","47.7"],"h3":["18.6"],"blue":["18.7","33.3","33.4","62.1"],"green":["18.8","65.0","69.5"],"选中div后紧紧相邻的兄弟p元素":["18.9"],"相邻兄弟选择器":["18.9"],"focus":["18.11"],"用于选择获取焦点的表单元素":["18.11"],"一般针对表单元素而言":["18.11"],"忽略其他非":["18.12"],"的元素":["18.12"],"div":["18.12","47.15"],"p":["18.12"],"span":["18.12"],"结尾的":["18.13"],"clearfix":["18.14"],"必须要有content属性":["18.14"],"display":["18.14"],"block":["18.14"],"块级元素":["18.14"],"height":["18.14","57.4"],"不要看见该元素":["18.14"],"核心代码清除浮动":["18.14"],"visibility":["18.14"],"通配选择器":["19.0"],"corner":["21.0"],"滚动条上的滚动滑块":["21.0"],"mp4":["22.0"],"e3a":["22.0"],"control":["22.0"],"wav":["22.2"],"ogg":["22.3"],"在":["22.5","55.4"],"video":["22.5"],"循环播放":["22.7"],"warning":["22.7"],"注意":["22.7","37.8","61.1"],"load":["22.8"],"已经开始播放时触发":["22.10"],"开始时":["22.10"],"暂停恢复后":["22.10"],"结束后重新开始":["22.10"],"var":["22.11","33.20"],"myvideo":["22.11"],"document":["22.11"],"getelementbyid":["22.11"],"new":["24.1","28.1","31.0","37.3","38.1","38.7","38.10"],"javascript":["25.1","41.1"],"中":["25.1","30.2"],"对此我们就可以采用":["26.1"],"throttle":["26.1"],"防抖":["26.1"],"秒后在执行该事件":["26.2"],"starttime":["26.4"],"curtime":["26.4"],"当前时间":["26.4"],"remaining":["26.4"],"不为null":["26.5"],"callnow":["26.5"],"第一次会立即执行":["26.5"],"以后只有事件执行后才会再次触发":["26.5"],"使用示例":["27.0"],"original":["27.0"],"a":["27.0","42.4"],"splice":["28.2"],"includes":["28.4","35.10"],"set":["28.6","34.12"],"parse":["29.2"],"isarray":["29.3"],"math":["30.1","56.3"],"random":["30.1","56.3"],"成功":["30.1"],"类的自定义实现":["30.2"],"它接受一个":["30.2"],"函数作为参数":["30.2"],"该函数立即被调用并接收两个函数作为参数":["30.2"],"当异步操作成功时":["30.2"],"调用":["30.2"],"当它失败时":["30.2"],"类有一个":["30.2"],"and":["31.0"],"i":["31.0"],"am":["31.0"],"years":["31.0"],"old":["31.0"],"alice":["31.0"],"对象来向服务器发异步请求":["32.1"],"从服务器获得数据":["32.1"],"方法发送给服务器端":["32.2"],"布尔值":["32.4"],"表示是否异步执行操作":["32.4"],"默认为":["32.4"],"true":["32.4","47.29"],"请求发送数据的时候":["32.5"],"需要注意如下":["32.5"],"将请求数据添加到":["32.5"],"open":["32.5"],"e":["32.6"],"整个请求过程完毕":["32.6"],"status":["32.6","55.23"],"responsetext":["32.7"],"responsexml":["32.7"],"需要留意的是哪些方法会对原数组产生影响":["33.1"],"哪些方法不会":["33.1"],"concat":["33.2"],"推入两项":["33.3"],"red":["33.4"],"从数组开头推入两项":["33.4"],"slice":["33.7"],"concole":["33.11"],"array":["33.17","33.27","34.8"],"直接使用sort":["33.20"],"方法排序":["33.20"],"arr":["33.20"],"foreach":["33.23"],"filter":["33.23"],"item":["33.24","33.25","55.12","55.22"],"undefined":["34.1"],"125e7":["34.2"],"等于":["34.2"],"在数值类型中":["34.2"],"存在一个特殊数值":["34.2"],"nan":["34.2","34.6"],"意为":["34.2"],"这个变量被声明了":["34.3"],"只是值为":["34.3"],"它们的值就不能变了":["34.4"],"lang":["34.4"],"值是由":["34.5"],"值派生而来":["34.5"],"非零数值":["34.6"],"包括无穷值":["34.6"],"object":["34.6"],"foo":["34.7"],"otherfoosymbol":["34.7"],"age":["34.9","34.10","39.2"],"箭头函数":["34.11"],"解析器首先要确认的就是这个值是基本类型值还是引用类型值":["34.13"],"的值为一个基本类型":["34.14"],"是存储在栈中":["34.14"],"将":["34.14"],"是一个引用类型":["34.15"],"在赋值操作过程汇总":["34.15"],"实际是将堆内存对象在栈内存的引用地址复制了一份给了":["34.15"],"两个对象对应不同的地址":["34.16"],"需要知道字符串的特点是一旦创建了":["35.1"],"还可通过":["35.2"],"w":["35.4"],"padstart":["35.5"],"padend":["35.5"],"replace":["35.16"],"matches":["35.17"],"pos":["35.18"],"ond":["35.19"],"str":["37.1"],"hex":["37.2"],"0xf00d":["37.2"],"十六进制":["37.2"],"createdboolean":["37.3"],"元素类型":["37.4"],"如果你配置了":["37.8"],"tsconfig":["37.8"],"开启了严格模式":["37.8"],"strict":["37.8"],"这样是没问题的":["37.9"],"因为存在死循环":["37.10"],"loop":["37.10"],"error":["37.12","39.5"],"需求":["37.14"],"定义一个函数得到一个字符串或者数值数据的长度":["37.14"],"getlength":["37.14"],"语法糖":["38.0"],"它的绝大部分功能":["38.0"],"zs":["38.1","47.6"],"调用实例的方法":["38.1"],"wang":["38.2"],"也可以外部访问":["38.4"],"不能在外部访问":["38.5"],"为私有属性":["38.6"],"只能在类":["38.6"],"中访问":["38.6"],"可以在这里使用":["38.6"],"let":["38.6","38.7","38.11","56.3"],"john":["38.7"],"需注意":["38.8"],"如果两个函数都是static":["38.8"],"静态的是可以通过this互相调用":["38.8"],"extends":["38.9","40.7"],"我的名字是":["38.11"],"this":["38.11"],"年龄是":["38.11"],"string":["39.2","40.2","40.3","42.1"],"info":["39.4"],"如果参数类型不同":["39.5"],"则参数类型应设置为":["39.5"],"any":["39.5","55.24"],"参数数量不同你可以将不同的参数设置为可选":["39.5"],"fn":["39.5"],"如果不传类型":["40.3"],"那么typescript会类型推论":["40.3"],"number":["40.4","55.2"],"abc":["40.4"],"person2":["40.5"],"的一个超集":["41.1"],"所以对于项目而言":["41.2"],"会使代码更加规范":["41.2"],"从而解决了大型项目代码的复杂性":["41.2"],"完全支持":["41.3"],"vue3已全面支持":["41.5"],"增加前期开发的成本":["41.6"],"毕竟你需要写更多的代码":["41.6"],"配置文件":["41.7"],"init":["41.7"],"ts":["41.10"],"obj":["42.3"],"a是必须要有的":["42.5"],"其他就不会校验了":["42.5"],"ok":["43.1"],"字面量模式":["43.1"],"空对象类型和大":["43.1"],"switch":["44.0","55.23"],"语句的":["44.0"],"fallthrough":["44.0"],"错误":["44.0"],"即":["44.0"],"不允许":["44.0"],"的":["44.0"],"case":["44.0","55.23"],"语句贯穿":["44.0"],"模块解析选项":["44.0"],"moduleresolution":["44.0"],"选择模块解析策略":["44.0"],"classic":["44.0"],"typescript":["44.0"],"pre":["44.0"],"分配给类型":["45.1"],"定义变量时没有赋值":["45.1"],"推断为any类型":["45.1"],"s2":["45.2"],"也不用写export":["47.0"],"default":["47.0","55.21"],"数据":["47.1"],"方法等等":["47.1"],"均要配置在":["47.1"],"按钮":["47.2","47.12"],"tip":["47.2"],"提示":["47.2"],"模板中使用的数据和方法":["47.2"],"都需要通过":["47.2"],"msg":["47.4","48.13","48.17","55.23"],"这样是可以被监听到的修改value":["47.5"],"changemsg":["47.6","48.12","48.13"],"实现":["47.7"],"debounce":["47.7"],"的示例":["47.7"],"控制台警告":["47.8"],"value":["47.8","55.10"],"cannot":["47.8"],"返回一个原值的只读代理":["47.9"],"change2":["47.10"],"click":["47.12","48.16","55.3","55.8"],"change":["47.12"],"name":["47.13","48.17"],"template":["47.15","48.5"],"参数三":["47.16"],"options配置项":["47.16"],"为一个对象":["47.16"],"immediate":["47.16"],"新的值":["47.17"],"newval":["47.18","47.19","47.20"],"oldval":["47.18","47.19","47.20"],"默认初始时就会执行第一次":["47.21"],"产生的副作用":["47.22"],"就是在触发监听之前会调用一个函数可以处理你的逻辑":["47.22"],"但是我们采用异步的方式创建了一个监听器":["47.23"],"这个时候监听器没有与当前组件绑定":["47.23"],"强制效果始终同步触发":["47.24"],"beforecreate":["47.25"],"改用updated":["47.27"],"beforeunmount":["47.27","47.28"],"在元素被移除前调用":["47.27"],"更新结束":["47.28"],"bar":["47.29"],"修饰符对象为":["47.29"],"内容":["47.30"],"innerheight":["47.31"],"addeventlistener":["47.31"],"resize":["47.31"],"removeeventlistener":["47.31"],"用法":["48.2"],"直接在其他":["48.2"],"子组件接受值":["48.6"],"通过":["48.6","62.0"],"来接受":["48.6"],"是无须引入的直接使用即可":["48.6"],"v":["48.8"],"简写":["48.9"],"这里的两个":["48.10"],"list":["48.12","48.13"],"默认渲染的页面":["48.13"],"children":["48.13","48.17"],"插入至":["48.14"],"to":["48.14"],"button":["48.16"],"onchangemsg":["48.16"],"改变msg":["48.16"],"绑定多个v":["48.17"],"以上":["49.3"],"mode":["49.4"],"router":["49.4"],"additional":["49.4"],"这两种使用vite创建vue3项目的步骤一样":["49.5"],"运行命令":["49.5"],"输入项目名称":["49.5"],"img":["49.5"],"次提交":["50.1"],"重写虚拟dom的实现和tree":["50.2"],"文档碎片":["50.3"],"teleport":["50.3"],"瞬移组件的位置":["50.3"],"指定文件添加暂存区":["53.5"],"提交指定文件":["53.6"],"往前一个版本":["53.7"],"版本号1":["53.7"],"版本号2":["53.7"],"graph":["53.8"],"查看涉及到指定文件的":["53.8"],"commit":["53.8"],"commitid":["53.10"],"基于当前分支创建分支并切换到新分支":["53.10"],"把":["53.14"],"staged":["53.15"],"unstage":["53.15"],"remove":["53.18"],"别名":["53.20"],"com":["54.1","54.3","64.3"],"打开git":["54.2"],"配置后结果":["54.3"],"会生成":["54.4"],"20230222160826601":["54.5"],"plus":["55.0"],"axios":["55.0"],"vuex":["55.1","55.11"],"集中式状态管理容器":["55.1"],"实现任意组件通信":["55.1"],"ref":["55.1"],"父组件获取子组件实例":["55.1"],"比如":["55.3"],"dbclick":["55.3","55.4"],"vue3":["55.4","55.9"],"框架":["55.4"],"方法去触发自定义事件":["55.5"],"第一个参数为触发事件类型":["55.5"],"第二个":["55.5"],"三个":["55.5"],"n":["55.5"],"个参数即为传递给父组件的数据":["55.5"],"需要注意的是":["55.5"],"代码如下":["55.5"],"如果想在":["55.6"],"中使用全局事件总线功能":["55.6"],"可以使用插件":["55.6"],"mitt":["55.6"],"传递两个":["55.7"],"分别是":["55.7"],"pageno":["55.7"],"与":["55.7"],"pagesize":["55.7"],"以及绑定两个自定义事件":["55.7"],"handler":["55.8"],"子组件内部可以通过":["55.8"],"因为":["55.9"],"中组件内部的数据对外":["55.9"],"关闭的":["55.9"],"外部不能访问":["55.9"],"key":["55.10","55.12"],"与提供数据":["55.10"],"但是核心概念没有":["55.11"],"ul":["55.12"],"组件内部遍历数组":["55.12"],"li":["55.12"],"for":["55.12"],"todos":["55.12"],"作用域插槽将数据回传给父组件":["55.12"],"row":["55.12"],"拦截":["55.14"],"commitlint":["55.14"],"项目初始化命令":["55.16"],"create":["55.16"],"进入到项目根目录":["55.16"],"指定解析器":["55.18"],"解析器":["55.18"],"esprima":["55.18"],"默认解析器":["55.18"],"babel":["55.18"],"babel解析器":["55.18"],"parser":["55.18","55.19"],"ts解析器":["55.18"],"安装指令":["55.19"],"install":["55.19"],"d":["55.19"],"non":["55.20"],"null":["55.20"],"assertion":["55.20"],"namespace":["55.20"],"禁止使用自定义":["55.20"],"模块和命名空间":["55.20"],"semi":["55.20"],"vuejs":["55.20"],"multi":["55.20"],"word":["55.20"],"component":["55.20"],"names":["55.20"],"要求组件名称始终为":["55.20"],"链接的单词":["55.20"],"script":["55.20"],"vite":["55.21"],"config":["55.21"],"文件配置如下":["55.21"],"export":["55.21"],"defineconfig":["55.21"],"body":["55.22"],"获取请求体携带过来的用户名与密码":["55.22"],"调用获取用户信息函数":["55.22"],"用于判断是否有此用户":["55.22"],"checkuser":["55.22"],"find":["55.22"],"没有用户返回失败信息":["55.22"],"code":["55.22"],"message":["55.22"],"账号或者密码不正确":["55.22"],"如果有返回成功信息":["55.22"],"token过期":["55.23"],"break":["55.23"],"pagey":["56.3"],"pi":["56.3"],"fill":["56.3","69.4","69.5","69.7","69.8"],"closepath":["56.3"],"绘制分针":["57.3"],"stroke":["59.3","69.5"],"onclick":["59.3"],"globalcompositeoperation":["59.3"],"source":["59.3"],"over":["59.3"],"linewidth":["59.3"],"允许控制绘图区域":["60.1"],"颜色":["60.1"],"线条":["60.1"],"轴上的位置以及宽度和高度等信息":["60.3"],"通过为图形或其他元素设置":["60.3"],"常见的":["60.4"],"绘图上下文时":["60.4"],"也可以绘制更高级的元素":["60.5"],"3d":["60.5"],"图形和曲线":["60.5"],"并使用":["60.6"],"api":["60.6"],"来更新和显示数据":["60.6"],"语言或":["60.7"],"库":["60.7"],"jquery":["60.7"],"时存在差异":["60.8"],"因此需要在开发过程中进行跨浏览器的测试":["60.8"],"此外":["60.8"],"transform":["61.0"],"通过一个变换矩阵完成图像变换":["61.0"],"度的矩形":["61.1"],"方法必须在":["61.1"],"为水平翻转":["61.2"],"表示垂直翻转":["61.2"],"fillstyle":["61.3","62.1"],"fillrect":["61.4","62.1"],"上面代码中":["61.4"],"原始图形是":["61.4"],"方法绘制的矩形":["61.5"],"左上角从":["61.5"],"平移到":["61.5"],"把图像源和目标图像":["62.0"],"使用异或操作对源图像与目标图像进行组合":["62.1"],"context":["62.1","63.1"],"获取画笔":["63.1"],"2d":["63.1"],"设置或返回两条线相交时":["63.2"],"所创建的拐角类型":["63.2"],"linecap":["63.2"],"设置或返回线条的结束端点样式":["63.2"],"beginpath":["63.2"],"moveto":["64.1","66.3"],"lineto":["64.1"],"方法定义一个辐射渐变":["64.2"],"需要指定两个圆":["64.2"],"r0":["64.2"],"r1":["64.2"],"方法接受六个参数":["64.2"],"是辐射起始的圆的圆心坐标":["64.2"],"是起始圆的半径":["64.2"],"https":["64.3"],"example":["64.3"],"pattern":["64.3"],"png":["64.3"],"onload":["64.3"],"rgba":["64.4"],"arcto":["66.3"],"方法主要用来绘制圆弧":["66.3"],"需要给出两个点的坐标":["66.3"],"当前点与第一个点形成一条直线":["66.3"],"第一个点与第二个点形成另一条直线":["66.3"],"然后画出与这两根直线相切的弧线":["66.3"],"第二种绘制图片的方式":["66.5"],"把图片缩放到600400":["66.5"],"top":["66.6"],"hanging":["66.6"],"middle":["66.6"],"ideographic":["66.6"],"bottom":["66.6"],"文本方向":["66.6"],"ltr":["66.6"],"使用":["69.1","70.8"],"xml":["69.1"],"格式定义图形":["69.1"],"在不给":["69.1"],"y2":["69.3"],"ry":["69.6"],"opacity":["69.8"],"官方网站":["70.0"],"here":["70.3"],"也可以在":["70.3"],"vscode":["70.3"],"上使用":["70.3"],"按":["70.3"],"ctrl":["70.3"],"j":["70.3"],"打开终端":["70.3"],"点击":["70.3"],"符号右边的下三角":["70.3"],"jpg这张图":["70.5"],"nav":["70.5"],"右上角的导航栏":["70.5"],"关于":["70.5"],"导航标签的名字":["70.5"],"items":["70.5"],"这种格式是有下拉菜单的版本":["70.5"],"关于1":["70.5","70.6"],"link":["70.5","70.6"],"about":["70.5","70.6"],"功能":["70.7"],"特点":["70.7"],"details":["70.7"],"具体描述信息":["70.7"],"gh":["70.8"],"pages":["70.8"],"配置":["70.8"],"package":["70.8"],"scripts":["70.8"]},{"0":["13.10","40.4","45.2","55.15","64.3"],"1":["13.9","13.10"],"2":["13.7","18.12","27.0","35.7","35.11","70.7"],"3":["13.7","18.12","40.6","49.5","53.15","63.1","64.1"],"4":["18.5","18.12","18.14","49.5","53.1","53.21","57.3"],"5":["15.11","17.1","34.9","66.3"],"6":["15.14","33.28"],"7":["18.14"],"8":["13.10","13.17","33.28","53.8"],"9":["35.8"],"10":["13.10","33.28","39.3"],"18":["37.13","42.3"],"20":["38.6","61.2"],"25":["33.20","66.3"],"28":["33.17"],"50":["64.2","69.6"],"60":["69.9"],"70":["69.9"],"80":["11.2","11.6","11.7","13.17"],"88":["13.10"],"100":["62.1","67.2"],"123":["40.7","42.6","43.1"],"150":["67.2"],"200":["55.22","61.4","62.1"],"213":["42.5","45.2"],"300":["32.6"],"350":["67.1"],"400":["32.6","65.0","66.4","66.5"],"403":["55.23"],"404":["55.23"],"500":["55.23"],"503":["17.4"],"504":["17.4"],"505":["17.4"],"560":["22.11"],"600":["18.4"],"1000":["30.1"],"8080":["13.16"],"要加上这段代码":["5.0"],"router":["5.0"],"rewrite":["5.0"],"start":["5.1"],"是用于快速创建服务器的第三方模块":["11.0"],"参数":["11.2"],"默认是一个空对象":["11.2"],"listen":["11.2","11.4","11.6","11.7","13.16","13.17"],"login":["11.3"],"通过带有":["11.3"],"前缀的地址访问":["11.3"],"目录下的文件":["11.3"],"添加访问前缀":["11.4"],"use":["11.4","11.10"],"api":["11.4","12.1","17.1"],"函数后别写代码":["11.5"],"多个中间件共享":["11.5"],"page":["11.6"],"function":["11.7","34.8","42.7"],"快速托管静态资源的内置中间件":["11.8"],"例如":["11.8","11.11"],"html":["11.8","55.9"],"文件":["11.8","54.4","55.20"],"图片":["11.8"],"css":["11.8","18.12","55.21"],"样式等":["11.8"],"无兼容性":["11.8"],"json":["11.8","17.3"],"解析":["11.8","15.14"],"格式的请求体数据":["11.8"],"有兼容性":["11.8"],"仅在":["11.8"],"版本中可用":["11.8"],"urlencoded":["11.8","11.14"],"url":["11.8","32.5"],"app":["11.10","47.7","48.14","55.20"],"的浏览器":["11.11"],"才能正常访问开启了":["11.11"],"的服务端接口":["11.11"],"put":["11.12"],"delete":["11.12","15.3","53.21"],"等方式请求服务器的资源":["11.12"],"alow":["11.12"],"来指明实际请求所允许使用的":["11.12"],"方法":["11.12","30.2"],"form":["11.14"],"multipart":["11.14"],"请求称为":["11.15"],"restify":["12.1"],"但不会处理具体的任务":["12.2"],"的背后还有一个线程池":["12.2"],"线程池会处理长时间运行的任务":["12.2"],"比如":["12.2"],"每秒的请求数维持在一个较低的水平":["12.3"],"a":["13.1","33.20","59.3"],"追加":["13.1"],"ax":["13.1"],"存在失败":["13.1"],"将data写入到文件中":["13.3"],"writefile":["13.3"],"hello":["13.3","61.2","66.6","70.3"],"lilichao":["13.4"],"desktop":["13.4"],"通过":["13.6","15.14","55.10"],"写入的内容":["13.6"],"w":["13.6"],"allounsafe":["13.8"],"可能包含敏感数据":["13.8"],"分配内存时不会清除内存残留的数据":["13.8"],"files":["13.9"],"txt":["13.9"],"utf8":["13.9"],"tostring":["13.10"],"创建一个10个字节的buffer":["13.10"],"buf2":["13.10"],"alloc":["13.10"],"通过索引":["13.10"],"来操作buf中的元素":["13.10"],"用来满足用户对路径的处理需求":["13.11"],"err":["13.12","15.2"],"datastr":["13.12"],"if":["13.12","15.2"],"return":["13.12","15.2","37.14","42.7","47.2","47.31"],"namewithoutext":["13.13"],"console":["13.14","13.17","15.2","17.3","30.1","32.6","33.3","33.4","33.24","33.25","34.2","35.17","35.18","66.6"],"log":["13.14","15.2","17.3","30.1","32.6","33.3","33.4","33.27","34.2","35.17","35.18","40.4","56.3","66.6"],"服务器的模块":["13.15"],"向客户端响应内容":["13.16"],"end":["13.16","13.17"],"charset":["13.17"],"utf":["13.17"],"与外部其它模块通信":["14.2"],"模块化规范是对代码进行模块化拆分和组合时需要遵守的规则":["14.2"],"防止全局变量污染":["14.6"],"指向同一个对象":["14.7"],"最终共享的结果":["14.7"],"以":["14.7"],"属性":["14.8"],"js":["14.13","16.1","16.2","47.2"],"将会试图加载目录下的":["14.13"],"index":["14.13","33.26","55.20","70.3"],"提供了更高级":["14.15"],"更方便的":["14.15"],"极大提高了开发效率":["14.15"],"下载安装速度是比":["14.16"],"xxxx":["14.18","32.7"],"license":["14.18"],"isc":["14.18"],"开源协议":["14.18"],"发布":["14.18"],"publish":["14.18"],"从而提高模块的加载效率":["14.19"],"d":["14.21","14.22","38.10"],"会在终端打印错误消息":["14.23"],"报告模块的缺失":["14.23"],"error":["14.23","37.11","38.11"],"results":["15.2"],"删除数据":["15.3"],"使用":["15.3","47.31"],"语句会真正删除数据":["15.3"],"保险起见":["15.3"],"seo":["15.5"],"服务器响应的是完整的":["15.5"],"页面内容":["15.5"],"有利于爬虫爬取信息":["15.5"],"缺点":["15.5"],"占用服务器资源":["15.5"],"等框架的":["15.6"],"ssr":["15.6"],"server":["15.6"],"side":["15.6"],"render":["15.6"],"为同时兼顾首页渲染速度和前后端分离开发效率":["15.7"],"可采用首屏服务器端渲染":["15.7"],"success":["15.11","37.5"],"清空":["15.11"],"是目前最流行的跨域认证解决方案":["15.12"],"存储在":["15.13"],"localstorage":["15.13"],"或":["15.13"],"sessionstorage":["15.13"],"中":["15.13","16.1","47.1"],"此后客户端与服务端通信需要携带":["15.13"],"进行身份认证":["15.13"],"将":["15.13"],"存在":["15.13"],"获取信息成功":["15.14"],"data":["15.14"],"捕获解析":["15.14"],"失败后产生的错误":["15.14"],"当使用":["15.14"],"如果客户端发送过来的":["15.14"],"字符串过期或不合法":["15.14"],"会产生一个解析失败的错误":["15.14"],"影响项目的正常运行":["15.14"],"的错误中间件":["15.14"],"捕获这个错误并进行相关的处理":["15.14"],"res":["16.3","38.11"],"result":["16.4"],"对响应数据做点什么":["16.4"],"在设置请求时发生了一些事情":["16.5"],"触发了一个错误":["16.5"],"请求超时设置":["17.2"],"withcredentials":["17.2"],"false":["17.2","40.3"],"默认类型":["17.3"],"服务不可用":["17.4"],"服务暂时无法访问":["17.4"],"请稍后再试":["17.4"],"一次封装终身受益":["17.7"],"美团后端连连点赞":["17.7"],"color":["18.2"],"ccc":["18.2","57.3"],"因为一个元素":["18.5"],"不可能即使":["18.5"],"又是":["18.5"],"span":["18.5"],"元素":["18.5"],"text":["18.6","18.9"],"align":["18.6"],"decoration":["18.9"],"underline":["18.9"],"选中div后所有的兄弟p元素":["18.9"],"通用兄弟选择器":["18.9"],"input":["18.11","47.7"],"textarea":["18.11"],"啥都选不到":["18.12"],"ie6":["18.14"],"专有":["18.14"],"zoom":["18.14"],"父级元素添加双伪元素":["18.14"],"相同级别的选择器":["19.0"],"显示最后面的样式":["19.0"],"特殊规则":["19.1"],"行内样式":["19.1"],"权重大于":["19.1"],"所有选择器":["19.1"],"important":["19.1"],"的权重":["19.1"],"大于":["19.1"],"thumb":["21.0"],"border":["21.0"],"radius":["21.0"],"10px":["21.0"],"属性供添加播放":["22.0"],"暂停和音量控件":["22.0"],"在":["22.0","47.2","55.20"],"与":["22.0","22.5"],"之间你需要插入浏览器不支持的":["22.0"],"元素的提示文本":["22.0"],"audio":["22.6"],"track":["22.6"],"ie":["22.7"],"下可以正常使用":["22.7"],"chrome":["22.7"],"重新加载":["22.8"],"都会触发":["22.10"],"onplaying":["22.10"],"正在播放":["22.10"],"不要眨眼":["22.10"],"paused":["22.11"],"play":["22.11"],"else":["22.11","29.4","32.6","37.12","37.14","56.3"],"pause":["22.11"],"每当创建一个函数":["25.1"],"闭包就会在函数创建的同时被创建出来":["25.1"],"和":["26.1","48.15","60.3"],"debounce":["26.1"],"节流":["26.1"],"秒内被重复触发":["26.2"],"从上一次到现在":["26.4"],"还剩下多少多余时间":["26.4"],"context":["26.4"],"arguments":["26.4"],"cleartimeout":["26.4"],"null":["26.5","32.4","34.1","34.6","37.7"],"c":["27.0","35.11","42.6"],"创建原始对象的深拷贝":["27.0"],"现在复制和原始对象是完全独立的":["27.0"],"对一个的更改不会影响另一个":["27.0"],"arr":["28.1"],"每删除一个树":["28.2"],"保证j的值经过自加后不变":["28.2"],"同时":["28.2","60.5","60.7"],"减少循环次数提升性能":["28.2"],"push":["28.3","28.4","28.6","29.4","34.10"],"indexof":["28.5"],"true":["28.6","34.5","34.9","37.8","40.3","47.4","47.16","55.21"],"res4":["29.3"],"失败":["30.1"],"then":["30.1"],"value":["30.1","45.2","47.6"],"它接受两个参数":["30.2"],"如果":["30.2"],"被":["30.2"],"函数将使用传递给":["30.2"],"的值调用":["30.2"],"的原因调用":["30.2"],"输出":["31.0"],"然后用":["32.1"],"来操作":["32.1"],"对象提供的":["32.2"],"onreadystatechange":["32.2"],"事件监听服务器端你的通信状态":["32.2"],"接受并处理服务端向客户端响应的数据结果":["32.2"],"xhr":["32.3"],"new":["32.3","37.11","38.2","38.6","38.11","59.3"],"可选的用户名用于认证用途":["32.4"],"方法中的":["32.5"],"地址中":["32.5"],"发送请求数据中的":["32.5"],"服务端返回的结果":["32.6"],"使用方式如下":["32.7"],"https":["32.7","55.6"],"下面对数组常用的操作方法做一个归纳":["33.1"],"b":["33.20","53.19"],"map":["33.23"],"array":["33.24","33.25","33.26"],"item":["33.26"],"symbol":["34.1"],"不是数值":["34.2"],"用于表示本来要返回数值的操作失败了":["34.2"],"而不是抛出错误":["34.2"],"java":["34.4"],"只要变量要保存对象":["34.5"],"任意对象":["34.6"],"undefined":["34.6"],"n":["34.6"],"函数声明和函数表达式两种方式":["34.11"],"等":["34.12"],"下面来举个例子":["34.13"],"的值赋给":["34.14"],"实际上他们共同指向了同一个堆内存对象":["34.15"],"所以更改":["34.15"],"会对":["34.15"],"复杂类型赋值":["34.16"],"是将保存对象的内存地址赋值给另一个变量":["34.16"],"就不可变":["35.1"],"concat":["35.2"],"tolowercase":["35.5"],"touppercase":["35.5"],"o":["35.12"],"at":["35.18"],"cond":["35.19"],"ddd":["37.1"],"binary":["37.2"],"0b1010":["37.2"],"二进制":["37.2"],"这样会报错":["37.3"],"应为事实上":["37.3"],"数字是没有length":["37.5"],"的":["37.5"],"元组类型还可以支持自定义名称和变为可选的":["37.5"],"异构枚举":["37.6"],"可以同时包含数字和字符串":["37.6"],"那么":["37.8"],"会报错":["37.8"],"或者这样的":["37.9"],"throw":["37.11"],"es5都可以做到":["38.0"],"新的class写法只是让对象原型的写法更加清晰":["38.0"],"如果不写默认就是public":["38.4"],"ls":["38.6"],"lisi":["38.6","47.6"],"super":["38.9"],"zs":["38.11","42.2"],"无法创建抽象类的实例":["38.11"],"res1":["38.11"],"x":["39.4","61.4"],"string":["39.4","55.20"],"args":["39.4"],"void":["39.5"],"params2":["39.5"],"默认t为boolean类型":["40.3"],"length":["40.4"],"而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程":["41.1"],"其次":["41.2"],"浏览器是不识别ts的":["41.2"],"所以在编译的时候":["41.2"],"可以直接转换":["41.3"],"有类型支持":["41.3"],"typescript":["41.5"],"但是便于后期的维护":["41.6"],"严格模式":["41.7"],"在tsconfig":["41.7"],"json中":["41.7"],"strict":["41.7"],"直接进行ts":["41.10"],"的抽象":["42.0"],"描述":["42.0"],"const":["42.1","47.5"],"一样":["43.1"],"也是表示原始类型和非原始类型的集合":["43.1"],"a1":["43.1"],"a2":["43.1"],"a3":["43.1"],"baseurl":["44.0"],"用于解析非相对模块名称的基目录":["44.0"],"paths":["44.0"],"模块名到基于":["44.0"],"的路径映射的列表":["44.0"],"rootdirs":["44.0"],"根文件夹列表":["44.0"],"其组合内容表示项目运行时的结构内容":["44.0"],"typeroots":["44.0"],"包含类型声明的文件列表":["44.0"],"types":["44.0"],"需要包含的类型声明文件名列表":["44.0"],"allowsyntheticdefaultimports":["44.0"],"允许从没有设置默认导出的模块中默认导入":["44.0"],"source":["44.0"],"options":["44.0"],"sourceroot":["44.0"],"指定调试器应该找到":["44.0"],"文件而不是源文件的位置":["44.0"],"maproot":["44.0"],"指定调试器应该找到映射文件而不是生成文件的位置":["44.0"],"inlinesourcemap":["44.0"],"n2":["45.1"],"any类型":["45.1"],"定义值的别名":["45.2"],"boolean":["45.2"],"甚至是自定义指令也可以在我们的":["47.0"],"中自动获得":["47.0"],"本篇内容基于":["47.0"],"vue":["47.1","47.9","47.21","47.22"],"template":["47.1","47.31","48.2"],"div":["47.1","48.13","48.17"],"setup":["47.2","55.20"],"函数":["47.2"],"出去才可以被使用":["47.2"],"函数创建的响应式数据":["47.2"],"在模板中可以直接被使用":["47.2"],"v":["47.7"],"model":["47.7"],"keyword":["47.7"],"placeholder":["47.7"],"be":["47.8"],"made":["47.8"],"test2":["47.10"],"state":["47.12"],"age":["47.13"],"info":["47.15","55.22"],"deep":["47.16"],"是否立即调用一次":["47.16"],"旧的值":["47.17"],"immediate":["47.17"],"新的值":["47.18","47.19","47.20"],"从而可以收集需要监视的数据":["47.21"],"例如防抖":["47.22"],"所以即使组件销毁了":["47.23"],"监听器依然存在":["47.23"],"post":["47.24"],"组件更新后执行":["47.24"],"created":["47.25"],"这两个生命周期的":["47.25"],"unmounted":["47.27","47.28"],"指令被移除后调用":["47.27"],"卸载之前":["47.28"],"dir":["47.29"],"一个对象":["47.29"],"在注册指令时作为参数传递":["47.29"],"在以下指令中":["47.29"],"第三个":["47.29"],"当前元素的虚拟dom":["47.29"],"也就是vnode":["47.29"],"export":["47.31","55.20"],"default":["47.31","55.23"],"h3":["47.31"],"屏幕尺寸":["47.31"],"页面":["48.2"],"立即使用即可":["48.2"],"无需引入":["48.2"],"componenta":["48.5"],"菜单区域":["48.6"],"abcde":["48.8"],"插值表达式渲染的内容都是一样的":["48.10"],"tip":["48.10","48.16","66.3"],"父组件模板中的表达式只能访问父组件的作用域":["48.10"],"页面还没加载出来展示的页面":["48.13"],"children":["48.14"],"默认":["48.14","55.18"],"transition":["48.15"],"一起使用":["48.15"],"如果传递普通的值":["48.16"],"是不具有响应式的":["48.16"],"子组件":["48.17"],"p":["48.17"],"version":["49.3"],"lint":["49.4"],"where":["49.4"],"do":["49.4"],"prefer":["49.4"],"placing":["49.4"],"eslint":["49.4"],"构建的项目模板":["49.5"],"选择语言":["49.5"],"切换目录":["49.5"],"次pr":["50.1"],"vue3支持vue2的大多数特性":["50.1"],"shaking":["50.2"],"suspense":["50.3"],"异步加载组件的loading界面":["50.3"],"其它api更新":["50.3"],"查看全局配置":["53.1"],"list":["53.1","54.3"],"file1":["53.5"],"记录":["53.8"],"filename":["53.8"],"查看指定文件每一行修改对应的":["53.8"],"checkout":["53.10"],"到":["53.14"],"工作区和暂存区所有文件恢复成和":["53.15"],"hard":["53.15"],"rebase":["53.16"],"i":["53.16"],"修改别名":["53.18"],"远程仓库分支名":["53.19"],"分支名":["53.20"],"强制推送":["53.21"],"downloads":["54.1"],"bash命令窗口":["54.2"],"这个文件一般在c盘的":["54.4"],"20230222161109182":["54.5"],"echarts":["55.0"],"等技术栈":["55.0"],"vc":["55.1"],"获取子组件的响应式数据以及方法":["55.1"],"slot":["55.1"],"插槽":["55.1"],"默认插槽":["55.1"],"子组件获取到":["55.2"],"change":["55.3","55.4"],"mouseenter":["55.3"],"mouseleave":["55.3"],"这类原生":["55.4"],"不管是在标签":["55.4"],"自定义标签上":["55.4"],"组件标签":["55.4"],"正常说组件标签书写":["55.5"],"应该为原生":["55.5"],"dom":["55.5"],"事件":["55.5"],"实现":["55.6"],"官网地址":["55.6"],"www":["55.6"],"实现父子数据同步":["55.7"],"方法获取组件属性与事件":["55.8"],"因此你也发现了":["55.8"],"它类似于":["55.8"],"props":["55.8"],"可以接受父组件传递过来的属性与属性值":["55.8"],"需要注意如果":["55.8"],"可以获取某一个组件的父组件实例":["55.9"],"因此可以使用父组件内部的数据与方法":["55.9"],"必须子组件内部拥有一个按钮点击时候获取父组件实例":["55.9"],"当然父组件的数据与方法需要通过":["55.9"],"方法对外暴露":["55.9"],"后代组件可以通过":["55.10"],"方法获取数据":["55.10"],"mutation":["55.11"],"modules":["55.11"],"父组件内部代码如下":["55.12"],"来统一提交规范":["55.14"],"preinstall":["55.14"],"来统一包管理工具":["55.14"],"install":["55.16"],"安装全部依赖":["55.16"],"安装完依赖运行程序":["55.16"],"run":["55.16"],"运行完毕项目跑在http":["55.16"],"指定解析器选项":["55.18"],"parseroptions":["55.18"],"ecmaversion":["55.18"],"latest":["55.18"],"校验ecma最新版本":["55.18"],"sourcetype":["55.18"],"设置为":["55.18"],"script":["55.18"],"或者":["55.18"],"代码在ecmascript模块中":["55.18"],"uses":["55.20"],"防止":["55.20"],"src":["55.20","59.3"],"文件夹目录下创建一个":["55.20"],"用于注册":["55.20"],"components":["55.20"],"文件夹内部全部全局组件":["55.20"],"import":["55.20"],"svgicon":["55.20"],"from":["55.20"],"type":["55.20"],"name":["55.20"],"preprocessoroptions":["55.21"],"javascriptenabled":["55.21"],"additionaldata":["55.21"],"获取用户信息":["55.22"],"get":["55.22","55.24"],"request":["55.22"],"获取请求头携带token":["55.22"],"headers":["55.22"],"查看用户信息是否包含有次token用户":["55.22"],"无权访问":["55.23"],"请求地址错误":["55.23"],"服务器出现问题":["55.23"],"requserinfo":["55.24"],"退出登录":["55.24"],"textcontent":["56.3"],"一等奖":["56.3"],"绘制时针":["57.3"],"urldata":["59.3"],"todataurl":["59.3"],"img":["59.3"],"image":["59.3"],"body":["59.3"],"appendchild":["59.3"],"downloada":["59.3"],"createelement":["59.3"],"setattribute":["59.3"],"download":["59.3"],"签名":["59.3"],"href":["59.3"],"文本":["60.1"],"图像等多种元素":["60.1"],"坐标值":["60.3"],"可以在":["60.3"],"渲染上下文":["60.4"],"它提供了许多":["60.4"],"来绘制图形":["60.4"],"可以使用":["60.5"],"javascript":["60.5"],"此外":["60.6"],"还可以与其他":["60.6"],"greensock":["60.7"],"等库或框架":["60.7"],"来进行高级别的动画控制":["60.7"],"在处理大量的图像和其他复杂的数据时":["60.8"],"settransform":["61.0"],"方法之前调用":["61.1"],"否则是不起作用的":["61.1"],"旋转中心点始终是画布左上角的原点":["61.1"],"如果要更改中心点":["61.1"],"font":["61.2"],"16px":["61.2"],"serif":["61.2"],"filltext":["61.2"],"world":["61.2"],"red":["61.3"],"的矩形":["61.4"],"结果缩放成":["61.4"],"并且左上角从":["61.4"],"方法取消了这个变换":["61.5"],"已绘制的图形不受影响":["61.5"],"将画布恢复到默认状态":["61.5"],"变换矩形":["61.5"],"中的":["62.0"],"globalcompositeoperation":["62.0","62.1"],"操作":["62.0"],"绘制图形":["63.1"],"新建一条路径":["63.2"],"生成之后":["63.2"],"图形绘制命令被指向到路径上生成路径":["63.2"],"生成路径的第一步":["63.2"],"叫做":["63.2"],"是辐射终止的圆的圆心坐标":["64.2"],"是终止圆的半径":["64.2"],"该方法的返回值也是一个":["64.2"],"fillstyle":["64.3","64.4"],"fillrect":["64.3"],"green":["64.4"],"fill":["66.2"],"填充颜色":["66.2"],"清除模式":["66.2"],"lineto":["66.3"],"提示":["66.3"],"上面代码中":["66.3"],"有":["66.3"],"个参数":["66.3"],"前两个参数是第一个点的坐标":["66.3"],"第三个参数和第四个参数是第二个点的坐标":["66.3"],"第三种绘制图片的方式":["66.5"],"裁剪图片":["66.5"],"img参数后面四个参数分别为原图片上面要裁剪的起点位置和终点位置":["66.5"],"最后四个参数分别为画布的位置和要渲染的矩形宽高":["66.5"],"rtl":["66.6"],"预测量文本宽度":["66.6"],"let":["66.6"],"设置宽高时":["69.1"],"它的默认宽度是":["69.1"],"300px":["69.1"],"默认高度是":["69.1"],"stroke":["69.3","69.7","69.8"],"000000":["69.3"],"pink":["69.4"],"none":["69.5","69.7"],"style":["69.7"],"cyan":["69.8"],"中文网":["70.0"],"输入以下命令":["70.3"],"mkdir":["70.3"],"echo":["70.3"],"about1":["70.5","70.6"],"关于2":["70.5","70.6"],"about2":["70.5"],"text代表每一项的名字":["70.5"],"link是连接的位置":["70.5"],"算法":["70.5"],"这种是没有下拉菜单的版本":["70.5"],"️":["70.7"],"运行":["70.8"],"or":["70.8"],"打开":["70.8"],"项目":["70.8"],"点击分支":["70.8"],"可以看到会多个一个名":["70.8"]},{"0":["11.2","11.4","11.6","11.7","13.16","13.17","26.4","35.17","55.16","66.2","66.6"],"1":["11.2","11.4","11.6","11.7","13.16","13.17","30.2","33.8","33.9","40.4","42.7"],"2":["13.10","33.3","33.4","42.7","66.6"],"3":["13.10","27.0"],"4":["13.7","35.12","53.15"],"5":["11.8","11.11","49.5","56.3","64.1","66.6"],"6":["53.7"],"7":["38.11"],"15":["57.3","64.1"],"18":["42.2"],"20":["40.5","43.1"],"30":["39.3"],"80":["11.4"],"100":["38.2","57.3","63.1","64.4"],"123":["39.5","42.5","45.1"],"127":["11.2","11.4","11.6","11.7","13.16","13.17","55.16"],"150":["62.1"],"180":["37.13"],"200":["63.1"],"250":["62.1"],"255":["13.10"],"300":["63.1","66.5","66.6"],"320":["22.11"],"400":["64.3","66.2"],"401":["15.14"],"456":["39.5"],"500":["15.14","65.0"],"600":["66.2","66.5"],"1234":["37.14"],"5173":["55.16"],"8080":["11.3"],"last":["5.0"],"运行nginx":["5.1"],"server":["11.2","11.7"],"running":["11.2","11.7","13.16","13.17"],"at":["11.2","11.7","13.16","13.17"],"http":["11.2","11.4","11.6","11.7","15.13","17.4","32.6"],"logo":["11.3"],"png":["11.3","70.3"],"console":["11.4","27.0","32.7","37.14","38.8"],"log":["11.4","13.17","27.0","32.7","33.24","33.25","37.14","38.8"],"对象":["11.5","37.3"],"encoded":["11.8"],"extended":["11.8"],"false":["11.8","33.25","41.7","47.4"],"第三方中间件":["11.8"],"ie10":["11.11"],"chrome4":["11.11"],"firefox3":["11.11"],"text":["11.14","32.7"],"plain":["11.14"],"服务器成功响应预检请求后":["11.15"],"才会发送真正的请求":["11.15"],"并且携带真实数据":["11.15"],"接口项目":["12.1"],"读写和操作数据库":["12.1"],"创建实用的命令行工具辅助前端开发":["12.1"],"etc":["12.1","49.4"],"操作":["12.2"],"网络操作":["12.2"],"线程池里的任务是通过队列和事件循环的机制来执行":["12.2"],"追加和读取":["13.1"],"jpg":["13.3"],"文件写入成功":["13.3"],"b":["13.4","39.4","53.10"],"pipe":["13.4"],"可以将可读流中的内容":["13.4"],"直接输出到可写流中":["13.4"],"写入成功":["13.6"],"else":["13.6","26.4","26.5"],"关闭流":["13.7"],"end":["13.7"],"buf":["13.8"],"tostring":["13.8","37.12","37.14"],"将":["13.8"],"数据转为字符串":["13.8"],"function":["13.9"],"err":["13.9","15.14"],"data":["13.9"],"0xaa":["13.10"],"buf3":["13.10"],"allocunsafe":["13.10"],"message":["13.12","15.2","16.5","47.1","55.23"],"如使用何种语法格式引用模块和向外暴露成员":["14.2"],"指向的对象为准":["14.7"],"报错":["14.11","14.22","34.3","40.3","42.6"],"若失败则报错":["14.13"],"可以从npm":["14.15"],"官网中搜索自己所需要的包":["14.15"],"要快的":["14.16"],"检查镜像源是否下载成功":["14.17"],"删除":["14.18"],"unpublish":["14.18"],"force":["14.18","53.21"],"e":["14.21","14.22","38.10"],"加载失败":["14.21"],"终端报错":["14.21"],"cannot":["14.23"],"find":["14.23"],"module":["14.23"],"xxx":["14.23"],"使用标记删除的形式":["15.3"],"模拟删除的动作":["15.3"],"即在表中设置状态字段":["15.3"],"标记当前的数据是否被删除":["15.3"],"status":["15.3"],"服务器需要完成页面内容的拼接":["15.5"],"若请求比较多":["15.5"],"会对服务器造成一定访问压力":["15.5"],"不利于前后端分离":["15.5"],"开发效率低":["15.5"],"技术能解决":["15.6"],"问题":["15.6"],"其他页面前后端分离的开发模式":["15.7"],"logout":["15.11"],"清空当前客户端的session信息":["15.11"],"destroy":["15.11"],"请求头":["15.13"],"authorization":["15.13"],"字段中":["15.13"],"加上":["15.13"],"bearer":["15.13"],"前缀":["15.13"],"next":["15.14"],"if":["15.14"],"name":["15.14","43.1","47.5"],"unauthorizederror":["15.14"],"return":["15.14","17.3","28.2","28.3","28.4","28.6","38.8","38.9"],"invalid":["15.14"],"unknown":["15.14"],"error":["15.14","17.3","38.7"],"对响应错误做点什么":["16.4"],"config":["16.5"],"集中式管理":["17.1"],"跨域请求是否需要携带":["17.2"],"cookie":["17.2"],"请求配置":["17.3"],"promise":["17.3","17.4","31.0","55.23"],"reject":["17.3","17.4","55.23"],"版本不受支持":["17.4"],"default":["17.4","55.20"],"异常问题":["17.4"],"请联系管理员":["17.4"],"headers":["17.5"],"signheader":["17.5"],"用的最多的交集选择器":["18.5"],"元素选择器配合类名选择器":["18.5"],"例如":["18.5"],"center":["18.6"],"color":["18.9","18.12","55.12"],"red":["18.9","18.12","55.12","62.1"],"选到2号p标签":["18.12"],"blue":["18.12"],"属性且属性值含有":["18.13"],"table":["18.14"],"转换为块级元素并一行显示":["18.14"],"权重最高":["19.1"],"在vscode中":["19.1"],"鼠标悬浮在样式上":["19.1"],"会弹出来显示选择器":["19.1"],"d6d6d6":["21.0"],"右下角拖动块":["21.0"],"resizer":["21.0"],"元素允许使用多个":["22.0"],"元素":["22.0"],"元素可以链接不同的音频文件":["22.0"],"浏览器将使用第一个支持的音频文件":["22.0"],"标签中使用":["22.5"],"定义在媒体播放器文本轨迹":["22.6"],"edge":["22.7"],"只有在静音下可以使用":["22.7"],"时间轴时间改变":["22.10"],"ontimeupdate":["22.10"],"时间改变了":["22.10"],"作为函数内部与外部连接起来的一座桥梁":["25.1"],"的方式来减少调用频率":["26.1"],"则重新计时":["26.2"],"输出2":["27.0"],"因为原始对象没有被修改":["27.0"],"infinity":["29.1"],"catch":["30.1"],"reason":["30.1"],"在以上的代码中":["30.2"],"我们创建了一个":["30.2"],"的新实例":["30.2"],"并传递了一个在":["30.2"],"秒后":["30.2"],"的":["30.2"],"然后调用了":["30.2"],"并传递了一个将":["30.2"],"resolved":["30.2"],"值记录到控制台的函数":["30.2"],"还有许多其他的特性和用法":["31.0"],"包括异步编程":["31.0"],"模块化":["31.0"],"函数式编程等":["31.0"],"其中":["31.0"],"异步编程是":["31.0"],"中最重要的特性之一":["31.0"],"async":["31.0"],"await":["31.0"],"等语法来处理异步操作":["31.0"],"dom":["32.1"],"而更新页面":["32.1"],"将处理结果更新到":["32.2"],"html":["32.2"],"页面中":["32.2"],"可选的密码用于认证用途":["32.4"],"方法中参数设置为":["32.5"],"错误信息":["32.6"],"post":["32.6"],"xxxx":["32.6"],"xml":["32.7"],"请求成功后的回调函数":["32.7"],"请求失败后的回调函数":["32.7"],"只有一个元素的数组":["33.10","33.13"],"执行某些操作":["33.26"],"age":["34.3","43.1"],"没有声明过这个变量":["34.3"],"script":["34.4"],"先销毁再创建":["34.4"],"而当时又没有那个对象可保存":["34.5"],"就可用":["34.5"],"来填充该变量":["34.5"],"a":["34.6","37.5"],"不存在":["34.6"],"虽然两个变量的值相等":["34.14"],"但是两个变量保存了两个不同的内存地址":["34.14"],"产生影响":["34.15"],"也就是两个变量指向堆内存中同一个对象":["34.16"],"worl":["35.4"],"qux":["35.13"],"octal":["37.2"],"0o744":["37.2"],"八进制s":["37.2"],"返回的是一个":["37.3"],"y":["37.5"],"boolean":["37.5"],"no":["37.6"],"yes":["37.6"],"undefined":["37.7"],"不能":["37.8"],"赋予":["37.8"],"while":["37.10"],"true":["37.10","45.2","47.17"],"aaa":["37.11"],"male":["37.13"],"abcd":["37.14"],"更像面向对象编程的语法而已":["38.0"],"我叫zs":["38.1"],"我18了":["38.1"],"可以调用从父中继承得到的方法":["38.2"],"受保护":["38.6"],"及其子类中访问":["38.6"],"peter":["38.7"],"sayyyy":["38.8"],"aa":["38.8","40.2"],"可以使用this调用":["38.8"],"f":["38.10"],"我的名字是zs":["38.11"],"年龄是7":["38.11"],"zs":["39.2","42.3","43.1"],"abc":["39.4"],"c":["39.4","42.5"],"bb":["40.2"],"因为只有一个参数t":["40.3"],"tofixed":["40.4"],"张麻子":["40.5"],"number没有length属性":["40.7"],"ts文件会先编译为js文件":["41.2"],"有强大的代码类型提示":["41.3"],"true为开启严格模式":["41.7"],"false为关闭":["41.7"],"启动文件名":["41.10"],"zhangsan":["42.1"],"hello":["42.4"],"tip":["43.1"],"字面量模式虽然可以赋值任意类型":["43.1"],"但是赋完值之后":["43.1"],"这个对象类型是没有办法去做一个修改的":["43.1"],"如果给它增加一个age属性":["43.1"],"它是没有办法去做增加的":["43.1"],"无法对这个变量的进行任何赋值的一个操作":["43.1"],"生成单个":["44.0"],"soucemaps":["44.0"],"而不是将":["44.0"],"sourcemaps":["44.0"],"生成不同的文件":["44.0"],"inlinesources":["44.0"],"将代码与":["44.0"],"生成到一个文件中":["44.0"],"要求同时设置了":["44.0"],"或":["44.0"],"属性":["44.0"],"其他选项":["44.0"],"experimentaldecorators":["44.0"],"启用装饰器":["44.0"],"emitdecoratormetadata":["44.0"],"为装饰器提供元数据的支持":["44.0"],"变量s的值":["45.2"],"只能是上面value定义的值":["45.2"],"语法糖下进行":["47.0"],"中需要通过":["47.2"],"的形式才能使用":["47.2"],"函数可以接收原始数据类型与引用数据类型":["47.2"],"函数只能接收引用数据类型":["47.2"],"lisi":["47.5"],"搜索关键字":["47.7"],"p":["47.7"],"是否开启深度监听":["47.16"],"deep":["47.17"],"旧的值":["47.18","47.19","47.20"],"vue":["47.24"],"img":["47.25","54.3"],"卸载完成":["47.28"],"第四个":["47.29"],"prevnode":["47.29"],"上一个虚拟节点":["47.29"],"钩子中可用":["47.29"],"div":["47.31"],"宽度":["47.31"],"高度":["47.31"],"或者":["48.2"],"非ts":["48.6"],"子组件模板中的表达式只能访问子组件的作用域":["48.10"],"loading":["48.13"],"下":["48.14"],"需要通过ref":["48.16"],"reactive":["48.16"],"添加响应式":["48.16"],"button":["48.17","55.9"],"click":["48.17","55.9","59.3"],"onchangemsg":["48.17"],"改变msg":["48.17"],"save":["49.4"],"this":["49.4"],"as":["49.4"],"future":["49.4"],"projects":["49.4"],"安装包":["49.5"],"运行项目":["49.5"],"项目的目录结构":["49.5"],"更好的支持typescript":["50.1"],"全局api的修改":["50.3"],"将原来的全局api转移到应用对象":["50.3"],"模板语法变化":["50.3"],"查看局部配置":["53.1"],"file2":["53.5"],"filename":["53.6"],"比较两个分支指定文件的差异":["53.7"],"分支1":["53.7"],"分支2":["53.7"],"记录和作者":["53.8"],"blame":["53.8"],"工作区和暂存区所有文件恢复成和指定版本一样":["53.15"],"版本号":["53.15"],"head":["53.16"],"rename":["53.18"],"旧名":["53.18"],"新名":["53.18"],"ssh目录下":["54.4"],"具名插槽":["55.1"],"作用域插槽":["55.1"],"实现父子组件通信":["55.1"],"数据就可以在模板中使用了":["55.2"],"但是切记":["55.2"],"是只读的":["55.2"],"只能读取":["55.2"],"不能修改":["55.2"],"自定义事件可以实现子组件给父组件传递数据":["55.3"],"都是原生":["55.4"],"vue2中却不是这样的":["55.4"],"在vue2中组件标签需要通过native修饰符才能变为原生dom事件":["55.4"],"但是如果子组件内部通过":["55.5"],"定义就变为自定义事件了":["55.5"],"let":["55.5"],"npmjs":["55.6"],"com":["55.6"],"package":["55.6"],"msg1":["55.7"],"defineprops":["55.8"],"接受了某一个属性":["55.8"],"方法返回的对象身上就没有相应属性与属性值":["55.8"],"handler":["55.9"],"点击我获取父组件实例":["55.9"],"获取存储的数值":["55.10"],"使用方式参照官网":["55.11"],"父组件决定子组件的结构与外观":["55.12"],"span":["55.12"],"style":["55.12"],"done":["55.12"],"green":["55.12","64.2"],"title":["55.12"],"下面我们就用这一套规范来初始化我们的项目":["55.14"],"集成一个规范的模版":["55.14"],"可以访问你得项目啦":["55.16"],"eslint支持使用第三方插件":["55.18"],"在使用插件之前":["55.18"],"您必须使用npm安装它":["55.18"],"该eslint":["55.18"],"前缀可以从插件名称被省略":["55.18"],"plugins":["55.18"],"eslint规则":["55.18"],"rules":["55.18"],"install":["55.20"],"object":["55.20"],"keys":["55.20"],"foreach":["55.20"],"key":["55.20"],"在入口文件引入":["55.20"],"通过":["55.20"],"use":["55.20"],"方法安装自定义插件":["55.20"],"gloablcomponent":["55.20"],"less":["55.21"],"后面的":["55.21"],"不要忘记":["55.21"],"不然会报错":["55.21"],"配置完毕你会发现":["55.21"],"提供这些全局变量可以在组件样式中使用了":["55.21"],"没有返回失败的信息":["55.22"],"获取用户信息失败":["55.22"],"安装":["55.22"],"axios":["55.22"],"最后通过":["55.22"],"测试接口":["55.22"],"无网络":["55.23"],"type":["55.23"],"export":["55.23"],"reqlogout":["55.24"],"二等奖":["56.3"],"三等奖":["56.3"],"000":["57.3"],"requestanimationframe":["57.3"],"改变颜色":["59.3"],"onchange":["59.3"],"strokestyle":["59.3"],"value":["59.3"],"destination":["59.3"],"out":["59.3"],"clearrect":["59.3"],"可以让开发人员创造出各种视觉效果":["60.1"],"上放置和移动元素":["60.3"],"文本":["60.4"],"图片等元素":["60.4"],"来动态地生成绘图元素":["60.5"],"从而实现更加复杂和丰富的视觉效果":["60.5"],"和库集成":["60.6"],"以创造更加丰富和定制化的用户体验":["60.6"],"的动画效果在各种设备与浏览器上都表现良好":["60.7"],"是非常适合移动设备和桌面浏览器上创建动态效果的途径":["60.7"],"的渲染速度可能会变慢":["60.8"],"取消前面的图像变换":["61.0"],"需要使用":["61.1"],"translate":["61.1"],"方法移动画布":["61.1"],"上面代码会显示一个水平倒转的":["61.2"],"高度放大":["61.2"],"倍的":["61.2"],"注意":["61.2","61.4"],"负向缩放本质是坐标翻转":["61.2"],"所针对的坐标轴就是画布左上角原点的坐标轴":["61.2"],"移动到":["61.4"],"多个":["61.4"],"方法具有叠加效果":["61.4"],"所以第二个矩形的左上角回到":["61.5"],"可以得到不同的效果":["62.0"],"fillrect":["63.1","64.4"],"closepath":["63.2"],"闭合路径之后图形绘制命令又重新指向到上下文中":["63.2"],"不是必需的":["63.2"],"stroke":["64.1","67.1","67.2"],"上面代码中":["64.1","64.3"],"线条的宽度为":["64.1"],"线条的末端和交点都改成圆角":["64.1"],"并且设置为虚线":["64.1"],"white":["64.2"],"生成辐射样式以后":["64.2"],"用这个样式填充一个矩形":["64.2"],"图像加载成功以后":["64.3"],"使用":["64.3"],"生成图像样式":["64.3"],"然后使用这个样式填充指定区域":["64.3"],"第五个参数是半径":["66.3"],"然后":["66.3"],"与":["66.3"],"形成一条直线":["66.3"],"形成第二条直线":["66.3"],"弧线就是与这两根直线相切的部分":["66.3"],"fill":["66.4","66.6"],"arc":["66.6"],"math":["66.6"],"pi":["66.6"],"150px":["69.1"],"这点和":["69.1"],"canvas":["69.1"],"是一样的":["69.1"],"000000":["69.7"],"z":["69.9"],"md":["70.3"],"输入":["70.3"],"image":["70.3"],"启动项目":["70.3"],"可以看到项目已经运行起来了":["70.3"],"的根目录是从":["70.5"],"开始算的":["70.5"],"比如你在":["70.5"],"下创建一个":["70.5"],"notes":["70.5"],"那么它的路径就是":["70.5"],"about2":["70.6"],"的分支":["70.8"],"这个分支存放着就是打包好的代码":["70.8"],"settings":["70.8"],"会有一个地址":["70.8"],"这个地址就是部署之后的地址了":["70.8"],"这个项目是实时更新的不需要你重新部署操作":["70.8"],"你要做的就是更新你的":["70.8"],"分支即可":["70.8"],"如果觉得此网站对你来说有帮助":["70.8"],"可以点个收藏呦":["70.8"]}]'},e={"0.0":{t:"# 关于作者\r",p:`qq:2357490894
微信: !img
`,l:"about/index.html",a:"关于作者"},"1.0":{t:"# 算法\r",p:"\r",l:"algorithms/demo1.html",a:"算法"},"1.1":{t:"123",p:"",l:"algorithms/demo1.html#_123",a:"_123"},"2.0":{t:"# demo2",p:"",l:"algorithms/demo2.html",a:"demo2"},"3.0":{t:"# demo3",p:"",l:"algorithms/demo3.html",a:"demo3"},"4.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"algorithms/index.html",a:"该内容正在努力建设中"},"5.0":{t:"Nginx 部署刷新 404 问题\r",p:`location / {
root   C:\\Users....;
index  index.html index.htm;
try_files $uri $uri/ @Qrouter; // 加上这 ...`,l:"backEnd/linux/nginx.html",a:"nginx-部署刷新-404-问题"},"5.1":{t:"Nginx部署项目\r",p:`1、 yarn build打包项目
2、 打开nginx.conf文件，配置对应的信息
3、 检查配置文件是否配置成功
nginx -t -c D:\\nginx-1.16.1\\conf\\nginx.c ...`,l:"backEnd/linux/nginx.html#nginx部署项目",a:"nginx部署项目"},"8.0":{t:"# MySql",p:"",l:"backEnd/mysql/index.html",a:"mysql"},"9.0":{t:"# 安装Mysql",p:"",l:"backEnd/mysql/install.html",a:"安装mysql"},"11.0":{t:"# Express\r",p:`官网传送门

基于 Node.js 平台，快速、开放、极简的 Web 开发框架

Express 是用于快速创建服务器的第三方模块。
`,l:"backEnd/nodejs/Express.html",a:"express"},"11.1":{t:"Express 初体验\r",p:"\r",l:"backEnd/nodejs/Express.html#express-初体验",a:"express-初体验"},"11.2":{t:"基本使用\r",p:`安装 Express：
npm install express

创建服务器，监听客户端请求，并返回内容：
const express = require('express')
// 创建 web 服 ...`,l:"backEnd/nodejs/Express.html#基本使用",a:"基本使用"},"11.3":{t:"托管静态资源\r",p:`
通过 express.static() 方法可创建静态资源服务器，向外开放访问静态资源。
Express 在指定的静态目录中查找文件，并对外提供资源的访问路径，存放静态文件的目录名不会出现在 URL ...`,l:"backEnd/nodejs/Express.html#托管静态资源",a:"托管静态资源"},"11.4":{t:"Express 路由\r",p:`创建路由模块：
// router.js

const express = require('express')
// 创建路由对象
const router = express.Router()

 ...`,l:"backEnd/nodejs/Express.html#express-路由",a:"express-路由"},"11.5":{t:"Express 中间件\r",p:`
中间件是指流程的中间处理环节
服务器收到请求后，可先调用中间件进行预处理
中间件是一个函数，包含 req, res, next 三个参数，next() 参数把流转关系交给下一个中间件或路由

中间件 ...`,l:"backEnd/nodejs/Express.html#express-中间件",a:"express-中间件"},"11.6":{t:"全局中间件\r",p:`
通过 app.use() 定义的中间件为全局中间件

const express = require('express')
const app = express()

// 定义第一个全局中间件
 ...`,l:"backEnd/nodejs/Express.html#全局中间件",a:"全局中间件"},"11.7":{t:"局部中间件\r",p:`const express = require('express')
const app = express()

// 定义中间件函数
const mw1 = (req, res, next) =& ...`,l:"backEnd/nodejs/Express.html#局部中间件",a:"局部中间件"},"11.8":{t:"中间件分类\r",p:`
应用级别的中间件


通过 app.use() 或 app.get() 或 app.post() ，绑定到 app 实例上的中间件


路由级别的中间件


绑定到 express.Router() ...`,l:"backEnd/nodejs/Express.html#中间件分类",a:"中间件分类"},"11.9":{t:"CORS 跨域资源共享\r",p:"\r",l:"backEnd/nodejs/Express.html#cors-跨域资源共享",a:"cors-跨域资源共享"},"11.10":{t:"cors 中间件解决跨域\r",p:`
安装中间件：npm install cors
导入中间件：const cors = require('cors')
配置中间件：app.use(cors())

`,l:"backEnd/nodejs/Express.html#cors-中间件解决跨域",a:"cors-中间件解决跨域"},"11.11":{t:"CORS\r",p:`
CORS（Cross-Origin Resource Sharing，跨域资源共享）解决跨域，是通过 HTTP 响应头决定浏览器是否阻止前端 JS 代码跨域获取资源
浏览器的同源安全策略默认会阻止网 ...`,l:"backEnd/nodejs/Express.html#cors",a:"cors"},"11.12":{t:"CORS 常见响应头\r",p:`
Access-Control-Allow-Origin：制定了允许访问资源的外域 URL

res.setHeader('Access-Control-Allow-Origin', 'http:// ...`,l:"backEnd/nodejs/Express.html#cors-常见响应头",a:"cors-常见响应头"},"11.13":{t:"CORS 请求分类\r",p:"\r",l:"backEnd/nodejs/Express.html#cors-请求分类",a:"cors-请求分类"},"11.14":{t:"简单请求\r",p:`
请求方式：GET、POST、HEAD 三者之一
HTTP 头部信息不超过以下几种字段：无自定义头部字段、Accept、Accept-Language、Content-Language、DPR、Dow ...`,l:"backEnd/nodejs/Express.html#简单请求",a:"简单请求"},"11.15":{t:"预检请求\r",p:`
请求方式为 GET、POST、HEAD 之外的请求 Method 类型
请求头中包含自定义头部字段
向服务器发送了 application/json 格式的数据

在浏览器与服务器正式通信之前，浏览 ...`,l:"backEnd/nodejs/Express.html#预检请求",a:"预检请求"},"12.0":{t:"# Nodejs 介绍\r",p:`官网传送门
`,l:"backEnd/nodejs/index.html",a:"nodejs-介绍"},"12.1":{t:"初识 Nodejs\r",p:`
Node.js® is an open-source, cross-platform JavaScript runtime environment.
Node.js® 是一个基于 Chrome V8 ...`,l:"backEnd/nodejs/index.html#初识-nodejs",a:"初识-nodejs"},"12.2":{t:"Nodejs 的特点\r",p:`
异步、非阻塞 IO 模型
事件循环
单线程
总结：轻量和高效
Node.js 的性能和效率非常高。

传统的 Java 语言是一个请求开启一个线程，当请求处理完毕后就关闭这个线程。而 Node.js ...`,l:"backEnd/nodejs/index.html#nodejs-的特点",a:"nodejs-的特点"},"12.3":{t:"使用 Node.js 时的劣势\r",p:`
程序运行不稳定，可能会出现服务不可用的情况
程序运行效率较低，每秒的请求数维持在一个较低的水平

`,l:"backEnd/nodejs/index.html#使用-node-js-时的劣势",a:"使用-node-js-时的劣势"},"13.0":{t:"# Nodejs内置模块\r",p:"\r",l:"backEnd/nodejs/innerModule.html",a:"nodejs内置模块"},"13.1":{t:"fs 文件系统模块\r",p:`
fs 模块中所有的操作都有两种形式可供选择:同步和异步
同步文件系统会阻塞程序的执行，也就是除非操作完毕，否则不会向下执行代码
异步文件系统不会阻塞程序的执行，而是在操作完成时，通过回调函数将结果返 ...`,l:"backEnd/nodejs/innerModule.html#fs-文件系统模块",a:"fs-文件系统模块"},"13.2":{t:"读取文件\r",p:"\r",l:"backEnd/nodejs/innerModule.html#读取文件",a:"读取文件"},"13.3":{t:"简单文件读取\r",p:`语法格式：
fs.readFile(path[, options], callback)


path：文件路径
options：配置选项，若是字符串则指定编码格式

encoding：编码格式
fl ...`,l:"backEnd/nodejs/innerModule.html#简单文件读取",a:"简单文件读取"},"13.4":{t:"流式文件读取\r",p:`
简单文件读取的方式会一次性读取文件内容到内存中，若文件较大，会占用过多内存影响系统性能，且读取速度慢
大文件适合用流式文件读取，它会分多次将文件读取到内存中

var fs = require('f ...`,l:"backEnd/nodejs/innerModule.html#流式文件读取",a:"流式文件读取"},"13.5":{t:"写入文件\r",p:"\r",l:"backEnd/nodejs/innerModule.html#写入文件",a:"写入文件"},"13.6":{t:"简单文件写入\r",p:`语法格式：
fs.writeFile(file, data[, options], callback)


file：文件路径
data：写入内容
options：配置选项，包含 encoding,  ...`,l:"backEnd/nodejs/innerModule.html#简单文件写入",a:"简单文件写入"},"13.7":{t:"流式文件写入\r",p:`// 同步、异步、简单文件的写入都不适合大文件的写入，性能较差，容易导致内存溢出
var fs = require('fs')

// 创建一个可写流
var ws = fs.createWriteS ...`,l:"backEnd/nodejs/innerModule.html#流式文件写入",a:"流式文件写入"},"13.8":{t:"Buffer 缓冲区\r",p:`
Buffer 缓冲区文档


Buffer 的结构与数组类似，操作方法也与数组类似
数组不能存储二进制文件，Buffer 是专门存储二进制数据的
Buffer 存储的是二进制数据，显示时以 16 进 ...`,l:"backEnd/nodejs/innerModule.html#buffer-缓冲区",a:"buffer-缓冲区"},"13.9":{t:"路径动态拼接问题 `__dirname`\r",p:`
在使用 fs 模块操作文件时，如果提供的操作路径是以 ./ 或 ../ 开头的相对路径时，容易出现路径动态拼接错误的问题
原因：代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操 ...`,l:"backEnd/nodejs/innerModule.html#路径动态拼接问题-dirname",a:"路径动态拼接问题-dirname"},"13.10":{t:"其它操作\r",p:`验证路径是否存在：

fs.exists(path, callback)
fs.existsSync(path)

获取文件信息：

fs.stat(path, callback)
fs.stat(p ...`,l:"backEnd/nodejs/innerModule.html#其它操作",a:"其它操作"},"13.11":{t:"path 路径模块\r",p:`path 模块是 Node.js 官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。
`,l:"backEnd/nodejs/innerModule.html#path-路径模块",a:"path-路径模块"},"13.12":{t:"路径拼接 `path.join()`\r",p:`const path = require('path')
const fs = require('fs')

// 注意 ../ 会抵消前面的路径
// ./ 会被忽略
const pathStr = ...`,l:"backEnd/nodejs/innerModule.html#路径拼接-path-join",a:"路径拼接-path-join"},"13.13":{t:"获取路径中文件名 `path.basename()`\r",p:`使用 path.basename() 方法，可以获取路径中的最后一部分，常通过该方法获取路径中的文件名
path.basename(path[, ext])


path: 文件路径
ext: 文件扩 ...`,l:"backEnd/nodejs/innerModule.html#获取路径中文件名-path-basename",a:"获取路径中文件名-path-basename"},"13.14":{t:"获取路径中文件扩展名 `path.extname()`\r",p:`const path = require('path')

const fpath = '/a/b/c/index.html'

const fext = path.extname(fpath)
co ...`,l:"backEnd/nodejs/innerModule.html#获取路径中文件扩展名-path-extname",a:"获取路径中文件扩展名-path-extname"},"13.15":{t:"http 模块\r",p:`http 模块是 Node.js 官方提供的、用来创建 web 服务器的模块。
`,l:"backEnd/nodejs/innerModule.html#http-模块",a:"http-模块"},"13.16":{t:"创建基本 Web 服务器\r",p:`const http = require('http')

// 创建 web 服务器实例
const server = http.createServer()

// 为服务器实例绑定 reques ...`,l:"backEnd/nodejs/innerModule.html#创建基本-web-服务器",a:"创建基本-web-服务器"},"13.17":{t:"实现简陋路由效果\r",p:`const http = require('http')
const server = http.createServer()

server.on('request', (req, res) =&g ...`,l:"backEnd/nodejs/innerModule.html#实现简陋路由效果",a:"实现简陋路由效果"},"14.0":{t:"# 模块化\r",p:"\r",l:"backEnd/nodejs/module.html",a:"模块化"},"14.1":{t:"基本概念\r",p:"\r",l:"backEnd/nodejs/module.html#基本概念",a:"基本概念"},"14.2":{t:"什么是模块化\r",p:`概念：

模块化是指解决一个复杂问题时，自顶向下逐层把系统划分为若干模块的过程，模块是可组合、分解和更换的单元。
模块化可提高代码的复用性和可维护性，实现按需加载。
模块的内部数据、实现是私有的, 只 ...`,l:"backEnd/nodejs/module.html#什么是模块化",a:"什么是模块化"},"14.3":{t:"模块化的好处\r",p:`
避免命名空间的冲突
提高代码的复用性
提高维护性
更好的分离，实现按需加载

`,l:"backEnd/nodejs/module.html#模块化的好处",a:"模块化的好处"},"14.4":{t:"Nodejs 中模块化\r",p:"\r",l:"backEnd/nodejs/module.html#nodejs-中模块化",a:"nodejs-中模块化"},"14.5":{t:"Node.js 中模块的分类\r",p:`
内置模块
自定义模块
第三方模块

`,l:"backEnd/nodejs/module.html#node-js-中模块的分类",a:"node-js-中模块的分类"},"14.6":{t:"Node.js 中的模块作用域\r",p:`
和函数作用域类似，在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域
防止全局变量污染

`,l:"backEnd/nodejs/module.html#node-js-中的模块作用域",a:"node-js-中的模块作用域"},"14.7":{t:"模块作用域的成员\r",p:`
自定义模块中都有一个 module 对象，存储了和当前模块有关的信息
在自定义模块中，可以使用 module.exports 对象，将模块内的成员共享出去，供外界使用。导入自定义模块时，得到的就是  ...`,l:"backEnd/nodejs/module.html#模块作用域的成员",a:"模块作用域的成员"},"14.8":{t:"CommonJS 模块化规范\r",p:`
每个模块内部，module 变量代表当前模块
module 变量是一个对象，module.exports 是对外的接口
加载某个模块即加载该模块的 module.exports 属性

`,l:"backEnd/nodejs/module.html#commonjs-模块化规范",a:"commonjs-模块化规范"},"14.9":{t:"模块加载机制\r",p:`模块第一次加载后会被缓存，即多次调用 require() 不会导致模块的代码被执行多次，提高模块加载效率。
`,l:"backEnd/nodejs/module.html#模块加载机制",a:"模块加载机制"},"14.10":{t:"内置模块加载\r",p:`内置模块加载优先级最高。
`,l:"backEnd/nodejs/module.html#内置模块加载",a:"内置模块加载"},"14.11":{t:"自定义模块加载\r",p:`加载自定义模块时，路径要以 ./ 或 ../ 开头，否则会作为内置模块或第三方模块加载。
导入自定义模块时，若省略文件扩展名，则 Node.js 会按顺序尝试加载文件：

按确切的文件名加载
补全 . ...`,l:"backEnd/nodejs/module.html#自定义模块加载",a:"自定义模块加载"},"14.12":{t:"第三方模块加载\r",p:`
若导入第三方模块， Node.js 会从当前模块的父目录开始，尝试从 /node_modules 文件夹中加载第三方模块。
如果没有找到对应的第三方模块，则移动到再上一层父目录中，进行加载，直到文件 ...`,l:"backEnd/nodejs/module.html#第三方模块加载",a:"第三方模块加载"},"14.13":{t:"目录作为模块加载\r",p:`当把目录作为模块标识符进行加载的时候，有三种加载方式：

在被加载的目录下查找 package.json 的文件，并寻找 main 属性，作为 require() 加载的入口
如果没有 package ...`,l:"backEnd/nodejs/module.html#目录作为模块加载",a:"目录作为模块加载"},"14.14":{t:"npm 与包\r",p:"\r",l:"backEnd/nodejs/module.html#npm-与包",a:"npm-与包"},"14.15":{t:"包\r",p:`Node.js 中的第三方模块又叫做包
不同于 Node.js 中的内置模块与自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。Node.js 中的包都是免费且开源的。

由于 Node ...`,l:"backEnd/nodejs/module.html#包",a:"包"},"14.16":{t:"npm 安装\r",p:`在项目中安装包的命令
npm install 包的元整名称
或者
npm i 包的元整名称

现在也有其他的包管理工具，如 yarn、pnpm，
下载安装速度是比 npm 要快的
`,l:"backEnd/nodejs/module.html#npm-安装",a:"npm-安装"},"14.17":{t:"通过切换源解决 npm 的下包速度慢的问题\r",p:`npm config get registry  # 查看当前包镜像源
npm config get registry=http:registry.npm.taobao.org/ # 切换源头
npm ...`,l:"backEnd/nodejs/module.html#通过切换源解决-npm-的下包速度慢的问题",a:"通过切换源解决-npm-的下包速度慢的问题"},"14.18":{t:"开发包\r",p:`
注册 npm 账号
初始化包的基本结构

新建文件夹（包名），新建如下三个文件




package.json (包管理配置文件)
index.js (包的入口文件)
README.md (包的说 ...`,l:"backEnd/nodejs/module.html#开发包",a:"开发包"},"14.19":{t:"模块的加载机制\r",p:`模块在第一次加载后会被缓存，多次调用 require()模块的代码只会被执行一次。不论是内置模块、用户自定义模块、还是第三方模块，他们都会优先从缓存中加载，从而提高模块的加载效率。
`,l:"backEnd/nodejs/module.html#模块的加载机制",a:"模块的加载机制"},"14.20":{t:"内置模块的加载机制\r",p:`
内置模块的加载优先级最高

`,l:"backEnd/nodejs/module.html#内置模块的加载机制",a:"内置模块的加载机制"},"14.21":{t:"自定义模块的加载机制\r",p:`
使用 require()加载自定义模块时，必须指定以./或../开头的路径标识符。在加载自定义模块时，如果没有指定./或../这样的路径标识符，则 node 会把它当作内置模块或第三方模块进行加载。 ...`,l:"backEnd/nodejs/module.html#自定义模块的加载机制",a:"自定义模块的加载机制"},"14.22":{t:"第三方模块的加载机制\r",p:`
如果传递给 require()的模块标识符不是一个内置模块，也没有以./或../开头，则 Nodejs 会从当前模块的父目录开始，尝试从/node_modules 文件夹中加载第三方模块
如果没有找 ...`,l:"backEnd/nodejs/module.html#第三方模块的加载机制",a:"第三方模块的加载机制"},"14.23":{t:"目录作为模块\r",p:`
当把目录作为模块标识符，传递给 require()进行加载的时候，有三种加载方式

a. 在被加载的目录下查找一个叫做 package.json 的文件，并寻找 main 属性值作为 require ...`,l:"backEnd/nodejs/module.html#目录作为模块",a:"目录作为模块"},"15.0":{t:"# 数据库和身份认证\r",p:"\r",l:"backEnd/nodejs/mysql.html",a:"数据库和身份认证"},"15.1":{t:"Node 操作 mysql\r",p:"\r",l:"backEnd/nodejs/mysql.html#node-操作-mysql",a:"node-操作-mysql"},"15.2":{t:"配置 mysql 模块\r",p:`
安装 mysql 模块

npm install mysql


建立连接

const mysql = require('mysql')

const db = mysql.createPool( ...`,l:"backEnd/nodejs/mysql.html#配置-mysql-模块",a:"配置-mysql-模块"},"15.3":{t:"操作 mysql 数据库\r",p:`
查询数据

db.query('select * from users', (err, results) =&gt; {
  ...
})


插入数据

// ? 表示占位符
const sql  ...`,l:"backEnd/nodejs/mysql.html#操作-mysql-数据库",a:"操作-mysql-数据库"},"15.4":{t:"Web 开发模式\r",p:"\r",l:"backEnd/nodejs/mysql.html#web-开发模式",a:"web-开发模式"},"15.5":{t:"服务端渲染\r",p:`服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接动态生成的。因此客户端不需要使用 Ajax 额外请求页面的数据。
app.get('/index.html', (req, res) = ...`,l:"backEnd/nodejs/mysql.html#服务端渲染",a:"服务端渲染"},"15.6":{t:"前后端分离\r",p:`前后端分离的开发模式，依赖于 Ajax 技术的广泛应用。后端只负责提供 API 接口，前端使用 Ajax 调用接口。
优点：

开发体验好。前端专业页面开发，后端专注接口开发。
用户体验好。页面局部刷 ...`,l:"backEnd/nodejs/mysql.html#前后端分离",a:"前后端分离"},"15.7":{t:"如何选择\r",p:`
企业级网站，主要功能是展示，没有复杂交互，且需要良好的 SEO，可考虑服务端渲染
后台管理项目，交互性强，无需考虑 SEO，可使用前后端分离
为同时兼顾首页渲染速度和前后端分离开发效率，可采用首屏服 ...`,l:"backEnd/nodejs/mysql.html#如何选择",a:"如何选择"},"15.8":{t:"身份认证\r",p:"\r",l:"backEnd/nodejs/mysql.html#身份认证",a:"身份认证"},"15.9":{t:"Session 认证机制\r",p:`服务端渲染推荐使用 Session 认证机制
`,l:"backEnd/nodejs/mysql.html#session-认证机制",a:"session-认证机制"},"15.10":{t:"Session 工作原理\r",p:`!session
`,l:"backEnd/nodejs/mysql.html#session-工作原理",a:"session-工作原理"},"15.11":{t:"Express 中使用 Session 认证\r",p:`
安装 express-session 中间件

npm install express-session


配置中间件

const session = require('express-sessi ...`,l:"backEnd/nodejs/mysql.html#express-中使用-session-认证",a:"express-中使用-session-认证"},"15.12":{t:"JWT 认证机制\r",p:`前后端分离推荐使用 JWT（JSON Web Token）认证机制，是目前最流行的跨域认证解决方案
`,l:"backEnd/nodejs/mysql.html#jwt-认证机制",a:"jwt-认证机制"},"15.13":{t:"JWT 工作原理\r",p:`Session 认证的局限性：

Session 认证机制需要配合 Cookie 才能实现。由于 Cookie 默认不支持跨域访问，所以，当涉及到前端跨域请求后端接口的时候，需要做很多额外的配置，才能 ...`,l:"backEnd/nodejs/mysql.html#jwt-工作原理",a:"jwt-工作原理"},"15.14":{t:"Express 使用 JWT\r",p:`
安装


jsonwebtoken 用于生成 JWT 字符串
express-jwt 用于将 JWT 字符串解析还原成 JSON 对象

npm install jsonwebtoken expre ...`,l:"backEnd/nodejs/mysql.html#express-使用-jwt",a:"express-使用-jwt"},"16.0":{t:"# Axios\r",p:"\r",l:"frontEnd/axios/index.html",a:"axios"},"16.1":{t:"什么是axios？\r",p:`Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。
`,l:"frontEnd/axios/index.html#什么是axios",a:"什么是axios"},"16.2":{t:"安装\r",p:`使用npm：
npm install axios

使用cdn：


`,l:"frontEnd/axios/index.html#安装",a:"安装"},"16.3":{t:"使用\r",p:`
执行GET请求

let name = 'zs'
axios.get(\`/api/xxxx?name=\${name}\`)
  .then(function (result) {
    consol ...`,l:"frontEnd/axios/index.html#使用",a:"使用"},"16.4":{t:"拦截器\r",p:`拦截器，我们大致可以分为两类， 一类是 请求接口前的统一处理（请求拦截） 、 一类是 请求接口后的统一处理（响应拦截）

请求拦截

请求调整
用户标识


响应拦截

网络错误处理
授权错误处理
普 ...`,l:"frontEnd/axios/index.html#拦截器",a:"拦截器"},"16.5":{t:"错误处理\r",p:`axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // 发出请求后，服务器用状态 ...`,l:"frontEnd/axios/index.html#错误处理",a:"错误处理"},"17.0":{t:"# 封装axios\r",p:"\r",l:"frontEnd/axios/封装axios.html",a:"封装axios"},"17.1":{t:"1.封装目的\r",p:`实现一个简单的封装，主要实现以下目的：

实现请求拦截
实现响应拦截
常见错误信息处理
请求头设置
api 集中式管理

`,l:"frontEnd/axios/封装axios.html#_1-封装目的",a:"_1-封装目的"},"17.2":{t:"2.初始化axios实例\r",p:`import axios from 'axios'
let apiBaseUrl = ''
const service = axios.create({
    baseURL:apiBaseUrl, ...`,l:"frontEnd/axios/封装axios.html#_2-初始化axios实例",a:"_2-初始化axios实例"},"17.3":{t:"3.设置请求拦截\r",p:`// 创建请求拦截
service.interceptors.request.use(
  (config) =&gt; {
    // 如果开启 token 认证
    if (serverCo ...`,l:"frontEnd/axios/封装axios.html#_3-设置请求拦截",a:"_3-设置请求拦截"},"17.4":{t:"4.设置响应拦截\r",p:`// 创建响应拦截
service.interceptors.response.use(
  (res) =&gt; {
    let data = res.data;
    // 处理自己的业务 ...`,l:"frontEnd/axios/封装axios.html#_4-设置响应拦截",a:"_4-设置响应拦截"},"17.5":{t:"5.封装常见的方法\r",p:`//get
export function getAction(url,parameter) {
  return service({
    url: url,
    method: 'get', ...`,l:"frontEnd/axios/封装axios.html#_5-封装常见的方法",a:"_5-封装常见的方法"},"17.6":{t:"6.使用\r",p:`示例：
let param = {
    username:'zs',
    password:'123456'
}

// 定义接口方法
const login = (params)=&gt;p ...`,l:"frontEnd/axios/封装axios.html#_6-使用",a:"_6-使用"},"17.7":{t:"相关文章\r",p:`关于 Axios 的再再再封装，总是会有所不一样
十分钟封装一个好用的axios，省时又省力他不香吗
前端架构带你 封装axios，一次封装终身受益「美团后端连连点赞」
`,l:"frontEnd/axios/封装axios.html#相关文章",a:"相关文章"},"18.0":{t:"# CSS 选择器\r",p:"\r",l:"frontEnd/css3/base/css选择器.html",a:"css-选择器"},"18.1":{t:"通配符选择器\r",p:`
选择页面所有元素
用于清除内外边距

* {
  padding: 0;
  margin: 0;
}

`,l:"frontEnd/css3/base/css选择器.html#通配符选择器",a:"通配符选择器"},"18.2":{t:"元素选择器\r",p:`
通过标签名选择元素
优点：可快速为同类型标签统一设置样式
缺点：不能涉及差异化样式，只能选择全部标签

h1 {
  color: #ccc;
}

`,l:"frontEnd/css3/base/css选择器.html#元素选择器",a:"元素选择器"},"18.3":{t:"类选择器\r",p:`
通过类名选择元素

.container {
  color: pink;
}

`,l:"frontEnd/css3/base/css选择器.html#类选择器",a:"类选择器"},"18.4":{t:"id 选择器\r",p:`
通过元素 id 属性选择元素

#md {
  font-weight: 600;
}

`,l:"frontEnd/css3/base/css选择器.html#id-选择器",a:"id-选择器"},"18.5":{t:"交集选择器\r",p:`&lt;p class=&quot;good&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;good beaauty&quot;&gt;&lt;/p&gt;

/* 语法 ...`,l:"frontEnd/css3/base/css选择器.html#交集选择器",a:"交集选择器"},"18.6":{t:"并集选择器\r",p:`
作用：选中多个选择器对应的元素，又称：分组选择器
语法：选择器1, 选择器2, 选择器3,... 选择器 n {}

h1,
h2,
h3 {
  text-align: center;
}

`,l:"frontEnd/css3/base/css选择器.html#并集选择器",a:"并集选择器"},"18.7":{t:"后代选择器\r",p:`
在所有后代节点中选

ul li {
  color: blue;
}

`,l:"frontEnd/css3/base/css选择器.html#后代选择器",a:"后代选择器"},"18.8":{t:"子选择器\r",p:`
只在亲儿子中选

div &gt; a {
  color: green;
}

`,l:"frontEnd/css3/base/css选择器.html#子选择器",a:"子选择器"},"18.9":{t:"兄弟选择器\r",p:`
选择所有指定元素的相邻后一个兄弟节点

&lt;h1&gt;h1-2&lt;/h1&gt;
&lt;p&gt;p0 被选中&lt;/p&gt;
&lt;div class=&quot;contain ...`,l:"frontEnd/css3/base/css选择器.html#兄弟选择器",a:"兄弟选择器"},"18.10":{t:"伪类选择器\r",p:`
根据元素状态或所处 DOM 结构选择元素

`,l:"frontEnd/css3/base/css选择器.html#伪类选择器",a:"伪类选择器"},"18.11":{t:"动态伪类选择器\r",p:`按这个顺序声明
a:link 链接一开始的样式
a:visited 链接访问后的样式
a:hover 光标经过链接的样式
a:active 链接被按下时的样式

:focus 用于选择获取焦点的表单元 ...`,l:"frontEnd/css3/base/css选择器.html#动态伪类选择器",a:"动态伪类选择器"},"18.12":{t:"结构伪类选择器(C3)\r",p:`


选择符
含义




E:first-child
第一个子元素 E


E:last-child
最后一个子元素 E


E:nth-child(n)
第 n 个子元素 E


E:first- ...`,l:"frontEnd/css3/base/css选择器.html#结构伪类选择器-c3",a:"结构伪类选择器-c3"},"18.13":{t:"属性选择器(C3)\r",p:`


选择符
含义




E[att]
选择具有 att 属性的 E 元素


E[att=&quot;val&quot;]
选择具有 att 属性且属性值等于 val 的 E 元素


E[att ...`,l:"frontEnd/css3/base/css选择器.html#属性选择器-c3",a:"属性选择器-c3"},"18.14":{t:"伪元素选择器(C3)\r",p:`
伪元素选择器利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构
before 和 after 创建了一个行内元素，在 DOM 树中无法找到，故为伪元素
必须有 cont ...`,l:"frontEnd/css3/base/css选择器.html#伪元素选择器-c3",a:"伪元素选择器-c3"},"18.15":{t:"相关链接\r",p:`一篇搞清伪类和伪元素
`,l:"frontEnd/css3/base/css选择器.html#相关链接",a:"相关链接"},"19.0":{t:"# 选择器优先级\r",p:`一般情况下，选择器的优先级为

!important 行内 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器
相同级别的选择器，显示最后面的样式。

`,l:"frontEnd/css3/base/选择器优先级.html",a:"选择器优先级"},"19.1":{t:"CSS 权重\r",p:`::: tip 详细描述

计算方式：每个选择器，都可以算出一组权重，格式为（a,b,c)


格式: (a, b, c)

a: ID 选择器的个数
b: 类、伪类、属性 选择器的个数
c: 元素、 ...`,l:"frontEnd/css3/base/选择器优先级.html#css-权重",a:"css-权重"},"20.0":{t:"# css",p:"",l:"frontEnd/css3/index.html",a:"css"},"21.0":{t:"# 滚动条样式\r",p:`/* 滚动条 */
::-webkit-scrollbar {
  /* 纵向 */
  width: 8px;
  /* 横向 */
  height: 8px;
  background-colo ...`,l:"frontEnd/css3/tricks/scrollbar.html",a:"滚动条样式"},"22.0":{t:"# html5 音视频标签\r",p:`音视频标签中的资源除了可以用 src 属性来指定外，还可以用 source 标签，而且可以指定多个，可以用来解决某些兼容问题。
&lt;audio controls=&quot;controls&qu ...`,l:"frontEnd/html5/audio_video.html",a:"html5-音视频标签"},"22.1":{t:"音视频频格式的 MIME 类型\r",p:"\r",l:"frontEnd/html5/audio_video.html#音视频频格式的-mime-类型",a:"音视频频格式的-mime-类型"},"22.2":{t:"音频格式\r",p:`


Format
MIME-type




MP3
audio/mpeg


Ogg
audio/ogg


Wav
audio/wav



`,l:"frontEnd/html5/audio_video.html#音频格式",a:"音频格式"},"22.3":{t:"视频格式\r",p:`


格式
MIME-type




MP4
video/mp4


WebM
video/webm


Ogg
video/ogg



`,l:"frontEnd/html5/audio_video.html#视频格式",a:"视频格式"},"22.4":{t:"音视频标签描述\r",p:"\r",l:"frontEnd/html5/audio_video.html#音视频标签描述",a:"音视频标签描述"},"22.5":{t:"HTML5 Audio 标签\r",p:`


标签
描述




&lt;audio&gt;
定义了声音内容


&lt;source&gt;
规定了多媒体资源, 可以是多个，在 &lt;video&gt; 与 &lt;audio&gt;标 ...`,l:"frontEnd/html5/audio_video.html#html5-audio-标签",a:"html5-audio-标签"},"22.6":{t:"HTML5 Video 标签\r",p:`| 标签 | 描述 |
|&lt;video&gt; |定义一个视频|
|&lt;source&gt;| 定义多种媒体资源,比如 &lt;video&gt; 和&lt;audio&gt;|
|&lt; ...`,l:"frontEnd/html5/audio_video.html#html5-video-标签",a:"html5-video-标签"},"22.7":{t:"`<video>`标签的属性\r",p:`


属性
描述




src
要播放的视频的 URL


width/height
视频显示区域的宽高


controls
用户控制界面


poster
视频封面


autoplay
自动播 ...`,l:"frontEnd/html5/audio_video.html#video-标签的属性",a:"video-标签的属性"},"22.8":{t:"音视频对象的方法\r",p:`


方法名
作用




play()
播放


psuse()
暂停


load()
重新加载



`,l:"frontEnd/html5/audio_video.html#音视频对象的方法",a:"音视频对象的方法"},"22.9":{t:"代码实例\r",p:"\r",l:"frontEnd/html5/audio_video.html#代码实例",a:"代码实例"},"22.10":{t:"audio 音频\r",p:`    // ......html、css部分...........
    //获取
    let v = document.querySelector(&quot;#video&quot;);
 ...`,l:"frontEnd/html5/audio_video.html#audio-音频",a:"audio-音频"},"22.11":{t:"video 视频\r",p:`&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;button onclick=&quot;playPause()&quot;&gt;播放/暂 ...`,l:"frontEnd/html5/audio_video.html#video-视频",a:"video-视频"},"23.0":{t:"# HTML5\r",p:`
asdas

`,l:"frontEnd/html5/index.html",a:"html5"},"23.1":{t:"html\r",p:`111
`,l:"frontEnd/html5/index.html#html",a:"html"},"24.0":{t:"# input\r",p:"\r",l:"frontEnd/html5/input.html",a:"input"},"24.1":{t:'input type="password" 浏览器自动填充账号和密码\r',p:"&lt;a-input type=&quot;password&quot; placeholder=&quot;请输入登录密码&quot; v-model=&quot;model.password&q ...",l:"frontEnd/html5/input.html#input-type-password-浏览器自动填充账号和密码",a:"input-type-password-浏览器自动填充账号和密码"},"25.0":{t:"# 闭包\r",p:"\r",l:"frontEnd/JavaScript/core/closure.html",a:"闭包"},"25.1":{t:"什么是闭包\r",p:`一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）
也就是说，闭包让你可以在一个内层函数中访问到其 ...`,l:"frontEnd/JavaScript/core/closure.html#什么是闭包",a:"什么是闭包"},"26.0":{t:"# 节流和防抖\r",p:"\r",l:"frontEnd/JavaScript/core/debounce.html",a:"节流和防抖"},"26.1":{t:"是什么\r",p:`本质上是优化高频率执行代码的一种手段
如：浏览器的 resize、scroll、keypress、mousemove 等事件在触发时，会不断地调用绑定在事件上的回调函数，极大地浪费资源，降低前端性能
 ...`,l:"frontEnd/JavaScript/core/debounce.html#是什么",a:"是什么"},"26.2":{t:"定义\r",p:`节流: n 秒内只运行一次，若在 n 秒内重复触发，只有一次生效
防抖: n 秒后在执行该事件，若在 n 秒内被重复触发，则重新计时
`,l:"frontEnd/JavaScript/core/debounce.html#定义",a:"定义"},"26.3":{t:"代码实现\r",p:"\r",l:"frontEnd/JavaScript/core/debounce.html#代码实现",a:"代码实现"},"26.4":{t:"节流\r",p:`
使用时间戳写法，事件会立即执行，停止触发后没有办法再次执行

function throttled1(fn, delay = 500) {
  let oldtime = Date.now()
   ...`,l:"frontEnd/JavaScript/core/debounce.html#节流",a:"节流"},"26.5":{t:"防抖\r",p:`
简单版本的实现

function debounce(func, wait) {
  let timeout

  return function () {
    let context = th ...`,l:"frontEnd/JavaScript/core/debounce.html#防抖",a:"防抖"},"27.0":{t:"# 深拷贝\r",p:`function deepCopy(obj) {
  // 如果不是对象或者为null，直接返回
  if (typeof obj !== 'object' || obj === null) {
   ...`,l:"frontEnd/JavaScript/core/deepCopy.html",a:"深拷贝"},"28.0":{t:"# 数组去重\r",p:`const arr = [1, 1, '1', 17, true, true, false, false, 'true', 'a', {}, {}]
// =&gt; [1, '1', 17, tru ...`,l:"frontEnd/JavaScript/core/duplicate.html",a:"数组去重"},"28.1":{t:"1. 使用 set\r",p:`const newArr = Array.from(new Set(arr))

`,l:"frontEnd/JavaScript/core/duplicate.html#_1-使用-set",a:"_1-使用-set"},"28.2":{t:"2. for 循环\r",p:`const unique = (arr) =&gt; {
  let len = arr.length
  for (let i = 0; i &lt; len; i++) {
    for (le ...`,l:"frontEnd/JavaScript/core/duplicate.html#_2-for-循环",a:"_2-for-循环"},"28.3":{t:"3. 使用 indexOf\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (re ...`,l:"frontEnd/JavaScript/core/duplicate.html#_3-使用-indexof",a:"_3-使用-indexof"},"28.4":{t:"4. 使用 include\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (!r ...`,l:"frontEnd/JavaScript/core/duplicate.html#_4-使用-include",a:"_4-使用-include"},"28.5":{t:"5. 使用 filter\r",p:`const unique = (arr) =&gt; {
  return arr.filter((item, index) =&gt; {
    return arr.indexOf(item)  ...`,l:"frontEnd/JavaScript/core/duplicate.html#_5-使用-filter",a:"_5-使用-filter"},"28.6":{t:"6. 使用 Map\r",p:`const unique = (arr) =&gt; {
  const map = new Map()
  const res = []
  for (let i = 0; i &lt; arr.l ...`,l:"frontEnd/JavaScript/core/duplicate.html#_6-使用-map",a:"_6-使用-map"},"29.0":{t:"# 数组扁平化\r",p:`
数组扁平化是指将一个多维数组变为一个一维数组

const arr = [1, [2, [3, [4, 5]]], 6]
// =&gt; [1, 2, 3, 4, 5, 6]

`,l:"frontEnd/JavaScript/core/flattening.html",a:"数组扁平化"},"29.1":{t:"1. 使用 flat()\r",p:`const res1 = arr.flat()
// 使用Infinity，无论多少层都将扁平化为一维数组。
const res1 = arr.flat(Infinity)

`,l:"frontEnd/JavaScript/core/flattening.html#_1-使用-flat",a:"_1-使用-flat"},"29.2":{t:"2. 利用正则\r",p:`const res2 = JSON.stringify(arr).replace(/\\[|\\]/g, '').split(',')

// 优化
const res3 = JSON.parse('[' ...`,l:"frontEnd/JavaScript/core/flattening.html#_2-利用正则",a:"_2-利用正则"},"29.3":{t:"3. 使用 reduce\r",p:`const flatten = (arr) =&gt; {
  return arr.reduce((pre, cur) =&gt; {
    return pre.concat(Array.isA ...`,l:"frontEnd/JavaScript/core/flattening.html#_3-使用-reduce",a:"_3-使用-reduce"},"29.4":{t:"4. 函数递归\r",p:`const res5 = []
const fn = (arr) =&gt; {
  for (let i = 0; i &lt; arr.length; i++) {
    if (Array.i ...`,l:"frontEnd/JavaScript/core/flattening.html#_4-函数递归",a:"_4-函数递归"},"30.0":{t:"# promise\r",p:"\r",l:"frontEnd/JavaScript/core/promise.html",a:"promise"},"30.1":{t:"是什么\r",p:`promise是一种异步编程的解决方案，它可以避免回调地狱，使代码更加简洁易读。promise对象代表一个异步操作的最终完成或失败，并返回一个值。
在 JavaScript 中，promise有三种状 ...`,l:"frontEnd/JavaScript/core/promise.html#是什么",a:"是什么"},"30.2":{t:"实现一个 promise\r",p:`// 实现一个promise
class MyPromise {
  constructor(executor) {
    this.status = 'pending' // 初始状态为pendi ...`,l:"frontEnd/JavaScript/core/promise.html#实现一个-promise",a:"实现一个-promise"},"31.0":{t:"# JavaScript 简介\r",p:`JavaScript 是一种脚本语言，通常用于在 Web 浏览器中编写交互式前端代码。它也可以在服务器端运行，用于编写后端代码。
JavaScript 的语法类似于 C 语言，但它是一种解释性语言，不 ...`,l:"frontEnd/JavaScript/index.html",a:"javascript-简介"},"32.0":{t:"# Ajax\r",p:"\r",l:"frontEnd/JavaScript/js/ajax.html",a:"ajax"},"32.1":{t:"是什么\r",p:`AJAX 全称(Async Javascript and XML)
即异步的 JavaScript 和 XML，是一种创建交互式网页应用的网页开发技术，可以在不重新加载整个网页的情况下，与服务器交换数 ...`,l:"frontEnd/JavaScript/js/ajax.html#是什么",a:"是什么"},"32.2":{t:"二、实现过程\r",p:`实现 Ajax 异步交互需要服务器逻辑进行配合，需要完成以下步骤：


创建 Ajax 的核心对象 XMLHttpRequest 对象


通过 XMLHttpRequest 对象的 open() 方 ...`,l:"frontEnd/JavaScript/js/ajax.html#二、实现过程",a:"二、实现过程"},"32.3":{t:"1. 创建 XMLHttpRequest 对象\r",p:`通过XMLHttpRequest() 构造函数用于初始化一个 XMLHttpRequest 实例对象
const xhr = new XMLHttpRequest()

`,l:"frontEnd/JavaScript/js/ajax.html#_1-创建-xmlhttprequest-对象",a:"_1-创建-xmlhttprequest-对象"},"32.4":{t:"2. 与服务器建立连接\r",p:`通过 XMLHttpRequest 对象的 open() 方法与服务器建立连接
xhr.open(method, url, [async][, user][, password])

参数说明：


 ...`,l:"frontEnd/JavaScript/js/ajax.html#_2-与服务器建立连接",a:"_2-与服务器建立连接"},"32.5":{t:"3. 给服务端发送数据\r",p:`通过 XMLHttpRequest 对象的 send() 方法，将客户端页面的数据发送给服务端
xhr.send([body])

body: 在 XHR 请求中要发送的数据体，如果不传递数据则为 n ...`,l:"frontEnd/JavaScript/js/ajax.html#_3-给服务端发送数据",a:"_3-给服务端发送数据"},"32.6":{t:"4. 绑定 onreadystatechange 事件\r",p:`onreadystatechange 事件用于监听服务器端的通信状态，主要监听的属性为XMLHttpRequest.readyState ,
关于XMLHttpRequest.readyState属性 ...`,l:"frontEnd/JavaScript/js/ajax.html#_4-绑定-onreadystatechange-事件",a:"_4-绑定-onreadystatechange-事件"},"32.7":{t:"三、封装\r",p:`通过上面对XMLHttpRequest 对象的了解，下面来封装一个简单的ajax请求
//封装一个ajax请求
function ajax(options) {
    //创建XMLHttpRequ ...`,l:"frontEnd/JavaScript/js/ajax.html#三、封装",a:"三、封装"},"33.0":{t:"# 数组方法\r",p:"\r",l:"frontEnd/JavaScript/js/array.html",a:"数组方法"},"33.1":{t:"一、操作方法\r",p:`数组基本操作可以归纳为 增、删、改、查，需要留意的是哪些方法会对原数组产生影响，哪些方法不会
下面对数组常用的操作方法做一个归纳
`,l:"frontEnd/JavaScript/js/array.html#一、操作方法",a:"一、操作方法"},"33.2":{t:"增\r",p:`下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响

push()
unshift()
splice()
concat()

`,l:"frontEnd/JavaScript/js/array.html#增",a:"增"},"33.3":{t:"push()\r",p:`push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度
let colors = [] // 创建一个数组
let count = colors.push('red', 'bl ...`,l:"frontEnd/JavaScript/js/array.html#push",a:"push"},"33.4":{t:"unshift()\r",p:`unshift()在数组开头添加任意多个值，然后返回新的数组长度
let colors = new Array() // 创建一个数组
let count = colors.unshift('red' ...`,l:"frontEnd/JavaScript/js/array.html#unshift",a:"unshift"},"33.5":{t:"splice\r",p:`传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组
let colors = ['red', 'green', 'blue']
let removed = colors.sp ...`,l:"frontEnd/JavaScript/js/array.html#splice",a:"splice"},"33.6":{t:"concat()\r",p:`首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组
let colors = ['red', 'green', 'blue']
let color ...`,l:"frontEnd/JavaScript/js/array.html#concat",a:"concat"},"33.7":{t:"删\r",p:`下面三种都会影响原数组，最后一项不影响原数组：

pop()
shift()
splice()
slice()

`,l:"frontEnd/JavaScript/js/array.html#删",a:"删"},"33.8":{t:"pop()\r",p:`pop() 方法用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.pop() / ...`,l:"frontEnd/JavaScript/js/array.html#pop",a:"pop"},"33.9":{t:"shift()\r",p:`shift()方法用于删除数组的第一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.shift() ...`,l:"frontEnd/JavaScript/js/array.html#shift",a:"shift"},"33.10":{t:"splice()\r",p:`传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组
let colors = ['red', 'green', 'blue']
let removed = colors.splice ...`,l:"frontEnd/JavaScript/js/array.html#splice",a:"splice"},"33.11":{t:"slice()\r",p:`slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组
let colors = ['red', 'green', 'blue', 'yellow', 'purple']
 ...`,l:"frontEnd/JavaScript/js/array.html#slice",a:"slice"},"33.12":{t:"改\r",p:`即修改原来数组的内容，常用splice
`,l:"frontEnd/JavaScript/js/array.html#改",a:"改"},"33.13":{t:"splice()\r",p:`传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响
let colors = ['red', 'green', 'blue']
let remo ...`,l:"frontEnd/JavaScript/js/array.html#splice",a:"splice"},"33.14":{t:"查\r",p:`即查找元素，返回元素坐标或者元素值

indexOf()
includes()
find()

`,l:"frontEnd/JavaScript/js/array.html#查",a:"查"},"33.15":{t:"indexOf()\r",p:`返回要查找的元素在数组中的位置，如果没找到则返回 -1
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.indexOf(4) // 3

`,l:"frontEnd/JavaScript/js/array.html#indexof",a:"indexof"},"33.16":{t:"includes()\r",p:`返回要查找的元素在数组中的位置，找到返回true，否则false
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.includes(4) // tr ...`,l:"frontEnd/JavaScript/js/array.html#includes",a:"includes"},"33.17":{t:"find()\r",p:`返回第一个匹配的元素
const people = [
  {
    name: 'Matt',
    age: 27
  },
  {
    name: 'Nicholas',
    age ...`,l:"frontEnd/JavaScript/js/array.html#find",a:"find"},"33.18":{t:"二、排序方法\r",p:`数组有两个方法可以用来对元素重新排序：

reverse()
sort()

`,l:"frontEnd/JavaScript/js/array.html#二、排序方法",a:"二、排序方法"},"33.19":{t:"reverse()\r",p:`顾名思义，将数组元素方向反转
let values = [1, 2, 3, 4, 5]
values.reverse()
console.log(values) // 5,4,3,2,1

`,l:"frontEnd/JavaScript/js/array.html#reverse",a:"reverse"},"33.20":{t:"sort()\r",p:`sort()方法接受一个比较函数，用于判断哪个值应该排在前面
function compare(value1, value2) {
  if (value1 &lt; value2) {
    re ...`,l:"frontEnd/JavaScript/js/array.html#sort",a:"sort"},"33.21":{t:"三、转换方法\r",p:`常见的转换方法有：
`,l:"frontEnd/JavaScript/js/array.html#三、转换方法",a:"三、转换方法"},"33.22":{t:"join()\r",p:`join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串
let colors = ['red', 'green', 'blue']
console.log(colors.join(', ...`,l:"frontEnd/JavaScript/js/array.html#join",a:"join"},"33.23":{t:"四、迭代方法\r",p:`常用来迭代数组的方法（都不改变原数组）有如下：

some()
every()
forEach()
filter()
map()

`,l:"frontEnd/JavaScript/js/array.html#四、迭代方法",a:"四、迭代方法"},"33.24":{t:"some()\r",p:`对数组每一项都运行传入的测试函数，如果至少有 1 个元素返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let some ...`,l:"frontEnd/JavaScript/js/array.html#some",a:"some"},"33.25":{t:"every()\r",p:`对数组每一项都运行传入的测试函数，如果所有元素都返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let everyRes ...`,l:"frontEnd/JavaScript/js/array.html#every",a:"every"},"33.26":{t:"forEach()\r",p:`对数组每一项都运行传入的函数，没有返回值
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.forEach((item, index, array)  ...`,l:"frontEnd/JavaScript/js/array.html#foreach",a:"foreach"},"33.27":{t:"filter()\r",p:`对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let filterResult = nu ...`,l:"frontEnd/JavaScript/js/array.html#filter",a:"filter"},"33.28":{t:"map()\r",p:`对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let mapResult = numbers.m ...`,l:"frontEnd/JavaScript/js/array.html#map",a:"map"},"34.0":{t:"# 数据类型\r",p:"\r",l:"frontEnd/JavaScript/js/data_type.html",a:"数据类型"},"34.1":{t:"一、基本类型\r",p:`基本类型主要为以下 6 种：

Number
String
Boolean
Undefined
null
symbol

`,l:"frontEnd/JavaScript/js/data_type.html#一、基本类型",a:"一、基本类型"},"34.2":{t:"Number\r",p:`数值最常见的整数类型格式则为十进制，还可以设置八进制（零开头）、十六进制（0x 开头）
let intNum = 55 // 10进制的55
let num1 = 070 // 8进制的56
let  ...`,l:"frontEnd/JavaScript/js/data_type.html#number",a:"number"},"34.3":{t:"Undefined\r",p:`Undefined 类型只有一个值，就是特殊值 undefined。当使用 var 或 let 声明了变量但没有初始化时，就相当于给变量赋予了 undefined 值
let message
cons ...`,l:"frontEnd/JavaScript/js/data_type.html#undefined",a:"undefined"},"34.4":{t:"String\r",p:`字符串可以使用双引号（&quot;）、单引号（'）或反引号（\`）标示
let firstName = 'John'
let lastName = 'Jacob'
let lastName = \`Jin ...`,l:"frontEnd/JavaScript/js/data_type.html#string",a:"string"},"34.5":{t:"Null\r",p:`Null 类型同样只有一个值，即特殊值 null
逻辑上讲， null 值表示一个空对象指针，这也是给typeof 传一个 null 会返回 &quot;object&quot; 的原因
let ca ...`,l:"frontEnd/JavaScript/js/data_type.html#null",a:"null"},"34.6":{t:"Boolean\r",p:`Boolean （布尔值）类型有两个字面值： true 和 false
通过Boolean可以将其他类型的数据转化成布尔值
规则如下：
数据类型      				转换为 true 的值      	 ...`,l:"frontEnd/JavaScript/js/data_type.html#boolean",a:"boolean"},"34.7":{t:"Symbol\r",p:`Symbol （符号）是原始值，且符号实例是唯一、不可变的。符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险
let genericSymbol = Symbol()
let other ...`,l:"frontEnd/JavaScript/js/data_type.html#symbol",a:"symbol"},"34.8":{t:"二、引用类型\r",p:`复杂类型统称为Object，我们这里主要讲述下面三种：

Object
Array
Function

`,l:"frontEnd/JavaScript/js/data_type.html#二、引用类型",a:"二、引用类型"},"34.9":{t:"Object\r",p:`创建object常用方式为对象字面量表示法，属性名可以是字符串或数值
let person = {
  name: 'Nicholas',
  age: 29,
  5: true
}

`,l:"frontEnd/JavaScript/js/data_type.html#object",a:"object"},"34.10":{t:"Array\r",p:`JavaScript数组是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。并且，数组也是动态大小的，会随着数据添加而自动增长
let colors = ['red', 2, ...`,l:"frontEnd/JavaScript/js/data_type.html#array",a:"array"},"34.11":{t:"Function\r",p:`函数实际上是对象，每个函数都是 Function类型的实例，而 Function 也有属性和方法，跟其他引用类型一样
函数存在三种常见的表达方式：

函数声明

// 函数声明
function su ...`,l:"frontEnd/JavaScript/js/data_type.html#function",a:"function"},"34.12":{t:"其他引用类型\r",p:`除了上述说的三种之外，还包括Date、RegExp、Map、Set等......
`,l:"frontEnd/JavaScript/js/data_type.html#其他引用类型",a:"其他引用类型"},"34.13":{t:"三、存储区别\r",p:`基本数据类型和引用数据类型存储在内存中的位置不同：


基本数据类型存储在栈中


引用类型的对象存储于堆中


当我们把变量赋值给一个变量时，解析器首先要确认的就是这个值是基本类型值还是引用类型值
 ...`,l:"frontEnd/JavaScript/js/data_type.html#三、存储区别",a:"三、存储区别"},"34.14":{t:"基本类型\r",p:`let a = 10
let b = a // 赋值操作
b = 20
console.log(a) // 10值

a的值为一个基本类型，是存储在栈中，将a的值赋给b，虽然两个变量的值相等，但是两个 ...`,l:"frontEnd/JavaScript/js/data_type.html#基本类型",a:"基本类型"},"34.15":{t:"引用类型\r",p:`var obj1 = {}
var obj2 = obj1
obj2.name = 'zs'
console.log(obj1.name) // zs

引用类型数据存放在堆中，每个堆内存对象都有对应 ...`,l:"frontEnd/JavaScript/js/data_type.html#引用类型",a:"引用类型"},"34.16":{t:"小结\r",p:`
声明变量时不同的内存地址分配：

简单类型的值存放在栈中，在栈中存放的是对应的值
引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址


不同的类型数据导致赋值变量时的不同：

简单类型赋值 ...`,l:"frontEnd/JavaScript/js/data_type.html#小结",a:"小结"},"35.0":{t:"# Js字符串的常用方法\r",p:"\r",l:"frontEnd/JavaScript/js/string.html",a:"js字符串的常用方法"},"35.1":{t:"一、操作方法\r",p:`我们也可将字符串常用的操作方法归纳为增、删、改、查，需要知道字符串的特点是一旦创建了，就不可变
`,l:"frontEnd/JavaScript/js/string.html#一、操作方法",a:"一、操作方法"},"35.2":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"frontEnd/JavaScript/js/string.html#增",a:"增"},"35.3":{t:"concat\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = &quot;hello &quot;;
let result = stringValue.concat(&quot;wor ...`,l:"frontEnd/JavaScript/js/string.html#concat",a:"concat"},"35.4":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"frontEnd/JavaScript/js/string.html#删",a:"删"},"35.5":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"frontEnd/JavaScript/js/string.html#改",a:"改"},"35.6":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = &quot; hello world &quot;;
let trimmedStringValue = stringV ...`,l:"frontEnd/JavaScript/js/string.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"35.7":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = &quot;na &quot;;
let copyResult = stringValue ...`,l:"frontEnd/JavaScript/js/string.html#repeat",a:"repeat"},"35.8":{t:"padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
let stringValue = &quot;foo&quot;;
console.log(stringValue.padSta ...`,l:"frontEnd/JavaScript/js/string.html#padend",a:"padend"},"35.9":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = &quot;hello world&quot;;
console.log(stringValue.toUpperCase()); // &quot;HE ...`,l:"frontEnd/JavaScript/js/string.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"35.10":{t:"查\r",p:`除了通过索引的方式获取字符串的值，还可通过：


chatAt()


indexOf()


startWith()


includes()


`,l:"frontEnd/JavaScript/js/string.html#查",a:"查"},"35.11":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = &quot;abcde&quot;;
console.log(message.charAt(2)); // &quot;c ...`,l:"frontEnd/JavaScript/js/string.html#charat",a:"charat"},"35.12":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = &quot;hello world&quot;;
console.log(stringVa ...`,l:"frontEnd/JavaScript/js/string.html#indexof",a:"indexof"},"35.13":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = &quot;foobarbaz&quot;;
console.log(message.startsWith(&q ...`,l:"frontEnd/JavaScript/js/string.html#startwith-、includes",a:"startwith-、includes"},"35.14":{t:"二、转换方法\r",p:"\r",l:"frontEnd/JavaScript/js/string.html#二、转换方法",a:"二、转换方法"},"35.15":{t:"split\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = &quot;12+23+34&quot;
let arr = str.split(&quot;+&quot;) // [12,23, ...`,l:"frontEnd/JavaScript/js/string.html#split",a:"split"},"35.16":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"frontEnd/JavaScript/js/string.html#三、模板匹配方法",a:"三、模板匹配方法"},"35.17":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = &quot;cat, bat, sat, fat&quot;;
let pattern = /. ...`,l:"frontEnd/JavaScript/js/string.html#match",a:"match"},"35.18":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = &quot;cat, bat, sat, fat&quot;;
let ...`,l:"frontEnd/JavaScript/js/string.html#search",a:"search"},"35.19":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = &quot;cat, bat, sat, fat&quot;;
let result = text.re ...`,l:"frontEnd/JavaScript/js/string.html#replace",a:"replace"},"36.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"frontEnd/react/index.html",a:"该内容正在努力建设中"},"37.0":{t:"# 基本类型\r",p:"\r",l:"frontEnd/TypeScript/basic.html",a:"基本类型"},"37.1":{t:"字符串类型\r",p:`// 普通声明
let a: string = '123'

// 也可以使用es6的字符串模板
let str: string = \`ddd\${a}\`

`,l:"frontEnd/TypeScript/basic.html#字符串类型",a:"字符串类型"},"37.2":{t:"数字类型\r",p:`// 支持十六进制、十进制、八进制和二进制。
let notANumber: number = NaN //NaN
let num: number = 123.321 //普通数字
let infin ...`,l:"frontEnd/TypeScript/basic.html#数字类型",a:"数字类型"},"37.3":{t:"布尔类型\r",p:`let b1: boolean = true //可以直接使用布尔值
let b2: boolean = false //也可以通过函数返回布尔值

let b2: boolean = Boolean ...`,l:"frontEnd/TypeScript/basic.html#布尔类型",a:"布尔类型"},"37.4":{t:"数组\r",p:`TypeScript 像 JavaScript 一样可以操作数组元素。 有两种方式可以定义数组。 第一种，可以在元素类型后面接上 []，表示由此类型元素组成的一个数组：
let list: numbe ...`,l:"frontEnd/TypeScript/basic.html#数组",a:"数组"},"37.5":{t:"元组 Tuple\r",p:`元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。
比如：可以定义一对值分别为string和num ...`,l:"frontEnd/TypeScript/basic.html#元组-tuple",a:"元组-tuple"},"37.6":{t:"枚举\r",p:`enum类型是对 JavaScript 标准数据类型的一个补充。使用枚举类型可以为一组数值赋予友好的名字。
枚举的值可以是数字，也可以是字符串。

数字枚举

enum Types {
  Red = ...`,l:"frontEnd/TypeScript/basic.html#枚举",a:"枚举"},"37.7":{t:"Any 任意类型\r",p:`没有强制限定哪种类型，随时切换类型都可以 我们可以对 any 进行任何操作，不需要检查类型
let value: Any
value = true // OK
value = 42 // OK
val ...`,l:"frontEnd/TypeScript/basic.html#any-任意类型",a:"any-任意类型"},"37.8":{t:"Void\r",p:`可以用 void 表示没有任何返回值的函数
function voidFn(): void {
  console.log('test void')
  // return // 不能带有return ...`,l:"frontEnd/TypeScript/basic.html#void",a:"void"},"37.9":{t:"Null 和 Undefined\r",p:`let u: undefined = undefined //定义undefined
let n: null = null //定义null

默认情况下 null 和 undefined 是所有类型 ...`,l:"frontEnd/TypeScript/basic.html#null-和-undefined",a:"null-和-undefined"},"37.10":{t:"Never\r",p:`never 类型表示的是那些永不存在的值的类型。
// 返回never的函数必须存在无法达到的终点

// 因为必定抛出异常，所以 error 将不会有返回值
function error(messa ...`,l:"frontEnd/TypeScript/basic.html#never",a:"never"},"37.11":{t:"Never 与 Void 的差异\r",p:`//void类型只是没有返回值 但本身不会出错
function Void(): void {
  console.log()
}

//只会抛出异常没有返回值
function Never(): n ...`,l:"frontEnd/TypeScript/basic.html#never-与-void-的差异",a:"never-与-void-的差异"},"37.12":{t:"联合类型\r",p:`联合类型用|分隔，表示取值可以为多种类型中的一种
// a可以为数字或者布尔类型，不能为字符串类型，
// 因为定义的联合类型只有数字和布尔值并没有字符串
let a:num|boolean
a =  ...`,l:"frontEnd/TypeScript/basic.html#联合类型",a:"联合类型"},"37.13":{t:"交叉类型\r",p:`交叉类型就是跟联合类型相反，用&amp;操作符表示，交叉类型就是两个类型必须存在
interface People {
  age: number,
  height： number
}
interf ...`,l:"frontEnd/TypeScript/basic.html#交叉类型",a:"交叉类型"},"37.14":{t:"类型断言\r",p:"通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。 类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScrip ...",l:"frontEnd/TypeScript/basic.html#类型断言",a:"类型断言"},"38.0":{t:"# 类\r",p:"ES6提供了更接近传统语言的写法，引入了Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。基本上，ES6的class可以看作只是一个语法糖，它的绝大部分功能，ES5都可以做到 ...",l:"frontEnd/TypeScript/class.html",a:"类"},"38.1":{t:"基本实例\r",p:`// 类的基本定义与使用
class Person{
  // 声明属性
    name:string
    age:number

    // 构造方法
    constructor(nam ...`,l:"frontEnd/TypeScript/class.html#基本实例",a:"基本实例"},"38.2":{t:"继承\r",p:`在TypeScript 里，我们可以使用常用的面向对象模式。 基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类。
// 类的继承
class Animal {
  run (distan ...`,l:"frontEnd/TypeScript/class.html#继承",a:"继承"},"38.3":{t:"类的修饰符\r",p:`总共有三个 public private protected
`,l:"frontEnd/TypeScript/class.html#类的修饰符",a:"类的修饰符"},"38.4":{t:"默认为 public\r",p:`使用public修饰符 可以让你定义的变量 内部访问 也可以外部访问 如果不写默认就是public
`,l:"frontEnd/TypeScript/class.html#默认为-public",a:"默认为-public"},"38.5":{t:"理解 private\r",p:`使用private修饰符 代表定义的变量私有的只能在内部访问 不能在外部访问
`,l:"frontEnd/TypeScript/class.html#理解-private",a:"理解-private"},"38.6":{t:"理解 protected\r",p:`使用protected修饰符 代表定义的变量私有的只能在内部和继承的子类中访问 不能在外部访问
class Person{
    public name:string
    private age ...`,l:"frontEnd/TypeScript/class.html#理解-protected",a:"理解-protected"},"38.7":{t:"readonly 修饰符\r",p:`你可以使用 readonly 关键字将属性设置为只读的。 只读属性必须在声明时或构造函数里被初始化。
class Person {
  readonly name: string = 'abc'
   ...`,l:"frontEnd/TypeScript/class.html#readonly-修饰符",a:"readonly-修饰符"},"38.8":{t:"static 静态属性 和 静态方法\r",p:`我们用static 定义的属性 不可以通过this 去访问 只能通过类名去调用
class Person {
  public name: string;
  static age: number = ...`,l:"frontEnd/TypeScript/class.html#static-静态属性-和-静态方法",a:"static-静态属性-和-静态方法"},"38.9":{t:"interface 定义 类\r",p:`ts interface 定义类 使用关键字 implements 后面跟interface的名字多个用逗号隔开 继承还是用extends

interface PersonClass {
    g ...`,l:"frontEnd/TypeScript/class.html#interface-定义-类",a:"interface-定义-类"},"38.10":{t:"存储器\r",p:`TypeScript 支持通过 getters/setters 来截取对对象成员的访问。 它能帮助你有效的控制对对象成员的访问。
下面来看如何把一个简单的类改写成使用 get 和 set。 首先，我们 ...`,l:"frontEnd/TypeScript/class.html#存储器",a:"存储器"},"38.11":{t:"抽象类\r",p:`抽象类做为其它派生类的基类使用。 它们一般不会直接被实例化，只能实例化实现了所有抽象方法的子类。 不同于接口，抽象类可以包含成员的实现细节。
abstract: 用abstract关键字声明的类叫做抽 ...`,l:"frontEnd/TypeScript/class.html#抽象类",a:"抽象类"},"39.0":{t:"# 函数\r",p:`
函数涉及的类型实际上指的是：函数参数和返回值的类型

`,l:"frontEnd/TypeScript/function.html",a:"函数"},"39.1":{t:"函数的类型\r",p:`js的函数
// 命名函数
function add(x, y) {
  return x + y
}

// 匿名函数 箭头函数
let myAdd = (x, y) =&gt; {
  retur ...`,l:"frontEnd/TypeScript/function.html#函数的类型",a:"函数的类型"},"39.2":{t:"可选参数`?`\r",p:`通过?表示该参数为可选参数
function add(x: number, y?: number): number {
  return y ? x + y : x;
}


const fn = ( ...`,l:"frontEnd/TypeScript/function.html#可选参数",a:"可选参数"},"39.3":{t:"默认参数\r",p:`function add(x: number, y: number = 20): number {
  return x + y;
}
add(10)  // 30

`,l:"frontEnd/TypeScript/function.html#默认参数",a:"默认参数"},"39.4":{t:"剩余参数\r",p:"必要参数，默认参数和可选参数有个共同点：它们表示某一个参数。 有时，你想同时操作多个参数，或者你并不知道会有多少参数传递进来。 在 JavaScript 里，你可以使用 arguments 来访问所有 ...",l:"frontEnd/TypeScript/function.html#剩余参数",a:"剩余参数"},"39.5":{t:"函数重载\r",p:`重载是方法名字相同，而参数不同，返回类型可以相同也可以不同。
// 重载函数声明
function add (x: string, y: string): string
function add (x ...`,l:"frontEnd/TypeScript/function.html#函数重载",a:"函数重载"},"40.0":{t:"# 泛型\r",p:`
指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定具体类型的一种特性。

`,l:"frontEnd/TypeScript/generic.html",a:"泛型"},"40.1":{t:"函数泛型\r",p:"\r",l:"frontEnd/TypeScript/generic.html#函数泛型",a:"函数泛型"},"40.2":{t:"给函数加上类型\r",p:`下面这是两个函数，除了类型的不同，实现的功能是一样的。
function num(a: number, b: number): Array&lt;number&gt; {
  return [a, b ...`,l:"frontEnd/TypeScript/generic.html#给函数加上类型",a:"给函数加上类型"},"40.3":{t:"使用泛型优化\r",p:`语法为函数名字后面跟一个&lt;参数名&gt; 参数名可以随便写 例如我这儿写了 T
当我们使用这个函数的时候把参数的类型传进去就可以了 （也就是动态类型）
function Add&lt;T&gt; ...`,l:"frontEnd/TypeScript/generic.html#使用泛型优化",a:"使用泛型优化"},"40.4":{t:"多个泛型参数的函数\r",p:`一个函数可以定义多个泛型参数
function swap&lt;K, V&gt;(a: K, b: V): [K, V] {
  return [a, b]
}
const result = swap ...`,l:"frontEnd/TypeScript/generic.html#多个泛型参数的函数",a:"多个泛型参数的函数"},"40.5":{t:"泛型接口\r",p:`在定义接口时, 为接口中的属性或方法定义泛型类型 
在使用接口时, 再指定具体的泛型类型
interface KeyValue&lt;T,U&gt; {
  key: T;
  value: U;
} ...`,l:"frontEnd/TypeScript/generic.html#泛型接口",a:"泛型接口"},"40.6":{t:"泛型类\r",p:`在定义类时, 为类中的属性或方法定义泛型类型 在创建类的实例时, 再指定特定的泛型类型
class clacArray&lt;T&gt;{
    private arr:T[] = [];

    ...`,l:"frontEnd/TypeScript/generic.html#泛型类",a:"泛型类"},"40.7":{t:"泛型约束\r",p:`我们期望在一个泛型的变量上面，获取其length参数，但是，有的数据类型是没有length属性的
// 没有泛型约束
function getLen&lt;T&gt;(arg:T) {
  retur ...`,l:"frontEnd/TypeScript/generic.html#泛型约束",a:"泛型约束"},"41.0":{t:"# 初识TypeScript\r",p:`
TypeScript中文网

`,l:"frontEnd/TypeScript/index.html",a:"初识typescript"},"41.1":{t:"TS是什么？\r",p:`TS：是TypeScript的简称，是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。
`,l:"frontEnd/TypeScript/index.html#ts是什么",a:"ts是什么"},"41.2":{t:"TS和JS的关系\r",p:`对比于JS，TS是JS的超集，简单的说就是在 JavaScript 的基础上加入了类型系统，让每个参数都有明确的意义，从而带来了更加智能的提示。
相对于JS而言，TS属于强类型语言，所以对于项目而言， ...`,l:"frontEnd/TypeScript/index.html#ts和js的关系",a:"ts和js的关系"},"41.3":{t:"TS和JS的区别\r",p:`
JavaScript 属于动态编程语言，而ts 属于静态编程语言。

js：边解释边执行，错误只有在运行的时候才能发现
ts：先编译再执行，在写的时候就会发现错误了（ts不能直接执行，需要先编译成  ...`,l:"frontEnd/TypeScript/index.html#ts和js的区别",a:"ts和js的区别"},"41.4":{t:"TypeScript的优缺点\r",p:"",l:"frontEnd/TypeScript/index.html#typescript的优缺点",a:"typescript的优缺点"},"41.5":{t:"优点\r",p:`
增强代码的可维护性，尤其在大型项目的时候效果显著
友好地在编辑器里提示错误，编译阶段就能检查类型发现大部分错误
支持最新的JavaScript新特特性
周边生态繁荣，vue3已全面支持 typesc ...`,l:"frontEnd/TypeScript/index.html#优点",a:"优点"},"41.6":{t:"缺点\r",p:`
需要一定的学习成本
和一些插件库的兼容并不是特别完美，如以前在 vue2 项目里使用 typescript就并不是那么顺畅
增加前期开发的成本，毕竟你需要写更多的代码（但是便于后期的维护）

`,l:"frontEnd/TypeScript/index.html#缺点",a:"缺点"},"41.7":{t:"安装\r",p:`# 安装 typescript
npm install -g typescript
//或者
yarn global add typescript

# 查看版本
tsc -v

# 编译
tsc i ...`,l:"frontEnd/TypeScript/index.html#安装",a:"安装"},"41.8":{t:"监视编译和在node下运行typescript\r",p:"",l:"frontEnd/TypeScript/index.html#监视编译和在node下运行typescript",a:"监视编译和在node下运行typescript"},"41.9":{t:"一、使用tsc -w进行随时热更新watch\r",p:`tsc -w

`,l:"frontEnd/TypeScript/index.html#一、使用tsc-w进行随时热更新watch",a:"一、使用tsc-w进行随时热更新watch"},"41.10":{t:"二、使用ts-node直接运行ts的node项目\r",p:`首先全局安装ts-node
npm install -g ts-node

直接进行ts-node 启动文件名
`,l:"frontEnd/TypeScript/index.html#二、使用ts-node直接运行ts的node项目",a:"二、使用ts-node直接运行ts的node项目"},"42.0":{t:"# 接口和对象类型\r",p:`
TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述)

`,l:"frontEnd/TypeScript/interface.html",a:"接口和对象类型"},"42.1":{t:"对象的类型\r",p:`在typescript中，我们定义对象的方式要用关键字interface（接口），我的理解是使用interface来定义一种约束，让数据的结构满足约束的格式。定义方式如下：
//这样写是会报错的 因为 ...`,l:"frontEnd/TypeScript/interface.html#对象的类型",a:"对象的类型"},"42.2":{t:"重名interface 会合并\r",p:`interface A{name:string}
interface A{age:number}

let a:A = {
    name:'zs',
    age:18
}

`,l:"frontEnd/TypeScript/interface.html#重名interface-会合并",a:"重名interface-会合并"},"42.3":{t:"继承\r",p:`interface A {
    name:stirng
}
interface B extends A {
    age:number
}

let obj:B = {
    age:18,
 ...`,l:"frontEnd/TypeScript/interface.html#继承",a:"继承"},"42.4":{t:"可选属性 使用`?`操作符\r",p:`可选属性的好处之一是可以对可能存在的属性进行预定义，好处之二是可以捕获引用了不存在的属性时的错误。
可选属性的含义是该属性可以不存在，带有可选属性的接口与普通的接口定义差不多，在可选属性名字定义的后面 ...`,l:"frontEnd/TypeScript/interface.html#可选属性-使用-操作符",a:"可选属性-使用-操作符"},"42.5":{t:"任意属性\r",p:`需要注意的是，一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：
//在这个例子当中我们看到接口中并没有定义C但是并没有报错
//应为我们定义了[propName: string ...`,l:"frontEnd/TypeScript/interface.html#任意属性",a:"任意属性"},"42.6":{t:"只读属性 readonly\r",p:`readonly只读属性是不允许被赋值的，只能读取
//这样写是会报错的
//应为a是只读的不允许重新赋值
interface Person {
    b?: string,
    readonl ...`,l:"frontEnd/TypeScript/interface.html#只读属性-readonly",a:"只读属性-readonly"},"42.7":{t:"添加函数\r",p:`interface Person {
    cb:()=&gt;void
}
const person: Person = {
    cb:()=&gt;{
        console.log ...`,l:"frontEnd/TypeScript/interface.html#添加函数",a:"添加函数"},"43.0":{t:"# 对象类型\r",p:`这里所说的对象类型，就是我们常说的函数、{}、数组、类
`,l:"frontEnd/TypeScript/object.html",a:"对象类型"},"43.1":{t:"object,Object 和类型\r",p:`
object

object 类型用于表示所有的非原始类型，即我们不能把 number、string、boolean、symbol 等 原始类型赋值给 object。在严格模式下，null 和 un ...`,l:"frontEnd/TypeScript/object.html#",a:""},"44.0":{t:"# tsconfig.json 配置文件\r",p:`{
  &quot;compilerOptions&quot;: {
    /* 基本选项 */

    // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5' ...`,l:"frontEnd/TypeScript/tsconfig.html",a:"tsconfig-json-配置文件"},"45.0":{t:"# 类型推论|类型别名\r",p:`\r
\r`,l:"frontEnd/TypeScript/type.html",a:"类型推论-类型别名"},"45.1":{t:"类型推论\r",p:`TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。
/* 定义变量时赋值了, 推断为对应的类型 */
let n1 = 10 // number
// 相当于 let n1 ...`,l:"frontEnd/TypeScript/type.html#类型推论",a:"类型推论"},"45.2":{t:"类型别名\r",p:`type 关键字（可以给一个类型定义一个名字）多用于复合类型

定义类型别名

type s = string

let str:s = &quot;abcd&quot;

console.log(s ...`,l:"frontEnd/TypeScript/type.html#类型别名",a:"类型别名"},"46.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"frontEnd/vue/index.html",a:"该内容正在努力建设中"},"47.0":{t:"# vue3 API\r",p:`
vue在线学习工具


在 vue3.2 中，我们只需在script标签中添加setup。就可以做到，组件只需引入不用注册，属性和方法也不用 return 才能于 template 中使用，也不用写 ...`,l:"frontEnd/vue/v3/api.html",a:"vue3-api"},"47.1":{t:"setup\r",p:`
理解：Vue3.0 中一个新的配置项，值为一个函数。
setup() 函数是 Vue3 新增的一个选项，它是组合式 API 的统一入口，简单来说，就是所有的 CompositionAPI 新特性都应 ...`,l:"frontEnd/vue/v3/api.html#setup",a:"setup"},"47.2":{t:"ref 和 reactive\r",p:`
ref() 函数用来根据给定的值创建一个响应式的数据对象，ref() 函数调用的返回值是一个对象，这个对象上只包含一个 value 属性, 只在setup函数内部访问ref函数需要加.value，其 ...`,l:"frontEnd/vue/v3/api.html#ref-和-reactive",a:"ref-和-reactive"},"47.3":{t:"ref全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#ref全家桶",a:"ref全家桶"},"47.4":{t:"isRef\r",p:`判断是不是一个ref对象
import { ref,isRef } from 'vue'
let message = ref(&quot;我是message&quot;)
let notRef:num ...`,l:"frontEnd/vue/v3/api.html#isref",a:"isref"},"47.5":{t:"shallowRef\r",p:`创建一个跟踪自身 .value 变化的 ref，但不会使其值也变成响应式的
修改其属性是非响应式的这样是不会改变的
&lt;template&gt;
  &lt;div&gt;
    &lt;but ...`,l:"frontEnd/vue/v3/api.html#shallowref",a:"shallowref"},"47.6":{t:"triggerRef\r",p:`强制更新页面DOM
import {Ref,shallowRef,triggerRef} from 'vue'
type Obj = {
    name:string
}
let message:R ...`,l:"frontEnd/vue/v3/api.html#triggerref",a:"triggerref"},"47.7":{t:"customRef\r",p:`自定义ref
customRef 是个工厂函数要求我们返回一个对象 并且实现 get 和 set  适合去做防抖之类的
&lt;template&gt;
  &lt;div ref=&quot;div ...`,l:"frontEnd/vue/v3/api.html#customref",a:"customref"},"47.8":{t:"reactive全家桶\r",p:`reactive是不可以绑定普通的数据类型这样是不允许 会给我们报错
import { reactive} from 'vue'
let person = reactive('zhangsan')
/ ...`,l:"frontEnd/vue/v3/api.html#reactive全家桶",a:"reactive全家桶"},"47.9":{t:"readonly\r",p:`readonly 接受一个对象 (不论是响应式还是普通的) 或是一个 ref，返回一个原值的只读代理。


`,l:"frontEnd/vue/v3/api.html#readonly",a:"readonly"},"47.10":{t:"shallowReactive\r",p:`只能对浅层的数据 如果是深层的数据只会改变值 不会改变视图
&lt;template&gt;
  &lt;div&gt;
    &lt;div&gt;{{ state }}&lt;/div&gt;
 ...`,l:"frontEnd/vue/v3/api.html#shallowreactive",a:"shallowreactive"},"47.11":{t:"to系列全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#to系列全家桶",a:"to系列全家桶"},"47.12":{t:"toRef\r",p:`把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref
如果原始对象是非响应式的，数据是会变的，但不会更新视图。
&lt;template&gt;
  &lt;div&g ...`,l:"frontEnd/vue/v3/api.html#toref",a:"toref"},"47.13":{t:"toRefs\r",p:`toRefs相当于对对象内每个属性调用toRef，toRefs返回的对象内的属性使用时需要加.value,主要是方便我们解构使用
&lt;template&gt;
  &lt;div&gt;
     ...`,l:"frontEnd/vue/v3/api.html#torefs",a:"torefs"},"47.14":{t:"toRaw\r",p:`将响应式对象修改为普通对象
&lt;template&gt;
  &lt;div&gt;
    &lt;button @click=&quot;change&quot;&gt;按钮&lt;/butt ...`,l:"frontEnd/vue/v3/api.html#toraw",a:"toraw"},"47.15":{t:"computed\r",p:`computed() 与 Vue2 中的 computed 作用基本一致，它可以接收一个函数或对象作为参数，会返回一个只读的 ref 对象。
&lt;template&gt;
  &lt;div&gt ...`,l:"frontEnd/vue/v3/api.html#computed",a:"computed"},"47.16":{t:"watch\r",p:`vue3 watch 的作用和 Vue2 中的 watch 作用是一样的，他们都是用来监听响应式状态发生变化的，当响应式状态发生变化时，就会触发一个回调函数。
watch(data,()=&gt;{} ...`,l:"frontEnd/vue/v3/api.html#watch",a:"watch"},"47.17":{t:"1、监听ref定义的一个响应式数据\r",p:`import { ref, watch } from 'vue'
let message = ref({
    nav:{
        bar:{
            name:&quot; ...`,l:"frontEnd/vue/v3/api.html#_1、监听ref定义的一个响应式数据",a:"_1、监听ref定义的一个响应式数据"},"47.18":{t:"2、监听多个ref\r",p:`写法变为数组的形式
import { ref, watch ,reactive} from 'vue'

let message = ref('')
let message2 = ref('')

w ...`,l:"frontEnd/vue/v3/api.html#_2、监听多个ref",a:"_2、监听多个ref"},"47.19":{t:"3、监听Reactive定义的响应式对象\r",p:`使用reactive监听深层对象开启和不开启deep 效果一样
import { ref, watch ,reactive} from 'vue'

let message = reactive({
 ...`,l:"frontEnd/vue/v3/api.html#_3、监听reactive定义的响应式对象",a:"_3、监听reactive定义的响应式对象"},"47.20":{t:"4、监听reactive 定义响应式对象的单一属性\r",p:`import { ref, watch ,reactive} from 'vue'
let message = reactive({
    name:&quot;&quot;,
    name2: ...`,l:"frontEnd/vue/v3/api.html#_4、监听reactive-定义响应式对象的单一属性",a:"_4、监听reactive-定义响应式对象的单一属性"},"47.21":{t:"WatchEffect\r",p:`
立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
不用直接指定要监视的数据, 回调函数中使用的哪些响应式数据就监视哪些响应式数据
默认初始时就会执行第一次, 从而可以收 ...`,l:"frontEnd/vue/v3/api.html#watcheffect",a:"watcheffect"},"47.22":{t:"清除副作用\r",p:`
watchEffect 的第一个参数——effect函数——可以接收一个参数：叫onInvalidate，也是一个函数，用于清除 effect 产生的副作用
就是在触发监听之前会调用一个函数可以处理 ...`,l:"frontEnd/vue/v3/api.html#清除副作用",a:"清除副作用"},"47.23":{t:"停止监听\r",p:`- 当 watchEffect 在组件的 setup() 函数或生命周期钩子被调用时，侦听器会被链接到该组件的生命周期，并在组件卸载时自动停止。
- 但是我们采用异步的方式创建了一个监听器，这个时候监 ...`,l:"frontEnd/vue/v3/api.html#停止监听",a:"停止监听"},"47.24":{t:"配置选项\r",p:`

watchEffect的第二个参数，用来定义副作用刷新时机，可以作为一个调试器来使用


flush （更新时机）：

pre：组件更新前执行
sync：强制效果始终同步触发
post：组件更新后 ...`,l:"frontEnd/vue/v3/api.html#配置选项",a:"配置选项"},"47.25":{t:"生命周期\r",p:`简单来说就是一个组件从创建 到 销毁的 过程 成为生命周期
在我们使用Vue3 组合式API 是没有 beforeCreate 和 created 这两个生命周期的
!img
`,l:"frontEnd/vue/v3/api.html#生命周期",a:"生命周期"},"47.26":{t:"自定义指令\r",p:"",l:"frontEnd/vue/v3/api.html#自定义指令",a:"自定义指令"},"47.27":{t:"Vue3指令的钩子函数\r",p:`
created 元素初始化的时候
beforeMount 指令绑定到元素后调用 只调用一次
mounted 元素插入父级dom调用
beforeUpdate 元素被更新之前调用
update 这个周 ...`,l:"frontEnd/vue/v3/api.html#vue3指令的钩子函数",a:"vue3指令的钩子函数"},"47.28":{t:"在setup内定义局部指令\r",p:`这里有一个需要注意的限制：必须以 vNameOfDirective 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。

const vMoveDirective: Directive =  ...`,l:"frontEnd/vue/v3/api.html#在setup内定义局部指令",a:"在setup内定义局部指令"},"47.29":{t:"生命周期钩子参数详解\r",p:`第一个 el  当前绑定的DOM 元素
第二个 binding

instance：使用指令的组件实例。
value：传递给指令的值。例如，在 v-my-directive=&quot;1 + 1&q ...`,l:"frontEnd/vue/v3/api.html#生命周期钩子参数详解",a:"生命周期钩子参数详解"},"47.30":{t:"案列 - 自定义拖拽指令\r",p:`&lt;template&gt;
  &lt;div v-move class=&quot;box&quot;&gt;
    &lt;div class=&quot;header&quot;&gt; ...`,l:"frontEnd/vue/v3/api.html#案列-自定义拖拽指令",a:"案列-自定义拖拽指令"},"47.31":{t:"自定义hooks\r",p:`在 vue2 中有个东西叫 mixins，他可以将多个组件中相同的逻辑抽离出来，实现一次写代码，多组件受益的效果。
但是 mixins 的副作用就是引用的多了变量的来源就不清晰了，而且还会有变量来源不 ...`,l:"frontEnd/vue/v3/api.html#自定义hooks",a:"自定义hooks"},"48.0":{t:"# Vue3 深入组件\r",p:"\r",l:"frontEnd/vue/v3/components.html",a:"vue3-深入组件"},"48.1":{t:"注册\r",p:"\r",l:"frontEnd/vue/v3/components.html#注册",a:"注册"},"48.2":{t:"全局组件\r",p:`在 main.ts 引入组件跟随在 createApp(App) 后面，切记不能放到 mount 后面
//main.js
import { createApp } from 'vue'
import ...`,l:"frontEnd/vue/v3/components.html#全局组件",a:"全局组件"},"48.3":{t:" ",p:"",l:"frontEnd/vue/v3/components.html#",a:""},"48.4":{t:"批量注册全局组件 -->\r",p:"\r",l:"frontEnd/vue/v3/components.html#批量注册全局组件",a:"批量注册全局组件"},"48.5":{t:"局部组件\r",p:`局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。
在使用 \`
&lt;template&gt ...`,l:"frontEnd/vue/v3/components.html#局部组件",a:"局部组件"},"48.6":{t:"父子组件传参\r",p:`
父组件通过 v-bind 绑定一个数据，然后子组件通过 defineProps 接受传过来的值
传递非字符串类型需要加 v-bind 简写 冒号

父组件
&lt;template&gt;
  &l ...`,l:"frontEnd/vue/v3/components.html#父子组件传参",a:"父子组件传参"},"48.7":{t:"插槽\r",p:"\r",l:"frontEnd/vue/v3/components.html#插槽",a:"插槽"},"48.8":{t:"匿名插槽\r",p:`在子组件放置一个插槽
// Child.vue
&lt;template&gt;
  &lt;div&gt;child&lt;/div&gt;
  &lt;slot&gt;&lt;/slot&gt;
 ...`,l:"frontEnd/vue/v3/components.html#匿名插槽",a:"匿名插槽"},"48.9":{t:"具名插槽\r",p:`具名插槽其实就是给插槽取个名字。一个子组件可以放多个插槽，而且可以放在不同的地方，而父组件填充内容时，可以根据这个名字把内容填充到对应插槽中
&lt;div&gt;
  &lt;slot name=& ...`,l:"frontEnd/vue/v3/components.html#具名插槽",a:"具名插槽"},"48.10":{t:"作用域插槽\r",p:`插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的。
在子组件动态绑定参数 派发给父组件的 slot 去使用
&lt;span&gt;{{ message }}&lt;/sp ...`,l:"frontEnd/vue/v3/components.html#作用域插槽",a:"作用域插槽"},"48.11":{t:"动态插槽\r",p:`插槽可以是一个变量名
&lt;template&gt;
  &lt;div&gt;
    &lt;p&gt;父组件&lt;/p&gt;
    &lt;Child&gt;
      &lt;tem ...`,l:"frontEnd/vue/v3/components.html#动态插槽",a:"动态插槽"},"48.12":{t:"异步组件\r",p:`在大型应用中，需要将应用分割成小一些的代码块，并且减少主包的体积。
通过 defineAsyncComponent 异步加载
&lt;template&gt;
  &lt;Children :msg= ...`,l:"frontEnd/vue/v3/components.html#异步组件",a:"异步组件"},"48.13":{t:"Suspense\r",p:"Suspense 允许应用程序在等待异步组件时渲染一些其它内容,在 Vue2 中，必须使用条件判断(例如 v-if、 v-else等)来检查数据是否已加载并显示一些其它内容；但是，在 Vue3 新增了 ...",l:"frontEnd/vue/v3/components.html#suspense",a:"suspense"},"48.14":{t:"Teleport 传送组件\r",p:`Teleport 是一种能够将我们的模板渲染至指定DOM节点，不受父级style、v-show等属性影响，但data、prop数据依旧能够共用的技术；类似于 React 的 Portal。
主要解决的 ...`,l:"frontEnd/vue/v3/components.html#teleport-传送组件",a:"teleport-传送组件"},"48.15":{t:"Keep-alive 缓存组件\r",p:`
事件挂载的方法等，只执行一次的放在 onMounted中；组件每次进去执行的方法放在 onActivated中


作用和vue2一致，只是生命周期名称有所更改
初次进入时： onMounted&g ...`,l:"frontEnd/vue/v3/components.html#keep-alive-缓存组件",a:"keep-alive-缓存组件"},"48.16":{t:"provide/inject\r",p:`provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。
父组件
&lt;template& ...`,l:"frontEnd/vue/v3/components.html#provide-inject",a:"provide-inject"},"48.17":{t:"v-model 升级\r",p:`
在Vue3 v-model 是破坏性更新的
v-model 是props 和 emit 组合而成的语法糖,vue3中 v-model 有以下改动


变更：value =&gt; modelValu ...`,l:"frontEnd/vue/v3/components.html#v-model-升级",a:"v-model-升级"},"49.0":{t:"# 创建Vue3项目\r",p:"\r",l:"frontEnd/vue/v3/create.html",a:"创建vue3项目"},"49.1":{t:"1. 使用vue-cli创建\r",p:`
`,l:"frontEnd/vue/v3/create.html#_1-使用vue-cli创建",a:"_1-使用vue-cli创建"},"49.2":{t:"安装或者升级\r",p:`npm install -g @vue/cli
`,l:"frontEnd/vue/v3/create.html#安装或者升级",a:"安装或者升级"},"49.3":{t:"保证 vue cli 版本在 4.5.0 以上\r",p:`vue --version
`,l:"frontEnd/vue/v3/create.html#保证-vue-cli-版本在-4-5-0-以上",a:"保证-vue-cli-版本在-4-5-0-以上"},"49.4":{t:"创建项目\r",p:`vue create my-project
然后的步骤

- Please pick a preset - 选择 Manually select features
- Check the featur ...`,l:"frontEnd/vue/v3/create.html#创建项目",a:"创建项目"},"49.5":{t:"2. 使用vite创建(推荐)\r",p:`vite的优势

冷服务   默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入
HMR  速度快到惊人的 模块热更新（HMR）
Rollup打包  它使用 ...`,l:"frontEnd/vue/v3/create.html#_2-使用vite创建-推荐",a:"_2-使用vite创建-推荐"},"50.0":{t:"# 认识Vue3\r",p:"\r",l:"frontEnd/vue/v3/index.html",a:"认识vue3"},"50.1":{t:"一、了解相关信息\r",p:`
Vue.js 3.0 &quot;One Piece&quot; 正式版在今年9月份发布
2年多开发, 100+位贡献者, 2600+次提交, 600+次PR
Vue3支持vue2的大多数特性
更好 ...`,l:"frontEnd/vue/v3/index.html#一、了解相关信息",a:"一、了解相关信息"},"50.2":{t:"二、 性能提升:\r",p:`
打包大小减少41%
初次渲染快55%, 更新渲染快133%
内存减少54%
使用Proxy代替defineProperty实现数据响应式
重写虚拟DOM的实现和Tree-Shaking

`,l:"frontEnd/vue/v3/index.html#二、-性能提升",a:"二、-性能提升"},"50.3":{t:"三、 新增特性\r",p:`

Composition (组合) API


setup

ref 和 reactive
computed 和 watch
新的生命周期函数
provide与inject
...



新组件

 ...`,l:"frontEnd/vue/v3/index.html#三、-新增特性",a:"三、-新增特性"},"52.0":{t:"# 前端导航\r",p:`&lt;!--
`,l:"nav/index.html",a:"前端导航"},"52.1":{t:" ",p:"",l:"nav/index.html#",a:""},"52.2":{t:"常用工具 -->\r",p:"&lt;MNavLinks v-for=&quot;{title,items} in NAV_DATA&quot; :title='title' :items=&quot;items&quot;/&g ...",l:"nav/index.html#常用工具",a:"常用工具"},"53.0":{t:"# Git基本命令使用\r",p:"\r",l:"others/git/git.html",a:"git基本命令使用"},"53.1":{t:"账户配置\r",p:`
配置全局账户，对所有 Git 仓库有效

git config --global user.name 'Your Name'
git config --global user.email 'Your ...`,l:"others/git/git.html#账户配置",a:"账户配置"},"53.2":{t:"本地基本操作\r",p:"\r",l:"others/git/git.html#本地基本操作",a:"本地基本操作"},"53.3":{t:"初始化本地库\r",p:`git init

`,l:"others/git/git.html#初始化本地库",a:"初始化本地库"},"53.4":{t:"查看状态\r",p:`git status

`,l:"others/git/git.html#查看状态",a:"查看状态"},"53.5":{t:"添加暂存区 git add\r",p:`
将当前目录及其子目录下所有变更添加到暂存区

git add .


将本地库所有变更添加到暂存区

git add -A


指定文件添加暂存区

git add file1 file2 ...
 ...`,l:"others/git/git.html#添加暂存区-git-add",a:"添加暂存区-git-add"},"53.6":{t:"提交本地库 git commit\r",p:`
提交所有变更

git commit
# or
git commit -m '日志信息' -a


提交当前目录及其子目录的变更

git commit -m '日志信息' .


提交指定文件

 ...`,l:"others/git/git.html#提交本地库-git-commit",a:"提交本地库-git-commit"},"53.7":{t:"比较差异 git diff\r",p:`
比较工作区和暂存区的所有差异，只能查看旧文件的变更（包括修改和删除），不能查看新文件（因为新文件还为被 git 追踪）

git diff


比较指定文件工作区和暂存区的差异

git diff  ...`,l:"others/git/git.html#比较差异-git-diff",a:"比较差异-git-diff"},"53.8":{t:"查看日志信息 git log\r",p:`
查看简要日志信息

git reflog


查看详细日志信息

git log


查看极简日志信息

git log --oneline


查看最近 n 次的版本信息

git log -n
 ...`,l:"others/git/git.html#查看日志信息-git-log",a:"查看日志信息-git-log"},"53.9":{t:"分支命令\r",p:"\r",l:"others/git/git.html#分支命令",a:"分支命令"},"53.10":{t:"创建分支\r",p:`
基于当前分支创建分支

git branch 新分支


基于指定分支创建分支

git branch 新分支 已有分支


基于某个 commit 创建分支

git branch 新分支 com ...`,l:"others/git/git.html#创建分支",a:"创建分支"},"53.11":{t:"查看本地分支\r",p:`git branch -v

`,l:"others/git/git.html#查看本地分支",a:"查看本地分支"},"53.12":{t:"删除分支\r",p:`
安全删除本地分支

git branch -d 分支


强制删除本地分支

git branch -D 分支

`,l:"others/git/git.html#删除分支",a:"删除分支"},"53.13":{t:"切换分支\r",p:`git checkout 分支名

`,l:"others/git/git.html#切换分支",a:"切换分支"},"53.14":{t:"合并分支\r",p:`merge 和 rebase的区别有待学习实践 :worried:

将 A 分支合并到当前分支，且为 merge 创建 commit

git merge A


将 A 分支合并到 B 分支，且为 ...`,l:"others/git/git.html#合并分支",a:"合并分支"},"53.15":{t:"版本穿梭与回滚\r",p:`
工作区指定文件恢复成和暂存区一样

git checkout file1 file2 ...

# tips in the Git Bash
# use &quot;git restore &lt; ...`,l:"others/git/git.html#版本穿梭与回滚",a:"版本穿梭与回滚"},"53.16":{t:"修改 commit 记录\r",p:`
往最后一次 commit 追加记录，而不新建 commit - reference

git commit --amend


合并 commit 记录 - reference

git rebas ...`,l:"others/git/git.html#修改-commit-记录",a:"修改-commit-记录"},"53.17":{t:"远程仓库交互\r",p:"\r",l:"others/git/git.html#远程仓库交互",a:"远程仓库交互"},"53.18":{t:"git remote\r",p:`
查看所有远程仓库地址别名

git remote -v


为远程仓库起别名

git remote add 别名 地址


删除远程仓库别名

git remote remove 别名


修改别 ...`,l:"others/git/git.html#git-remote",a:"git-remote"},"53.19":{t:"git clone\r",p:`
克隆远程仓库到本地

git clone 地址


克隆远程仓库指定分支到本地

git clone -b 远程仓库分支名 地址

`,l:"others/git/git.html#git-clone",a:"git-clone"},"53.20":{t:"git pull\r",p:`
拉取远程分支，并与本地分支合并

git pull 别名 分支名

`,l:"others/git/git.html#git-pull",a:"git-pull"},"53.21":{t:"git push\r",p:`
推送本地指定分支到仓库指定分支

git push 别名 本地分支:远程分支


如果远程分支被省略，表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 ...`,l:"others/git/git.html#git-push",a:"git-push"},"54.0":{t:"# git安装\r",p:"\r",l:"others/git/install.html",a:"git安装"},"54.1":{t:"**1.Git官网下载安装git客户端：https://git-scm.com/downloads/**\r",p:`\r
\r
\r`,l:"others/git/install.html#_1-git官网下载安装git客户端-https-git-scm-com-downloads",a:"_1-git官网下载安装git客户端-https-git-scm-com-downloads"},"54.2":{t:"**2.安装完成后，在空白处点鼠标右键选择“Git Bush Here” ，打开git bash命令窗口**\r",p:`\r
\r
\r`,l:"others/git/install.html#_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口",a:"_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口"},"54.3":{t:"**3.配置用户名和邮箱**\r",p:`git config —global user.name “xxx”
git config —global user.email “xxxx@xxx.com”
配置后结果：git config --l ...`,l:"others/git/install.html#_3-配置用户名和邮箱",a:"_3-配置用户名和邮箱"},"54.4":{t:"4.执行命令生成ssh pub_key\r",p:`ssh-keygen -t rsa -C &quot;XXXX@XXX.com&quot;

直接按三次回车，会生成 id_rsa.pub 文件，这个文件一般在C盘的.ssh目录下。
`,l:"others/git/install.html#_4-执行命令生成ssh-pub-key",a:"_4-执行命令生成ssh-pub-key"},"54.5":{t:"**5.打开生成后的id_rsa.pub文件，copy内容到git ssh个人设置**\r",p:`!image-20230222160826601
!image-20230222161109182
`,l:"others/git/install.html#_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置",a:"_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置"},"54.6":{t:"**6.本地拉取代码**\r",p:`就可以克隆ssh地址了
`,l:"others/git/install.html#_6-本地拉取代码",a:"_6-本地拉取代码"},"54.7":{t:"TortoiseGit安装\r",p:`TortoiseGit安装和配置详细说明
`,l:"others/git/install.html#tortoisegit安装",a:"tortoisegit安装"},"55.0":{t:"# vue3 项目配置文档\r",p:`涉及到技术栈包含_:vue3+TypeScript+vue-router+pinia+element-plus+axios+echarts_等技术栈。
`,l:"project/configuration.html",a:"vue3-项目配置文档"},"55.1":{t:"一、vue3 组件通信方式\r",p:`&lt;!-- 通信仓库地址:项目地址 --&gt;
不管是 vue2 还是 vue3,组件通信方式很重要,不管是项目还是面试都是经常用到的知识点。
比如:vue2 组件通信方式
**props:** ...`,l:"project/configuration.html#一、vue3-组件通信方式",a:"一、vue3-组件通信方式"},"55.2":{t:"1.1 props\r",p:`props 可以实现父子组件通信,在 vue3 中我们可以通过 defineProps 获取父组件传递的数据。且在组件内部不需要引入 defineProps 方法可以直接使用！
父组件给子组件传递数据 ...`,l:"project/configuration.html#_1-1-props",a:"_1-1-props"},"55.3":{t:"1.2 自定义事件\r",p:`在 vue 框架中事件分为两种:一种是原生的 DOM 事件，另外一种自定义事件。
原生 DOM 事件可以让用户与网页进行交互，比如 click、dbclick、change、mouseenter、mo ...`,l:"project/configuration.html#_1-2-自定义事件",a:"_1-2-自定义事件"},"55.4":{t:"1.2.1 原生 DOM 事件\r",p:`代码如下:
&lt;pre @click=&quot;handler&quot;&gt;
      我是祖国的老花骨朵
 &lt;/pre&gt;

当前代码级给 pre 标签绑定原生 DOM 事件 ...`,l:"project/configuration.html#_1-2-1-原生-dom-事件",a:"_1-2-1-原生-dom-事件"},"55.5":{t:"1.2.2 自定义事件\r",p:`自定义事件可以实现子组件给父组件传递数据.在项目中是比较常用的。
比如在父组件内部给子组件(Event2)绑定一个自定义事件
&lt;Event2 @xxx=&quot;handler3&quot;& ...`,l:"project/configuration.html#_1-2-2-自定义事件",a:"_1-2-2-自定义事件"},"55.6":{t:"1.3 全局事件总线\r",p:`全局事件总线可以实现任意组件通信，在 vue2 中可以根据 VM 与 VC 关系推出全局事件总线。
但是在 vue3 中没有 Vue 构造函数，也就没有 Vue.prototype.以及组合式 API ...`,l:"project/configuration.html#_1-3-全局事件总线",a:"_1-3-全局事件总线"},"55.7":{t:"1.4 v-model\r",p:`v-model 指令可是收集表单数据(数据双向绑定)，除此之外它也可以实现父子组件数据同步。
而 v-model 实指利用 props[modelValue]与自定义事件[update:modelVa ...`,l:"project/configuration.html#_1-4-v-model",a:"_1-4-v-model"},"55.8":{t:"1.5 useAttrs\r",p:`在 Vue3 中可以利用 useAttrs 方法获取组件的属性与事件(包含:原生 DOM 事件或者自定义事件),次函数功能类似于 Vue2 框架中$attrs属性与$listeners 方法。
比如: ...`,l:"project/configuration.html#_1-5-useattrs",a:"_1-5-useattrs"},"55.9":{t:"1.6 ref 与$parent\r",p:`ref,提及到 ref 可能会想到它可以获取元素的 DOM 或者获取子组件实例的 VC。既然可以在父组件内部通过 ref 获取子组件实例 VC，那么子组件内部的方法与响应式数据父组件可以使用的。
比如 ...`,l:"project/configuration.html#_1-6-ref-与-parent",a:"_1-6-ref-与-parent"},"55.10":{t:"1.7 provide 与 inject\r",p:`provide[提供]
**inject[注入]vue3 提供两个方法 provide 与 inject,可以实现隔辈组件传递参数
组件组件提供数据:
provide 方法用于提供数据，此方法执需要传 ...`,l:"project/configuration.html#_1-7-provide-与-inject",a:"_1-7-provide-与-inject"},"55.11":{t:"1.8 piniapinia 官网:https://pinia.web3doc.top/**\r",p:`pinia 也是集中式管理状态容器,类似于 vuex。但是核心概念没有 mutation、modules,使用方式参照官网
`,l:"project/configuration.html#_1-8-piniapinia-官网-https-pinia-web3doc-top",a:"_1-8-piniapinia-官网-https-pinia-web3doc-top"},"55.12":{t:"1.9 slot\r",p:`插槽：默认插槽、具名插槽、作用域插槽可以实现父子组件通信.
默认插槽:
在子组件内部的模板中书写 slot 全局组件标签
&lt;template&gt;
  &lt;div&gt;
    &lt; ...`,l:"project/configuration.html#_1-9-slot",a:"_1-9-slot"},"55.13":{t:"二、搭建后台管理系统模板\r",p:"\r",l:"project/configuration.html#二、搭建后台管理系统模板",a:"二、搭建后台管理系统模板"},"55.14":{t:"2.1 项目初始化\r",p:"今天来带大家从 0 开始搭建一个 vue3 版本的后台管理系统。一个项目要有统一的规范，需要使用 eslint+stylelint+prettier 来对我们的代码质量做检测和修复，需要使用 husk ...",l:"project/configuration.html#_2-1-项目初始化",a:"_2-1-项目初始化"},"55.15":{t:"2.1.1 环境准备\r",p:`
node v16.14.2
pnpm 8.0.0

`,l:"project/configuration.html#_2-1-1-环境准备",a:"_2-1-1-环境准备"},"55.16":{t:"2.1.2 初始化项目\r",p:`本项目使用 vite 进行构建，vite 官方中文文档参考：cn.vitejs.dev/guide/
pnpm:performant npm ，意味“高性能的 npm”。pnpm由 npm/yarn  ...`,l:"project/configuration.html#_2-1-2-初始化项目",a:"_2-1-2-初始化项目"},"55.17":{t:"2.2 项目配置\r",p:"\r",l:"project/configuration.html#_2-2-项目配置",a:"_2-2-项目配置"},"55.18":{t:"一、eslint 配置\r",p:`eslint 中文官网:http://eslint.cn/
ESLint 最初是由Nicholas C. Zakas 于 2013 年 6 月创建的开源项目。它的目标是提供一个插件化的javascri ...`,l:"project/configuration.html#一、eslint-配置",a:"一、eslint-配置"},"55.19":{t:"2.1.1 vue3 环境代码校验插件\r",p:`# 让所有与prettier规则存在冲突的Eslint rules失效，并使用prettier进行代码检查
&quot;eslint-config-prettier&quot;: &quot;^8.6 ...`,l:"project/configuration.html#_2-1-1-vue3-环境代码校验插件",a:"_2-1-1-vue3-环境代码校验插件"},"55.20":{t:"2.1.2 修改.eslintrc.cjs 配置文件\r",p:`// @see https://eslint.bootcss.com/docs/rules/

module.exports = {
  env: {
    browser: true,
    e ...`,l:"project/configuration.html#_2-1-2-修改-eslintrc-cjs-配置文件",a:"_2-1-2-修改-eslintrc-cjs-配置文件"},"55.21":{t:"3.5 集成 sass\r",p:"我们目前在组件内部已经可以使用 scss 样式,因为在配置 styleLint 工具的时候，项目当中已经安装过 sass sass-loader,因此我们再组件内可以使用 scss 语法！！！需要加上 ...",l:"project/configuration.html#_3-5-集成-sass",a:"_3-5-集成-sass"},"55.22":{t:"3.6 mock 数据\r",p:`安装依赖:https://www.npmjs.com/package/vite-plugin-mock
pnpm install -D vite-plugin-mock mockjs

在 vite. ...`,l:"project/configuration.html#_3-6-mock-数据",a:"_3-6-mock-数据"},"55.23":{t:"3.7 axios 二次封装\r",p:`在开发项目的时候避免不了与后端进行交互,因此我们需要使用 axios 插件实现发送网络请求。在开发项目的时候
我们经常会把 axios 进行二次封装。
目的:
1:使用请求拦截器，可以在请求拦截器中处 ...`,l:"project/configuration.html#_3-7-axios-二次封装",a:"_3-7-axios-二次封装"},"55.24":{t:"3.8 API 接口统一管理\r",p:`在开发项目的时候,接口可能很多需要统一管理。在 src 目录下去创建 api 文件夹去统一管理项目的接口；
比如:下面方式
//统一管理咱们项目用户相关的接口

import request from ...`,l:"project/configuration.html#_3-8-api-接口统一管理",a:"_3-8-api-接口统一管理"},"56.0":{t:"# 刮刮乐\r",p:`&lt;!--
`,l:"visual/canvas/example/刮刮乐.html",a:"刮刮乐"},"56.1":{t:" ",p:"",l:"visual/canvas/example/刮刮乐.html#",a:""},"56.2":{t:"示例\r",p:`&lt;Scratchcard /&gt; --&gt;
`,l:"visual/canvas/example/刮刮乐.html#示例",a:"示例"},"56.3":{t:"代码\r",p:`&lt;div id=&quot;ggk&quot;&gt;谢谢惠顾&lt;/div&gt;
&lt;canvas id=&quot;myCanvas&quot; width=&quot;600&qu ...`,l:"visual/canvas/example/刮刮乐.html#代码",a:"代码"},"57.0":{t:"# 时钟\r",p:"\r",l:"visual/canvas/example/时钟.html",a:"时钟"},"57.1":{t:"示例\r",p:`&lt;Clock /&gt;
`,l:"visual/canvas/example/时钟.html#示例",a:"示例"},"57.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/时钟.html#代码",a:"代码"},"57.3":{t:"js 实现\r",p:`var canvas = document.getElementById('canvas')
var context = canvas.getContext('2d')
function render ...`,l:"visual/canvas/example/时钟.html#js-实现",a:"js-实现"},"57.4":{t:"vue3 实现\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/时钟.html#vue3-实现",a:"vue3-实现"},"58.0":{t:"# 梅花特效\r",p:`
参考视频教程

`,l:"visual/canvas/example/梅花特效.html",a:"梅花特效"},"58.1":{t:"示例\r",p:`&lt;Plum /&gt;
`,l:"visual/canvas/example/梅花特效.html#示例",a:"示例"},"58.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/梅花特效.html#代码",a:"代码"},"59.0":{t:"# 画板\r",p:`&lt;!--
`,l:"visual/canvas/example/画板.html",a:"画板"},"59.1":{t:" ",p:"",l:"visual/canvas/example/画板.html#",a:""},"59.2":{t:"示例\r",p:`&lt;Draw /&gt; --&gt;
`,l:"visual/canvas/example/画板.html#示例",a:"示例"},"59.3":{t:"代码\r",p:`&lt;button id=&quot;boldBtn&quot;&gt;粗线条&lt;/button&gt;
&lt;button id=&quot;thinBtn&quot;&gt;细线条&lt; ...`,l:"visual/canvas/example/画板.html#代码",a:"代码"},"60.0":{t:"# 初始 Canvas\r",p:"\r",l:"visual/canvas/index/初始Canvas.html",a:"初始-canvas"},"60.1":{t:"什么是 canvas？\r",p:`
Canvas 是 HTML5 中的一个元素，允许使用 JavaScript 脚本在矩形区域中绘制图像、动画和其他复杂的视觉效果。它提供了许多 API，允许控制绘图区域、颜色、线条、文本、图像等多种元 ...`,l:"visual/canvas/index/初始Canvas.html#什么是-canvas",a:"什么是-canvas"},"60.2":{t:"一. Canvas 的基础知识\r",p:"\r",l:"visual/canvas/index/初始Canvas.html#一-canvas-的基础知识",a:"一-canvas-的基础知识"},"60.3":{t:"1.1 坐标系统\r",p:"Canvas 使用直角坐标系，原点坐标为（0, 0），x 轴向右延伸，y 轴向下延伸。可以通过 Canvas API 访问 x 轴和 y 轴上的位置以及宽度和高度等信息，通过为图形或其他元素设置 x  ...",l:"visual/canvas/index/初始Canvas.html#_1-1-坐标系统",a:"_1-1-坐标系统"},"60.4":{t:"1.2 绘图上下文\r",p:"Canvas 可以绘制 SVG 和其他类型的矢量图形，但在大多数情况下，使用 Canvas 的绘图上下文进行绘制是最基本和有效的方法。Canvas API 提供了两种基本的绘图上下文，2D 和 Web ...",l:"visual/canvas/index/初始Canvas.html#_1-2-绘图上下文",a:"_1-2-绘图上下文"},"60.5":{t:"1.3 绘图元素\r",p:"Canvas 提供了多种绘图元素，包括路径和图形、文本、图像、矩形和其他形状等。绘图元素可以通过 Canvas API 进行控制，可以简单地绘制圆形、矩形、线条等图形，也可以绘制更高级的元素，如 3D ...",l:"visual/canvas/index/初始Canvas.html#_1-3-绘图元素",a:"_1-3-绘图元素"},"60.6":{t:"二. 使用 Canvas 创造交互式效果\r",p:`除了基本的绘图功能之外，Canvas 还可以创造交互式效果，用来展示和操控数据、陈述观点、以及制作各种绚丽的视觉展示等。
例如，您可以通过 Canvas 在一个网页上创造一个交互式地图，让用户点击地图 ...`,l:"visual/canvas/index/初始Canvas.html#二-使用-canvas-创造交互式效果",a:"二-使用-canvas-创造交互式效果"},"60.7":{t:"三. 使用 Canvas 创造动画\r",p:"由于 Canvas 非常适合处理像素级别的控制，利用 JavaScript 脚本使 Canvas 绘制出具有动态效果的图像和视觉艺术也显得非常合适。通过 Canvas API，您可以控制图形元素的位移 ...",l:"visual/canvas/index/初始Canvas.html#三-使用-canvas-创造动画",a:"三-使用-canvas-创造动画"},"60.8":{t:"四. Canvas 的局限性\r",p:"Canvas 虽然在 HTML5 中提供了许多优势，但也存在一些限制。例如，不同的浏览器可能解释 Canvas API 时存在差异，因此需要在开发过程中进行跨浏览器的测试。此外，在处理大量的图像和其他 ...",l:"visual/canvas/index/初始Canvas.html#四-canvas-的局限性",a:"四-canvas-的局限性"},"61.0":{t:"# Canvas 图像变换\r",p:`以下方法用于图像变换。

CanvasRenderingContext2D.rotate()：图像旋转
CanvasRenderingContext2D.scale()：图像缩放
CanvasRend ...`,l:"visual/canvas/index/图像变换.html",a:"canvas-图像变换"},"61.1":{t:"1.rotate()\r",p:`CanvasRenderingContext2D.rotate()方法用于图像旋转。它接受一个弧度值作为参数，表示顺时针旋转的度数。
context.rotate((45 * Math.PI) / 1 ...`,l:"visual/canvas/index/图像变换.html#_1-rotate",a:"_1-rotate"},"61.2":{t:"2.scale()\r",p:"CanvasRenderingContext2D.scale()方法用于缩放图像。它接受两个参数，分别是x轴方向的缩放因子和y轴方向的缩放因子。默认情况下，一个单位就是一个像素，缩放因子可以缩放单位， ...",l:"visual/canvas/index/图像变换.html#_2-scale",a:"_2-scale"},"61.3":{t:"3.translate()\r",p:`CanvasRenderingContext2D.translate()方法用于平移图像。它接受两个参数，分别是 x 轴和 y 轴移动的距离（单位像素）。
context.fillRect(0, 0, ...`,l:"visual/canvas/index/图像变换.html#_3-translate",a:"_3-translate"},"61.4":{t:"4.transform()\r",p:`CanvasRenderingContext2D.transform()方法接受一个变换矩阵的六个元素作为参数，完成缩放、旋转、移动和倾斜等变形。
它的使用格式如下。
context.transfor ...`,l:"visual/canvas/index/图像变换.html#_4-transform",a:"_4-transform"},"61.5":{t:"5.setTransform()\r",p:`CanvasRenderingContext2D.setTransform()方法取消前面的图形变换，将画布恢复到该方法指定的状态。该方法的参数与transform()方法完全一致。
context. ...`,l:"visual/canvas/index/图像变换.html#_5-settransform",a:"_5-settransform"},"62.0":{t:"# Canvas 图像合成\r",p:`
在默认情况之下，如果在 Canvas 之中将某个物体（源）绘制在另一个物体（目标）之上，那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面。


在 Canvas 中，把图像源和目标图像，通过 ...`,l:"visual/canvas/index/图像合成.html",a:"canvas-图像合成"},"62.1":{t:"属性\r",p:`


source-over
默认。在目标图像上显示源图像。




source-atop
在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的。


source-in
在目标图像中显 ...`,l:"visual/canvas/index/图像合成.html#属性",a:"属性"},"63.0":{t:"# Canvas 使用\r",p:"\r",l:"visual/canvas/index/基本使用.html",a:"canvas-使用"},"63.1":{t:"使用\r",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;您的浏览器不支持 Canvas&lt; ...",l:"visual/canvas/index/基本使用.html#使用",a:"使用"},"63.2":{t:"属性方法\r",p:`
strokeStyle 设置或返回描边颜色
fillStyle 设置或返回填充颜色
stroke() 描边已定义绘图（路径）
fill() 填充当前绘图（路径）
moveTo(x,y) 把路径移动到 ...`,l:"visual/canvas/index/基本使用.html#属性方法",a:"属性方法"},"64.0":{t:"# Canvas 样式控制\r",p:"\r",l:"visual/canvas/index/样式控制.html",a:"canvas-样式控制"},"64.1":{t:"1.线性\r",p:`以下的方法和属性控制线条的视觉特征。

CanvasRenderingContext2D.lineWidth：指定线条的宽度，默认为 1.0。
CanvasRenderingContext2D.lin ...`,l:"visual/canvas/index/样式控制.html#_1-线性",a:"_1-线性"},"64.2":{t:"2.渐变色\r",p:`以下方法用于设置渐变效果和图像填充效果。

CanvasRenderingContext2D.createLinearGradient()：定义线性渐变样式。
CanvasRenderingConte ...`,l:"visual/canvas/index/样式控制.html#_2-渐变色",a:"_2-渐变色"},"64.3":{t:"3.图像填充\r",p:`createPattern()方法定义一个图像填充样式，在指定方向上不断重复该图像，填充指定的区域。
context.createPattern(image, repetition)

该方法接受两个 ...`,l:"visual/canvas/index/样式控制.html#_3-图像填充",a:"_3-图像填充"},"64.4":{t:"4.阴影\r",p:`以下属性用于设置阴影。

CanvasRenderingContext2D.shadowBlur：阴影的模糊程度，默认为0。
CanvasRenderingContext2D.shadowColor： ...`,l:"visual/canvas/index/样式控制.html#_4-阴影",a:"_4-阴影"},"65.0":{t:"# Canvas 状态\r",p:`
save() 保存当前环境的状态。
restore() 返回之前保存过的路径状态和属性。

context.fillStyle = 'red'
context.fillRect(0, 0, 100, ...`,l:"visual/canvas/index/状态.html",a:"canvas-状态"},"66.0":{t:"# Canvas 绘制图形、图像、文字\r",p:"\r",l:"visual/canvas/index/绘制.html",a:"canvas-绘制图形、图像、文字"},"66.1":{t:"绘制图形\r",p:"\r",l:"visual/canvas/index/绘制.html#绘制图形",a:"绘制图形"},"66.2":{t:"绘制矩形\r",p:`//绘制矩形fillRect|strokeRect(位置x，位置y，宽度，高度)
context.strokeRect(150, 50, 100, 100) // 路径
context.fillRec ...`,l:"visual/canvas/index/绘制.html#绘制矩形",a:"绘制矩形"},"66.3":{t:"绘制圆弧\r",p:`
圆弧

// context.arc(圆心x,圆心y,半径,开始的角度,结束的角度)
// 顺时针false 逆时针true 默认值false
context.arc(300, 200, 50, 0 ...`,l:"visual/canvas/index/绘制.html#绘制圆弧",a:"绘制圆弧"},"66.4":{t:"绘制线段\r",p:`context.beginPath()
context.moveTo(100, 300)
context.lineTo(300, 300)
context.lineTo(200, 150)
conte ...`,l:"visual/canvas/index/绘制.html#绘制线段",a:"绘制线段"},"66.5":{t:"绘制图像\r",p:`
三种绘制图片的的方式

context.drawImage(image, dx, dy)
context.drawImage(image, dx, dy, dWidth, dHeight)
cont ...`,l:"visual/canvas/index/绘制.html#绘制图像",a:"绘制图像"},"66.6":{t:"绘制文本\r",p:`以下方法和属性用于绘制文本。

CanvasRenderingContext2D.fillText()：在指定位置绘制实心字符。
CanvasRenderingContext2D.strokeText ...`,l:"visual/canvas/index/绘制.html#绘制文本",a:"绘制文本"},"67.0":{t:"# Canvas 贝塞尔曲线\r",p:"\r",l:"visual/canvas/index/贝塞尔曲线.html",a:"canvas-贝塞尔曲线"},"67.1":{t:"绘制贝塞尔二次曲线\r",p:`
聊天框

context.moveTo(200, 300)
// quadraticCurveTo(控制点x,控制点y,终点x,终点y)
context.quadraticCurveTo(150,  ...`,l:"visual/canvas/index/贝塞尔曲线.html#绘制贝塞尔二次曲线",a:"绘制贝塞尔二次曲线"},"67.2":{t:"绘制贝塞尔三次曲线\r",p:`
爱心

context.moveTo(300, 120)
// bezierCurveTo(控制点1 x,控制点1 y,控制点2 x,控制点2 y,终点x,终点y)
context.bezierCu ...`,l:"visual/canvas/index/贝塞尔曲线.html#绘制贝塞尔三次曲线",a:"绘制贝塞尔三次曲线"},"68.0":{t:"<!-- # echarts -->\r",p:`该内容正在努力建设中 ......
`,l:"visual/echarts/index.html",a:"echarts"},"69.0":{t:"# SVG\r",p:"\r",l:"visual/svg/index.html",a:"svg"},"69.1":{t:"是什么\r",p:`
SVG 是 Scalable Vector Graphics 的缩写 意为可缩放矢量图形
SVG 是一个基于文本的开放网络标准，用来定义用于网络的矢量图形
SVG 图像在放大或改变尺寸的情况下其图形 ...`,l:"visual/svg/index.html#是什么",a:"是什么"},"69.2":{t:"基本图形\r",p:"\r",l:"visual/svg/index.html#基本图形",a:"基本图形"},"69.3":{t:"线条（line）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性 style 是看不出效果的 --&gt;
  &lt;line x1=&quot;50&quot; x2=&quot;50&quot; y1 ...`,l:"visual/svg/index.html#线条-line",a:"线条-line"},"69.4":{t:"矩形（rect）\r",p:`&lt;svg&gt;
  &lt;rect x=&quot;400&quot; y=&quot;200&quot; width=&quot;150&quot; height=&quot;50&quo ...`,l:"visual/svg/index.html#矩形-rect",a:"矩形-rect"},"69.5":{t:"圆形（circle）\r",p:`&lt;svg&gt;
  &lt;circle cx=&quot;370&quot; cy=&quot;95&quot; r=&quot;50&quot; style=&quot;stroke:gr ...`,l:"visual/svg/index.html#圆形-circle",a:"圆形-circle"},"69.6":{t:"椭圆（cllipse）\r",p:`&lt;svg&gt;
  &lt;ellipse cx=&quot;100&quot; cy=&quot;100&quot; rx=&quot;100&quot; ry=&quot;50&quot; ...`,l:"visual/svg/index.html#椭圆-cllipse",a:"椭圆-cllipse"},"69.7":{t:"多边形（polygon）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性style是看不出效果的 并且polygon默认为填充需要把fill属性设置为none --&gt;
  &lt;polygon
    po ...`,l:"visual/svg/index.html#多边形-polygon",a:"多边形-polygon"},"69.8":{t:"折线（polyline）\r",p:`&lt;svg&gt;
  &lt;polyline points=&quot;300 300,50 100,120 300,200,30&quot; fill-opacity=&quot;0&quo ...`,l:"visual/svg/index.html#折线-polyline",a:"折线-polyline"},"69.9":{t:"路径（path）\r",p:`&lt;svg&gt;
  &lt;path
    fill-opacity=&quot;0&quot;
    stroke=&quot;skyblue&quot;
    d=&quot;
   ...`,l:"visual/svg/index.html#路径-path",a:"路径-path"},"70.0":{t:"# VitePress 从 0 开始搭建个人网站\r",p:`
lemon's blog 从无到有的过程
VitePress 官方网站
VitePress 中文网

`,l:"vitepress.html",a:"vitepress-从-0-开始搭建个人网站"},"70.1":{t:"一、 创建项目\r",p:`\r
\r`,l:"vitepress.html#一、-创建项目",a:"一、-创建项目"},"70.2":{t:"二、 基本配置\r",p:"\r",l:"vitepress.html#二、-基本配置",a:"二、-基本配置"},"70.3":{t:"1. 创建项目\r",p:`

在gitbub上新建项目，建议勾选Add a README file


新建文件夹 blog
可以使用 npm，yarn，pnpm，如果没有安装 pnpm 可以全局安装


npm i pnpm ...`,l:"vitepress.html#_1-创建项目",a:"_1-创建项目"},"70.4":{t:"2. 配置网站\r",p:"\r",l:"vitepress.html#_2-配置网站",a:"_2-配置网站"},"70.5":{t:"配置导航栏部分\r",p:"在目录下新建 docs 文件夹，在其中新建.vitepress 文件夹和 config.js 文件，config.js 文件就是我们的配置文件，新建一个 index.html 作为我们的主页，在新建一 ...",l:"vitepress.html#配置导航栏部分",a:"配置导航栏部分"},"70.6":{t:"配置侧边栏部分\r",p:`themeConfig: {
  // ...省略前面的内容
  // 侧边栏
  sidebar: {
    &quot;/articles/other&quot;: [
      {
     ...`,l:"vitepress.html#配置侧边栏部分",a:"配置侧边栏部分"},"70.7":{t:"3. 配置首页\r",p:`vitepress 支持用户使用 yaml 配置页面的内容，在 docs/index.html 写下如下内容，更多配置请查看
---
layout: home

title: 选项卡标题
titleT ...`,l:"vitepress.html#_3-配置首页",a:"_3-配置首页"},"70.8":{t:"三、 部署到 github.io\r",p:`新建脚本文件 deploy.sh，与 docs 文件夹处于同一级
#!/usr/bin/env sh

# 确保脚本抛出遇到的错误
set -e

# 生成静态文件
yarn docs:build

 ...`,l:"vitepress.html#三、-部署到-github-io",a:"三、-部署到-github-io"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"情输入关键词",allow:[],ignore:[]},r={INDEX_DATA:t,PREVIEW_LOOKUP:e,Options:n};export{r as default};
