const t={map:'[{"关于作者":["0.0"],"算法":["1.0"],"demo2":["2.0"],"demo3":["3.0"],"该内容正在努力建设中":["4.0","23.0"],"ecmascript":["5.0","5.2","5.3","5.4"],"es6":["5.1","81.4"],"模板字符串":["6.0"],"字符串插值":["6.1"],"多行字符串":["6.2"],"嵌套模板字符串":["6.3"],"带标签的模板字符串":["6.4"],"箭头函数":["7.0"],"基本语法":["7.1"],"没有参数或多个参数":["7.2"],"箭头函数与":["7.3"],"使用注意事项":["7.4"],"解构赋值":["8.0"],"数组解构赋值":["8.1"],"基本用法":["8.2","8.8"],"忽略不需要的元素":["8.3"],"给变量指定默认值":["8.4","8.10"],"剩余元素":["8.5"],"交换变量的值":["8.6"],"对象解构赋值":["8.7"],"重命名变量":["8.9"],"嵌套解构":["8.11"],"es7":["9.0"],"css":["10.0","13.1","14.0","15.0","16.0"],"通配符选择器":["10.1"],"元素选择器":["10.2"],"类选择器":["10.3"],"id":["10.4"],"交集选择器":["10.5"],"并集选择器":["10.6"],"后代选择器":["10.7"],"子选择器":["10.8"],"兄弟选择器":["10.9"],"伪类选择器":["10.10"],"动态伪类选择器":["10.11"],"结构伪类选择器":["10.12"],"属性选择器":["10.13"],"伪元素选择器":["10.14"],"相关链接":["10.15"],"flex":["11.0","11.5"],"如何启用":["11.1"],"主轴和交叉轴":["11.2"],"主轴对齐与交叉轴对齐":["11.3"],"换行与排列":["11.4"],"弹性增长与缩小":["11.6"],"弹性基准值":["11.7"],"嵌套":["11.8"],"多行对齐":["11.9"],"实现常见布局需求":["11.10"],"grid":["12.0"],"选择器优先级":["13.0"],"行内元素":["15.1"],"块级元素":["15.2"],"使用":["15.3","15.7","15.8","26.3","50.9","57.5","83.3","103.0","105.3","112.2","116.1","128.1","131.3"],"使用定位":["15.4"],"定宽高":["15.5"],"不定宽高":["15.6"],"单行溢出隐藏":["16.1"],"多行溢出隐藏":["16.2","16.3"],"滚动条样式":["17.0"],"html5":["18.0","18.5","18.6","19.3"],"音视频频格式的":["18.1"],"音频格式":["18.2"],"视频格式":["18.3"],"音视频标签描述":["18.4"],"video":["18.7","18.11"],"音视频对象的方法":["18.8"],"代码实例":["18.9"],"audio":["18.10"],"html":["19.0","19.1","19.2","21.0"],"实践和进阶":["19.4"],"常用标签及用法":["20.0"],"标题标签":["20.1"],"段落标签":["20.2"],"超链接标签":["20.3"],"图像标签":["20.4"],"无序列表和列表项标签":["20.5"],"有序列表和列表项标签":["20.6"],"容器标签":["20.7"],"内联容器标签":["20.8"],"表格标签":["20.9"],"换行标签":["20.10"],"输入标签":["20.11"],"按钮标签":["20.12"],"表单标签":["20.13"],"标题":["20.14"],"多媒体标签":["20.15"],"块级标签":["21.1"],"内联标签":["21.2"],"嵌套标签":["21.3"],"属性":["21.4","71.1","72.1","115.1"],"自定义标签":["21.5"],"input":["22.0","22.1"],"vue":["24.0","25.0"],"简介":["24.1"],"开始":["24.2"],"安装":["24.3","83.2","91.7","110.2","112.1"],"第一个":["24.4"],"数据绑定":["24.5"],"插值表达式":["24.6"],"指令":["24.7"],"条件渲染":["24.8"],"v":["24.9","24.10","24.12","29.17"],"列表渲染":["24.11"],"事件处理":["24.13"],"表单输入绑定":["24.14"],"组件":["24.15"],"定义组件":["24.16"],"使用组件":["24.17"],"生命周期钩子":["24.18"],"vuex":["26.0"],"核心概念":["26.1"],"优点":["26.2","91.5"],"mutations":["26.4"],"actions":["26.5"],"getters":["26.6"],"vue3":["27.0","28.0","29.0","32.0","96.0","122.4","124.4"],"setup":["27.1"],"ref":["27.2"],"ref全家桶":["27.3"],"isref":["27.4"],"shallowref":["27.5"],"triggerref":["27.6"],"customref":["27.7"],"reactive全家桶":["27.8"],"readonly":["27.9","88.7"],"shallowreactive":["27.10"],"to系列全家桶":["27.11"],"toref":["27.12"],"torefs":["27.13"],"toraw":["27.14"],"computed":["27.15"],"watch":["27.16"],"watcheffect":["27.21"],"清除副作用":["27.22"],"停止监听":["27.23"],"配置选项":["27.24"],"生命周期":["27.25"],"自定义指令":["27.26"],"vue3指令的钩子函数":["27.27"],"在setup内定义局部指令":["27.28"],"生命周期钩子参数详解":["27.29"],"案列":["27.30"],"自定义hooks":["27.31"],"通信方式":["28.1"],"注册":["29.1"],"全局组件":["29.2"],"批量注册全局组件":["29.4"],"局部组件":["29.5"],"父子组件传参":["29.6"],"插槽":["29.7"],"匿名插槽":["29.8"],"具名插槽":["29.9"],"作用域插槽":["29.10"],"动态插槽":["29.11"],"异步组件":["29.12"],"suspense":["29.13"],"teleport":["29.14"],"keep":["29.15"],"provide":["29.16"],"创建vue3项目":["30.0"],"一":["30.1","31.1","34.5","40.1","41.1","74.1","91.9","96.1","96.6","113.2","137.1"],"安装或者升级":["30.2"],"保证":["30.3"],"创建项目":["30.4"],"二":["30.5","31.2","34.22","40.14","41.8","50.2","74.18","91.10","113.6","137.5"],"认识vue3":["31.0"],"三":["31.3","34.25","40.16","41.13","50.7","74.20","113.7","137.11"],"defineprops":["32.1"],"defineemits":["32.2"],"defineoptions":["32.3"],"defineslots":["32.4"],"javascript":["34.0","35.0","36.0","37.0","38.0","39.0","41.0","42.0","45.0","50.0","51.0","52.0","53.0","54.0","57.0","59.0","61.0","66.0","67.0","68.0","70.0","70.1","77.0","79.0","80.0"],"创建":["34.1","57.1"],"获取数组元素":["34.2"],"数组方法":["34.4"],"增":["34.6","40.2","74.6"],"push":["34.7"],"unshift":["34.8"],"splice":["34.9","34.14","34.17"],"concat":["34.10","40.3","74.7"],"删":["34.11","40.4","74.8"],"pop":["34.12"],"shift":["34.13"],"slice":["34.15","74.3"],"改":["34.16","40.5","74.9"],"查":["34.18","40.10","74.14"],"indexof":["34.19","40.12","74.16"],"includes":["34.20"],"find":["34.21"],"reverse":["34.23"],"sort":["34.24"],"join":["34.26"],"四":["34.27","41.17","113.8"],"some":["34.28"],"every":["34.29"],"foreach":["34.30"],"filter":["34.31"],"map":["34.32"],"if":["35.1","35.2"],"switch":["35.3"],"循环语句":["35.4"],"while":["35.5"],"do":["35.6"],"for":["35.7","35.8","35.9","35.10","42.6"],"break":["35.11","36.9"],"函数的使用":["36.1"],"声明函数":["36.2"],"调用函数":["36.3"],"函数的封装":["36.4"],"函数的参数":["36.5"],"形参和实参":["36.6"],"函数形参和实参个数不匹配问题":["36.7"],"函数的返回值":["36.8"],"匿名函数":["36.10"],"函数表达式":["36.11"],"立即执行函数":["36.12"],"输出语句":["37.1"],"引入方式":["37.2"],"内部方式":["37.3"],"外部方式":["37.4"],"注释":["37.5"],"单行注释":["37.6"],"多行注释":["37.7"],"概述":["38.1"],"生成方法":["38.2"],"键名":["38.3"],"对象的引用":["38.4"],"表达式还是语句":["38.5"],"属性的操作":["38.6"],"属性的读取":["38.7"],"属性的赋值":["38.8"],"属性的查看":["38.9"],"属性的删除":["38.10"],"属性是否存在":["38.11"],"属性的遍历":["38.12"],"with":["38.13"],"运算符":["39.1"],"算数运算符":["39.2"],"赋值运算符":["39.3"],"自增和自减":["39.4"],"自增运算符":["39.5"],"自减运算符":["39.6"],"比较运行符":["39.7"],"逻辑运算符":["39.8"],"逻辑与":["39.9"],"逻辑或":["39.10"],"逻辑非":["39.11"],"条件运算符":["39.12"],"运算符的优先级":["39.13"],"js":["40.0","122.3","124.3"],"trim":["40.6","74.10"],"repeat":["40.7","74.11"],"padend":["40.8","74.12"],"tolowercase":["40.9","74.13"],"charat":["40.11","74.15"],"startwith":["40.13","74.17"],"split":["40.15","74.19"],"match":["40.17","74.21"],"search":["40.18","74.22"],"replace":["40.19","74.23"],"number":["41.2","70.5"],"undefined":["41.3"],"string":["41.4","70.4"],"null":["41.5","87.9"],"boolean":["41.6","70.6"],"symbol":["41.7"],"object":["41.9","70.2","78.6","78.7","78.8","78.9","78.10","78.11","78.12","78.13","78.14","78.15","78.16","78.17","78.18","78.19","78.20"],"array":["41.10","70.3"],"function":["41.11"],"其他引用类型":["41.12"],"转换为字符串":["41.14"],"转换为数字型":["41.15"],"转换为布尔型":["41.16"],"基本类型":["41.18","87.0"],"引用类型":["41.19"],"小结":["41.20"],"var":["42.1"],"let":["42.2"],"暂时性死区":["42.3"],"全局声明":["42.4"],"条件声明":["42.5"],"const":["42.7"],"函数声明提升与":["42.8"],"bom":["43.0","44.0","46.0","47.0","48.0","49.0"],"常见操作":["43.1"],"示例":["43.2","44.2","46.2","47.2","48.2","49.2","58.2","121.1","122.1","123.1","124.1"],"常见方法":["44.1"],"常见属性和方法":["46.1","49.1"],"常见属性":["47.1","48.1"],"ajax简介":["50.1"],"封装":["50.8","75.2","84.0"],"创建闭包":["51.1"],"捕获外部变量":["51.2"],"保护数据":["51.3"],"实际用途":["51.4"],"注意事项":["51.5","58.9","66.4","67.6","68.6","79.4"],"浅拷贝":["52.1"],"深拷贝":["52.2"],"什么是函数柯里化":["53.1"],"函数柯里化的优点和应用场景":["53.2"],"实现函数柯里化的方法":["53.3"],"节流":["54.1"],"定义":["54.2","54.5"],"其他写法":["54.3"],"防抖":["54.4"],"立即执行":["54.6"],"用法":["54.7"],"数组去重":["55.0"],"数组扁平化":["56.0"],"处理":["57.2"],"promise":["57.3","57.4"],"详解数组中的":["58.0"],"语法如下":["58.1"],"全局作用域":["59.1"],"局部作用域":["59.2"],"作用域链":["59.3"],"词法作用域":["59.4"],"dom":["60.0","61.2","61.3","62.0","63.0","64.0","65.0"],"插入节点":["60.1"],"删除节点":["60.2"],"查找节点":["60.3"],"父子关系":["60.4"],"兄弟关系":["60.5"],"概念":["61.1"],"document":["61.4"],"事件":["62.1"],"事件监听":["62.2"],"事件移除":["62.3"],"事件类型":["62.4"],"鼠标事件":["62.5"],"键盘事件":["62.6"],"焦点事件":["62.7"],"文本框输入事件":["62.8"],"事件对象":["62.9"],"事件冒泡和事件捕获":["62.10"],"常见事件类型":["62.11"],"事件委托":["62.12"],"创建元素":["63.1"],"设置元素属性和内容":["63.2"],"操作元素的父子关系":["63.3"],"样式操作":["64.1"],"类操作":["64.2"],"获取元素":["65.1"],"修改元素":["65.2"],"设置":["66.1"],"获取":["66.2"],"删除":["66.3"],"存储数据":["67.1","68.1"],"获取数据":["67.2","68.2"],"更新数据":["67.3","68.3"],"删除数据":["67.4","68.4"],"清除所有数据":["67.5","68.5"],"内置对象":["69.0","71.0","72.0","73.0","74.0"],"date":["69.1","70.7"],"创建日期":["69.2"],"设置日期":["69.3"],"时间戳":["69.4"],"两个日期比较":["69.5"],"math":["70.8","71.3","71.4","71.5","71.6","71.7","71.8","71.9","71.10","71.11","71.12","71.13","71.14"],"regexp":["70.9"],"方法":["71.2","72.2"],"什么是":["73.1","110.1","113.1"],"正则表达式基础语法":["73.2"],"字面量形式":["73.3"],"构造函数形式":["73.4"],"元字符":["73.5"],"正则表达式修饰符":["73.6"],"常用的正则表达式模式":["73.7"],"正则表达式方法":["73.8"],"正则表达式的分组和捕获":["73.9"],"正则表达式标志":["73.10"],"应用场景":["73.11"],"字符串截取":["74.2"],"substring":["74.4"],"substr":["74.5"],"继承":["75.0","75.1","88.2","92.3"],"多态":["75.3"],"类和构造函数":["76.0"],"构造函数":["76.1"],"类":["76.2","88.0"],"是什么":["77.1","127.1","136.1"],"特点":["77.2","127.2"],"实例对象与方法":["78.0"],"创建对象":["78.1"],"利用":["78.2"],"利用字面量创建对象":["78.3"],"利用构造函数创建对象":["78.4"],"常用方法":["78.5"],"原型":["79.1"],"原型链":["79.2"],"使用原型的好处":["79.3"],"this":["81.0","81.2"],"执行期上下文":["81.1"],"es5":["81.3"],"改变函数内部的":["81.5"],"call":["81.6","81.7","81.8"],"apply":["81.9","81.10","81.11","81.12"],"bind":["81.13","81.14"],"前端导航":["82.0"],"常用工具":["82.2"],"axios":["83.0"],"什么是axios":["83.1"],"拦截器":["83.4"],"错误处理":["83.5"],"相关文章":["84.7"],"git基本命令使用":["85.0"],"账户配置":["85.1"],"本地基本操作":["85.2"],"初始化本地库":["85.3"],"查看状态":["85.4"],"添加暂存区":["85.5"],"提交本地库":["85.6"],"比较差异":["85.7"],"查看日志信息":["85.8"],"分支命令":["85.9"],"创建分支":["85.10"],"查看本地分支":["85.11"],"删除分支":["85.12"],"切换分支":["85.13"],"合并分支":["85.14"],"版本穿梭与回滚":["85.15"],"修改":["85.16"],"远程仓库交互":["85.17"],"git":["85.18","85.19","85.20","85.21"],"git安装":["86.0"],"tortoisegit安装":["86.7"],"字符串类型":["87.1","99.3"],"数字类型":["87.2"],"布尔类型":["87.3"],"数组":["87.4"],"元组":["87.5"],"枚举":["87.6"],"any":["87.7"],"void":["87.8"],"never":["87.10","87.11"],"联合类型":["87.12"],"交叉类型":["87.13"],"类型断言":["87.14"],"基本实例":["88.1"],"类的修饰符":["88.3"],"默认为":["88.4"],"理解":["88.5","88.6"],"static":["88.8"],"interface":["88.9"],"存储器":["88.10"],"抽象类":["88.11"],"函数":["89.0"],"函数的类型":["89.1"],"可选参数":["89.2"],"默认参数":["89.3"],"剩余参数":["89.4"],"函数重载":["89.5"],"泛型":["90.0"],"函数泛型":["90.1"],"给函数加上类型":["90.2"],"使用泛型优化":["90.3"],"多个泛型参数的函数":["90.4"],"泛型接口":["90.5"],"泛型类":["90.6"],"泛型约束":["90.7"],"初识typescript":["91.0"],"ts是什么":["91.1"],"ts和js的关系":["91.2"],"ts和js的区别":["91.3"],"typescript的优缺点":["91.4"],"缺点":["91.6"],"监视编译和在node下运行typescript":["91.8"],"接口和对象类型":["92.0"],"对象的类型":["92.1"],"重名interface":["92.2"],"可选属性":["92.4"],"任意属性":["92.5"],"只读属性":["92.6"],"添加函数":["92.7"],"对象类型":["93.0"],"tsconfig":["94.0"],"类型推论":["95.0","95.1"],"类型别名":["95.2"],"nginx":["97.0"],"nginx部署项目":["97.1"],"mysql":["98.0","99.0","102.0"],"管理数据库和表的命令":["98.1"],"数据操作命令":["98.2"],"授权和权限管理命令":["98.3"],"整数类型":["99.1"],"浮点数类型":["99.2"],"日期和时间类型":["99.4"],"其他常用类型":["99.5"],"数据库概述":["100.0"],"mysql介绍":["100.1"],"安装mysql":["101.0"],"express":["104.0","104.1","104.4","104.5","108.11","108.14"],"基本使用":["104.2"],"托管静态资源":["104.3"],"全局中间件":["104.6"],"局部中间件":["104.7"],"中间件分类":["104.8"],"cors":["104.9","104.10","104.11","104.12","104.13"],"简单请求":["104.14"],"预检请求":["104.15"],"nodejs":["105.0","105.2","107.4"],"初识":["105.1","127.0"],"nodejs内置模块":["106.0"],"fs":["106.1"],"读取文件":["106.2"],"简单文件读取":["106.3"],"流式文件读取":["106.4"],"写入文件":["106.5"],"简单文件写入":["106.6"],"流式文件写入":["106.7"],"buffer":["106.8"],"路径动态拼接问题":["106.9"],"其它操作":["106.10"],"path":["106.11"],"路径拼接":["106.12"],"获取路径中文件名":["106.13"],"获取路径中文件扩展名":["106.14"],"http":["106.15"],"创建基本":["106.16"],"实现简陋路由效果":["106.17"],"模块化":["107.0"],"基本概念":["107.1"],"什么是模块化":["107.2"],"模块化的好处":["107.3"],"node":["107.5","107.6","108.1"],"模块作用域的成员":["107.7"],"commonjs":["107.8"],"模块加载机制":["107.9"],"内置模块加载":["107.10"],"自定义模块加载":["107.11"],"第三方模块加载":["107.12"],"目录作为模块加载":["107.13"],"npm":["107.14","107.16","109.0","110.0"],"包":["107.15"],"通过切换源解决":["107.17"],"开发包":["107.18"],"模块的加载机制":["107.19"],"内置模块的加载机制":["107.20"],"自定义模块的加载机制":["107.21"],"第三方模块的加载机制":["107.22"],"目录作为模块":["107.23"],"数据库和身份认证":["108.0"],"配置":["108.2"],"操作":["108.3"],"web":["108.4"],"服务端渲染":["108.5"],"前后端分离":["108.6"],"如何选择":["108.7"],"身份认证":["108.8"],"session":["108.9","108.10"],"jwt":["108.12","108.13"],"常用命令":["110.3"],"package":["110.4"],"使用依赖项":["110.5"],"开发和发布包":["110.6"],"发布包到":["111.0"],"步骤":["111.1","111.2","111.3","111.4","111.5","111.6","111.7"],"yarn":["112.0"],"初始":["113.0"],"canvas":["114.0","115.0","116.0","117.0","118.0","119.0","120.0"],"属性方法":["116.2"],"绘制图形":["119.1"],"绘制矩形":["119.2"],"绘制圆弧":["119.3","133.4"],"绘制线段":["119.4","133.5"],"绘制图像":["119.5"],"绘制文本":["119.6"],"绘制贝塞尔二次曲线":["120.1"],"绘制贝塞尔三次曲线":["120.2"],"刮刮乐":["121.0"],"代码":["121.2","122.2","123.2","124.2","130.1","134.2"],"时钟":["122.0"],"梅花特效":["123.0"],"画板":["124.0"],"echarts":["125.0"],"pixijs":["126.0","128.0","129.0","131.0","132.0","133.0","135.0"],"为精灵添加事件":["126.1"],"为图形添加事件":["126.2"],"用法示例":["127.7"],"graphics":["128.2"],"添加文字":["129.1"],"使用文字作为精灵的遮罩":["129.2"],"波纹涟漪效果":["130.0"],"创建应用":["131.1"],"添加滤镜":["131.2"],"绘制椭圆":["133.1"],"绘制多边形":["133.2"],"创建圆角矩形":["133.3"],"谷歌恐龙小游戏":["134.0"],"素材图片":["134.1"],"单次添加资源":["135.1"],"一次添加多个资源":["135.2"],"svg":["136.0"],"基本图形":["136.2"],"线条":["136.3"],"矩形":["136.4"],"圆形":["136.5"],"椭圆":["136.6"],"多边形":["136.7"],"折线":["136.8"],"路径":["136.9"],"vitepress":["137.0"],"初始化项目":["137.2"],"npx":["137.3"],"本地运行":["137.4"],"目录结构":["137.6"],"配置导航栏部分":["137.9"],"配置侧边栏部分":["137.10"]},{"0":["27.1","34.9","41.15","41.16","42.6","69.1","99.1","117.1","122.3"],"1":["5.4","7.4","8.2","11.10","12.1","12.2","12.3","12.4","12.6","12.18","12.22","12.27","12.30","13.1","16.3","25.1","26.1","26.3","27.1","27.17","28.2","28.4","30.6","34.28","35.1","38.3","38.10","38.12","38.13","39.2","39.5","39.6","41.14","50.3","51.4","53.4","54.3","54.7","55.1","56.1","58.3","58.9","69.1","72.1","72.2","79.3","81.3","81.8","84.1","85.1","85.7","85.8","85.14","85.15","85.16","85.18","85.19","85.21","86.1","96.2","96.3","96.4","96.5","96.7","96.8","96.11","97.1","102.1","103.1","104.8","107.18","108.2","108.3","108.11","108.14","111.1","111.5","113.3","113.4","113.5","114.1","117.1","127.3","132.1","136.1","137.7"],"2":["5.4","12.3","12.5","12.6","12.7","12.8","12.9","12.10","12.11","12.12","12.13","12.14","12.15","12.16","12.19","12.23","12.28","25.2","26.3","27.18","28.3","28.5","30.7","35.1","38.12","38.13","39.2","50.4","53.5","55.2","56.2","58.3","58.4","72.2","84.2","86.2","96.4","96.8","96.9","96.10","96.11","96.12","102.2","103.2","104.8","107.18","108.3","108.11","108.14","111.2","113.4","114.2","117.2","127.4","132.2","137.8"],"3":["5.4","12.4","12.8","12.17","12.18","12.19","12.20","12.24","25.3","27.19","28.6","32.0","38.3","38.12","50.5","53.6","55.3","56.3","58.3","58.5","84.3","86.3","99.2","102.3","103.3","111.3","113.5","114.3","117.3","127.5","132.3"],"4":["12.9","12.21","12.22","12.23","12.24","12.25","12.33","25.4","27.20","28.7","50.6","55.4","56.4","58.6","84.4","86.4","102.4","103.4","111.4","114.4","117.4","127.6","132.4"],"5":["12.10","12.26","12.27","12.28","25.5","28.8","55.5","58.3","58.7","84.5","86.5","96.9","102.5","103.5","103.6","111.5","114.5"],"6":["12.11","12.29","12.30","12.31","12.32","12.33","25.6","28.9","55.6","58.8","84.6","86.6","96.10","102.6","103.6","111.6"],"7":["12.12","25.7","28.10","96.11","102.7","103.6","111.7"],"8":["12.13","25.8","28.11","96.12","102.8"],"9":["12.14","25.9","28.12","103.6"],"10":["12.15","25.10","35.6"],"11":["12.16","25.12"],"14":["135.1"],"15":["135.2"],"19":["135.1"],"26":["135.2"],"28":["81.8"],"31":["69.1"],"50":["119.3"],"100":["42.1","119.4"],"123":["1.1","38.5"],"127":["99.1"],"128":["99.1"],"200":["119.3","120.1"],"300":["119.3","120.1","122.3"],"400":["121.2","122.3"],"404":["97.0"],"500":["54.3"],"600":["116.1","121.2","122.3"],"800":["122.3"],"1970":["69.4"],"1997":["5.4"],"1998":["5.4"],"2013":["96.6"],"2050":["69.3"],"12345":["83.5"],"qq":["0.0"],"的介绍":["5.0"],"入门教程":["5.1"],"简介":["5.2","25.1"],"简称":["5.2","5.3"],"es":["5.2","5.3"],"与":["5.3","27.15","28.9","28.10","87.11","109.0","137.11"],"javascript":["5.3","6.1","6.2","6.4","8.2","8.3","8.5","8.8","8.9","8.11","24.16","37.1","37.2","37.4","38.2","38.3","38.4","38.5","38.7","38.8","38.10","38.12","38.13","39.13","41.10","44.2","46.2","51.2","51.3","52.2","53.1","53.4","53.5","53.6","57.5","59.1","59.3","59.4","61.4","62.12","72.1","73.8","73.10","73.11","75.2","75.3","76.0","76.1","76.2","77.1","79.1","87.4","87.6","89.4","91.3"],"的关系":["5.3"],"版本发布记录":["5.4"],"以下是每个":["5.4"],"版本的主要内容概述":["5.4"],"es1":["5.4"],"第一个":["5.4","27.29"],"版本":["5.4"],"定义了基本的语法和数据类型":["5.4"],"包括变量":["5.4"],"操作符":["5.4","92.4"],"函数和控制结构等":["5.4"],"es2":["5.4"],"对":["5.4"],"进行了一些修订":["5.4"],"没有引入大的新功能":["5.4"],"es3":["5.4","94.0"],"es6":["6.0","7.0","8.0","38.3","76.2","94.0"],"使用":["6.1","8.5","11.6","15.1","15.6","24.13","24.14","25.2","25.5","34.2","37.6","37.7","41.15","41.16","42.6","52.2","55.3","55.4","55.5","55.6","56.1","56.3","63.1","63.2","63.3","64.1","64.2","65.1","65.2","73.4","84.6","88.6","92.4","102.6","102.7","106.13","107.21","108.14","110.5","113.6","113.7","116.0"],"来在模板字符串中插入变量或表达式":["6.1"],"其中":["6.1"],"中的内容会被解析并替换为实际的值":["6.1"],"使用模板字符串可以很方便地创建多行文本":["6.2"],"不需要使用":["6.2"],"n":["6.2"],"来手动添加换行符":["6.2"],"模板字符串可以嵌套在其他模板字符串中":["6.3"],"使得字符串拼接更加灵活":["6.3"],"可以在模板字符串前添加一个标签函数":["6.4"],"这个标签函数将模板字符串的各个部分解析成多个参数":["6.4"],"使得我们可以对字符串进行自定义处理":["6.4"],"function":["6.4","34.24","36.2","36.8","50.8","51.2","51.3","53.4","53.5","54.3","54.6","54.7","57.5","81.8","83.5","84.5","89.1","89.3","89.5","90.4","122.3"],"tagfunc":["6.4"],"strings":["6.4"],"箭头函数的基本语法如下":["7.1"],"js":["7.1","7.2","24.0","24.3","24.4","24.7","27.4","27.6","27.17","34.15","34.21","34.24","34.32","35.2","35.3","35.5","35.6","35.9","36.3","36.8","36.11","36.12","39.11","40.3","40.13","41.2","41.14","41.18","41.19","42.1","42.2","42.3","42.6","42.8","43.2","47.2","48.2","49.2","50.8","50.9","54.3","54.6","54.7","55.0","55.2","55.6","56.0","56.4","58.1","58.3","58.4","58.5","58.6","58.7","58.8","62.6","62.7","63.3","64.1","64.2","69.5","74.3","74.4","74.5","74.7","74.17","78.3","78.6","78.8","78.18","81.8","83.3","83.5","84.3","84.4","84.5","84.6","89.1","96.8","103.4","104.2","104.4","104.6","104.7","104.12","105.1","106.3","106.4","106.6","106.7","106.12","106.14","106.16","106.17","107.5","107.6","107.12","107.15","108.3","114.4","117.2","117.3","118.0","119.2","119.3","119.4","119.5","120.1","120.2","126.1","126.2","127.7","128.2","129.1","129.2","131.1","131.2","132.1","132.3","133.1","133.2","133.3","133.4","133.5","135.1","135.2","137.9","137.10"],"const":["7.1","8.2","8.3","8.8","8.11","27.28","34.21","53.6","55.0","55.2","56.4","57.5","58.3","62.6","62.7","81.8","103.4","104.2","104.4","104.6","104.7","106.12","106.16","106.17","108.3","126.2","128.2","129.2","131.1","131.2","133.1","133.2","133.3","133.4","133.5","135.1","135.2"],"functionname":["7.1"],"当箭头函数没有参数或有多个参数时":["7.2"],"需要使用括号来表示参数列表":["7.2"],"this":["7.3","81.3","81.4","81.5","81.8","81.11","81.14"],"箭头函数与传统函数有一个重要的区别":["7.3"],"箭头函数没有自己的":["7.3"],"它继承自外层作用域的":["7.3"],"在传统函数中":["7.3"],"的值是在函数调用时动态确定的":["7.3"],"取决于调用方式":["7.3"],"如果箭头函数只有一个参数":["7.4"],"可以省略参数列表的括号":["7.4"],"引入了解构赋值":["8.0"],"数组解构赋值允许我们根据数组的顺序":["8.1"],"numbers":["8.2","58.3"],"我们可以使用逗号将不需要的元素跳过":["8.3"],"如果数组元素不足以匹配变量的个数":["8.4"],"可以为变量指定默认值":["8.4"],"避免出现":["8.4"],"语法可以将剩余的数组元素赋值给一个新数组":["8.5"],"使用解构赋值":["8.6"],"可以非常简洁地交换两个变量的值":["8.6"],"无需使用第三个变量":["8.6"],"对象解构赋值允许我们根据对象的属性名":["8.7"],"person":["8.8","8.11","78.3","88.1","88.6","92.7"],"我们可以通过在解构时为变量指定新的名称":["8.9"],"来实现重命名":["8.9"],"和数组解构一样":["8.10"],"可以为对象解构赋值时":["8.10"],"为变量指定默认值":["8.10"],"对象解构也支持嵌套解构":["8.11"],"从嵌套对象中提取值":["8.11"],"选择器":["10.0","10.4"],"选择页面所有元素":["10.1"],"通过标签名选择元素":["10.2"],"通过类名选择元素":["10.3"],"html":["10.5","10.9","10.14","12.22","12.23","12.24","12.25","15.2","16.0","16.2","18.10","18.11","19.4","20.11","20.13","21.3","21.4","21.5","22.1","24.17","29.9","42.5","60.4","61.2","108.5","116.1","121.2","124.3","136.3","136.4","136.5","136.7","136.8","136.9","137.7"],"p":["10.5","20.2","38.7","38.10"],"class":["10.5","16.2","60.4","76.2","88.1","88.6","88.8","90.6","124.4"],"good":["10.5"],"作用":["10.6","62.5"],"选中多个选择器对应的元素":["10.6"],"在所有后代节点中选":["10.7"],"只在亲儿子中选":["10.8"],"选择所有指定元素的":["10.9"],"相邻":["10.9"],"后一个兄弟节点":["10.9"],"h1":["10.9","20.1"],"根据元素状态或所处":["10.10"],"css":["10.11","10.14","15.5","15.6","16.1","16.3","17.0"],"按这个顺序声明":["10.11"],"c3":["10.12","10.13","10.14"],"选择符":["10.12","10.13"],"含义":["10.12","10.13"],"e":["10.12","10.13"],"first":["10.12"],"child":["10.12","29.8"],"第一个子元素":["10.12"],"last":["10.12"],"最后一个子元素":["10.12"],"att":["10.13"],"选择具有":["10.13"],"伪元素选择器利用":["10.14"],"创建新标签元素":["10.14"],"而不需要":["10.14"],"标签":["10.14","18.0","21.0"],"从而简化":["10.14"],"结构":["10.14"],"before":["10.14"],"和":["10.14","20.5","20.6","20.14","20.15","24.9","26.4","27.2","27.7","35.11","36.3","41.16","85.14","87.5","87.9","88.8","88.10","109.0"],"after":["10.14"],"一篇搞清伪类和伪元素":["10.15"],"布局":["11.0","11.1","12.0","15.7"],"灵活的网页布局解决方案":["11.0"],"flex":["11.1","11.2","11.4","11.6","11.7","11.8","11.9","11.10","15.7"],"要启用":["11.1"],"布局具有一个主轴和一个交叉轴":["11.2"],"默认情况下":["11.2","11.4","62.10"],"主轴是水平方向":["11.2"],"交叉轴是垂直方向":["11.2"],"可以使用":["11.3","11.9","38.9","43.1","66.1","66.2","67.1","67.2","67.4","67.5","67.6","68.1","68.2","68.4","68.5","68.6"],"justify":["11.3","11.10","12.13","12.14","12.15"],"content":["11.3","12.14","16.1"],"属性控制主轴上的对齐方式":["11.3"],"align":["11.3","11.9","18.11"],"items":["11.3","12.13"],"属性控制交叉轴上的对齐方式":["11.3"],"项目会在一行中排列":["11.4"],"flow":["11.5"],"是":["11.5","38.2","45.0","61.4","136.1"],"容器":["11.8"],"在多行":["11.9"],"容器中":["11.9"],"布局非常适合实现常见的网页布局需求":["11.10"],"例如":["11.10","19.2","73.11"],"居中对齐":["11.10"],"通过":["11.10","37.3","50.4","50.5","65.1","81.8","81.11","89.2","104.3","104.6","104.8"],"理解":["12.1","27.1"],"grid":["12.1","12.3","12.6","12.7","12.8","12.10","12.11","12.12","12.16","12.18","12.19","12.20","12.22","12.23","12.24","12.25","15.8"],"网格容器与网格项":["12.2"],"行与列":["12.3"],"布局的核心是行和列":["12.3"],"网格线与网格跨度":["12.4"],"在":["12.4","26.1","27.0","27.31","28.2","28.6","28.8","29.2","29.13","36.0","52.2","53.3","54.0","73.2","75.2","75.3","76.0","76.1","76.2","79.1","81.3","89.4","96.10","96.12","137.1","137.7","137.9"],"template":["12.6","12.7","12.8","28.12","32.1","32.2","32.4","124.4"],"columns":["12.6"],"areas":["12.7"],"column":["12.10","12.16"],"gap":["12.10"],"auto":["12.11"],"网格轨道的大小和增长":["12.18"],"网格轨道":["12.18"],"网格模板的定义":["12.19"],"通过使用网格模板":["12.19"],"响应式设计与媒体查询":["12.20"],"布局与响应式设计完美结合":["12.20"],"通过使用媒体查询":["12.20"],"media":["12.20"],"简单网页布局":["12.22"],"布局可以用于创建简单的网页布局":["12.22"],"如标题":["12.22"],"导航栏和内容区域":["12.22"],"复杂网页布局":["12.23"],"布局可以应用于创建复杂的网页布局":["12.23"],"如新闻网站的首页布局":["12.23"],"doctype":["12.23","12.24","12.25","61.2"],"布局的嵌套与组合":["12.24"],"布局可以嵌套使用":["12.24"],"从而创建更加复杂和多样化的布局":["12.24"],"网格的动态调整":["12.25"],"布局的一个重要特点是网格项目的动态调整":["12.25"],"网格项可以根据内容的大小自动调整":["12.25"],"也可以通过调整网格容器的大小来实现动态布局":["12.25"],"lang":["12.25","61.2"],"en":["12.25"],"head":["12.25","104.14"],"meta":["12.25"],"最佳实践与优化建议":["12.33"],"一般情况下":["13.0"],"权重":["13.1"],"tip":["13.1","58.9","62.2","78.4"],"详细描述":["13.1"],"计算方式":["13.1"],"每个选择器":["13.1"],"都可以算出一组权重":["13.1"],"格式为":["13.1","99.4"],"a":["13.1","20.3","22.1","30.4","38.3","38.12","39.3","39.5","39.6","41.18","73.7","85.14"],"水平垂直居中":["15.0"],"line":["15.1","133.5","136.3"],"height":["15.1","121.2","135.2"],"div":["15.2","16.2","18.11","20.7","28.12","29.9","32.1","32.2","121.2","124.4"],"margin":["15.3"],"父元素使用":["15.3"],"box":["15.5","15.6"],"transform":["15.6","114.4"],"width":["15.6","16.1","17.0","48.1","116.1","121.2","135.1","135.2"],"文本溢出隐藏":["16.0"],"webkit":["16.2","17.0"],"内核":["16.2"],"text":["16.2","16.3","18.11"],"这里是多行文本内容":["16.2"],"兼容较好":["16.3"],"滚动条":["17.0"],"scrollbar":["17.0"],"纵向":["17.0"],"8px":["17.0"],"音视频标签":["18.0"],"音视频标签中的资源除了可以用":["18.0"],"src":["18.0","96.12"],"属性来指定外":["18.0"],"还可以用":["18.0"],"source":["18.0","115.1"],"mime":["18.1"],"format":["18.2"],"格式":["18.3"],"audio":["18.5"],"video":["18.6","20.15"],"标签的属性":["18.7"],"属性":["18.7","65.2"],"描述":["18.7","24.18","39.2","39.3","39.7","69.1"],"方法名":["18.8"],"音频":["18.10"],"视频":["18.11"],"style":["18.11","64.1"],"center":["18.11"],"button":["18.11","20.12","60.4","124.3"],"onclick":["18.11"],"playpause":["18.11"],"超文本标记语言":["19.0"],"的基本结构":["19.1"],"文档由一系列嵌套的":["19.1"],"标签组成":["19.1"],"一个基本的":["19.1"],"标签和元素":["19.2"],"标签用于定义网页的结构和内容":["19.2"],"它们由尖括号包围":["19.2"],"标签通常成对出现":["19.2"],"包含开始标签和结束标签":["19.2"],"tagname":["19.2"],"的新特性":["19.3"],"学习":["19.4"],"最重要的是通过实践来加深理解":["19.4"],"创建简单的网页":["19.4"],"当描述":["20.0"],"到":["20.1","69.1","99.1"],"img":["20.4","103.6"],"ul":["20.5","60.4"],"ol":["20.6"],"span":["20.8"],"table":["20.9","98.2","98.3"],"tr":["20.9"],"th":["20.9"],"br":["20.10"],"input":["20.11","62.6","62.8","124.3"],"form":["20.13"],"脚注和导航标签":["20.14"],"header":["20.14"],"footer":["20.14"],"nav":["20.14"],"block":["21.1"],"level":["21.1"],"elements":["21.1","21.2"],"块级标签通常用于创建页面的大型结构和组织":["21.1"],"它们会单独占据一行":["21.1"],"inline":["21.2"],"内联标签用于包裹文本的一部分":["21.2"],"它们不会独占一行":["21.2"],"标签可以嵌套在其他标签中":["21.3"],"标签可以包含属性":["21.4"],"属性用于为标签提供额外的信息或设置":["21.4"],"html5":["21.5"],"允许开发者创建自定义的标签":["21.5"],"这些标签可能在":["21.5"],"type":["22.1","95.2","124.3"],"password":["22.1"],"浏览器自动填充账号和密码":["22.1"],"vue":["24.1","24.3","24.4","24.7","25.3","27.23","27.28","27.30","28.4","28.5","28.12","29.8","29.11","30.3","30.4","31.1","32.1","32.2","32.4","96.8","123.2","124.4","128.1","130.1","134.2"],"您可以通过直接引入":["24.3"],"应用":["24.4"],"使用双花括号":["24.6"],"提供了一些指令":["24.7"],"if":["24.9","42.2"],"show":["24.10"],"for":["24.12","38.12","55.2"],"循环渲染列表中的元素":["24.12"],"v":["24.13","28.7","29.6"],"on":["24.13","98.3"],"定义一个名为":["24.16"],"钩子函数":["24.18"],"阶段":["24.18"],"beforecreate":["24.18"],"创建前":["24.18"],"在实例被创建之前调用":["24.18"],"此时":["24.18"],"组件的数据观察和事件还未初始化":["24.18"],"created":["24.18","27.27"],"创建后":["24.18"],"router":["25.0","25.3","104.4","104.8"],"安装":["25.2","26.3","104.2","107.16","108.2","108.11","108.14","112.2","137.2"],"基本用法":["25.3"],"创建一个":["25.3","26.3"],"实例并将其与":["25.3"],"路由视图":["25.4"],"路由导航":["25.5"],"路由传参":["25.6"],"嵌套路由":["25.7"],"是一个专为":["26.0"],"state":["26.1","26.6"],"状态":["26.1","118.0"],"vuex":["26.1","26.2","26.3","26.4","26.6"],"中":["26.1","29.13","52.2","54.0","75.2","75.3","76.0","79.1"],"状态即应用程序中需要共享的数据":["26.1"],"它类似于组件的":["26.1"],"集中式管理":["26.2"],"所有的状态都集中在":["26.2"],"npm":["26.3","30.2","30.6","91.7","104.2","107.17","107.18","108.11","108.14","110.1","110.2","110.3","110.5","110.6","111.0","131.3","137.2"],"或":["26.3","72.2","99.1","104.8","107.22"],"yarn":["26.3","97.1","109.0","112.1","112.2","137.2"],"库":["26.3","131.3"],"在终端中运行以下命令":["26.3"],"install":["26.3","96.10","104.2","108.11","108.14"],"add":["26.3","64.2","85.5","89.1","89.5"],"的":["26.3","87.8","103.6"],"的使用":["26.4","26.5","26.6"],"当使用":["26.4"],"时":["26.4"],"通常会将状态的修改拆分为两个部分":["26.4"],"actions":["26.4"],"用于处理异步操作":["26.5"],"并且可以包含任意异步代码":["26.5"],"它们不直接修改状态":["26.5"],"而是通过调用":["26.5"],"mutations":["26.5"],"来间接修改状态":["26.5"],"通常":["26.5"],"在组件中通过":["26.5"],"dispatch":["26.5"],"用于派生出":["26.6"],"store":["26.6"],"中的状态":["26.6"],"类似于组件的计算属性":["26.6"],"computed":["26.6"],"但是":["26.6","27.31","90.7"],"可以被多个组件共用":["26.6"],"避免了重复逻辑代码":["26.6"],"可以对":["26.6"],"进行处理和过滤":["26.6"],"返回一个新的衍生状态":["26.6"],"而不改变原始状态":["26.6"],"以下是一个使用":["26.6"],"api":["27.0","96.12"],"vue在线学习工具":["27.0"],"vue3":["27.1","27.16","28.2","28.8","96.7"],"reactive":["27.2"],"函数用来根据给定的值创建一个响应式的数据对象":["27.2"],"函数调用的返回值是一个对象":["27.2"],"这个对象上只包含一个":["27.2"],"value":["27.2","27.5","27.29","72.1"],"判断是不是一个ref对象":["27.4"],"import":["27.4","27.6","96.10","128.2","129.1","131.1","135.1","135.2"],"ref":["27.4","28.9"],"创建一个跟踪自身":["27.5"],"变化的":["27.5"],"强制更新页面dom":["27.6"],"自定义ref":["27.7"],"是个工厂函数要求我们返回一个对象":["27.7"],"并且实现":["27.7"],"get":["27.7","83.3","83.5","84.5","88.10","104.8","104.14","104.15"],"reactive是不可以绑定普通的":["27.8"],"数据类型":["27.8","41.0"],"只能对浅层的数据":["27.10"],"如果是深层的数据只会改变值":["27.10"],"把一个响应式对象转换成普通对象":["27.12"],"该普通对象的每个":["27.12"],"torefs相当于对对象内每个属性调用toref":["27.13"],"torefs返回的对象内的属性使用时需要加":["27.13"],"将响应式对象修改为普通对象":["27.14"],"的作用和":["27.16"],"监听ref定义的一个响应式数据":["27.17"],"监听多个ref":["27.18"],"写法变为数组的形式":["27.18"],"监听reactive定义的响应式对象":["27.19"],"使用reactive监听深层对象开启和不开启deep":["27.19"],"监听reactive":["27.20"],"定义响应式对象的单一属性":["27.20"],"立即执行传入的一个函数":["27.21"],"watcheffect":["27.22"],"watcheffect的第二个参数":["27.24"],"用来定义副作用刷新时机":["27.24"],"简单来说就是一个组件从创建":["27.25"],"元素初始化的时候":["27.27"],"这里有一个需要注意的限制":["27.28"],"必须以":["27.28"],"vnameofdirective":["27.28"],"的形式来命名本地自定义指令":["27.28"],"以使得它们可以直接在模板中使用":["27.28"],"vmovedirective":["27.28"],"el":["27.29"],"当前绑定的dom":["27.29"],"元素":["27.29"],"第二个":["27.29"],"binding":["27.29"],"instance":["27.29"],"使用指令的组件实例":["27.29"],"自定义拖拽指令":["27.30"],"vue2":["27.31","28.1","28.6","29.13"],"中有个东西叫":["27.31"],"mixins":["27.31"],"他可以将多个组件中相同的逻辑抽离出来":["27.31"],"实现一次写代码":["27.31"],"多组件受益的效果":["27.31"],"的副作用就是引用的多了变量的来源就不清晰了":["27.31"],"而且还会有变量来源不明确":["27.31"],"组件通信方式":["28.0"],"通信仓库地址":["28.1"],"项目地址":["28.1"],"不管是":["28.1"],"props":["28.2"],"可以实现父子组件通信":["28.2"],"中我们可以通过":["28.2"],"自定义事件":["28.3","28.5"],"原生":["28.4"],"dom":["28.4","60.1","60.2","60.3","61.0","61.1","62.2","62.11"],"事件":["28.4","50.6","62.8"],"代码如下":["28.4"],"自定义事件可以实现子组件给父组件传递数据":["28.5"],"在项目中是比较常用的":["28.5"],"比如在父组件内部给子组件":["28.5"],"event2":["28.5"],"绑定一个自定义事件":["28.5"],"全局事件总线":["28.6"],"全局事件总线可以实现任意组件通信":["28.6"],"model":["28.7","29.17","45.0","61.1"],"指令可是收集表单数据":["28.7"],"数据双向绑定":["28.7"],"除此之外它也可以实现父子组件数据同步":["28.7"],"useattrs":["28.8"],"中可以利用":["28.8"],"parent":["28.9"],"提及到":["28.9"],"provide":["28.10"],"piniapinia":["28.11"],"slot":["28.12","29.9","32.4"],"插槽":["28.12"],"默认插槽":["28.12"],"具名插槽":["28.12"],"作用域插槽可以实现父子组件通信":["28.12"],"在子组件内部的模板中书写":["28.12"],"全局组件标签":["28.12"],"在父组件内部提供结构":["28.12"],"todo":["28.12"],"深入组件":["29.0"],"main":["29.2"],"ts":["29.2","87.1","87.2","87.3","87.9","87.10","87.12","87.13","88.1","88.6","88.8","88.9","89.2","89.3","89.5","90.2","90.4","90.6","90.7","91.1","92.2","92.3","92.7","95.1","95.2","96.10","135.1"],"引入组件跟随在":["29.2"],"createapp":["29.2"],"app":["29.2","104.6","104.7","104.8","127.7","128.2","135.1","135.2"],"局部注册的组件需要在使用它的父组件中显式导入":["29.5"],"父组件通过":["29.6"],"bind":["29.6"],"绑定一个数据":["29.6"],"然后子组件通过":["29.6"],"defineprops":["29.6"],"在子组件放置一个插槽":["29.8"],"具名插槽其实就是给插槽取个名字":["29.9"],"一个子组件可以放多个插槽":["29.9"],"而且可以放在不同的地方":["29.9"],"而父组件填充内容时":["29.9"],"可以根据这个名字把内容填充到对应插槽中":["29.9"],"插槽内容可以访问到父组件的数据作用域":["29.10"],"因为插槽内容本身是在父组件模板中定义的":["29.10"],"插槽可以是一个变量名":["29.11"],"在大型应用中":["29.12"],"需要将应用分割成小一些的代码块":["29.12"],"允许应用程序在等待异步组件时渲染一些其它内容":["29.13"],"必须使用条件判断":["29.13"],"传送组件":["29.14"],"是一种能够将我们的模板渲染至指定dom节点":["29.14"],"不受父级style":["29.14"],"alive":["29.15"],"缓存组件":["29.15"],"事件挂载的方法等":["29.15"],"只执行一次的放在":["29.15"],"onmounted中":["29.15"],"组件每次进去执行的方法放在":["29.15"],"onactivated中":["29.15"],"inject":["29.16"],"可以在祖先组件中指定我们想要提供给后代组件的数据或方法":["29.16"],"而在任何后代组件中":["29.16"],"升级":["29.17"],"在vue3":["29.17"],"是破坏性更新的":["29.17"],"是props":["29.17"],"使用vue":["30.1"],"create":["30.4","78.5","78.7","98.1"],"my":["30.4"],"project":["30.4"],"然后的步骤":["30.4"],"please":["30.4"],"pick":["30.4"],"preset":["30.4"],"选择":["30.4"],"manually":["30.4"],"select":["30.4","108.3"],"使用vite创建":["30.5"],"推荐":["30.5"],"vite的优势":["30.5"],"使用vite初始化一个项目":["30.6"],"bash":["30.6","85.1","85.3","85.4","85.8","85.10","85.11","85.13","85.15","85.21","91.7","96.10","104.2","107.17","108.11","108.14","131.3","137.2","137.11"],"了解相关信息":["31.1"],"性能提升":["31.2"],"新增特性":["31.3"],"composition":["31.3"],"组合":["31.3"],"父组件":["32.1","32.2","32.4"],"主要是用来定义":["32.3"],"options":["32.3","50.8","106.3","106.6"],"用来约束":["32.4"],"数组":["34.0"],"创建数组有两种方式":["34.1"],"利用":["34.1"],"new":["34.1","57.1","57.5","69.2","76.1","78.2","78.4","133.2","133.3","133.4","133.5","135.1","135.2"],"数组的长度":["34.2"],"数组名":["34.2"],"length":["34.2"],"可以访问数组元素的数量":["34.2"],"数组长度":["34.2"],"数组的索引":["34.2"],"索引":["34.2"],"下标":["34.2"],"操作方法":["34.5","40.1","74.1"],"下面前三种是对原数组产生影响的增添方法":["34.6"],"方法接收任意数量的参数":["34.7"],"在数组开头添加任意多个值":["34.8"],"传入三个参数":["34.9","34.17"],"分别是开始位置":["34.9","34.14","34.17"],"要删除的元素数量":["34.9"],"首先会创建一个当前数组的副本":["34.10"],"然后再把它的参数添加到副本末尾":["34.10"],"最后返回这个新构建的数组":["34.10"],"不会影响原始数组":["34.10","34.15"],"下面三种都会影响原数组":["34.11"],"方法用于删除数组的最后一项":["34.12"],"同时减少数组的":["34.12","34.13"],"方法用于删除数组的第一项":["34.13"],"传入两个参数":["34.14"],"删除元素的数量":["34.14"],"用于创建一个包含原有数组中一个或多个元素的新数组":["34.15"],"let":["34.15","34.32","35.6","39.3","41.18","42.4","42.6","42.7","54.7","58.5","58.7","83.3","84.4","84.6","87.2","87.3","87.9","127.7"],"即修改原来数组的内容":["34.16"],"要删除元素的数量":["34.17"],"要插入的任意多个元素":["34.17"],"即查找元素":["34.18"],"返回要查找的元素在数组中的位置":["34.19","34.20"],"如果没找到则返回":["34.19"],"找到返回":["34.20"],"返回第一个匹配的元素":["34.21"],"排序方法":["34.22"],"顾名思义":["34.23"],"将数组元素方向反转":["34.23"],"方法接受一个比较函数":["34.24"],"用于判断哪个值应该排在前面":["34.24"],"compare":["34.24"],"value1":["34.24","78.15"],"value2":["34.24","78.15"],"转换方法":["34.25","40.14","74.18"],"方法接收一个参数":["34.26"],"即字符串分隔符":["34.26"],"迭代方法":["34.27"],"对数组每一项都运行传入的测试函数":["34.28","34.29"],"如果至少有":["34.28"],"个元素返回":["34.28"],"如果所有元素都返回":["34.29"],"true":["34.29","34.31","38.10","39.9","41.6","42.2","72.2","96.8","99.5"],"对数组每一项都运行传入的函数":["34.30","34.31","34.32"],"没有返回值":["34.30"],"函数返回":["34.31"],"的项会组成数组之后返回":["34.31"],"返回由每次函数调用的结果构成的数组":["34.32"],"流程控制":["35.0"],"语句":["35.1","35.2","35.3","35.5","38.13"],"流程控制语句可以用来改变程序执行的顺序":["35.1"],"条件判断语句":["35.1"],"else":["35.2"],"语法":["35.2","35.3","35.9","74.3","74.4","74.5"],"条件表达式":["35.2","35.5","39.12"],"条件表达式1":["35.2"],"通过循环语句可以使指定的代码反复执行":["35.4"],"while":["35.6"],"i":["35.6","42.6"],"循环":["35.8","35.9","35.10","38.12","55.2"],"in":["35.9","38.11","38.12"],"用于遍历对象的可枚举属性":["35.9"],"of":["35.10"],"用于遍历可迭代的集合":["35.10"],"如数组":["35.10"],"字符串":["35.10","41.15","74.5","108.14"],"映射":["35.10"],"map":["35.10","55.6"],"continue":["35.11","36.9"],"用来终止":["35.11"],"switch":["35.11"],"和循环语句":["35.11"],"执行后":["35.11"],"当前的":["35.11"],"或循环会立刻停止":["35.11"],"函数":["36.0","71.14","81.3","87.8"],"是声明函数的关键字":["36.2"],"函数名":["36.3","36.8"],"函数使用分为两步":["36.3"],"声明函数":["36.3","36.8"],"在声明函数时":["36.6"],"可以在函数名称后面的小括号中添加一些参数":["36.6"],"这些参数被称为":["36.6"],"形参":["36.6"],"在调用该函数时":["36.6"],"参数个数":["36.7"],"说明":["36.7"],"实参个数等于形参个数":["36.7"],"输出正确结果":["36.7"],"实参个数多于形参个数":["36.7"],"只取到形参的个数":["36.7"],"实参个数少于形参个数":["36.7"],"有的时候":["36.8"],"我们会希望函数将值返回给调用者":["36.8"],"此时通过使用":["36.8"],"return":["36.8","36.9","53.5","57.5"],"语句就可以实现":["36.8"],"语法格式":["36.8","106.3","106.6"],"需要返回的值":["36.8"],"调用函数":["36.8","81.8"],"var":["36.8","38.3","38.4","38.7","38.10","38.12","38.13","41.19","42.2","42.6","42.8","58.4","58.8","69.5","78.3","106.4","122.3"],"result":["36.8"],"函数可以分为具名函数和匿名函数":["36.10"],"基本语法":["37.0"],"是一种脚本语言":["37.0"],"以下是一个简单的":["37.1"],"程序不能独立运行":["37.2"],"script":["37.3"],"标签包裹":["37.3"],"一般将":["37.4"],"对象":["38.0","38.2","38.13","61.3","77.2","107.7","108.14","119.6"],"object":["38.2","38.10","45.0","61.1","78.2","78.5","93.1"],"语言的核心概念":["38.2"],"也是最重要的数据类型":["38.2"],"对象的所有键名都是字符串":["38.3"],"又引入了":["38.3"],"symbol":["38.3","93.1"],"值也可以作为键名":["38.3"],"所以加不加引号都可以":["38.3"],"上面的代码也可以写成下面这样":["38.3"],"obj":["38.3","38.7","38.10","38.12","38.13","78.8","78.11","78.12","78.13","78.14","78.16","78.18","78.19"],"foo":["38.3","38.5"],"hello":["38.3","38.7"],"bar":["38.3"],"world":["38.3","38.7"],"如果键名是数值":["38.3"],"会被自动转为字符串":["38.3"],"如果不同的变量名指向同一个对象":["38.4"],"那么它们都是这个对象的引用":["38.4"],"也就是说指向同一个内存地址":["38.4"],"修改其中一个变量":["38.4"],"会影响到其他所有变量":["38.4"],"o1":["38.4"],"o2":["38.4"],"对象采用大括号表示":["38.5"],"这导致了一个问题":["38.5"],"如果行首是一个大括号":["38.5"],"它到底是表达式还是语句":["38.5"],"读取对象的属性":["38.7"],"有两种方法":["38.7"],"一种是使用点运算符":["38.7"],"还有一种是使用方括号运算符":["38.7"],"点运算符和方括号运算符":["38.8"],"不仅可以用来读取值":["38.8"],"还可以用来赋值":["38.8"],"查看一个对象本身的所有属性":["38.9"],"delete":["38.10"],"命令":["38.10","109.0","110.3"],"命令用于删除对象的属性":["38.10"],"删除成功后返回":["38.10"],"keys":["38.10","78.16"],"运算符":["38.11","39.0","39.2"],"运算符用于检查对象是否包含某个属性":["38.11"],"注意":["38.11","58.9"],"检查的是键名":["38.11"],"不是键值":["38.11"],"循环用来遍历一个对象的全部属性":["38.12"],"b":["38.12"],"c":["38.12","96.6"],"语句的格式如下":["38.13"],"它的作用是操作同一个对象的多个属性时":["38.13"],"提供一些书写的方便":["38.13"],"例一":["38.13"],"p1":["38.13"],"p2":["38.13"],"实例":["39.2","39.3","57.4"],"加":["39.2"],"运算符名称":["39.3","39.7"],"赋值":["39.3"],"使用后会使得原来的变量立刻增加":["39.5"],"自增分为前自增":["39.5"],"和后自增":["39.5"],"无论是":["39.5"],"使用后会使得原来的变量立刻减小":["39.6"],"自减分为前自减":["39.6"],"案列":["39.7"],"结果":["39.7","57.2"],"一假即假":["39.9"],"可以对两个值进行与运算":["39.9"],"当":["39.9","39.10","81.1"],"左右都为":["39.9"],"一真即真":["39.10"],"可以对两个值进行或运算":["39.10"],"左右有":["39.10"],"表达式":["39.12"],"各种运算符的优先级别":["39.13"],"operator":["39.13"],"字符串的常用方法":["40.0"],"这里增的意思并不是说直接增添内容":["40.2","74.6"],"用于将一个或多个字符串拼接成一个新字符串":["40.3","74.7"],"这里的删的意思并不是说删除原字符串的内容":["40.4","74.8"],"而是创建字符串的一个副本":["40.4","74.8"],"再进行操作":["40.4","74.8"],"常见的有":["40.4","74.8"],"slice":["40.4","74.8"],"substr":["40.4","74.8"],"substring":["40.4","74.8"],"这里改的意思也不是改变原字符串":["40.5","74.9"],"trimleft":["40.6","74.10"],"trimright":["40.6","74.10"],"删除前":["40.6","74.10"],"接收一个整数参数":["40.7","74.11"],"复制字符串":["40.8","74.12"],"如果小于指定长度":["40.8","74.12"],"touppercase":["40.9","74.13"],"大小写转化":["40.9","74.13"],"除了通过索引的方式获取字符串的值":["40.10","74.14"],"返回给定索引位置的字符":["40.11","74.15"],"从字符串开头去搜索传入的字符串":["40.12","74.16"],"并返回位置":["40.12","74.16"],"includes":["40.13","74.17"],"从字符串中搜索传入的字符串":["40.13","74.17"],"并返回一个表示是否包含的布尔值":["40.13","74.17"],"把字符串按照指定的分割符":["40.15","74.19"],"拆分成数组中的每一项":["40.15","74.19"],"模板匹配方法":["40.16","74.20"],"接收一个参数":["40.17","40.18","74.21","74.22"],"可以是一个正则表达式字符串":["40.17","40.18","74.21","74.22"],"也可以是一个":["40.17","40.18","74.21","74.22"],"接收两个参数":["40.19","74.23"],"第一个参数为匹配的内容":["40.19","74.23"],"第二个参数为替换的元素":["40.19","74.23"],"基本类型":["41.1"],"数值最常见的整数类型格式则为十进制":["41.2"],"还可以设置八进制":["41.2"],"零开头":["41.2"],"十六进制":["41.2"],"0x":["41.2"],"开头":["41.2","107.22"],"类型只有一个值":["41.3"],"就是特殊值":["41.3"],"字符串可以使用双引号":["41.4"],"单引号":["41.4"],"或反引号":["41.4"],"类型同样只有一个值":["41.5"],"即特殊值":["41.5"],"布尔值":["41.6"],"类型有两个字面值":["41.6"],"符号":["41.7"],"是原始值":["41.7"],"且符号实例是唯一":["41.7"],"引用类型":["41.8"],"创建":["41.9","100.0","103.4","106.16"],"数组是一组有序的数据":["41.10"],"函数实际上是对象":["41.11"],"每个函数都是":["41.11"],"类型的实例":["41.11"],"而":["41.11"],"除了上述说的三种之外":["41.12"],"类型转换":["41.13"],"把数字转换为字符串型":["41.14"],"变量":["41.14","42.0"],"将其他的数据类型转换为数值":["41.15"],"number":["41.15","72.0","72.1","72.2","93.1"],"函数来将其他类型转换为数值":["41.15"],"转换的情况":["41.15","41.16"],"如果字符串是一个合法的数字":["41.15"],"则会自动转换为对应的数字":["41.15"],"如果字符串不是合法数字":["41.15"],"则转换为":["41.15"],"nan":["41.15","72.2"],"如果字符串是空串或纯空格的字符串":["41.15"],"boolean":["41.16","87.3","93.1","99.5"],"函数来将其他类型转换为布尔值":["41.16"],"数字":["41.16"],"存储区别":["41.17"],"obj1":["41.19","81.8"],"声明变量时不同的内存地址分配":["41.20"],"关键字":["42.1","76.2","81.0","95.2"],"msg":["42.1"],"默认":["42.1","115.1"],"undefined":["42.1","87.9"],"声明后可以改变类型":["42.1"],"但不推荐":["42.1"],"hi":["42.1"],"声明":["42.2","42.6","42.7"],"声明的范围是块作用域":["42.2"],"name":["42.2","42.3","78.3","83.3","88.1","98.1","98.2","98.3","124.3"],"zhangsan":["42.2","81.8"],"console":["42.2","48.2","81.8"],"log":["42.2","48.2","81.8","85.8"],"在全局作用域中声明的变量不会成为":["42.4"],"window":["42.4","49.0","49.1","81.3","81.8","135.1","135.2"],"对象的属性":["42.4"],"循环中的":["42.6"],"时变量会渗透到外面":["42.6"],"的行为与":["42.7"],"基本相同":["42.7"],"声明提升":["42.8"],"document":["43.0","43.1","61.1","62.6","66.1","122.3"],"获取元素":["43.1"],"获取具有id为":["43.2"],"myelement":["43.2"],"history":["44.0","44.1"],"bom":["45.0"],"browser":["45.0","96.8"],"中用于与浏览器交互的一组对象和方法集合":["45.0"],"它提供了访问和控制浏览器窗口及其内容的功能":["45.0"],"location":["46.0","46.1"],"href":["46.1"],"当前窗口的完整":["46.1"],"获取当前窗口的url":["46.2"],"navigator":["47.0","47.1"],"获取用户代理字符串":["47.2"],"screen":["48.0","48.1"],"获取屏幕的宽度":["48.2"],"open":["49.1"],"打开一个新窗口":["49.2"],"ajax":["50.0","50.1","50.2","50.8","50.9","57.5","108.5","108.6"],"全称":["50.1"],"async":["50.1"],"实现过程":["50.2"],"实现":["50.2","122.3","122.4","124.3","124.4"],"与服务器建立连接":["50.4"],"xmlhttprequest":["50.4","50.5","50.6","50.8","57.5"],"给服务端发送数据":["50.5"],"绑定":["50.6"],"onreadystatechange":["50.6"],"事件用于监听服务器端的通信状态":["50.6"],"主要监听的属性为":["50.6"],"readystate":["50.6"],"关于":["50.6","84.7"],"封装与使用":["50.7"],"通过上面对":["50.8"],"对象的了解":["50.8"],"下面来封装一个简单的":["50.8"],"请求":["50.8","83.3"],"封装一个ajax请求":["50.8"],"使用方式如下":["50.9"],"闭包":["51.0"],"要创建一个闭包":["51.1"],"通常需要在一个函数内部定义另一个函数":["51.1"],"并将其返回":["51.1"],"返回的函数就是闭包":["51.1"],"闭包可以捕获并访问其外部函数的变量":["51.2"],"即使外部函数已经执行完毕":["51.2"],"这使得闭包可以在不同的上下文中使用和保留外部变量的状态":["51.2"],"通过使用闭包":["51.3","51.4"],"可以创建私有变量":["51.3"],"这些变量无法从外部访问":["51.3"],"只能通过内部函数提供的公共接口访问和修改":["51.3"],"createperson":["51.3"],"封装私有变量和方法":["51.4"],"可以创建私有变量和方法":["51.4"],"将其封装在函数内部":["51.4"],"只暴露公共接口给外部":["51.4"],"闭包会导致内存占用增加":["51.5"],"因为外部函数的变量和作用域在闭包中被保留":["51.5"],"即使外部函数执行完毕也不会被释放":["51.5"],"深浅拷贝":["52.0"],"浅拷贝是创建一个新对象":["52.1"],"新对象的属性值是原始对象属性值的引用":["52.1"],"也就是说":["52.1"],"新对象和原始对象共享相同的引用类型属性":["52.1"],"深拷贝是创建一个新对象":["52.2"],"新对象的属性值与原始对象的属性值完全独立":["52.2"],"二者互不影响":["52.2"],"由于对象的属性可能是引用类型":["52.2"],"所以需要递归复制对象的所有属性":["52.2"],"包括嵌套的对象和数组":["52.2"],"以下是一些常用的实现深拷贝的方法":["52.2"],"json":["52.2","67.6","68.6","94.0","96.7","103.6","108.14","110.4"],"parse":["52.2","96.8"],"函数柯里化":["53.0"],"函数柯里化是一种将多个参数的函数转化为一系列接受单个参数的函数的过程":["53.1"],"通过函数柯里化":["53.1"],"可以将原始函数分解为多个嵌套的函数":["53.1"],"每个函数都接收一个参数":["53.1"],"并返回一个新函数等待接收下一个参数":["53.1"],"最终":["53.1"],"所有参数都被传递完毕后":["53.1"],"原始函数会被调用执行":["53.1"],"参数复用和定制":["53.2"],"通过柯里化":["53.2"],"可以将函数的一部分参数预先设置":["53.2"],"然后在后续调用时只传递剩余的参数":["53.2"],"这使得函数的复用和定制变得更加灵活和方便":["53.2"],"延迟执行":["53.2"],"使用闭包递归":["53.4"],"curry":["53.4","53.5"],"func":["53.4","53.5","54.7"],"使用递归和占位符":["53.5"],"使用箭头函数和递归":["53.6"],"节流和防抖":["54.0"],"节流函数适用事件":["54.1"],"节流是一种控制函数执行频率的技术":["54.2"],"当一个函数被频繁调用时":["54.2","54.5"],"节流可以限制函数在一定时间间隔内只执行一次":["54.2"],"节流的实现思路是设置一个定时器":["54.2"],"在函数被调用时先检查定时器是否存在":["54.2"],"如果定时器不存在":["54.2"],"使用时间戳写法":["54.3"],"事件会立即执行":["54.3"],"停止触发后没有办法再次执行":["54.3"],"throttled1":["54.3"],"fn":["54.3"],"delay":["54.3","54.7"],"防抖函数适用事件":["54.4"],"防抖是一种控制函数执行频率的技术":["54.5"],"防抖可以延迟函数的执行":["54.5"],"直到某个连续的时间段内没有新的函数调用发生":["54.5"],"防抖如果需要立即执行":["54.6"],"可加入第三个参数用于判断":["54.6"],"实现如下":["54.6"],"debounce":["54.6","54.7"],"导入或定义防抖":["54.7"],"节流函数":["54.7"],"indexof":["55.3"],"include":["55.4"],"数组扁平化是指将一个多维数组变为一个一维数组":["56.0"],"利用正则":["56.2"],"reduce":["56.3","58.0","58.3","58.9"],"函数递归":["56.4"],"promise":["57.0","57.1","57.2","57.5"],"是一种异步编程的解决方案":["57.0"],"它可以避免回调地狱":["57.0"],"使代码更加简洁易读":["57.0"],"可以通过":["57.1","69.2"],"通过调用":["57.2"],"链式调用":["57.3"],"的一个重要特性是可以通过链式调用来串联多个异步操作":["57.3"],"通过在":["57.3"],"then":["57.3"],"all":["57.4"],"方法接收一个":["57.4"],"实例数组":["57.4"],"返回一个新的":["57.4"],"该新实例在数组中的所有":["57.4"],"封装一个":["57.5"],"下面是一个使用":["57.5"],"封装的基本":["57.5"],"请求的示例":["57.5"],"url":["57.5","104.12"],"method":["57.5"],"data":["57.5","84.4","106.6"],"resolve":["57.5"],"reject":["57.5"],"xhr":["57.5"],"array":["58.1"],"计算数组累积结果":["58.3"],"演示如何使用":["58.3"],"方法来计算数组中所有元素的和":["58.3"],"计算数组中每个元素出现的次数":["58.4"],"arr":["58.4"],"one":["58.4"],"two":["58.4"],"three":["58.4"],"six":["58.4"],"four":["58.4"],"five":["58.4"],"数组去重":["58.5"],"数组扁平化":["58.6","58.7"],"二维转一维":["58.6"],"多维转一维":["58.7"],"对象属性求和":["58.8"],"方法适用于对数组的每个元素执行同一个累积操作":["58.9"],"作用域":["59.0"],"全局作用域是指在代码的任何地方都可访问的变量和函数":["59.1"],"在全局作用域中声明的变量和函数可以被代码中的任何地方访问":["59.1"],"局部作用域是指在特定代码块":["59.2"],"如函数":["59.2"],"循环或条件语句":["59.2"],"内部声明的变量和函数":["59.2"],"这些变量和函数只能在其声明的代码块内部访问":["59.2"],"作用域链是指":["59.3"],"引擎在查找变量时的嵌套作用域链条":["59.3"],"当访问一个变量时":["59.3"],"引擎首先在当前作用域的变量对象中查找":["59.3"],"中的作用域是通过代码的结构和位置来确定的":["59.4"],"而不是通过运行时的状态":["59.4"],"这被称为词法作用域":["59.4"],"函数在定义时就确定了自己的作用域":["59.4"],"而不是在调用时":["59.4"],"节点":["60.0","60.1","60.2","61.3"],"在已有的":["60.1"],"节点中插入新的":["60.1"],"节点时":["60.1"],"需要关注两个关键因素":["60.1"],"首先要得到新的":["60.1"],"其次在哪个位置插入这个节点":["60.1"],"createelement":["60.1","63.1"],"删除现有的":["60.2"],"childnodes":["60.4"],"获取全部的子节点":["60.4"],"回车换行会被认为是空白文本节点":["60.4"],"children":["60.4"],"只获取元素类型节点":["60.4"],"body":["60.4"],"btn1":["60.4"],"所有的子节点":["60.4"],"获取":["60.4"],"previoussibling":["60.5"],"获取前一个节点":["60.5"],"以相对位置查找节点":["60.5"],"是一种用于表示和操作":["61.1"],"树":["61.2"],"节点是文档树的组成部分":["61.3"],"每一个节点都是一个":["61.3"],"事件处理":["62.0"],"事件是编程语言中的术语":["62.1"],"结合":["62.2"],"使用事件时":["62.2"],"需要为":["62.2"],"对象添加事件监听":["62.2"],"当我们不再需要一个事件监听器时":["62.3"],"鼠标事件是指跟鼠标操作相关的事件":["62.5"],"如单击":["62.5"],"双击":["62.5"],"移动等":["62.5"],"事件名":["62.5"],"click":["62.5"],"当用户点击鼠标左键时触发":["62.5"],"dblclick":["62.5"],"当用户在文本框中输入":["62.8"],"删除或修改文本时触发":["62.8"],"无论是键盘输入":["62.8"],"粘贴":["62.8"],"事件处理程序的第一个参数是事件对象":["62.9"],"event":["62.9","62.10"],"它包含有关事件的信息":["62.9"],"例如事件类型":["62.9"],"事件冒泡":["62.10"],"事件会从触发它的元素向上冒泡到祖先元素":["62.10"],"你可以使用":["62.10","88.7"],"stoppropagation":["62.10"],"以下是一些常见的":["62.11"],"事件类型":["62.11"],"鼠标事件":["62.11"],"事件委托是一种利用事件冒泡原理来简化事件处理的技术":["62.12"],"通过将事件监听器绑定到一个父元素上":["62.12"],"然后利用事件冒泡机制":["62.12"],"从父元素中捕获和处理子元素触发的事件":["62.12"],"这样可以减少事件处理程序的数量":["62.12"],"并且可以动态地处理后续添加的子元素":["62.12"],"提高性能和代码的可维护性":["62.12"],"创建和操作元素":["63.0"],"设置元素的属性":["63.2"],"setattribute":["63.2"],"方法":["63.2","63.3","64.2","65.1","69.1","81.9","81.13","81.14","106.13"],"将新元素添加到父元素中":["63.3"],"appendchild":["63.3"],"样式和类操作":["64.0"],"修改元素的内联样式":["64.1"],"对象来访问和修改元素的样式属性":["64.1"],"添加类名":["64.2"],"classlist":["64.2"],"属性的":["64.2"],"element":["64.2"],"获取和修改元素":["65.0"],"getelementbyid":["65.0","65.1","122.3"],"id":["65.1","116.1","121.2","124.3"],"修改元素的文本内容":["65.2"],"textcontent":["65.2"],"属性或":["65.2"],"innertext":["65.2"],"cookie":["66.0","66.1","66.2","66.3","66.4","108.13"],"属性来设置":["66.1"],"可以通过将":["66.3"],"每个域名下的":["66.4"],"是相互独立的":["66.4"],"不同域名之间的":["66.4"],"是隔离的":["66.4"],"localstorage":["67.0","67.1","67.2","67.6"],"setitem":["67.1","68.1"],"可以通过重新设置相同的键来更新":["67.3","68.3"],"存储的值必须是字符串类型":["67.6","68.6"],"如果需要存储其他数据类型":["67.6","68.6"],"如对象或数组":["67.6","68.6"],"stringify":["67.6","68.6"],"方法将其转换为字符串存储":["67.6","68.6"],"然后在需要时使用":["67.6","68.6"],"sessionstorage":["68.0","68.1","68.2","68.6"],"date":["69.0","69.2","99.4"],"getdate":["69.1"],"获取日期":["69.1"],"月份中的日期":["69.1"],"返回值为":["69.1"],"之间的整数":["69.1"],"getday":["69.1"],"获取星期几":["69.1"],"表示星期日":["69.1"],"对象用于处理日期和时间":["69.2"],"通过使用针对日期对象的方法":["69.3"],"我们可以很容易地对日期进行操作":["69.3"],"在下面的例子中":["69.3"],"我们为日期对象设置了一个特定的日期":["69.3"],"时间戳是指":["69.4"],"年":["69.4"],"01":["69.4"],"月":["69.4"],"内置对象":["70.0","70.1"],"就是指这个语言自带的一些对象":["70.0"],"的内置对象":["70.1"],"对象说明":["70.1"],"是用于进行正则表达式匹配的对象":["70.9"],"math":["71.0","71.1","81.12","122.3"],"abs":["71.3"],"random":["71.4"],"ceil":["71.5"],"floor":["71.6"],"round":["71.7"],"min":["71.8"],"max":["71.9","72.1","81.12"],"pow":["71.10"],"sqrt":["71.11"],"sin":["71.12"],"cos":["71.13"],"trunc":["71.14"],"返回的是一个数的整数部分":["71.14"],"表示":["72.1"],"中能表示的最大数值":["72.1"],"isnan":["72.2"],"num":["72.2"],"判断给定的值是否为":["72.2"],"非数值":["72.2"],"如果是":["72.2"],"则返回":["72.2"],"否则返回":["72.2"],"false":["72.2"],"isfinite":["72.2"],"判断给定的值是否为有限数值":["72.2"],"如果是有限数值":["72.2"],"即不是":["72.2"],"infinity":["72.2"],"regexp":["73.0","73.1"],"正则表达式":["73.1"],"是一种用于匹配和操作字符串模式的强大工具":["73.1"],"它是一种模式匹配的语法":["73.1"],"使用斜杠":["73.3"],"匹配除换行符之外的任何单个字符":["73.5"],"修饰符用于在正则表达式中添加额外的规则":["73.6"],"影响匹配的行为":["73.6"],"以下是一些常用的正则表达式模式示例":["73.7"],"匹配字母或数字字符":["73.7"],"za":["73.7"],"的字符串对象提供了一些与正则表达式相关的方法来执行匹配":["73.8"],"搜索和替换操作":["73.8"],"以下是一些常用的方法":["73.8"],"match":["73.8"],"在字符串中搜索匹配正则表达式的结果":["73.8"],"并返回一个数组或":["73.8"],"null":["73.8","93.1"],"正则表达式还支持使用圆括号进行分组和捕获":["73.9"],"通过使用圆括号将模式的一部分括起来":["73.9"],"可以创建子模式":["73.9"],"并将匹配到的子串捕获到一个分组中":["73.9"],"以下是一些常用的分组和捕获的示例":["73.9"],"使用括号进行分组":["73.9"],"abc":["73.9"],"会匹配一个或多个连续的":["73.9"],"捕获分组":["73.9"],"使用括号进行分组后":["73.9"],"可以通过编号或名称将捕获的子串提取出来":["73.9"],"除了修饰符外":["73.10"],"正则表达式还支持标志":["73.10"],"flags":["73.10"],"用于提供更多的匹配选项":["73.10"],"正则表达式在":["73.11"],"中具有广泛的应用场景":["73.11"],"string":["74.0","89.5","93.1"],"新字符串":["74.3","74.4"],"str":["74.3","74.4","74.5"],"封装和多态":["75.0"],"inheritance":["75.1"],"继承是一种对象间的关系":["75.1"],"它允许一个对象":["75.1"],"称为子类或派生类":["75.1"],"继承另一个对象":["75.1"],"称为父类或基类":["75.1"],"的属性和方法":["75.1"],"子类继承了父类的特性":["75.1"],"可以通过继承来复用代码":["75.1"],"减少重复编写":["75.1"],"encapsulation":["75.2"],"封装是一种将数据和方法包裹在一个单一实体中的概念":["75.2"],"使得外部无法直接访问对象的内部实现细节":["75.2"],"这样的设计有助于隐藏对象的复杂性":["75.2"],"只暴露必要的接口":["75.2"],"提高代码的可维护性和安全性":["75.2"],"封装通常通过将数据设置为私有属性":["75.2"],"polymorphism":["75.3"],"多态是一种允许不同对象对同一方法做出不同响应的特性":["75.3"],"这意味着可以使用相同的方法名":["75.3"],"但针对不同对象实现不同的行为":["75.3"],"多态有助于实现代码的灵活性和可扩展性":["75.3"],"es5":["76.1","94.0"],"及其之前的版本中":["76.1"],"使用构造函数来创建对象":["76.1"],"构造函数本质上是一个普通的函数":["76.1"],"但通常使用":["76.1"],"及以上的版本中":["76.2"],"引入了":["76.2"],"使得类的定义更加简洁明了":["76.2"],"类定义了对象的结构和行为":["76.2"],"面向对象":["77.0"],"对象是面向对象编程的核心概念":["77.2"],"对象是一个复合的数据类型":["77.2"],"它可以包含属性":["77.2"],"也称为数据成员":["77.2"],"和方法":["77.2"],"张三":["78.3"],"构造函数":["78.4"],"是一种特殊的函数":["78.4"],"主要用来初始化对象":["78.4"],"即为对象成员变量赋初始值":["78.4"],"它总与":["78.4"],"运算符一起使用":["78.4"],"我们可以把对象中一些公共的属性和方法抽取出来":["78.4"],"然后封装到这个函数里面":["78.4"],"assign":["78.5","78.6"],"target":["78.5","78.6","94.0"],"sources":["78.5","78.6"],"复制一个或多个对象的属性到目标对象":["78.5"],"proto":["78.5","78.7","79.1"],"entries":["78.8"],"freeze":["78.9","78.10"],"getownpropertydescriptor":["78.11"],"prop":["78.11","78.20"],"getownpropertynames":["78.12"],"getownpropertysymbols":["78.13"],"getprototypeof":["78.14"],"is":["78.15","105.1"],"seal":["78.17","78.18"],"values":["78.19"],"hasownproperty":["78.20"],"原型和原型链":["79.0"],"prototype":["79.1","79.2"],"每个对象都有一个特殊的属性":["79.1"],"chain":["79.2"],"原型链是由对象的原型对象构成的链式结构":["79.2"],"当我们访问对象的属性或方法时":["79.2"],"如果对象本身没有找到":["79.2"],"则会继续在原型链上查找":["79.2"],"直到找到为止":["79.2"],"原型链的最终节点是":["79.2"],"尽量避免直接修改原型对象":["79.4"],"以免对其他对象产生意外的影响":["79.4"],"严格模式":["80.0"],"strict":["80.0"],"mode":["80.0"],"是一种在":["80.0"],"中启用更严格解析和错误处理的模式":["80.0"],"它旨在帮助开发者编写更安全":["80.0"],"指向":["81.2","81.14"],"函数内":["81.3"],"的指向":["81.3","81.4"],"非常重要":["81.3"],"语法中":["81.3"],"根据函数的调用方式的不同":["81.3"],"会指向不同的对象":["81.3"],"以":["81.3"],"的形式":["81.3"],"包括普通函数":["81.3"],"定时器函数":["81.3"],"立即执行函数":["81.3"],"调用时":["81.3"],"的指向永远都是":["81.3"],"比如":["81.3"],"fun":["81.3"],"相当于":["81.3"],"箭头函数中":["81.4"],"方法的作用":["81.7","81.10","81.14"],"方法举例":["81.8","81.11"],"举例":["81.8","81.11"],"nickname":["81.8"],"age":["81.8"],"fn1":["81.8"],"可以":["81.10"],"调用":["81.10"],"一个函数":["81.10"],"改变":["81.11"],"方法的巧妙应用":["81.12"],"求数组的最大值":["81.12"],"我们知道":["81.12"],"如果想要求数组中元素的最大值":["81.12"],"数组本身是没有自带方法的":["81.12"],"那怎么办呢":["81.12"],"虽然数组里没有获取最大值的方法":["81.12"],"但是数值里有":["81.12"],"不会调用函数":["81.14"],"但是可以改变函数内部的":["81.14"],"navlinks":["82.2"],"axios":["83.1","83.3","83.5","84.0","84.2","96.11"],"使用npm":["83.2"],"执行":["83.3"],"zs":["83.3"],"我们大致可以分为两类":["83.4"],"一类是":["83.4"],"请求接口前的统一处理":["83.4"],"请求拦截":["83.4"],"请求接口后的统一处理":["83.4"],"user":["83.5"],"catch":["83.5"],"封装目的":["84.1"],"初始化":["84.2"],"设置请求拦截":["84.3"],"创建请求拦截":["84.3"],"service":["84.3","84.4"],"interceptors":["84.3","84.4"],"request":["84.3"],"use":["84.3","84.4","104.6","104.8"],"config":["84.3","96.10","137.9"],"设置响应拦截":["84.4"],"创建响应拦截":["84.4"],"response":["84.4"],"res":["84.4","104.12"],"处理自己的业务逻辑":["84.4"],"封装常见的方法":["84.5"],"export":["84.5"],"示例":["84.6","127.7"],"param":["84.6"],"username":["84.6"],"配置全局账户":["85.1"],"对所有":["85.1"],"git":["85.1","85.5","85.6","85.7","85.8","85.10","85.15"],"仓库有效":["85.1"],"commit":["85.6","85.16"],"提交所有变更":["85.6"],"diff":["85.7"],"比较工作区和暂存区的所有差异":["85.7"],"只能查看旧文件的变更":["85.7"],"包括修改和删除":["85.7"],"不能查看新文件":["85.7"],"因为新文件还为被":["85.7"],"查看简要日志信息":["85.8"],"基于当前分支创建分支":["85.10"],"安全删除本地分支":["85.12"],"merge":["85.14"],"rebase":["85.14"],"的区别有待学习实践":["85.14"],"worried":["85.14"],"将":["85.14"],"工作区指定文件恢复成和暂存区一样":["85.15"],"checkout":["85.15"],"file1":["85.15"],"file2":["85.15"],"tips":["85.15"],"记录":["85.16"],"remote":["85.18"],"查看所有远程仓库地址别名":["85.18"],"clone":["85.19"],"pull":["85.20"],"push":["85.21"],"推送本地指定分支到仓库指定分支":["85.21"],"配置用户名和邮箱":["86.3"],"执行命令生成ssh":["86.4"],"tortoisegit安装和配置详细说明":["86.7"],"支持十六进制":["87.2"],"十进制":["87.2"],"八进制和二进制":["87.2"],"b1":["87.3"],"typescript":["87.4","87.14","88.10","91.7","92.0"],"像":["87.4"],"tuple":["87.5"],"元组类型允许表示一个已知":["87.5"],"元素数量":["87.5"],"类型":["87.5"],"的数组":["87.5"],"各元素的类型不必相同":["87.5"],"enum类型是对":["87.6"],"标准数据类型的一个补充":["87.6"],"使用枚举类型可以为一组数值赋予友好的名字":["87.6"],"枚举的值可以是数字":["87.6"],"任意类型":["87.7"],"没有强制限定哪种类型":["87.7"],"随时切换类型都可以":["87.7"],"我们可以对":["87.7"],"可以用":["87.8"],"表示没有":["87.8"],"任何返回值":["87.8"],"u":["87.9"],"定义undefined":["87.9"],"类型表示的是那些永不存在的值的类型":["87.10"],"void":["87.11"],"联合类型用":["87.12"],"分隔":["87.12"],"表示取值可以为多种类型中的一种":["87.12"],"a可以为数字或者布尔类型":["87.12"],"交叉类型就是跟联合类型相反":["87.13"],"用":["87.13","88.11"],"操作符表示":["87.13"],"交叉类型就是两个类型必须存在":["87.13"],"通过类型断言这种方式可以告诉编译器":["87.14"],"相信我":["87.14"],"我知道自己在干什么":["87.14"],"类型断言好比其它语言里的类型转换":["87.14"],"但是不进行特殊的数据检查和解构":["87.14"],"它没有运行时的影响":["87.14"],"只是在编译阶段起作用":["87.14"],"会假设你":["87.14"],"es6提供了更接近传统语言的写法":["88.0"],"引入了class":["88.0"],"类的基本定义与使用":["88.1"],"声明属性":["88.1"],"在typescript":["88.2"],"里":["88.2","89.4"],"我们可以使用常用的面向对象模式":["88.2"],"基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类":["88.2"],"总共有三个":["88.3"],"public":["88.4","88.6","103.6"],"private":["88.5"],"protected":["88.6"],"修饰符":["88.6","88.7"],"代表定义的变量私有的只能在内部和继承的子类中访问":["88.6"],"不能在外部访问":["88.6"],"静态属性":["88.8"],"静态方法":["88.8"],"我们用static":["88.8"],"定义的属性":["88.8"],"不可以通过this":["88.8"],"去访问":["88.8"],"只能通过类名去调用":["88.8"],"定义":["88.9","108.14"],"类":["88.9"],"定义类":["88.9"],"使用关键字":["88.9"],"支持通过":["88.10"],"getters":["88.10"],"setters":["88.10"],"来截取对对象成员的访问":["88.10"],"它能帮助你有效的控制对对象成员的访问":["88.10"],"下面来看如何把一个简单的类改写成使用":["88.10"],"抽象类做为其它派生类的基类使用":["88.11"],"它们一般":["88.11"],"不会直接被实例化":["88.11"],"只能实例化实现了所有抽象方法的子类":["88.11"],"不同于接口":["88.11"],"抽象类可以包含成员的实现细节":["88.11"],"abstract":["88.11"],"函数涉及的类型实际上指的是":["89.0"],"js的函数":["89.1"],"命名函数":["89.1"],"表示该参数为可选参数":["89.2"],"必要参数":["89.4"],"默认参数和可选参数有个共同点":["89.4"],"它们表示某一个参数":["89.4"],"有时":["89.4"],"你想同时操作多个参数":["89.4"],"或者你并不知道会有多少参数传递进来":["89.4"],"重载是方法名字相同":["89.5"],"而参数不同":["89.5"],"返回类型可以相同也可以不同":["89.5"],"重载函数声明":["89.5"],"x":["89.5","114.2"],"y":["89.5","114.2","137.2"],"指在定义函数":["90.0"],"下面这是两个函数":["90.2"],"除了类型的不同":["90.2"],"实现的功能是一样的":["90.2"],"语法为函数名字后面跟一个":["90.3"],"参数名":["90.3"],"参数名可以随便写":["90.3"],"例如我这儿写了":["90.3"],"t":["90.3"],"一个函数可以定义多个泛型参数":["90.4"],"在定义接口时":["90.5"],"为接口中的属性或方法定义泛型类型":["90.5"],"在使用接口时":["90.5"],"再指定具体的泛型类型":["90.5"],"在定义类时":["90.6"],"为类中的属性或方法定义泛型类型":["90.6"],"在创建类的实例时":["90.6"],"再指定特定的泛型类型":["90.6"],"我们期望在一个泛型的变量上面":["90.7"],"获取其length参数":["90.7"],"有的数据类型是没有length属性的":["90.7"],"typescript中文网":["91.0"],"对比于js":["91.2"],"ts是js的":["91.2"],"属于动态编程语言":["91.3"],"增强代码的可维护性":["91.5"],"需要一定的学习成本":["91.6"],"使用tsc":["91.9"],"使用ts":["91.10"],"在typescript中":["92.1"],"我们定义对象的方式要用关键字interface":["92.1"],"接口":["92.1"],"会合并":["92.2"],"interface":["92.3","92.7"],"需要注意的是":["92.5"],"一旦定义了任意属性":["92.5"],"那么确定属性和可选属性的类型都必须是它的类型的子集":["92.5"],"readonly":["92.6"],"readonly只读属性是不允许被赋值的":["92.6"],"只能读取":["92.6"],"这里所说的对象类型":["93.0"],"类型用于表示所有的非原始类型":["93.1"],"即我们不能把":["93.1"],"等":["93.1"],"原始类型赋值给":["93.1"],"在严格模式下":["93.1"],"配置文件":["94.0","96.8"],"compileroptions":["94.0"],"基本选项":["94.0"],"指定":["94.0"],"ecmascript":["94.0"],"目标版本":["94.0"],"default":["94.0"],"es2015":["94.0"],"es2016":["94.0"],"es2017":["94.0"],"or":["94.0"],"esnext":["94.0"],"module":["94.0","96.8","107.7"],"commonjs":["94.0"],"指定使用模块":["94.0"],"amd":["94.0"],"system":["94.0"],"类型别名":["95.0"],"typescript里":["95.1"],"在有些没有明确指出类型的地方":["95.1"],"类型推论会帮助提供类型":["95.1"],"可以给一个类型定义一个名字":["95.2"],"多用于复合类型":["95.2"],"定义类型别名":["95.2"],"项目配置文档":["96.0"],"搭建后台管理系统模板":["96.1"],"项目初始化":["96.2"],"搭建一个":["96.2"],"初始化项目":["96.4","109.0","112.2"],"本项目使用":["96.4"],"vite":["96.4","96.10"],"eslint":["96.6","96.7","96.8"],"配置":["96.6"],"中文官网":["96.6"],"http":["96.6","104.12","106.16","106.17"],"cn":["96.6"],"最初是由":["96.6"],"nicholas":["96.6"],"zakas":["96.6"],"于":["96.6"],"环境代码校验插件":["96.7"],"让所有与prettier规则存在冲突的eslint":["96.7"],"rules失效":["96.7"],"并使用prettier进行代码检查":["96.7"],"修改":["96.8"],"eslintrc":["96.8"],"cjs":["96.8"],"see":["96.8"],"https":["96.8","96.10","103.4","103.6"],"bootcss":["96.8"],"com":["96.8","96.10","103.6"],"docs":["96.8","137.6","137.7","137.11"],"rules":["96.8"],"exports":["96.8"],"env":["96.8"],"es2021":["96.8"],"node":["96.8","103.0","105.1","105.3","107.12","107.15","110.0"],"jest":["96.8"],"指定如何解析语法":["96.8"],"parser":["96.8"],"优先级低于":["96.8"],"的语法解析配置":["96.8"],"集成":["96.9"],"sass":["96.9"],"我们目前在组件内部已经可以使用":["96.9"],"scss":["96.9"],"样式":["96.9"],"因为在配置":["96.9"],"stylelint":["96.9"],"工具的时候":["96.9"],"项目当中已经安装过":["96.9"],"mock":["96.10"],"数据":["96.10"],"安装依赖":["96.10"],"www":["96.10"],"npmjs":["96.10"],"package":["96.10"],"plugin":["96.10"],"pnpm":["96.10"],"d":["96.10"],"mockjs":["96.10"],"配置文件启用插件":["96.10"],"二次封装":["96.11"],"在开发项目的时候避免不了与后端进行交互":["96.11"],"因此我们需要使用":["96.11"],"插件实现发送网络请求":["96.11"],"在开发项目的时候":["96.11","96.12"],"我们经常会把":["96.11"],"进行二次封装":["96.11"],"目的":["96.11"],"接口统一管理":["96.12"],"接口可能很多需要统一管理":["96.12"],"目录下去创建":["96.12"],"部署刷新":["97.0"],"问题":["97.0"],"build打包项目":["97.1"],"数据库的常用命令":["98.0"],"database":["98.1","98.3"],"创建一个新的数据库":["98.1"],"drop":["98.1"],"insert":["98.2"],"into":["98.2"],"grant":["98.3"],"privileges":["98.3"],"字段的数据类型":["99.0"],"tinyint":["99.1"],"一个非常小的整数":["99.1"],"范围为":["99.1","99.2"],"有符号":["99.1"],"float":["99.2"],"单精度浮点数":["99.2"],"char":["99.3"],"固定长度的字符串":["99.3"],"存储日期":["99.4"],"yyyy":["99.4"],"mm":["99.4"],"存储布尔值":["99.5"],"数据库是用于组织和存储大量结构化数据的集合":["100.0"],"它是一种数据管理系统":["100.0"],"允许用户定义":["100.0"],"mysql是一种开源的关系型数据库管理系统":["100.1"],"由瑞典公司mysql":["100.1"],"ab开发并最终由oracle":["100.1"],"corporation收购":["100.1"],"mysql被广泛用于各种规模的应用程序和网站":["100.1"],"基本使用":["102.0","128.0"],"连接到":["102.1"],"mysql":["102.1","108.2","108.3"],"服务器":["102.1","106.16"],"创建数据库":["102.2"],"创建表":["102.4"],"插入数据":["102.5","108.3"],"使用以下命令向表中插入数据":["102.5"],"查询数据":["102.6","108.3"],"更新数据":["102.7"],"删除数据":["102.8"],"安装插件":["103.2"],"index":["103.4","137.7"],"文件并编写代码":["103.4"],"引入模块":["103.4"],"require":["103.4","104.4","104.7","106.4","106.12","106.16","106.17","107.21","107.22","107.23"],"cheerio":["103.4"],"爬取成功":["103.6"],"这时会多出来一个名叫":["103.6"],"files":["103.6"],"文件":["103.6"],"里面就是爬取出来的内容了":["103.6"],"title":["103.6"],"肖申克的救赎":["103.6"],"the":["103.6"],"shawshank":["103.6"],"redemption":["103.6"],"star":["103.6"],"pic":["103.6"],"img2":["103.6"],"doubanio":["103.6"],"view":["103.6"],"photo":["103.6"],"s":["103.6"],"ratio":["103.6"],"poster":["103.6"],"p480747492":["103.6"],"jpg":["103.6"],"霸王别姬":["103.6"],"img1":["103.6"],"p2561716440":["103.6"],"阿甘正传":["103.6"],"forrest":["103.6"],"gump":["103.6"],"官网传送门":["104.0"],"初体验":["104.1"],"express":["104.2","104.3","104.7","104.8"],"创建服务器":["104.2"],"监听客户端请求":["104.2"],"并返回内容":["104.2"],"static":["104.3"],"方法可创建静态资源服务器":["104.3"],"向外开放访问静态资源":["104.3"],"在指定的静态目录中查找文件":["104.3"],"并对外提供资源的访问路径":["104.3"],"路由":["104.4"],"创建路由模块":["104.4"],"中间件":["104.5","108.11"],"中间件是指流程的中间处理环节":["104.5"],"服务器收到请求后":["104.5"],"定义的中间件为全局中间件":["104.6"],"定义中间件函数":["104.7"],"应用级别的中间件":["104.8"],"post":["104.8","104.14","104.15"],"绑定到":["104.8"],"实例上的中间件":["104.8"],"路由级别的中间件":["104.8"],"叫做路由级别的中间件":["104.8"],"用法和应用级别中间件没有区别":["104.8"],"跨域资源共享":["104.9"],"中间件解决跨域":["104.10"],"cross":["104.11"],"origin":["104.11","104.12"],"resource":["104.11"],"sharing":["104.11"],"常见响应头":["104.12"],"access":["104.12"],"control":["104.12"],"allow":["104.12"],"制定了允许访问资源的外域":["104.12"],"setheader":["104.12"],"请求分类":["104.13"],"请求方式":["104.14"],"请求方式为":["104.15"],"介绍":["105.0"],"nodejs":["105.1"],"an":["105.1"],"的特点":["105.2"],"异步":["105.2","106.7"],"非阻塞":["105.2"],"io":["105.2","137.11"],"模型":["105.2"],"文件系统模块":["106.1"],"模块中所有的操作都有两种形式可供选择":["106.1"],"同步和异步":["106.1"],"同步文件系统会阻塞程序的执行":["106.1"],"也就是除非操作完毕":["106.1"],"fs":["106.3","106.4","106.6","106.9","106.10"],"readfile":["106.3"],"path":["106.3","106.10","106.12","106.13","106.14","136.9"],"callback":["106.3","106.6","106.10"],"文件路径":["106.3"],"简单文件读取的方式会一次性读取文件内容到内存中":["106.4"],"若文件较大":["106.4"],"会占用过多内存影响系统性能":["106.4"],"且读取速度慢":["106.4"],"大文件适合用流式文件读取":["106.4"],"它会分多次将文件读取到内存中":["106.4"],"创建一个可读流":["106.4"],"writefile":["106.6"],"file":["106.6"],"同步":["106.7"],"简单文件的写入都不适合大文件的写入":["106.7"],"性能较差":["106.7"],"容易导致内存溢出":["106.7"],"缓冲区":["106.8"],"缓冲区文档":["106.8"],"的结构与数组类似":["106.8"],"操作方法也与数组类似":["106.8"],"dirname":["106.9"],"在使用":["106.9"],"模块操作文件时":["106.9"],"验证路径是否存在":["106.10"],"exists":["106.10"],"existssync":["106.10"],"获取文件信息":["106.10"],"stat":["106.10"],"删除文件":["106.10"],"路径模块":["106.11"],"join":["106.12"],"basename":["106.13"],"extname":["106.14"],"模块":["106.15","108.2"],"web":["106.16"],"服务器实例":["106.16"],"server":["106.17"],"createserver":["106.17"],"概念":["107.2"],"避免命名空间的冲突":["107.3"],"中模块化":["107.4"],"自定义模块中都有一个":["107.7"],"模块化规范":["107.8"],"模块第一次加载后会被缓存":["107.9"],"内置模块加载优先级最高":["107.10"],"加载自定义模块时":["107.11","107.21"],"路径要以":["107.11"],"若导入第三方模块":["107.12"],"会从":["107.12"],"当前模块的父目录":["107.12"],"开始":["107.12"],"当把目录作为模块标识符进行加载的时候":["107.13"],"有三种加载方式":["107.13","107.23"],"在被加载的目录下查找":["107.13"],"与包":["107.14"],"中的第三方模块又叫做":["107.15"],"在项目中安装包的命令":["107.16"],"的下包速度慢的问题":["107.17"],"注册":["107.18","111.1"],"账号":["107.18"],"初始化包的基本结构":["107.18"],"模块在第一次加载后会被缓存":["107.19"],"内置模块的加载优先级最高":["107.20"],"必须指定以":["107.21"],"如果传递给":["107.22"],"的模块标识符不是一个内置模块":["107.22"],"也没有以":["107.22"],"则":["107.22"],"当把目录作为模块标识符":["107.23"],"传递给":["107.23"],"进行加载的时候":["107.23"],"操作":["108.1"],"数据库":["108.3"],"db":["108.3"],"query":["108.3"],"from":["108.3","128.2","129.1","129.2","131.1","135.1","135.2"],"users":["108.3"],"err":["108.3"],"results":["108.3"],"表示占位符":["108.3"],"sql":["108.3"],"开发模式":["108.4"],"服务器发送给客户端的":["108.5"],"页面":["108.5"],"是在服务器通过字符串的拼接动态生成的":["108.5"],"因此客户端不需要使用":["108.5"],"前后端分离的开发模式":["108.6"],"依赖于":["108.6"],"技术的广泛应用":["108.6"],"企业级网站":["108.7"],"认证机制":["108.9","108.12"],"工作原理":["108.10","108.13"],"中使用":["108.11"],"session":["108.11","108.13"],"认证":["108.11"],"配置中间件":["108.11"],"认证的局限性":["108.13"],"认证机制需要配合":["108.13"],"才能实现":["108.13"],"由于":["108.13","113.7"],"默认不支持跨域访问":["108.13"],"jwt":["108.14"],"jsonwebtoken":["108.14"],"用于生成":["108.14"],"用于将":["108.14"],"字符串解析还原成":["108.14"],"secret":["108.14"],"密钥":["108.14"],"为保证":["108.14"],"的命令对比":["109.0"],"下面是一个包含":["109.0"],"命令对比的":["109.0"],"markdown":["109.0"],"表格":["109.0"],"以下是一些常用的":["110.3"],"init":["110.3","137.2"],"初始化一个新的":["110.3"],"项目":["110.3"],"是每个":["110.4"],"不仅可以帮助你管理项目的依赖项":["110.6"],"准备发布文件":["111.4"],"发布包":["111.5"],"更新和维护":["111.6"],"的安装与使用":["112.0"],"在开始之前":["112.1"],"后":["112.2"],"你可以使用以下常用命令来管理依赖关系和执行其他操作":["112.2"],"进入你的项目目录":["112.2"],"并运行以下命令来初始化项目":["112.2"],"shell":["112.2","137.3"],"canvas":["113.0","113.1","113.2","113.6","113.7","113.8","116.1","121.2","122.3"],"坐标系统":["113.3"],"绘图上下文":["113.4"],"绘图元素":["113.5"],"创造交互式效果":["113.6"],"创造动画":["113.7"],"的局限性":["113.8"],"图像变换":["114.0"],"以下方法用于图像变换":["114.0"],"rotate":["114.1","122.3"],"canvasrenderingcontext2d":["114.1","114.2","114.3","114.4","114.5","117.1","117.2","117.4","119.6"],"scale":["114.2"],"方法用于缩放图像":["114.2"],"它接受两个参数":["114.2"],"分别是":["114.2"],"轴方向的缩放因子和":["114.2"],"translate":["114.3","122.3"],"方法接受一个变换矩阵的六个元素作为参数":["114.4"],"完成缩放":["114.4"],"旋转":["114.4"],"移动和倾斜等变形":["114.4"],"它的使用格式如下":["114.4"],"settransform":["114.5"],"方法取消前面的图形变换":["114.5"],"将画布恢复到该方法指定的状态":["114.5"],"该方法的参数与":["114.5"],"图像合成":["115.0"],"在默认情况之下":["115.0"],"over":["115.1"],"在目标图像上显示源图像":["115.1"],"atop":["115.1"],"在目标图像顶部显示源图像":["115.1"],"源图像位于目标图像之外的部分是不可见的":["115.1"],"strokestyle":["116.2"],"设置或返回描边颜色":["116.2"],"fillstyle":["116.2","118.0"],"设置或返回填充颜色":["116.2"],"stroke":["116.2"],"样式控制":["117.0"],"线性":["117.1"],"以下的方法和属性控制线条的视觉特征":["117.1"],"linewidth":["117.1"],"指定线条的宽度":["117.1"],"默认为":["117.1"],"渐变色":["117.2"],"以下方法用于设置渐变效果和图像填充效果":["117.2"],"createlineargradient":["117.2"],"定义线性渐变样式":["117.2"],"createradialgradient":["117.2"],"定义辐射渐变样式":["117.2"],"createpattern":["117.2","117.3"],"定义图像填充样式":["117.2"],"方法按照给定直线":["117.2"],"生成线性渐变的样式":["117.2"],"context":["117.2","117.3","118.0","119.3","119.4","119.5","120.1","120.2","122.3"],"x0":["117.2"],"图像填充":["117.3"],"方法定义一个图像填充样式":["117.3"],"在指定方向上不断重复该图像":["117.3"],"填充指定的区域":["117.3"],"image":["117.3","119.5"],"阴影":["117.4"],"以下属性用于设置阴影":["117.4"],"shadowblur":["117.4"],"阴影的模糊程度":["117.4"],"save":["118.0","122.3"],"保存当前环境的状态":["118.0"],"restore":["118.0"],"返回之前保存过的路径状态和属性":["118.0"],"绘制图形":["119.0","133.0"],"绘制矩形fillrect":["119.2"],"strokerect":["119.2"],"位置x":["119.2"],"位置y":["119.2"],"宽度":["119.2"],"圆弧":["119.3"],"arc":["119.3","133.4"],"圆心x":["119.3"],"圆心y":["119.3"],"半径":["119.3"],"开始的角度":["119.3"],"结束的角度":["119.3"],"顺时针false":["119.3"],"逆时针true":["119.3"],"默认值false":["119.3"],"beginpath":["119.4"],"moveto":["119.4","120.1","120.2"],"三种绘制图片的的方式":["119.5"],"drawimage":["119.5"],"dx":["119.5"],"dy":["119.5"],"以下方法和属性用于绘制文本":["119.6"],"filltext":["119.6"],"在指定位置绘制实心字符":["119.6"],"stroketext":["119.6"],"在指定位置绘制空心字符":["119.6"],"measuretext":["119.6"],"返回一个":["119.6"],"textmetrics":["119.6"],"font":["119.6"],"指定字型大小和字体":["119.6"],"贝塞尔曲线":["120.0"],"聊天框":["120.1"],"爱心":["120.2"],"cbtn":["121.1","124.4"],"ggk":["121.2"],"谢谢惠顾":["121.2"],"mycanvas":["121.2"],"当前浏览器不支持canvas":["121.2"],"请下载最新的浏览器":["121.2"],"clock":["122.1"],"getcontext":["122.3"],"2d":["122.3"],"render":["122.3"],"clearrect":["122.3"],"存档":["122.3"],"保存当前坐标位置和上下文对象":["122.3"],"参考视频教程":["123.0"],"plum":["123.1"],"draw":["124.1"],"boldbtn":["124.3"],"粗线条":["124.3"],"thinbtn":["124.3"],"细线条":["124.3"],"savebtn":["124.3"],"保存签名":["124.3"],"inputcolor":["124.3"],"color":["124.3"],"clearbtn":["124.3"],"橡皮擦":["124.3"],"btns":["124.4"],"该内容正在努力建设中":["125.0"],"事件交互":["126.0"],"为精灵添加交互事件":["126.1"],"sprite":["126.1","129.2","132.3"],"创建矩形":["126.2"],"rect":["126.2","136.4"],"pixijs":["127.0","127.1","127.7"],"是一个基于":["127.1"],"下面是一个简单的":["127.7"],"展示了如何创建一个基本的场景并添加一个可交互的精灵":["127.7"],"创建一个场景":["127.7"],"类详解":["128.2"],"导入pixi":["128.2","129.1","131.1","132.1","135.1","135.2"],"as":["128.2","129.1","131.1","135.1","135.2"],"pixi":["128.2","129.1","129.2","131.1","131.3","135.1","135.2"],"创建应用":["128.2","129.1","132.1","135.1","135.2"],"文字与遮罩":["129.0"],"创建一个精灵":["129.2"],"滤镜特效":["131.0"],"创建模糊滤镜":["131.2"],"blurfilter":["131.2"],"filters":["131.3"],"精灵与动画":["132.0"],"创建纹理与精灵":["132.2"],"设置属性":["132.3"],"锚点":["132.3"],"ellipse":["133.1"],"polygon":["133.2","136.7"],"roundedrectangle":["133.3"],"谷歌恐龙小游戏素材":["134.1"],"资源管理":["135.0"],"application":["135.1","135.2"],"innerwidth":["135.1","135.2"],"svg":["136.1","136.7","136.9"],"scalable":["136.1"],"circle":["136.5"],"cllipse":["136.6"],"polyline":["136.8"],"从":["137.0"],"创建项目":["137.1","137.3"],"vitepress":["137.2","137.7"],"运行":["137.4"],"基本配置":["137.5"],"在目录下新建":["137.6"],"文件夹":["137.6"],"在其中新建":["137.6"],"配置首页":["137.7"],"支持用户使用":["137.7"],"yaml":["137.7"],"配置页面的内容":["137.7"],"中可以开始我们的配置":["137.9"],"先写上如下内容":["137.9"],"这是网站的标题和描述":["137.9"],"标题会在浏览器标签上展示":["137.9"],"themeconfig":["137.10"],"省略前面的内容":["137.10"],"部署到":["137.11"],"github":["137.11"],"新建脚本文件":["137.11"],"deploy":["137.11"],"sh":["137.11"],"文件夹处于同一级":["137.11"],"usr":["137.11"]},{"0":["12.25","34.2","35.5","35.11","38.3","38.13","50.6","51.2","51.3","58.3","58.6","58.7","96.7","113.3","114.2","117.4","118.0","119.3","132.3","136.9","137.0"],"1":["8.3","8.5","12.25","16.1","26.5","26.6","27.29","34.19","34.24","34.31","34.32","36.3","38.4","39.7","39.12","41.15","45.0","50.6","55.0","58.5","58.6","58.7","61.3","62.6","62.12","69.3","73.8","78.6","85.20","93.1","99.2","121.2","124.3","135.1","135.2"],"2":["7.4","8.2","8.3","8.5","10.9","11.10","12.31","26.1","26.6","27.0","27.1","34.32","38.3","38.4","39.7","51.4","58.5","58.7","58.9","62.12","72.1","81.8","85.7","85.8","85.21","96.5","96.7","97.1","108.2","119.3","121.2","122.3","124.3","136.1"],"3":["8.2","12.32","31.1","34.32","35.1","39.2","58.7","72.2","85.8"],"4":["5.4","8.2","34.32","38.13","58.3","58.5","58.7","72.2","103.6"],"5":["5.4","8.2","35.11","38.13","42.6","72.2","114.2","132.3"],"6":["69.1","96.6","96.7"],"8":["12.23","12.24","12.25","61.2","96.7","122.3"],"9":["73.7"],"10":["39.3","41.14","41.18","69.3","72.1","72.2","133.5"],"12":["122.3"],"13":["71.14"],"16":["106.8"],"18":["42.2","78.3","88.8"],"23":["69.1"],"27":["96.7"],"28":["8.11"],"30":["78.18"],"32":["99.1"],"38":["99.2"],"50":["114.2","114.5","119.2"],"55":["41.2"],"79":["72.1"],"100":["38.3","118.0","119.2"],"120":["120.2"],"150":["119.2","119.3"],"170":["122.3"],"190":["122.3"],"200":["57.5"],"234":["38.3"],"255":["99.1","99.3"],"300":["57.5","119.4","120.2"],"308":["72.1"],"400":["116.1"],"404":["106.17"],"600":["124.3","127.7"],"768":["99.1"],"800":["127.7"],"1000":["124.3"],"1999":["5.4"],"2009":["5.4"],"123456":["84.6"],"2357490894":["0.0"],"阮一峰ecmascript":["5.1"],"是一种由":["5.2"],"ecma":["5.2"],"国际":["5.2"],"european":["5.2"],"computer":["5.2"],"是一个脚本语言":["5.3"],"注意":["5.3","78.4","106.12"],"是":["5.3","12.8","25.1","62.2","67.0","68.0","70.2","71.0","91.1","113.1"],"也是脚本语言":["5.3"],"通常可以看作是":["5.3"],"在":["5.4","10.14","11.8","12.30","25.4","27.29","28.3","28.5","30.5","52.1","57.0","64.0","73.1","75.1","96.9","102.2","110.5"],"的基础上做了大量改进":["5.4"],"包括正则表达式":["5.4"],"异常处理":["5.4"],"更严格的错误定义等":["5.4"],"es4":["5.4"],"未完成":["5.4"],"被放弃":["5.4"],"在制定过程中遇到了较大的争议和复杂性":["5.4"],"最终被放弃":["5.4"],"相关特性后来分别在后续版本中被引入":["5.4"],"es5":["5.4"],"添加了严格模式":["5.4"],"strict":["5.4"],"mode":["5.4","106.6"],"提供更安全的编程环境":["5.4"],"新增了":["5.4"],"json":["5.4","57.5","107.13","107.18","107.23","110.3","112.2","137.2"],"对象":["5.4","35.9","40.17","40.18","43.0","44.0","45.0","46.0","47.0","48.0","49.0","69.2","74.21","74.22"],"使得操作":["5.4"],"引入了模板字符串":["6.0"],"const":["6.1","6.2","6.3","7.2","8.4","8.5","8.9","8.10","25.6","26.6","50.8","52.2","55.3","55.4","55.6","56.0","56.2","56.3","57.4","62.9","65.1","73.9","78.6","78.8","78.11","78.12","78.13","78.14","78.16","78.19","78.20","79.2","84.6","92.7","104.8","106.14","108.11","108.14","129.1"],"name":["6.1","6.3","8.8","8.10","8.11","12.23","12.24","12.25","29.9","34.21","49.1","51.3","67.6","68.6","75.1","75.2","76.2","79.2","81.3","85.1","88.6","88.8","92.3","110.3"],"john":["6.1","8.8","67.6","68.6","79.2"],"age":["6.1","8.8","8.11","42.2","51.3","67.6","68.6","75.2","78.3","78.18","87.13","88.1","88.6","88.8"],"multilinetext":["6.2"],"this":["6.2","29.9","76.1","78.4","81.10"],"is":["6.2","29.9"],"a":["6.2","10.11","21.2","29.9","38.4","42.8","53.1","78.6","78.8","87.12","88.10","90.2","90.4","92.2","92.3","93.1","106.4","107.23","114.4"],"multi":["6.2"],"javascript":["6.3","8.4","8.10","25.3","25.6","25.7","26.5","26.6","37.3","38.11","42.5","50.1","51.1","52.1","53.3","57.3","57.4","59.2","60.4","66.1","66.3","67.6","68.6","71.0","73.1","73.2","73.9","75.1","79.2","81.3","91.2","94.0","96.6","105.1","110.1","113.7"],"values":["6.4","34.23","98.2","108.3"],"console":["6.4","27.28","35.6","35.11","38.12","38.13","39.11","40.4","40.13","42.3","42.6","46.2","47.2","58.3","58.4","74.8","74.17","78.15","81.3","83.3","83.5","87.8","95.2","104.7","104.8","108.3"],"log":["6.4","27.28","35.6","35.11","38.12","38.13","42.3","42.6","46.2","47.2","58.3","58.4","78.15","81.3","87.8","95.2","104.7","104.8","108.3"],"包含模板字符串中的文本部分":["6.4"],"引入了箭头函数":["7.0"],"arrow":["7.0"],"parameter1":["7.1"],"parameter2":["7.1"],"函数体":["7.1","36.3"],"return":["7.1","34.24","53.1","53.4","54.3","54.6","54.7","58.3","78.4","84.4","84.5","89.1","96.10","108.3"],"没有参数":["7.2"],"greet":["7.2"],"比如函数是否作为对象的方法调用":["7.3"],"是否使用":["7.3"],"new":["7.3","26.6","50.8","65.2","69.5","126.2","127.7","128.2","129.1","131.1","131.2","133.1"],"关键字等":["7.3"],"而在箭头函数中":["7.3"],"继承自上层作用域":["7.3"],"指向的是定义箭头函数的外层函数或代码块的":["7.3"],"js":["7.3","8.6","24.1","26.0","26.3","26.6","27.8","27.18","27.19","27.20","29.2","31.1","34.7","34.8","34.9","34.10","34.14","34.17","34.19","34.23","34.26","34.28","34.29","34.30","34.31","35.1","35.4","35.8","35.10","35.11","36.0","36.2","36.7","37.1","37.4","40.4","40.6","40.8","40.9","40.11","40.15","40.19","41.4","41.7","41.15","42.4","50.4","52.2","55.3","55.4","55.5","56.1","56.2","56.3","62.9","63.1","63.2","65.1","65.2","71.14","74.8","74.10","74.12","74.13","74.15","74.19","74.23","78.2","78.7","78.10","78.11","78.12","78.13","78.14","78.15","78.16","78.19","78.20","81.5","81.11","84.2","91.3","104.3","104.8","105.2","105.3","106.13","108.2","108.5","108.11","108.14","110.2","112.1","114.1","114.5","116.1","121.2","131.3","132.2","132.4","137.6"],"传统函数中的this":["7.3"],"如果箭头函数的函数体为空或只有一个表达式":["7.4"],"可以省略花括号和":["7.4"],"destructuring":["8.0"],"assignment":["8.0"],"将数组的元素提取出来并赋值给变量":["8.1"],"numbers":["8.3","8.4","8.5","34.30","34.31","34.32"],"undefined":["8.4","36.7","38.10","39.3","41.15","81.8","93.1"],"let":["8.6","27.4","34.8","34.9","34.10","34.14","34.17","34.19","34.23","34.26","34.29","34.30","34.31","35.11","40.3","40.4","40.9","40.13","40.15","40.19","41.2","41.3","41.4","54.3","54.6","55.2","58.6","74.7","74.8","74.13","74.17","74.19","74.23","75.2","87.1","87.5","87.12","93.1","95.1","95.2","122.3","124.3"],"x":["8.6","69.5","87.5","89.1","89.2","89.3","114.3","120.2"],"将对象的属性值提取出来并赋值给变量":["8.7"],"person":["8.9","8.10","75.2","76.2","79.2","88.8","88.10"],"fullname":["8.9"],"bob":["8.11"],"address":["8.11"],"用于清除内外边距":["10.1"],"优点":["10.2"],"css":["10.3","10.5","10.7","10.8","12.18","12.19","12.20","15.3","15.7","19.4","60.4"],"通过元素":["10.4"],"beaauty":["10.5"],"语法":["10.5","24.6","35.10","87.14","96.9"],"中间没有空格":["10.5"],"又称":["10.6"],"分组选择器":["10.6"],"p":["10.9","62.10"],"p0":["10.9"],"dom":["10.10","10.14","24.13","28.8","28.9","61.4"],"link":["10.11","25.5"],"链接一开始的样式":["10.11"],"nth":["10.12"],"n":["10.12","87.9"],"第":["10.12"],"个子元素":["10.12"],"of":["10.12"],"type":["10.12","18.2","18.3","20.11","50.8","50.9","57.5"],"指定元素":["10.12"],"属性的":["10.13"],"元素":["10.13","117.3"],"创建了一个行内元素":["10.14"],"树中无法找到":["10.14"],"故为伪元素":["10.14"],"必须有":["10.14"],"content":["10.14","11.9","11.10","12.24","12.25","29.9","57.5","65.2"],"属性":["10.14","27.2","38.10"],"选择器":["10.14"],"含义":["10.14"],"在元素内部前面插入内容":["10.14"],"只需在要成为":["11.1"],"可以使用":["11.2","11.4","79.1","107.7"],"direction":["11.2","11.5","119.6"],"属性更改主轴方向":["11.2"],"定义":["11.3"],"flex":["11.3","15.3"],"项目在主轴上的对齐方式":["11.3"],"start":["11.3","119.6"],"默认值":["11.3","117.1"],"如果项目超出了容器的宽度":["11.4"],"它们会缩小以适应":["11.4"],"grow":["11.6"],"属性可以控制项目在剩余空间中的放大比例":["11.6"],"basis":["11.7"],"属性定义了项目的基准尺寸":["11.7"],"项目内部可以再创建一个新的":["11.8"],"属性控制交叉轴上多行的对齐方式":["11.9"],"定义多行":["11.9"],"和":["11.10","12.6","12.10","12.11","12.13","12.14","12.15","12.16","20.9","26.3","29.17","41.6","52.2","57.1","81.10","93.1","104.2","117.2","127.1"],"align":["11.10","12.13","12.14","12.15"],"items":["11.10"],"属性实现水平和垂直居中对齐":["11.10"],"两端对齐":["11.10"],"使用":["11.10","55.1","79.4","88.4","88.5","102.1","102.8"],"现代网页布局的终极解决方案":["12.0"],"布局":["12.1","12.2","12.27","12.28","15.8","19.4"],"布局是一种二维布局模型":["12.1"],"可以将网页划分为网格":["12.1"],"要使用":["12.2"],"grid":["12.2","12.4","12.5","12.9","12.21","12.26","12.27","12.28","12.30","12.33"],"通过定义网格的行和列":["12.3"],"我们可以创造出复杂的网页布局":["12.3"],"在网格容器中":["12.3"],"通过":["12.3","29.12","41.6"],"布局中":["12.4"],"网格线":["12.4"],"lines":["12.4"],"rows":["12.6","12.11"],"允许通过指定网格区域的名称来创建更具语义的布局":["12.7"],"通过在网格容器中使用网格区域名称":["12.7"],"而不是使用行和列属性":["12.7"],"columns":["12.8","12.11"],"gap":["12.9"],"row":["12.10","12.16"],"auto":["12.12"],"flow":["12.12"],"self":["12.15"],"创建网格布局":["12.17"],"track":["12.18"],"是相邻网格线之间的空间":["12.18"],"包括行轨道和列轨道":["12.18"],"我们可以通过设置网格轨道的大小和增长方式来控制网格布局":["12.18"],"template":["12.19","12.33","27.7","27.10","27.14","27.30","28.5","29.8","29.11","122.4","123.2","128.1","130.1","134.2"],"我们可以更加直观地定义网格布局":["12.19"],"使得布局结构更加清晰":["12.19"],"queries":["12.20"],"我们可以在不同的屏幕尺寸和设备上应用不同的网格布局":["12.20"],"container":["12.20","15.1","15.2","15.7"],"display":["12.20","15.3"],"doctype":["12.22","19.1","24.4","37.3"],"lang":["12.22","12.23","12.24","96.9"],"en":["12.22","12.23","12.24","61.2"],"head":["12.22","12.23","12.24","19.1","61.2","104.15"],"meta":["12.22","12.23","12.24","19.1","61.2"],"charset":["12.22","12.23","12.24","12.25","19.1","61.2"],"utf":["12.22","12.23","12.24","12.25","61.2"],"viewport":["12.23","12.24","12.25"],"width":["12.25","15.5","16.3","18.7","48.2","124.3","127.7","128.2","129.1","131.1"],"device":["12.25"],"initial":["12.25"],"scale":["12.25"],"title":["12.25","137.7","137.9"],"布局与":["12.26"],"适用场景":["12.27"],"布局的差异与共同点":["12.28"],"常见问题与最佳实践":["12.29"],"网格项目的排序与定位":["12.30"],"跨浏览器兼容性":["12.31"],"性能考虑":["12.32"],"使用网格模板":["12.33"],"和网格区域":["12.33"],"选择器的优先级为":["13.0"],"important":["13.0"],"b":["13.1","38.3","38.4","41.18","114.4"],"c":["13.1","97.0","106.4","114.4"],"格式":["13.1"],"id":["13.1","26.6","43.1","65.0"],"选择器的个数":["13.1"],"html":["15.1","18.0","20.0","20.1","20.2","20.3","20.4","20.5","20.6","20.7","20.8","20.9","20.10","20.12","20.14","20.15","24.4","24.10","24.12","37.2","37.3","61.1","62.10","136.6"],"div":["15.1","16.0","21.1","24.17","27.7","27.30","28.5","29.8","29.11","32.4","123.2"],"class":["15.1","15.2","16.0","88.2","88.7","88.10"],"400px":["15.5","15.6","16.3"],"height":["15.5","15.6","17.0","87.13","116.1","124.3","127.7","128.2","129.1","131.1","135.1"],"200px":["15.6"],"background":["15.6","17.0"],"skyblue":["15.6"],"position":["15.6"],"100px":["16.1"],"设置元素的宽度":["16.1"],"限定宽度":["16.3"],"border":["16.3"],"solid":["16.3"],"横向":["17.0"],"color":["17.0"],"ededed":["17.0"],"滚动条上的按钮":["17.0"],"而且可以指定多个":["18.0"],"可以用来解决某些兼容问题":["18.0"],"h2":["18.0"],"音频示例":["18.0"],"audio":["18.0","20.15"],"类型":["18.1","87.14"],"mime":["18.2","18.3"],"标签":["18.5","18.6"],"src":["18.7","26.3"],"要播放的视频的":["18.7"],"url":["18.7","46.1","49.1","84.5","104.3","106.17"],"作用":["18.8"],"controls":["18.10"],"source":["18.10","105.1"],"播放":["18.11"],"暂停":["18.11"],"makebig":["18.11"],"放大":["18.11"],"makesmall":["18.11"],"文档通常包含以下结构":["19.1"],"内容":["19.2"],"有些标签是空标签":["19.2"],"没有结束标签":["19.2"],"br":["19.2","39.3","124.3"],"用于插入换行":["19.2"],"引入了许多新特性":["19.3"],"如语义化标签":["19.3"],"添加样式和图像":["19.4"],"然后逐渐增加复杂性":["19.4"],"学习如何使用":["19.4"],"h6":["20.1"],"li":["20.5","20.6","60.4"],"td":["20.9"],"action":["20.13"],"submit":["20.13"],"method":["20.13","104.15"],"h1":["20.14","28.5","28.12","32.1","32.2"],"网站标题":["20.14"],"并且在前后都会产生换行":["21.1"],"常见的块级标签包括":["21.1"],"最通用的容器标签":["21.1"],"用于将一组元素包裹在一起":["21.1"],"而是按照文本的自然流动排列":["21.2"],"常见的内联标签包括":["21.2"],"锚链接标签":["21.2"],"形成树状的结构":["21.3"],"例如":["21.3","21.4","27.29","29.13"],"可以将一段文本包裹在":["21.3"],"属性以键值对的形式出现":["21.4"],"放在标签的开始标签中":["21.4"],"规范中没有定义":["21.5"],"但可以在特定的应用中使用":["21.5"],"自定义标签应以":["21.5"],"data":["21.5","26.1","32.4"],"为前缀":["21.5"],"placeholder":["22.1","53.5"],"请输入登录密码":["22.1"],"v":["22.1","24.7","24.14","27.29","29.13","29.14","82.2","85.18","90.4"],"model":["22.1","24.14"],"脚本文件或使用":["24.3"],"mustache":["24.6"],"用于在模板中实现特定的行为":["24.7"],"bind":["24.7"],"将元素属性与":["24.7"],"else":["24.9","34.24","58.4"],"根据条件渲染元素":["24.9"],"根据条件显示或隐藏元素":["24.10"],"ul":["24.12"],"指令监听":["24.13"],"事件":["24.13","106.16"],"my":["24.16","27.29"],"component":["24.16"],"的组件":["24.16"],"在实例创建完成后调用":["24.18"],"可以在这里进行数据初始化":["24.18"],"调用异步请求等操作":["24.18"],"但模板还未被编译":["24.18"],"渲染":["24.18"],"beforemount":["24.18","27.27","27.28"],"挂载前":["24.18"],"在模板编译":["24.18"],"渲染之前调用":["24.18"],"学习指南":["25.0"],"vue":["25.1","25.4","26.0","26.3","27.4","27.5","27.7","27.10","27.14","28.2","28.3","32.3","96.9","96.10","122.4","137.2"],"router":["25.1","25.5"],"npm":["25.2","30.7","103.2","104.10","108.2","110.4","111.1","111.5"],"或":["25.2","39.3","41.3","99.5","106.9","107.11","107.21"],"yarn":["25.2","91.7","137.4","137.11"],"应用关联":["25.3"],"定义路由表":["25.3"],"包含不同路径与对应组件的映射":["25.3"],"import":["25.3","27.17","27.18","27.19","27.20","84.2","96.7","96.12","132.1"],"组件创建导航链接":["25.5"],"使用路由参数传递数据给组件":["25.6"],"在组件中定义嵌套的子路由":["25.7"],"路由守卫":["25.8"],"使用路由守卫来处理导航前后的逻辑":["25.8"],"动态路由":["25.9"],"使用动态路由来根据不同条件加载组件":["25.9"],"路由懒加载":["25.10"],"使用路由懒加载来优化页面加载性能":["25.10"],"更多配置":["25.12"],"但是不限于某个组件":["26.1"],"而是存储在":["26.1"],"的全局状态树中":["26.1"],"使得不同组件可以共享和访问这些数据":["26.1"],"getters":["26.1"],"的":["26.2","27.31","38.10"],"store":["26.2","26.3"],"中":["26.2","27.0","27.29","52.1","57.0","73.1","75.1","104.3"],"在应用的根目录":["26.3"],"通常是":["26.3"],"目录":["26.3"],"下创建一个名为":["26.3"],"的文件":["26.3","107.13","107.23"],"用于创建":["26.3"],"在该文件中":["26.3"],"需要引入":["26.3"],"并创建一个新的":["26.3"],"实例":["26.3","57.3","84.2"],"可以设置":["26.3"],"用于同步地修改状态":["26.4"],"它们是唯一允许直接修改状态的地方":["26.4"],"而且是一个纯函数":["26.4"],"不应该有副作用":["26.4"],"通常":["26.4"],"在组件中通过":["26.4"],"commit":["26.4","85.14"],"调用":["26.4","26.5","81.7"],"中的方法来修改状态":["26.4"],"中的方法":["26.5"],"继续上面的计数器应用":["26.5"],"假设我们需要在点击增加按钮后":["26.5"],"延迟":["26.5"],"秒再修改状态":["26.5"],"以下是使用":["26.5"],"的例子":["26.5"],"的示例":["26.6"],"todos":["26.6"],"text":["26.6","121.1","124.4"],"buy":["26.6"],"groceries":["26.6"],"done":["26.6"],"false":["26.6","34.20","38.11","39.9","41.6","41.15","41.16","99.5","108.11","119.3"],"我们只需在":["27.0"],"中一个新的配置项":["27.1"],"值为一个函数":["27.1"],"只在setup函数内部访问":["27.2"],"函数需要加":["27.2"],"其用途创建独立的原始值":["27.2"],"函数接收一个普通对象":["27.2"],"返回一个响应式的数据对象":["27.2"],"from":["27.4","27.6","27.17","96.10","96.12","132.1"],"ref":["27.5","27.6","27.7","27.12","27.17","27.18","27.19","27.20","31.3"],"但不会使其值也变成响应式的":["27.5"],"修改其属性是非响应式的这样是不会改变的":["27.5"],"shallowref":["27.6"],"set":["27.7","35.10","55.1","88.10","132.3","137.11"],"适合去做防抖之类的":["27.7"],"这样是不允许":["27.8"],"会给我们报错":["27.8"],"接受一个对象":["27.9"],"不会改变视图":["27.10"],"property":["27.12"],"都是一个":["27.12"],"value":["27.13","29.17","38.2","67.1","68.1","78.5","87.14","90.6"],"主要是方便我们解构使用":["27.13"],"vue2":["27.15","27.16"],"中的":["27.15","27.16"],"作用是一样的":["27.16"],"watch":["27.17","27.18","27.20"],"效果一样":["27.19"],"同时":["27.21"],"的第一个参数":["27.22"],"effect函数":["27.22"],"当":["27.23"],"watcheffect":["27.23"],"可以作为一个调试器来使用":["27.24"],"flush":["27.24"],"到":["27.25","99.2"],"销毁的":["27.25"],"指令绑定到元素后调用":["27.27"],"directive":["27.28","27.29"],"created":["27.28"],"初始化":["27.28"],"args":["27.28","53.4","53.5","53.6","54.3","54.7"],"array":["27.28","34.0","70.1"],"传递给指令的值":["27.29"],"不利于阅读":["27.31"],"容易使代码变得难以维护":["27.31"],"vue3":["27.31","28.1","96.2","96.8"],"hook函数":["27.31"],"相当于":["27.31"],"mixin":["27.31"],"不同在与":["27.31"],"hooks":["27.31"],"是函数":["27.31"],"还是":["28.1","39.5","39.6"],"组件通信方式很重要":["28.1"],"不管是项目还是面试都是经常用到的知识点":["28.1"],"比如":["28.1","87.5","96.12"],"defineprops":["28.2"],"获取父组件传递的数据":["28.2"],"且在组件内部不需要引入":["28.2"],"方法可以直接使用":["28.2"],"父组件给子组件传递数据":["28.2"],"框架中事件分为两种":["28.3"],"pre":["28.4","58.4"],"click":["28.4","62.11","124.4"],"handler":["28.4"],"我是祖国的老花骨朵":["28.4"],"当前代码级给":["28.4"],"xxx":["28.5"],"handler3":["28.5"],"子组件内部触发这个自定义事件":["28.5"],"中可以根据":["28.6"],"vm":["28.6"],"与":["28.6"],"vc":["28.6","28.9"],"关系推出全局事件总线":["28.6"],"而":["28.7"],"实指利用":["28.7"],"props":["28.7"],"modelvalue":["28.7"],"与自定义事件":["28.7"],"update":["28.7","102.7"],"方法获取组件的属性与事件":["28.8"],"包含":["28.8","104.5","106.6"],"原生":["28.8"],"事件或者自定义事件":["28.8"],"次函数功能类似于":["28.8"],"可能会想到它可以获取元素的":["28.9"],"或者获取子组件实例的":["28.9"],"既然可以在父组件内部通过":["28.9"],"获取子组件实例":["28.9"],"inject":["28.10"],"提供":["28.10"],"官网":["28.11"],"https":["28.11","49.2","129.2"],"即为子组件":["28.12"],"在父组件内部使用的时候":["28.12"],"在双标签内部书写结构传递给子组件":["28.12"],"注意开发项目的时候默认插槽一般只有一个":["28.12"],"我是默认插槽填充的结构":["28.12"],"顾名思义":["28.12"],"此插槽带有名字在组件内部留多个指定名字的插槽":["28.12"],"下面是一个子组件内部":["28.12"],"模板中留两个插槽":["28.12"],"后面":["29.2"],"切记不能放到":["29.2"],"mount":["29.2"],"并且只能在该父组件中使用":["29.5"],"它的优点是使组件之间的依赖关系更加明确":["29.5"],"接受传过来的值":["29.6"],"传递非字符串类型需要加":["29.6"],"简写":["29.6"],"冒号":["29.6"],"父组件":["29.6"],"msg":["29.9"],"message":["29.9","40.13","74.17","84.4","108.3"],"在子组件":["29.10"],"动态绑定":["29.10"],"参数":["29.10"],"并且减少主包的体积":["29.12"],"if":["29.13","34.24","53.4","53.5","57.5","58.4","75.3","83.5","84.3","84.4","108.3"],"else等":["29.13"],"来检查数据是否已加载并显示一些其它内容":["29.13"],"但是":["29.13"],"show等属性影响":["29.14"],"但data":["29.14"],"prop数据依旧能够共用的技术":["29.14"],"类似于":["29.14"],"作用和vue2一致":["29.15"],"只是生命周期名称有所更改":["29.15"],"初次进入时":["29.15"],"onmounted":["29.15"],"onactivated":["29.15"],"退出后触发":["29.15"],"deactivated":["29.15"],"再次进入":["29.15"],"我们都可以使用":["29.16"],"来接收":["29.16"],"提供的数据或方法":["29.16"],"emit":["29.17"],"组合而成的语法糖":["29.17"],"vue3中":["29.17"],"有以下改动":["29.17"],"变更":["29.17"],"cli创建":["30.1"],"install":["30.2","91.7","108.2","109.0","110.3","131.3"],"cli":["30.3"],"features":["30.4"],"check":["30.4"],"the":["30.4","85.15"],"needed":["30.4"],"for":["30.4","35.11","82.2","122.3"],"your":["30.4","85.1"],"选择上":["30.4"],"typescript":["30.4","89.4","96.8"],"特别注意点空格是选择":["30.4"],"点回车是下一步":["30.4"],"冷服务":["30.5"],"默认的构建目标浏览器是能":["30.5"],"init":["30.6","109.0","112.2"],"vite":["30.6"],"latest":["30.6","96.8"],"打包大小减少41":["31.2"],"api":["31.3","32.3","83.3","108.6"],"setup":["31.3"],"新特性":["32.0"],"home":["32.1","32.2","137.7"],"child":["32.1","32.2","32.4"],"的选项":["32.3"],"list":["32.4"],"创建数组":["34.1"],"利用数组字面量创建数组":["34.1"],"数组的字面量是方括号":["34.1"],"用来访问数组元素的序号":["34.2"],"数组下标从":["34.2"],"开始":["34.2"],"数组可以通过索引来访问":["34.2"],"设置":["34.2"],"修改对应的数组元素":["34.2"],"我们可以通过数组名":["34.2"],"的形式来获取数组中的元素":["34.2"],"数组基本操作可以归纳为":["34.5"],"第四种则不会对原数组产生影响":["34.6"],"并将它们添加到数组末尾":["34.7"],"返回数组的最新长度":["34.7"],"然后返回新的数组长度":["34.8"],"插入的元素":["34.9"],"返回空数组":["34.9"],"colors":["34.10","34.14","34.15"],"red":["34.10","34.15","64.1","87.6","118.0"],"最后一项不影响原数组":["34.11"],"length":["34.12","34.13","55.2"],"值":["34.12","34.13","50.6","87.14"],"返回被删除的项":["34.12","34.13"],"返回包含删除元素的数组":["34.14"],"green":["34.15"],"blue":["34.15"],"yellow":["34.15"],"purple":["34.15"],"常用":["34.16"],"返回删除元素的数组":["34.17"],"对原数组产生影响":["34.17"],"返回元素坐标或者元素值":["34.18"],"true":["34.20","34.28","38.3","38.11","39.7","39.10","41.15","41.16","60.1","87.3","94.0","126.1","137.7"],"否则":["34.20"],"people":["34.21","87.13"],"matt":["34.21"],"数组有两个方法可以用来对元素重新排序":["34.22"],"常见的转换方法有":["34.25"],"返回包含所有项的字符串":["34.26"],"常用来迭代数组的方法":["34.27"],"则这个方法返回":["34.28","34.29"],"条件分支语句":["35.1"],"循环语句":["35.1"],"i":["35.1","35.5","35.11","38.12","73.10","96.6","122.3"],"条件表达式2":["35.2"],"tip":["35.2","36.8","52.2","62.12"],"执行流程":["35.2"],"表达式":["35.3"],"case":["35.3"],"表达式1":["35.3"],"代码":["35.3","37.3"],"break":["35.3"],"中一共有三种循环语句":["35.4"],"var":["35.5","38.8","41.3","41.14","42.4","43.2","51.1","51.2","51.3","59.1","59.2","59.3","59.4","67.6","68.6","78.2","81.3","81.11","106.7","121.2","124.3"],"变量":["35.9","35.10"],"需要执行的代码":["35.9"],"示例":["35.9","37.1","76.1","76.2","79.2"],"集合":["35.10"],"等":["35.10"],"会终止离他最近的循环":["35.11"],"里面":["36.0"],"必须小写":["36.2"],"function":["36.3","36.7","36.12","42.1","42.8","51.1","53.1","59.2","59.4","75.1","75.2","75.3","76.1","81.3","83.3","87.8","89.2","90.2","90.3","90.7","103.4","104.8"],"是把一个或者多个功能通过函数的方式封装起来":["36.4"],"同样也需要传递相应的参数":["36.6"],"实参":["36.6"],"参数的作用":["36.6"],"在函数内部某些值不能固定":["36.6"],"我们可以通过参数在调用函数时传递不同的值进去":["36.6"],"多的参数定义为":["36.7"],"函数形参实参个数匹配":["36.7"],"getsum":["36.7"],"num1":["36.7","41.2"],"num2":["36.7"],"此时调用函数就可以得到函数体内return":["36.8"],"后面的值":["36.8"],"注意事项":["36.8"],"在使用":["36.8","58.9"],"语句时":["36.8"],"函数会停止执行":["36.8"],"语句之后的代码不被执行":["36.8"],"并返回指定的值":["36.8"],"只能返回一个值":["36.8"],"如果用逗号隔开多个值":["36.8"],"的区别":["36.9"],"结束当前的循环体":["36.9"],"声明":["36.11"],"通常用于在":["37.0"],"web":["37.0","60.4","67.0","68.0","104.2"],"浏览器中编写交互式前端代码":["37.0"],"它需要被嵌入":["37.2"],"代码写在独立的以":["37.4"],"注释单行代码":["37.6"],"注释多行代码":["37.7"],"什么是对象":["38.2"],"简单说":["38.2"],"对象就是一组":["38.2"],"键值对":["38.2"],"key":["38.2","67.1","67.2","68.1","68.2","78.5","86.4"],"的集合":["38.2"],"1e2":["38.3"],"1e":["38.3"],"0xff":["38.3"],"object":["38.3","38.9","70.1","79.1","79.2","79.4"],"01":["38.3"],"引擎读到上面这行代码":["38.5"],"会发现可能有两种含义":["38.5"],"第一种可能是":["38.5"],"这是一个表达式":["38.5"],"表示一个包含":["38.5"],"属性的对象":["38.5"],"第二种可能是":["38.5"],"这是一个语句":["38.5"],"上面代码分别采用点运算符和方括号运算符":["38.7"],"读取属性":["38.7"],"请注意":["38.7"],"如果使用方括号运算符":["38.7"],"键名必须放在引号里面":["38.7"],"否则会被当作变量处理":["38.7"],"foo":["38.7","38.8"],"bar":["38.7"],"obj":["38.8","52.2","78.5","78.9","78.10","78.17","78.20","93.1"],"keys":["38.9"],"上面代码中":["38.10"],"命令删除对象":["38.10"],"删除后":["38.10"],"再读取":["38.10"],"属性就会返回":["38.10"],"如果包含就返回":["38.11"],"否则返回":["38.11","39.9","39.10"],"它的左边是一个字符串":["38.11"],"表示属性名":["38.11"],"右边是一个对象":["38.11"],"键名":["38.12"],"键值":["38.12"],"等同于":["38.13"],"例二":["38.13"],"document":["38.13","43.2","62.7","65.1","66.2","66.4","121.2","124.3","127.7","135.1","135.2"],"links":["38.13"],"href":["38.13"],"也被称为":["39.1"],"操作符":["39.1"],"减":["39.2"],"乘":["39.2"],"空赋值":["39.3"],"只有当变量的值为":["39.3"],"null":["39.3","41.15"],"都会使原变量立刻增加":["39.5"],"不同的是":["39.5"],"和后自减":["39.6"],"无论是":["39.6"],"小于号":["39.7"],"时":["39.9","39.10","62.2","69.4","81.1"],"则返回":["39.9","39.10","40.12","74.16"],"precedence":["39.13"],"是不一样的":["39.13"],"优先级高的运算符先执行":["39.13"],"优先级低的运算符后执行":["39.13"],"我们也可将字符串常用的操作方法归纳为增":["40.1"],"而是创建字符串的一个副本":["40.2","40.5","74.6","74.9"],"stringvalue":["40.3","40.4","40.9","74.7","74.8","74.13"],"hello":["40.3","40.4","73.9","74.7","74.8"],"这三个方法都返回调用它们的字符串的一个子字符串":["40.4","74.8"],"而且都接收一或两个参数":["40.4","74.8"],"world":["40.4","73.9","74.8"],"再进行操作":["40.5","74.9"],"后或前后所有空格符":["40.6","74.10"],"再返回新的字符串":["40.6","74.10"],"表示要将字符串复制多少次":["40.7","74.11"],"然后返回拼接所有副本后的结果":["40.7","74.11"],"则在相应一边填充字符":["40.8","74.12"],"直至满足长度条件":["40.8","74.12"],"还可通过":["40.10","74.14"],"由传给方法的整数参数指定":["40.11","74.15"],"如果没找到":["40.12","74.16"],"foobarbaz":["40.13","74.17"],"针对正则表达式":["40.16","74.20"],"regexp":["40.17","40.18","73.4","74.21","74.22"],"返回数组":["40.17","74.21"],"找到则返回匹配索引":["40.18","74.22"],"可用函数":["40.19","74.23"],"基本类型主要为以下":["41.1"],"intnum":["41.2"],"10进制的55":["41.2"],"070":["41.2"],"8进制的56":["41.2"],"当使用":["41.3"],"声明了变量但没有初始化时":["41.3"],"标示":["41.4"],"逻辑上讲":["41.5"],"值表示一个空对象指针":["41.5"],"这也是给":["41.5"],"typeof":["41.5"],"不可变的":["41.7"],"符号的用途是确保对象属性使用唯一标识符":["41.7"],"不会发生属性冲突的危险":["41.7"],"复杂类型统称为":["41.8"],"常用方式为对象字面量表示法":["41.9"],"但跟其他语言不同的是":["41.10"],"数组中每个槽位可以存储任意类型的数据":["41.10"],"也有属性和方法":["41.11"],"跟其他引用类型一样":["41.11"],"函数存在三种常见的表达方式":["41.11"],"函数声明":["41.11"],"还包括":["41.12"],"类型转换指将一种数据类型转换为其他类型":["41.13"],"tostring":["41.14"],"num":["41.14","87.12","90.2"],"布尔值":["41.15"],"转换为":["41.15","41.16"],"nan":["41.16","87.2"],"其余是":["41.16"],"字符串":["41.16"],"空串":["41.16"],"基本数据类型和引用数据类型存储在内存中的位置不同":["41.17"],"obj2":["41.19","81.3"],"简单类型的值存放在栈中":["41.20"],"在栈中存放的是对应的值":["41.20"],"合法":["42.1"],"声明作用域":["42.1"],"一个函数内部定义一个变量":["42.1"],"在函数退出时被销毁":["42.1"],"test":["42.1"],"局部变量":["42.1"],"会被提升":["42.3"],"声明的变量则会":["42.4"],"引擎会自动将多余的声明在作用域顶部合并为一个声明":["42.5"],"循环逻辑":["42.6"],"之后则不会":["42.6"],"因为遇到":["42.6"],"就会形成作用域块":["42.6"],"但是他是常量":["42.7"],"声明之后不能修改":["42.7"],"尝试修改":["42.7"],"声明的变量会导致运行时错误":["42.7"],"tom":["42.8"],"getelementbyid":["43.1","121.2","124.3"],"获取具有指定":["43.1"],"的元素":["43.2"],"element":["43.2","63.2","64.1","65.1","65.2"],"back":["44.1"],"导航到上一个页面":["44.1","44.2"],"history":["44.2"],"以下是一些常见的":["45.0"],"window":["45.0","49.2","54.1","54.4","128.2","129.1","131.1"],"它是":["45.0"],"的顶级对象":["45.0"],"表示浏览器窗口或标签页":["45.0"],"protocol":["46.1"],"location":["46.2","97.0"],"useragent":["47.1"],"包含用户代理字符串":["47.1"],"navigator":["47.2"],"屏幕的宽度":["48.1"],"屏幕宽度":["48.2"],"screen":["48.2"],"像素":["48.2"],"获取屏幕的高度":["48.2"],"specs":["49.1"],"open":["49.2","50.4","50.6","57.5","105.1"],"and":["50.1"],"xml":["50.1","61.1"],"异步交互需要服务器逻辑进行配合":["50.2"],"需要完成以下步骤":["50.2"],"创建":["50.2","50.3","85.14","104.2","110.6"],"xmlhttprequest":["50.3"],"对象的":["50.4","50.5"],"方法与服务器建立连接":["50.4"],"xhr":["50.4","50.8"],"send":["50.5"],"方法":["50.5","52.2","57.4","58.0","71.10","81.12"],"将客户端页面的数据发送给服务端":["50.5"],"属性有五个状态":["50.6"],"如下显示":["50.6"],"状态":["50.6"],"描述":["50.6"],"unsent":["50.6"],"未打开":["50.6"],"方法还未被调用":["50.6"],"opened":["50.6"],"创建xmlhttprequest对象":["50.8"],"初始化参数的内容":["50.8"],"post":["50.9","104.2"],"datatype":["50.9"],"closure":["51.0"],"它可以访问其外部函数中的变量和参数":["51.1"],"outerfunction":["51.1","59.2","59.4"],"counter":["51.2"],"count":["51.2"],"increaseage":["51.3"],"这种方式可以避免全局命名冲突":["51.4"],"并提供了一种模块化的封装方式":["51.4"],"创建工厂函数":["51.4"],"可以创建工厂函数":["51.4"],"用于生成对象实例":["51.4"],"因此":["51.5"],"在使用闭包时要注意内存管理":["51.5"],"避免过度使用闭包导致内存泄漏":["51.5"],"对其中一个对象的修改会影响到另一个对象":["52.1"],"stringify":["52.2"],"deepcopy":["52.2"],"函数柯里化有助于创建可复用和可组合的函数":["53.1"],"提供更灵活和精确的函数调用方式":["53.1"],"以下是一个简单的示例来说明":["53.1"],"函数柯里化的概念和用法":["53.1"],"add":["53.1","89.2","89.3","90.3","90.6","109.0","137.2"],"可以将函数的执行延迟到后续的调用中":["53.2"],"这在需要等待特定条件满足或事件发生时非常有用":["53.2"],"函数组合":["53.2"],"可以轻松地将多个函数组合成一个新的函数":["53.2"],"curried":["53.4","53.5","53.6"],"includes":["53.5"],"curry":["53.6"],"func":["53.6","54.6"],"节流":["54.0"],"throttling":["54.0"],"和防抖":["54.0"],"debouncing":["54.0"],"则立即执行函数并设置定时器":["54.2"],"如果定时器存在":["54.2"],"则忽略该次函数调用":["54.2"],"当定时器触发后":["54.2"],"清除定时器":["54.2"],"以便在下次函数调用时重新开始计时":["54.2"],"以下是一个简单的节流函数的实现示例":["54.2"],"oldtime":["54.3"],"date":["54.3","69.5"],"now":["54.3"],"newtime":["54.3"],"防抖的实现思路是设置一个定时器":["54.5"],"在函数被调用时先清除之前的定时器":["54.5"],"并设置一个新的定时器":["54.5"],"如果在指定的时间内没有新的函数调用发生":["54.5"],"wait":["54.6"],"immediate":["54.6"],"timeout":["54.6"],"timerid":["54.7"],"cleartimeout":["54.7"],"settimeout":["54.7"],"arr":["55.0","55.2","55.3","55.4","55.6","56.0","56.4","58.5","58.6","58.7","90.6"],"unique":["55.2","55.3","55.4","55.6"],"len":["55.2"],"filter":["55.5"],"flat":["56.1"],"res2":["56.2"],"flatten":["56.3"],"res5":["56.4"],"fn":["56.4"],"对象代表一个异步操作的最终完成或失败":["57.0"],"并返回一个值":["57.0"],"构造函数来创建":["57.1"],"它接收一个带有两个参数的回调函数":["57.1"],"回调函数包含两个参数":["57.1"],"resolve":["57.1"],"reject":["57.1"],"实例的":["57.2"],"then":["57.2","57.4","83.3"],"方法可以处理异步操作成功的结果":["57.2"],"方法中返回新的":["57.3"],"可以将多个异步操作连接起来":["57.3"],"实例都成功完成时才会成功":["57.4"],"并将所有":["57.4"],"实例的结果作为一个数组传递给":["57.4"],"promises":["57.4"],"promise1":["57.4"],"setrequestheader":["57.5"],"application":["57.5","127.7","128.2","129.1","131.1"],"onload":["57.5"],"status":["57.5"],"responsetext":["57.5"],"reduce":["58.1","58.4"],"callbackfn":["58.1"],"initialvalue":["58.1"],"sum":["58.3"],"prev":["58.3"],"cur":["58.3","58.4"],"newarr":["58.4"],"in":["58.4","85.15","115.1"],"result":["58.8","83.3"],"subject":["58.8"],"math":["58.8","119.3"],"score":["58.8"],"并将结果返回为单个值的情况":["58.9"],"方法时":["58.9"],"作用域是指变量和函数在代码中可访问的范围":["59.0"],"globalvariable":["59.1","59.3"],"global":["59.1","59.3","59.4","85.1","86.3"],"outervariable":["59.2"],"如果找不到":["59.3"],"就会向上一级作用域继续查找":["59.3"],"直到找到该变量或达到全局作用域":["59.3"],"variable":["59.4"],"动态创建任意":["60.1"],"clonenode":["60.1"],"复制现有的":["60.1"],"传入参数":["60.1"],"会复制所有子节点":["60.1"],"appendchild":["60.1","135.1","135.2"],"也需要关注两个因素":["60.2"],"首先由父节点删除子节点":["60.2"],"其次是要删除哪个子节点":["60.2"],"removechild":["60.2"],"树中的任意节点都不是孤立存在的":["60.3"],"的子节点":["60.4"],"基础":["60.4"],"实际应用中非常灵活":["60.5"],"nextsibling":["60.5"],"获取后一个节点":["60.5"],"等文档结构的编程接口":["61.1"],"它将文档表示为一个树状结构":["61.1"],"每个节点都是文档中的一个元素":["61.1"],"主要分为元素节点":["61.3"],"属性节点":["61.3"],"文本节点等":["61.3"],"元素节点":["61.3"],"其实就是":["61.3"],"内置的专门用于":["61.4"],"的对象":["61.4"],"该对象包含了若干的属性和方法":["61.4"],"它是用来描述程序的行为或状态的":["62.1"],"一旦行为或状态发生改变":["62.1"],"等待事件发生":["62.2"],"触发":["62.2"],"便立即调用一个函数":["62.2"],"addeventlistener":["62.2"],"应该将其从元素上移除":["62.3"],"当用户双击鼠标左键时触发":["62.5"],"mousedown":["62.5"],"当用户按下鼠标按钮时触发":["62.5"],"此事件在按下任何鼠标按钮时都会触发":["62.5"],"包括左键":["62.5"],"中键和右键":["62.5"],"mouseup":["62.5"],"当用户释放鼠标按钮时触发":["62.5"],"mousemove":["62.5","62.11"],"当用户移动鼠标指针时触发":["62.5"],"queryselector":["62.6","62.7"],"input":["62.7"],"剪切还是使用其他输入方法":["62.8"],"只要文本框内容发生变化":["62.8"],"就会触发":["62.8"],"change":["62.8"],"目标元素等":["62.9"],"你可以在事件处理程序中使用这些信息来执行逻辑操作":["62.9"],"btn":["62.9"],"方法来停止事件冒泡":["62.10"],"body":["62.10","135.1","135.2"],"h3":["62.10"],"事件流":["62.10"],"mouseover":["62.11"],"mouseout":["62.11"],"使用事件委托的过程如下":["62.12"],"选择一个合适的父元素":["62.12"],"该元素包含你希望委托处理的子元素":["62.12"],"将事件监听器绑定到父元素上":["62.12"],"监听你希望处理的事件类型":["62.12"],"createelement":["63.0"],"创建新的元素节点":["63.0"],"方法创建新元素":["63.1"],"attributename":["63.2"],"attributevalue":["63.2"],"parentelement":["63.3"],"newelement":["63.3"],"这将把":["63.3"],"backgroundcolor":["64.1","128.2","131.1","135.1","135.2"],"这里的":["64.1"],"classname":["64.2"],"移除类名":["64.2"],"remove":["64.2"],"根据元素的":["65.0"],"获取元素节点":["65.0"],"传入元素的":["65.1"],"或者":["65.2","91.7"],"是一种在客户端浏览器上存储数据的机制":["66.0"],"允许开发者在用户计算机中存储和检索有关网站的信息":["66.0"],"属性是一个字符串":["66.1"],"包含一个或多个以分号分隔的键值对":["66.1"],"属性来获取存储在浏览器中的所有":["66.2"],"的过期时间设置为过去的时间来删除":["66.3"],"返回的是一个字符串":["66.4"],"包含当前域名下的所有":["66.4"],"需要自行解析和处理字符串来获取特定":["66.4"],"方法将数据存储到":["67.1","68.1"],"getitem":["67.2","68.2"],"方法根据键从":["67.2","68.2"],"localstorage":["67.3","67.4","67.5"],"parse":["67.6","68.6"],"方法将其还原":["67.6","68.6"],"user":["67.6","68.6","85.1"],"sessionstorage":["68.3","68.4","68.5"],"表示星期六":["69.1"],"getfullyear":["69.1"],"获取四位数的年份":["69.1"],"返回值为一个年份":["69.1"],"gethours":["69.1"],"获取小时数":["69.1"],"getmilliseconds":["69.1"],"获取毫秒数":["69.1"],"关键词来定义":["69.2"],"以下代码定义了名为":["69.2"],"年":["69.3","96.6"],"月":["69.3"],"日":["69.3","69.4"],"00":["69.4"],"分":["69.4"],"供开发者使用":["70.0"],"这些对象提供了一些常用或者基本而必要的功能":["70.0"],"属性和方法":["70.0"],"基础对象":["70.1"],"是用于表示和操作数组的对象":["70.3"],"是用于表示和操作字符串的对象":["70.4"],"是用于表示和操作数字的对象":["70.5"],"是表示和操作布尔值的对象":["70.6"],"是用于表示日期和时间的对象":["70.7"],"是用于进行数学计算的对象":["70.8"],"它提供了一系列与正则表达式相关的方法":["70.9"],"如匹配":["70.9"],"替换等":["70.9"],"pi":["71.1","119.3","122.3"],"函数":["71.4","71.13"],"返回一个浮点":["71.4"],"伪随机数范围从":["71.4"],"返回的是一个数字四舍五入的整数":["71.7"],"返回基数":["71.10"],"base":["71.10","137.9"],"的指数":["71.10"],"不管正数还是负数":["71.14"],"直接去掉小数点及之后的部分":["71.14"],"约为":["72.1"],"parseint":["72.2"],"string":["72.2","88.1","88.6","88.8","88.10","95.2"],"radix":["72.2"],"将字符串转换为整数":["72.2"],"表示进制数":["72.2"],"可选":["72.2"],"默认为":["72.2","117.4"],"parsefloat":["72.2"],"将字符串转换为浮点数":["72.2"],"prototype":["72.2"],"可以用来搜索":["73.1"],"替换和提取字符串中的特定部分":["73.1"],"将正则表达式模式包围起来":["73.3"],"后面可以跟上一些修饰符":["73.3"],"构造函数创建正则表达式":["73.4"],"匹配字符串的开头":["73.5"],"以下是常用的修饰符":["73.6"],"g":["73.6","73.10","91.7"],"z0":["73.7"],"匹配多个字母或数字字符":["73.7"],"search":["73.8"],"并返回第一个匹配的索引":["73.8"],"如果没有找到则返回":["73.8"],"replace":["73.8"],"使用新的字符串替换匹配正则表达式的结果":["73.8"],"并返回替换后的字符串":["73.8"],"使用编号访问捕获的子串":["73.9"],"str":["73.9","95.2"],"pattern":["73.9"],"match":["73.9"],"以下是常用的正则表达式标志":["73.10"],"全局匹配":["73.10"],"找到所有匹配项而不仅仅是第一个":["73.10"],"表单验证":["73.11"],"使用正则表达式验证用户输入的表单数据":["73.11"],"如邮箱":["73.11"],"电话号码":["73.11"],"开始索引":["74.3","74.4","74.5"],"结束索引":["74.3","74.4"],"两个参数都是索引值":["74.3","74.4"],"包左不包右":["74.4"],"截取的长度":["74.5"],"解释":["74.5"],"可以通过原型链实现继承":["75.1"],"子类的原型对象指向父类的实例":["75.1"],"从而继承了父类的属性和方法":["75.1"],"父类":["75.1"],"animal":["75.1","75.3","88.2"],"并提供公有方法来访问和操作这些私有属性来实现":["75.2"],"私有属性":["75.2"],"由于其动态类型特性":["75.3"],"多态是天然支持的":["75.3"],"animalsound":["75.3"],"类是一种用于创建对象的模板或蓝图":["76.0"],"而构造函数是用于创建类的实例的特殊函数":["76.0"],"它们是面向对象编程的两种不同方式":["76.0"],"关键字来实例化对象":["76.1"],"构造函数内部使用":["76.1"],"关键字来引用新创建的对象":["76.1"],"并定义对象的属性和方法":["76.1"],"构造函数定义":["76.1"],"而对象则是类的实例":["76.2"],"类的方法在原型上定义":["76.2"],"因此实例共享相同的方法":["76.2"],"es6类定义":["76.2"],"constructor":["76.2","88.1","88.6","88.8"],"面向对象是一种编程范式":["77.1"],"也称为函数成员":["77.2"],"类":["77.2"],"类是对象的模板或蓝图":["77.2"],"它定义了对象将具有的属性和方法":["77.2"],"类是一种抽象的概念":["77.2"],"它描述了对象的共同特征":["77.2"],"创建对象":["78.2"],"sex":["78.3"],"男":["78.3"],"sayhi":["78.3"],"构造函数约定首字母大写":["78.4"],"函数内的属性和方法前面需要添加":["78.4"],"表示当前对象的属性和方法":["78.4"],"构造函数中不需要":["78.4"],"返回结果":["78.4"],"当我们创建对象的时候":["78.4"],"必须用":["78.4"],"propertiesobject":["78.5","78.7"],"创建一个新对象":["78.5"],"使用现有的对象作为新对象的原型":["78.5"],"entries":["78.5"],"返回一个给定对象自身可枚举属性的":["78.5"],"obj1":["78.6","81.3","81.11"],"sym":["78.13"],"myproto":["78.14"],"es6":["79.1"],"及以上版本中":["79.1"],"getprototypeof":["79.1"],"来访问原型":["79.1"],"它指向该对象的原型对象":["79.1"],"它是所有对象的根原型":["79.2"],"共享属性和方法":["79.3"],"原型允许多个对象共享相同的属性和方法":["79.3"],"create":["79.4","137.3"],"规范":["80.0"],"优化和可靠的代码":["80.0"],"并避免一些常见的错误":["80.0"],"严格模式对于旧版":["80.0"],"代码的兼容性考虑较少":["80.0"],"因此需要显式地启用它":["80.0"],"严格模式可以应用到整个脚本文件或单个函数中":["80.0"],"启用整个脚本文件的严格模式":["80.0"],"函数执行":["81.1"],"解析器在调用函数每次都会向函数内部传递进一个隐含的参数":["81.2"],"全局的name属性":["81.3"],"smyh":["81.3"],"sayname":["81.3"],"vae":["81.3"],"中的箭头函数并不使用上面的准则":["81.4"],"而是会继承外层函数调用的":["81.4"],"指向":["81.5","81.8","81.10","81.11"],"可以":["81.7"],"一个函数":["81.7"],"与此同时":["81.7","81.10"],"this的指向并没有被改变":["81.8"],"此时相当于":["81.8"],"改变":["81.8"],"它还可以改变这个函数内部的":["81.10"],"这一点":["81.10"],"nickname":["81.11"],"zhangsan":["81.11"],"数字1":["81.12"],"数字2":["81.12"],"数字3":["81.12"],"可以获取":["81.12"],"多个数值中的最大值":["81.12"],"另外":["81.12"],"由于":["81.12"],"方法在传递实参时":["81.12"],"把":["81.14","108.14"],"call":["81.14"],"apply":["81.14"],"这三个方法做一下对比":["81.14"],"你会发现":["81.14"],"实际开发中":["81.14"],"是一个基于":["83.1"],"bash":["83.2","85.5","85.6","85.7","85.12","85.14","85.18","85.19","96.6","107.16","108.2"],"xxxx":["83.3"],"响应拦截":["83.4"],"请求调整":["83.4"],"用户标识":["83.4"],"网络错误处理":["83.4"],"授权错误处理":["83.4"],"error":["83.5","84.4"],"response":["83.5"],"发出请求后":["83.5"],"服务器用状态码进行响应":["83.5"],"这超出了2xx的范围":["83.5"],"实现一个简单的封装":["84.1"],"主要实现以下目的":["84.1"],"如果开启":["84.3"],"token":["84.3","84.4"],"认证":["84.3","108.13"],"serverconfig":["84.3"],"usetokenauthorization":["84.3"],"headers":["84.3","104.12"],"authorization":["84.3"],"比如判断":["84.4"],"是否过期等等":["84.4"],"代码块":["84.4"],"switch":["84.4"],"getaction":["84.5"],"parameter":["84.5"],"service":["84.5"],"zs":["84.6"],"password":["84.6","108.3"],"定义接口方法":["84.6"],"login":["84.6"],"params":["84.6"],"axios":["84.7"],"的再再再封装":["84.7"],"config":["85.1","86.3","96.7","107.17","137.6"],"git":["85.3","85.4","85.11","85.12","85.13","85.14","86.3"],"将当前目录及其子目录下所有变更添加到暂存区":["85.5"],"追踪":["85.7"],"比较指定文件工作区和暂存区的差异":["85.7"],"reflog":["85.8"],"查看详细日志信息":["85.8"],"branch":["85.10"],"新分支":["85.10"],"基于指定分支创建分支":["85.10"],"分支合并到当前分支":["85.14"],"且为":["85.14"],"use":["85.15","98.1","108.11"],"restore":["85.15"],"file":["85.15"],"to":["85.15","98.3"],"往最后一次":["85.16"],"追加记录":["85.16"],"克隆远程仓库到本地":["85.19"],"别名":["85.21"],"本地分支":["85.21"],"远程分支":["85.21"],"如果远程分支被省略":["85.21"],"git官网下载安装git客户端":["86.1"],"安装完成后":["86.2"],"pub":["86.4"],"ssh":["86.4"],"打开生成后的id":["86.5"],"本地拉取代码":["86.6"],"普通声明":["87.1"],"notanumber":["87.2"],"number":["87.2","87.13","88.1","88.6","88.8","89.2","89.5","90.2"],"可以直接使用布尔值":["87.3"],"b2":["87.3"],"一样可以操作数组元素":["87.4"],"有两种方式可以定义数组":["87.4"],"第一种":["87.4"],"如果一个方法需要返回多个值":["87.5"],"可以把这多个值作为元组返回":["87.5"],"而不需要创建额外的类来表示":["87.5"],"可以定义一对值分别为string和number类型的元组":["87.5"],"ts":["87.5","87.6","87.7","87.8","87.11","88.2","88.7","88.10","90.3","90.5","92.5","92.6","93.1","96.12"],"也可以是字符串":["87.6"],"数字枚举":["87.6"],"enum":["87.6","99.5"],"types":["87.6"],"进行任何操作":["87.7"],"不需要检查类型":["87.7"],"voidfn":["87.8"],"定义null":["87.9"],"默认情况下":["87.9","104.12","114.2"],"返回never的函数必须存在无法达到的终点":["87.10"],"因为必定抛出异常":["87.10"],"所以":["87.10","108.13"],"的差异":["87.11"],"void类型只是没有返回值":["87.11"],"不能为字符串类型":["87.12"],"因为定义的联合类型只有数字和布尔值并没有字符串":["87.12"],"boolean":["87.12"],"interface":["87.13","90.5","92.2","92.6"],"程序员":["87.14"],"已经进行了必须的检查":["87.14"],"方式一":["87.14"],"as":["87.14","132.1"],"这个概念":["88.0"],"构造方法":["88.1"],"类的继承":["88.2"],"run":["88.2"],"public":["88.3","88.8"],"private":["88.6","90.6"],"some":["88.6"],"any":["88.6","135.1","135.2"],"关键字将属性设置为只读的":["88.7"],"只读属性必须在声明时或构造函数里被初始化":["88.7"],"implements":["88.9"],"后面跟interface的名字多个用逗号隔开":["88.9"],"继承还是用extends":["88.9"],"personclass":["88.9"],"首先":["88.10"],"我们从一个没有使用存取器的例子开始":["88.10"],"firstname":["88.10"],"关键字声明的类叫做":["88.11"],"声明的方法叫做":["88.11"],"抽象方法":["88.11"],"指不能被实例化":["88.11"],"因为它里面包含一个或多个抽象方法":["88.11"],"函数参数":["89.0"],"y":["89.1"],"你可以使用":["89.4"],"arguments":["89.4"],"来访问所有传入的参数":["89.4"],"你可以把所有参数收集到一个变量里":["89.4"],"剩余参数会被当做个数不限的可选参数":["89.4"],"可以一个都没有":["89.4"],"定义函数实现":["89.5"],"接口或类的时候":["90.0"],"当我们使用这个函数的时候把参数的类型传进去就可以了":["90.3"],"也就是动态类型":["90.3"],"swap":["90.4"],"k":["90.4"],"keyvalue":["90.5"],"t":["90.5","90.6","90.7"],"clacarray":["90.6"],"没有泛型约束":["90.7"],"getlen":["90.7"],"arg":["90.7"],"超集":["91.2"],"简单的说就是在":["91.2"],"而ts":["91.3"],"属于静态编程语言":["91.3"],"尤其在大型项目的时候效果显著":["91.5"],"和一些插件库的兼容并不是特别完美":["91.6"],"w进行随时热更新watch":["91.9"],"node直接运行ts的node项目":["91.10"],"首先全局安装ts":["91.10"],"的核心原则之一是对值所具有的结构进行类型检查":["92.0"],"我们使用接口":["92.0"],"我的理解是使用interface来定义一种约束":["92.1"],"让数据的结构满足约束的格式":["92.1"],"定义方式如下":["92.1"],"可选属性的好处之一是可以对可能存在的属性进行预定义":["92.4"],"好处之二是可以捕获引用了不存在的属性时的错误":["92.4"],"可选属性的含义是该属性可以不存在":["92.4"],"在这个例子当中我们看到接口中并没有定义c但是并没有报错":["92.5"],"应为我们定义了":["92.5"],"这样写是会报错的":["92.6"],"应为a是只读的不允许重新赋值":["92.6"],"cb":["92.7"],"void":["92.7"],"就是我们常说的":["93.0"],"类型也不能赋给":["93.1"],"报错":["93.1"],"原始类型":["93.1"],"umd":["94.0"],"lib":["94.0"],"指定要包含在编译中的库文件":["94.0"],"allowjs":["94.0"],"允许编译":["94.0"],"文件":["94.0","110.3","112.2"],"checkjs":["94.0"],"报告":["94.0"],"文件中的错误":["94.0"],"jsx":["94.0","96.8"],"preserve":["94.0"],"代码的生成":["94.0"],"react":["94.0","96.8"],"native":["94.0"],"定义变量时赋值了":["95.1"],"推断为对应的类型":["95.1"],"n1":["95.1"],"s":["95.2"],"abcd":["95.2"],"版本的后台管理系统":["96.2"],"一个项目要有统一的规范":["96.2"],"需要使用":["96.2"],"进行构建":["96.4"],"官方中文文档参考":["96.4"],"cn":["96.4"],"vitejs":["96.4","96.10"],"dev":["96.4","137.2"],"guide":["96.4"],"月创建的开源项目":["96.6"],"它的目标是提供一个插件化的":["96.6"],"代码检测工具":["96.6"],"首先安装":["96.6"],"pnpm":["96.6"],"d":["96.6","114.4"],"生成配置文件":["96.6"],"prettier":["96.7","96.8"],"plugin":["96.7","96.8"],"parseroptions":["96.8"],"ecmaversion":["96.8"],"sourcetype":["96.8"],"jsxpragma":["96.8"],"ecmafeatures":["96.8"],"继承已有的规则":["96.8"],"extends":["96.8"],"recommended":["96.8"],"essential":["96.8"],"plugins":["96.8","96.10"],"off":["96.8"],"loader":["96.9"],"因此我们再组件内可以使用":["96.9"],"需要加上":["96.9"],"接下来我们为项目添加一些全局的样式":["96.9"],"userconfigexport":["96.10"],"configenv":["96.10"],"vitemockserve":["96.10"],"export":["96.10","137.9"],"default":["96.10","137.9"],"command":["96.10"],"localenabled":["96.10"],"serve":["96.10"],"在根目录创建":["96.10"],"文件夹":["96.10"],"使用请求拦截器":["96.11"],"可以在请求拦截器中处理一些业务":["96.11"],"开始进度条":["96.11"],"请求头携带公共参数":["96.11"],"使用响应拦截器":["96.11"],"可以在响应拦截器中处理一些业务":["96.11"],"进度条结束":["96.11"],"简化服务器返回的数据":["96.11"],"处理":["96.11"],"http":["96.11","104.11","104.14"],"网络错误":["96.11"],"在根目录下创建":["96.11"],"utils":["96.11","96.12"],"request":["96.11","96.12","106.16","106.17"],"文件夹去统一管理项目的接口":["96.12"],"下面方式":["96.12"],"统一管理咱们项目用户相关的接口":["96.12"],"root":["97.0"],"users":["97.0","106.4"],"打开nginx":["97.1"],"conf文件":["97.1"],"删除一个数据库":["98.1"],"选择要使用的数据库":["98.1"],"show":["98.1"],"column1":["98.2"],"column2":["98.2"],"value1":["98.2"],"value2":["98.2"],"username":["98.3","108.3"],"hostname":["98.3"],"授予用户特定数据库或表的权限":["98.3"],"revoke":["98.3"],"无符号":["99.1"],"smallint":["99.1"],"较小的整数":["99.1"],"402823466e":["99.2"],"175494351e":["99.2"],"最大长度为":["99.3"],"dd":["99.4"],"time":["99.4"],"存储时间":["99.4"],"hh":["99.4"],"操作和控制访问数据的方法":["100.0"],"数据库的设计和使用旨在提供高效的数据存储":["100.0"],"快速的数据检索和安全的数据管理":["100.0"],"数据库通常由数据表":["100.0"],"因其易用性":["100.1"],"性能和可靠性而受到广泛欢迎":["100.1"],"以下是mysql的一些关键特点":["100.1"],"开源性":["100.1"],"mysql是开源软件":["100.1"],"的基本使用包括连接到":["102.0"],"客户端工具":["102.1"],"如命令行客户端或图形化客户端工具":["102.1"],"mysql":["102.2","108.1"],"选择数据库":["102.3"],"使用以下命令选择要在其中执行操作的数据库":["102.3"],"在所选的数据库中创建一个新的表":["102.4"],"定义表的列和数据类型":["102.4"],"sql":["102.4","102.5","102.6","102.7"],"insert":["102.5","108.3"],"into":["102.5","108.3"],"select":["102.6"],"语句从表中检索数据":["102.6"],"语句更新表中的数据":["102.7"],"delete":["102.8"],"做一个简单的爬虫":["103.0"],"初始化项目":["103.1","111.2"],"cheerio":["103.2"],"shell":["103.2","137.4"],"访问要爬取的网站":["103.3"],"爬取豆瓣网":["103.3"],"fs":["103.4","106.7","106.12"],"get":["103.4","104.2","104.4","107.17","108.5"],"movie":["103.4"],"douban":["103.4"],"com":["103.4","129.2"],"top250":["103.4"],"运行脚本":["103.5"],"p2372307693":["103.6"],"泰坦尼克号":["103.6"],"titanic":["103.6"],"img9":["103.6"],"p2889314814":["103.6"],"这个杀手不太冷":["103.6"],"léon":["103.6"],"p511118051":["103.6"],"千与千寻":["103.6"],"千と千尋の神隠し":["103.6"],"p2557573348":["103.6"],"基于":["104.0"],"node":["104.0","105.2","107.22","110.2","112.1"],"require":["104.2","104.6","106.7","106.14","108.11","108.14"],"服务器":["104.2"],"app":["104.2","104.3","108.5","108.11","129.1","131.1"],"监听客户端的":["104.2"],"请求":["104.2"],"存放静态文件的目录名不会出现在":["104.3"],"访问静态资源时":["104.3"],"会根据托管顺序查找文件":["104.3"],"可为静态资源访问路径添加前缀":["104.3"],"创建路由对象":["104.4"],"挂载具体路由":["104.4"],"可先调用中间件进行预处理":["104.5"],"中间件是一个函数":["104.5"],"express":["104.6"],"定义第一个全局中间件":["104.6"],"mw1":["104.7"],"req":["104.7","104.8","106.17"],"res":["104.7","104.8","106.17"],"next":["104.7","104.8"],"调用了第一个局部生效的中间件":["104.7"],"应用级别中间件是绑定到":["104.8"],"实例上":["104.8"],"路由级别中间件绑定到":["104.8"],"安装中间件":["104.10"],"跨域资源共享":["104.11"],"解决跨域":["104.11"],"是通过":["104.11"],"响应头决定浏览器是否阻止前端":["104.11"],"bruceblog":["104.12"],"io":["104.12"],"仅支持客户端向服务器发送如下的":["104.12"],"三者之一":["104.14"],"头部信息不超过以下几种字段":["104.14"],"无自定义头部字段":["104.14"],"之外的请求":["104.15"],"官网传送门":["105.0"],"cross":["105.1"],"platform":["105.1"],"事件循环":["105.2"],"单线程":["105.2"],"总结":["105.2"],"轻量和高效":["105.2"],"否则不会向下执行代码":["106.1"],"异步文件系统不会阻塞程序的执行":["106.1"],"而是在操作完成时":["106.1"],"通过回调函数将结果返回":["106.1"],"实际开发很少用同步方式":["106.1"],"因此只介绍异步方式":["106.1"],"打开模式":["106.1"],"配置选项":["106.3","106.6"],"若是字符串则指定编码格式":["106.3"],"encoding":["106.3","106.6"],"编码格式":["106.3"],"flag":["106.3"],"打开方式":["106.3"],"回调函数":["106.3"],"err":["106.3"],"错误信息":["106.3"],"rs":["106.4"],"createreadstream":["106.4"],"笔记":["106.4"],"mp3":["106.4"],"创建一个可写流":["106.4","106.7"],"ws":["106.4"],"createwritestream":["106.4"],"文件路径":["106.6"],"写入内容":["106.6"],"数组不能存储二进制文件":["106.8"],"是专门存储二进制数据的":["106.8"],"存储的是二进制数据":["106.8"],"显示时以":["106.8"],"如果提供的操作路径是以":["106.9"],"开头的相对路径时":["106.9"],"容易出现路径动态拼接错误的问题":["106.9"],"unlink":["106.10"],"unlinksync":["106.10"],"列出文件":["106.10"],"readdir":["106.10"],"options":["106.10"],"readdirsync":["106.10"],"会抵消前面的路径":["106.12"],"可以获取路径中的最后一部分":["106.13"],"常通过该方法获取路径中的文件名":["106.13"],"server":["106.16"],"createserver":["106.16"],"为服务器实例绑定":["106.16"],"监听客户端的请求":["106.16"],"on":["106.16","106.17"],"设置默认的响应内容为":["106.17"],"模块化是指解决一个复杂问题时":["107.2"],"自顶向下逐层把系统划分为若干模块的过程":["107.2"],"提高代码的复用性":["107.3"],"中模块的分类":["107.5"],"中的模块作用域":["107.6"],"存储了和当前模块有关的信息":["107.7"],"在自定义模块中":["107.7"],"每个模块内部":["107.8"],"module":["107.8"],"即多次调用":["107.9"],"开头":["107.11"],"否则会作为内置模块或第三方模块加载":["107.11"],"尝试从":["107.12","107.22"],"modules":["107.12","107.22"],"文件夹中加载第三方模块":["107.12","107.22"],"如果没有找到对应的第三方模块":["107.12","107.22"],"则移动到再":["107.12"],"上一层父目录":["107.12"],"package":["107.13","107.18","107.23","110.0","110.3","110.5","111.4","112.2","137.2"],"并寻找":["107.13"],"不同于":["107.15"],"新建文件夹":["107.18"],"包名":["107.18"],"新建如下三个文件":["107.18"],"包管理配置文件":["107.18"],"index":["107.18","108.5"],"多次调用":["107.19"],"开头的路径标识符":["107.21"],"在加载自定义模块时":["107.21"],"如果没有指定":["107.21"],"nodejs":["107.22"],"会从当前模块的父目录开始":["107.22"],"则移动到再上一层父目录中":["107.22"],"在被加载的目录下查找一个叫做":["107.23"],"建立连接":["108.2"],"使用数组的形式为占位符指定具体的值":["108.3"],"额外请求页面的数据":["108.5"],"后端只负责提供":["108.6"],"接口":["108.6"],"前端使用":["108.6"],"主要功能是展示":["108.7"],"没有复杂交互":["108.7"],"服务端渲染推荐使用":["108.9"],"secret":["108.11"],"bruce":["108.11"],"的值为任意字符串":["108.11"],"resave":["108.11"],"前后端分离推荐使用":["108.12"],"当涉及到前端跨域请求后端接口的时候":["108.13"],"需要做很多额外的配置":["108.13"],"才能实现跨域":["108.13"],"当前端请求后端接口不存在跨域问题的时候":["108.13"],"推荐使用":["108.13"],"身份认证机制":["108.13"],"当前端需要跨域请求后端接口的时候":["108.13"],"字符串的安全性":["108.14"],"防止其在网络传输过程中被破解":["108.14"],"需定义用于加密和解密的":["108.14"],"生成":["108.14"],"字符串时":["108.14"],"使用密钥加密信息":["108.14"],"得到加密好的":["108.14"],"对象时":["108.14"],"使用密钥解密":["108.14"],"expressjwt":["108.14"],"安装依赖项":["109.0","112.2"],"添加依赖项":["109.0"],"pkg":["109.0"],"是一个用于管理和共享":["110.1"],"代码的工具":["110.1"],"是随同":["110.2"],"生成一个":["110.3"],"项目的核心文件":["110.4"],"其中包含了项目的配置信息":["110.4"],"依赖项":["110.4"],"你可以轻松地安装和管理项目的依赖项":["110.5"],"还可以帮助你开发和发布自己的包":["110.6"],"通过编写代码":["110.6"],"上":["111.0"],"账号":["111.1","111.5"],"编写代码":["111.3"],"确保在你的项目中包含以下文件":["111.4"],"使用终端登录到你的":["111.5"],"如果你的包需要更新或有新的版本":["111.6"],"你可以按照以下步骤进行更新和维护":["111.6"],"使用你的包":["111.7"],"其他开发者可以使用以下命令来安装和使用你的包":["111.7"],"请确保你已经安装了":["112.1"],"这将引导你提供有关项目的一些信息":["112.2"],"并生成一个":["112.2"],"在项目目录中":["112.2"],"html5":["113.1"],"的基础知识":["113.2"],"canvas":["113.3","113.4","113.5","117.3","124.3","127.1"],"使用直角坐标系":["113.3"],"原点坐标为":["113.3"],"可以绘制":["113.4"],"svg":["113.4","136.3","136.4","136.5","136.6","136.8"],"和其他类型的矢量图形":["113.4"],"提供了多种绘图元素":["113.5"],"包括路径和图形":["113.5"],"除了基本的绘图功能之外":["113.6"],"还可以创造交互式效果":["113.6"],"用来展示和操控数据":["113.6"],"非常适合处理像素级别的控制":["113.7"],"利用":["113.7"],"虽然在":["113.8"],"canvasrenderingcontext2d":["114.0"],"rotate":["114.0"],"方法用于图像旋转":["114.1"],"它接受一个弧度值作为参数":["114.1"],"表示顺时针旋转的度数":["114.1"],"轴方向的缩放因子":["114.2"],"一个单位就是一个像素":["114.2"],"缩放因子可以缩放单位":["114.2"],"比如缩放因子":["114.2"],"表示将大小缩小为原来的":["114.2"],"缩放因子":["114.2"],"方法用于平移图像":["114.3"],"它接受两个参数":["114.3"],"分别是":["114.3"],"context":["114.4","114.5","119.2","124.3"],"e":["114.4","137.11"],"f":["114.4"],"水平缩放":["114.4"],"transform":["114.5"],"方法完全一致":["114.5"],"translate":["114.5"],"如果在":["115.0"],"之中将某个物体":["115.0"],"在目标图像中显示源图像":["115.1"],"只有目标图像内的源图像部分会显示":["115.1"],"目标图像是透明的":["115.1"],"out":["115.1"],"在目标图像之外显示源图像":["115.1"],"您的浏览器不支持":["116.1"],"描边已定义绘图":["116.2"],"路径":["116.2"],"fill":["116.2","119.3","136.9"],"填充当前绘图":["116.2"],"linecap":["117.1"],"指定线条末端的样式":["117.1"],"有三个可能的值":["117.1"],"butt":["117.1"],"末端为矩形":["117.1"],"round":["117.1"],"末端为圆形":["117.1"],"square":["117.1"],"末端为突出的矩形":["117.1"],"矩形宽度不变":["117.1"],"y0":["117.2"],"x1":["117.2"],"y1":["117.2"],"方法接受四个参数":["117.2"],"是起点的横坐标和纵坐标":["117.2"],"是终点的横坐标和纵坐标":["117.2"],"通过不同的坐标值":["117.2"],"可以生成从上至下":["117.2"],"repetition":["117.3"],"该方法接受两个参数":["117.3"],"第一个参数是图像数据":["117.3"],"它可以是":["117.3"],"img":["117.3"],"也可以是另一个":["117.3"],"或者一个表示图像的":["117.3"],"shadowcolor":["117.4"],"阴影的颜色":["117.4"],"black":["117.4"],"fillrect":["118.0"],"图像":["119.0"],"高度":["119.2"],"绘制笑脸":["119.3"],"beginpath":["119.3","122.3"],"lineto":["119.4","122.3"],"dwidth":["119.5"],"dheight":["119.5"],"sx":["119.5"],"默认值为":["119.6"],"10px":["119.6"],"sans":["119.6"],"serif":["119.6"],"textalign":["119.6"],"文本的对齐方式":["119.6"],"文本的方向":["119.6"],"inherit":["119.6"],"quadraticcurveto":["120.1"],"控制点x":["120.1"],"控制点y":["120.1"],"终点x":["120.1"],"终点y":["120.1"],"beziercurveto":["120.2"],"控制点1":["120.2"],"再来一次":["121.1"],"找到画布":["121.2"],"绘制小时的刻度":["122.3"],"moveto":["122.3"],"linewidth":["122.3"],"strokestyle":["122.3"],"gray":["122.3"],"stroke":["122.3","136.9"],"closepath":["122.3"],"nullbtn":["124.3"],"清空画布":["124.3"],"c1":["124.3"],"当前浏览器不支持canvas":["124.3"],"请下载最新的浏览器":["124.3"],"获取canvas画布和绘制的上下文对象":["124.3"],"getcontext":["124.3"],"2d":["124.3"],"获取输入框和按钮":["124.3"],"boldbtn":["124.4"],"粗线条":["124.4"],"thinbtn":["124.4"],"interactive":["126.1"],"精灵派加点击事件":["126.1"],"pixi":["126.2","127.7","131.2","132.1","133.1","133.2","133.3","133.4","133.5","135.0"],"graphics":["126.2","133.1","133.2","133.3","133.4","133.5","136.1"],"beginfill":["126.2","133.2","133.3","133.4"],"官方网站":["127.0"],"webgl":["127.1"],"快速高效":["127.3"],"pixijs":["127.3","127.5"],"简单易用":["127.4"],"丰富的功能":["127.5"],"跨平台支持":["127.6"],"innerwidth":["128.2","129.1","131.1"],"innerheight":["128.2","131.1","135.1","135.2"],"0x1099bb":["128.2","135.1","135.2"],"resolution":["128.2","135.1","135.2"],"pic":["129.2"],"rmb":["129.2"],"bdstatic":["129.2"],"05b0ea405c9e690ab51627853a13de56":["129.2"],"jpeg":["129.2"],"设置模糊滤镜的模糊程度":["131.2"],"创建轮廓滤镜":["131.3"],"创建一个纹理":["132.2"],"anchor":["132.3"],"实现动画":["132.4"],"0x66ccff":["133.3"],"0x660000":["133.4"],"linestyle":["133.5"],"devicepixelratio":["135.1","135.2"],"像素比":["135.1","135.2"],"将应用画布添加到dom中":["135.1","135.2"],"view":["135.1","135.2"],"添加资源":["135.1"],"添加场景1的资源":["135.2"],"assets":["135.2"],"addbundle":["135.2"],"scene1":["135.2"],"pic1":["135.2"],"vector":["136.1"],"的缩写":["136.1"],"意为可缩放矢量图形":["136.1"],"不设置样式属性":["136.3"],"style":["136.3"],"不设置样式属性style是看不出效果的":["136.7"],"并且polygon默认为填充需要把fill属性设置为none":["136.7"],"points":["136.8"],"opacity":["136.9"],"开始搭建个人网站":["137.0"],"gitbub":["137.1"],"上新建项目":["137.1"],"添加":["137.2"],"script":["137.2"],"vitepress":["137.3","137.6"],"文件夹和":["137.6"],"写下如下内容":["137.7"],"更多配置请查看":["137.7"],"md":["137.7"],"layout":["137.7"],"选项卡标题":["137.7"],"titletemplate":["137.7"],"选项卡描述":["137.7"],"editlink":["137.7"],"配置网站":["137.8"],"defineconfig":["137.9"],"docs":["137.9"],"和github项目名称保持一致":["137.9"],"标题":["137.9"],"侧边栏":["137.10"],"sidebar":["137.10"],"articles":["137.10"],"other":["137.10"],"bin":["137.11"],"env":["137.11"],"确保脚本抛出遇到的错误":["137.11"],"生成静态文件":["137.11"],"build":["137.11"],"进入生成的文件夹":["137.11"],"cd":["137.11"]},{"0":["12.23","12.24","26.5","31.1","34.24","55.2","56.4","71.4","73.9","96.8","99.2","106.8","114.5","117.2","121.2","133.3","133.5","136.7"],"1":["8.4","12.23","12.24","27.24","34.15","34.23","34.29","34.30","35.9","35.10","35.11","36.6","36.7","36.8","38.7","38.11","39.3","40.12","40.18","53.1","56.0","58.4","71.4","74.16","74.22","78.3","78.8","87.6","96.10","111.6","116.1","117.2","128.2","129.1","131.1"],"2":["8.4","16.3","27.29","34.23","34.28","34.29","34.30","34.31","35.5","38.7","39.3","39.12","42.1","45.0","50.6","56.0","58.6","78.6","78.8","79.3","81.3","85.14","85.18","87.6"],"3":["7.4","8.3","8.5","11.10","26.6","34.23","34.29","34.30","34.31","39.3","40.4","41.15","50.6","51.4","58.6","58.9","62.12","74.8","85.7","87.6","97.1","104.8","108.11","108.14","114.2","136.1"],"4":["8.3","8.5","30.3","34.31","39.2","39.13","62.12","85.8","104.8"],"5":["8.3","8.5","34.31","34.32","35.6","39.2","39.13","58.6","72.1","78.15","96.7","131.3"],"6":["5.1","5.4","39.13","41.1","58.3","58.7","72.2","76.0","133.5"],"7":["58.7","72.2"],"8":["12.22","19.1","39.2"],"9":["104.12","133.3"],"10":["8.6","35.5","39.2","58.3","58.8","87.5","95.1","114.2","131.2","136.9"],"11":["69.1","96.7"],"12":["40.15","74.19"],"17":["55.0"],"18":["42.7"],"20":["58.8","104.2","136.7"],"25":["6.4","8.10","67.6","68.6"],"27":["34.21"],"28":["81.11"],"30":["6.1","8.8","8.9","42.7"],"31":["66.1"],"35":["135.2"],"37":["71.14"],"42":["71.14"],"45":["114.1"],"50":["15.6","136.8"],"59":["69.1"],"60":["60.4","122.3"],"65":["99.1"],"84":["71.14"],"100":["114.5","119.3"],"123":["15.1","41.15","87.2","87.12"],"150":["119.4","120.1"],"180":["122.3"],"200":["108.14","119.4"],"255":["38.3"],"300":["126.2","136.8"],"302":["84.4"],"321":["87.2"],"350":["119.2"],"370":["136.5"],"400":["84.4","136.4"],"401":["84.4"],"535":["99.1"],"767":["99.1"],"999":["69.1"],"2015":["5.4"],"2100":["69.5"],"2224":["135.2"],"4870":["96.10"],"12087":["135.2"],"23739":["135.2"],"55520":["108.3"],"1415926":["41.15"],"微信":["0.0"],"manufacturers":["5.2"],"association":["5.2"],"制定和维护的脚本语言标准":["5.2"],"它是":["5.2","110.1"],"javascript":["5.2","19.4","25.9","25.10","26.3","26.4","38.9","57.1","57.2","58.0","61.1","62.0","64.0","66.2","70.2","113.1","127.1"],"的标准化规范":["5.3"],"只提供了最基本的语法":["5.3"],"如":["5.3","5.4","36.9","73.3"],"怎样定义变量和函数":["5.3"],"js":["5.3","25.1","26.4","26.5","27.31","30.4","34.1","34.2","34.12","34.13","34.20","36.6","39.13","40.7","40.12","40.17","40.18","41.3","41.6","41.9","41.11","42.7","50.5","54.2","55.1","69.3","71.1","71.7","71.10","71.13","74.11","74.16","74.21","74.22","78.9","78.17","96.6","104.0","104.11","107.18","114.2","119.6"],"实现了":["5.3"],"数据更方便":["5.4"],"引入了":["5.4"],"object":["5.4","41.5","41.8","52.1","81.3"],"defineproperty":["5.4"],"允许更灵活地定义对象属性":["5.4"],"提供了":["5.4"],"array":["5.4","34.8","89.4","90.2"],"方法":["5.4","28.8","38.9","71.6","71.8","71.9","71.11","81.3"],"foreach":["5.4"],"map":["5.4","94.0"],"reduce":["5.4"],"等":["5.4","26.3","62.11"],"方便数组处理":["5.4"],"改进了":["5.4"],"function":["5.4","7.3","36.6","54.2","59.1","59.3","62.6","78.3","79.2","81.11","87.10","87.11","96.10","106.4","106.16"],"bind":["5.4"],"es6":["5.4","76.0"],"es2015":["5.4"],"template":["6.0","12.3","12.18","12.20","25.5","27.2","27.5","27.13","28.9","29.6","29.9","29.16"],"strings":["6.0"],"message":["6.1","27.4","27.17","40.11","74.15","108.14"],"hello":["6.1","7.2","7.3","38.2","38.8","40.6","40.9","51.1","74.10","74.13","75.1","78.14","79.2","87.5"],"my":["6.1","7.3","137.3"],"line":["6.2"],"text":["6.2","20.11","40.17","40.19","74.21","74.23","137.7","137.10"],"it":["6.2"],"spans":["6.2"],"across":["6.2"],"alice":["6.3","8.10"],"greeting":["6.3","78.7","78.14"],"包含模板字符串中插入的变量部分":["6.4"],"const":["6.4","7.3","25.7","25.10","26.3","26.4","26.5","35.9","35.10","55.5","56.1","57.1","58.7","63.1","78.7","89.4","96.8","106.3","106.6","106.13","108.2","108.5","131.3","132.1","132.2"],"name":["6.4","7.3","12.22","27.7","28.12","32.1","32.3","32.4","41.19","42.4","61.2","76.1","78.10","78.11","78.12","78.16","78.19","78.20","86.3","88.7","88.11","92.2","102.5","102.7","104.2","107.18","108.5","137.7"],"bob":["6.4"],"age":["6.4","8.10","34.21","42.7","76.1","76.2","81.11","104.2","108.5"],"functions":["7.0"],"是一种更简洁和灵活的函数定义方式":["7.0"],"result":["7.1","40.3","74.7"],"箭头函数通过箭头":["7.1"],"来定义函数":["7.1"],"参数列表在括号内":["7.1"],"console":["7.2","7.3","34.2","36.3","36.7","37.1","41.14","41.19","42.1","42.4","42.8","51.1","51.2","59.1","59.4","62.6","73.9","75.1","75.3","76.2","79.2","81.11","88.2","92.7","103.4","104.6","106.4","126.1"],"log":["7.2","7.3","34.2","36.3","36.7","39.11","40.4","40.13","41.19","42.1","42.4","42.8","51.2","59.1","73.9","74.8","74.17","75.1","75.3","76.2","79.2","83.3","83.5","88.2","103.4","106.4"],"person":["7.3","76.1","78.2","88.7","88.11","92.6"],"john":["7.3","8.9","41.4","66.1","78.11","78.12","78.16","78.19","78.20"],"sayhello":["7.3","75.1","76.2","79.2"],"return":["7.4","26.6","51.2","51.3","56.3","57.3","58.4","75.2","87.8","88.10","90.7"],"关键字":["7.4","78.4"],"避免在对象方法中使用箭头函数":["7.4"],"是一种从数组或对象中提取值并赋给变量的语法":["8.0"],"使得在处理数据时更加方便和简洁":["8.0"],"当使用解构赋值时":["8.0"],"a":["8.2","8.4","20.14","21.4","26.6","28.12","35.9","41.15","81.8","81.11","87.1","90.3","106.12","137.11"],"b":["8.2","28.12","35.9","53.1","78.6","78.8","81.8","85.14","88.10","90.2","90.3","90.4","92.3","92.6","107.23"],"c":["8.2","78.8","107.12","107.22"],"d":["8.2","73.7","85.12","94.0","136.9"],"y":["8.6","89.2","89.3","113.3","114.3","116.2","120.2"],"country":["8.8","8.11"],"usa":["8.8","8.11"],"doe":["8.9"],"yearsold":["8.9"],"city":["8.11"],"new":["8.11","26.3","26.4","26.5","34.8","55.6","69.3","131.3","132.1"],"york":["8.11"],"css":["10.1","12.7","15.8","16.2","64.1"],"可快速为同类型标签统一设置样式":["10.2"],"缺点":["10.2"],"container":["10.3","10.9","12.7","12.18","12.19","12.25","15.3","15.8"],"属性选择元素":["10.4"],"good类的p元素":["10.5"],"color":["10.5","64.1"],"yellow":["10.5"],"类名包含good和beauty的元素":["10.5"],"语法":["10.6"],"选择器1":["10.6"],"选择器2":["10.6"],"ul":["10.7","20.14"],"div":["10.8","10.9","12.25","24.9","24.10","25.5","27.2","27.5","27.10","27.13","27.14","28.9","29.6","61.3","62.10","122.4","128.1","130.1","134.2"],"被选中":["10.9"],"class":["10.9","12.25","27.30","29.6","62.10","88.11"],"结构选择元素":["10.10"],"visited":["10.11"],"链接访问后的样式":["10.11"],"的第一个":["10.12"],"的最后一个":["10.12"],"val":["10.13"],"属性且属性值等于":["10.13"],"的":["10.13","27.12","29.14","54.1","54.4","69.2","83.1"],"在元素内部后面插入内容":["10.14"],"伪元素字体图标":["10.14"],"p":["10.14","21.3","29.11","38.11","60.1"],"e91e":["10.14"],"position":["10.14"],"absolute":["10.14","15.6"],"right":["10.14"],"20px":["10.14"],"top":["10.14","15.6"],"10px":["10.14"],"font":["10.14"],"也称为弹性盒子布局":["11.0"],"是一种用于创建灵活":["11.0"],"自适应的网页布局的":["11.0"],"容器的父元素上设置":["11.1"],"display":["11.1","12.7","12.18","12.19","15.7","17.0"],"决定":["11.2"],"项目的排列方向":["11.2"],"row":["11.2"],"项目靠主轴起始位置对齐":["11.3"],"end":["11.3"],"项目靠主轴末尾位置对齐":["11.3"],"center":["11.3"],"项目在主轴上居中对齐":["11.3"],"space":["11.3","11.10"],"between":["11.3","11.10"],"wrap":["11.4","11.5"],"属性来控制项目是否换行":["11.4"],"和":["11.5","12.3","12.8","19.4","27.29","31.3","38.4","39.5","50.1","57.0","62.2","73.10","74.4","79.4","81.12","89.0","99.2"],"shrink":["11.6"],"如果没有设置宽度或高度":["11.7"],"项目在交叉轴上的对齐方式":["11.9"],"start":["11.9","30.4"],"多行项目靠交叉轴起始位置对齐":["11.9"],"属性设置为":["11.10"],"实现两端对齐效果":["11.10"],"平均分布":["11.10"],"其中包含了行":["12.1"],"rows":["12.1","12.8","100.0"],"和列":["12.1"],"首先需要将一个":["12.2"],"html":["12.2","12.30","24.7","24.9","24.13","25.5","29.15","60.1","60.2","60.5","61.3","65.2","97.0","103.4"],"元素定义为网格容器":["12.2"],"columns":["12.3","12.18","12.19","12.20"],"是定义网格单元格边界的线条":["12.4"],"水平的网格线定义了行":["12.4"],"而垂直的网格线定义了列":["12.4"],"我们可以通过指定网格线的名称或索引来定位网格项":["12.4"],"网格跨度":["12.4"],"布局的属性详解":["12.5"],"用于定义网格的列和行的大小和结构":["12.6"],"可以更清晰地定义布局结构":["12.7"],"定义网格项之间的间隔":["12.9"],"行和列之间的间距":["12.9"],"定义了当网格项目无法放入先前定义的网格轨道时":["12.12"],"如何自动创建额外的网格项目":["12.12"],"用于定义网格项目在网格容器内部的对齐方式":["12.14"],"使用":["12.17","52.1","62.2","113.4"],"grid":["12.17","12.32"],"1fr":["12.20"],"默认一个列":["12.20"],"适用于手机屏幕":["12.20"],"min":["12.20","72.1"],"布局的实际应用":["12.21"],"viewport":["12.22","61.2","104.12"],"content":["12.22","12.23","16.0","61.2","104.12","104.14","106.17"],"width":["12.22","12.23","12.24","60.4","61.2","104.12","129.2","132.3"],"device":["12.22","12.23","12.24","61.2"],"initial":["12.23","12.24"],"scale":["12.23","12.24","114.0"],"title":["12.23","12.24","19.1","24.4","38.13","82.2"],"complex":["12.23"],"nested":["12.24"],"dynamic":["12.25"],"layout":["12.25","29.6"],"body":["12.25","19.1","50.5","60.1","60.2","60.5","61.3","127.7","128.2","131.1"],"item":["12.25","32.4"],"flexbox":["12.26"],"的比较":["12.26"],"适用于创建二维布局":["12.27"],"即同时控制行和列的布局":["12.27"],"可以实现更复杂的布局结构":["12.28"],"支持二维布局":["12.28"],"可以精确控制网格项的位置和跨度":["12.28"],"在使用":["12.29","107.21"],"布局中":["12.30"],"网格项的顺序并不一定与它们在":["12.30"],"虽然":["12.31"],"尽管":["12.32"],"areas":["12.33"],"来定义布局":["12.33"],"行内":["13.0"],"类":["13.1"],"伪类":["13.1"],"属性":["13.1","61.1","88.8","107.13"],"元素":["13.1"],"伪元素":["13.1"],"span":["15.1","21.2"],"box":["15.2"],"200px":["15.5"],"background":["15.5"],"skyblue":["15.5","136.9"],"left":["15.6"],"justify":["15.7"],"12333333333333333333333333":["16.0"],"border":["16.1"],"1px":["16.1"],"solid":["16.1"],"margin":["16.3"],"auto":["16.3"],"限定高度以及行高":["16.3"],"并且行高与高度要成比例":["16.3"],"上下箭头":["17.0"],"button":["17.0","24.13","27.5","27.14","28.5","62.9"],"none":["17.0"],"滚动条轨道":["17.0"],"id":["18.0","18.11","24.17"],"audioplayer":["18.0"],"controls":["18.0","18.7"],"example":["18.0","20.15","49.2","137.11"],"mp3":["18.0","18.2"],"type":["18.0","27.6","88.9","96.12","104.12","116.1"],"audio":["18.2"],"mp4":["18.3"],"video":["18.3"],"描述":["18.5","18.6","137.9"],"height":["18.7","48.1","48.2","129.2"],"视频显示区域的宽高":["18.7"],"play":["18.8"],"src":["18.10","20.15","96.9","137.7"],"https":["18.10","50.9","86.1","103.3","135.1","135.2"],"www":["18.10","49.2","137.11"],"缩小":["18.11"],"makenormal":["18.11"],"普通":["18.11"],"br":["18.11"],"video1":["18.11"],"hypertext":["19.0"],"utf":["19.1"],"网页标题":["19.1"],"网页内容在这里":["19.1"],"标签可以包含属性":["19.2"],"属性用于为标签提供额外的信息或设置":["19.2"],"属性以键值对的形式出现":["19.2"],"放在标签的开始标签中":["19.2"],"attribute":["19.2"],"value":["19.2","57.3","87.7","90.5"],"header":["19.3"],"footer":["19.3","29.9"],"nav":["19.3"],"与":["19.4","62.5","62.8"],"结合":["19.4"],"标签时":["20.0"],"代码块会被渲染成":["20.0"],"这是h1级别的标题":["20.1"],"h2":["20.1"],"href":["20.3","20.14","21.4","46.2"],"这是一个":["20.8"],"这是一行文本":["20.10"],"placeholder":["20.11"],"输入文本":["20.11"],"post":["20.13","84.5","108.14"],"label":["20.13"],"for":["20.13","26.6","36.9","55.3","55.4","55.6","56.4"],"li":["20.14","24.12"],"home":["20.14"],"标签用于定义网页的结构和内容":["21.0"],"方便样式和布局控制":["21.1"],"h1":["21.1","106.17"],"到":["21.1","117.2"],"h6":["21.1"],"标题标签":["21.1"],"用于创建超链接到其他网页或文档":["21.2"],"内联容器标签":["21.2"],"类似于":["21.2"],"标签中":["21.3"],"然后在":["21.3"],"标签用":["21.4"],"属性来指定链接地址":["21.4"],"避免与未来":["21.5"],"版本中的新标签冲突":["21.5"],"例如":["21.5","52.1","64.1","80.0","107.12","113.6"],"再":["22.1"],"标签上设置属性":["22.1"],"为":["22.1"],"很容易被浏览器识别":["22.1"],"是一套用于构建用户界面的渐进式":["24.1"],"npm":["24.3","83.2","96.4","111.7"],"node":["24.3","91.10","96.7","106.9","106.11","106.15","107.21","110.1"],"package":["24.3","110.6"],"head":["24.4","61.3","85.7"],"进行数据插值":["24.6"],"将数据绑定到":["24.6"],"实例的数据绑定":["24.7"],"img":["24.7","96.6","137.9"],"并执行相应的方法":["24.13"],"指令实现表单输入和":["24.14"],"vue":["24.14","24.16","25.2","27.2","27.6","27.13","27.16","27.17","27.18","27.19","27.20","28.6","28.9","29.2","29.6","29.9","29.12","29.16"],"app":["24.17","108.14","129.2","132.1","132.3"],"模板已经编译完成":["24.18"],"但尚未将其挂载到":["24.18"],"dom":["24.18","28.3"],"中":["24.18","37.2","61.1","64.0","67.1","68.1","73.2","107.12"],"mounted":["24.18","27.27","27.28"],"挂载后":["24.18"],"渲染之后调用":["24.18"],"组件已经被挂载到":["24.18"],"router":["25.2","25.4"],"createrouter":["25.3"],"createwebhistory":["25.3"],"from":["25.3","26.3","27.8","27.18","27.19","27.20","29.2","84.2","84.6","96.11","98.2","98.3"],"组件中使用":["25.4"],"view":["25.4","127.7","128.2"],"以在单页面应用中切换不同的路由":["25.5"],"routes":["25.6","25.7"],"path":["25.6"],"user":["25.6","50.4","86.3","96.10","104.2","104.4","108.3","108.5"],"例如登录验证":["25.8"],"权限控制等":["25.8"],"了解更多高级配置":["25.12"],"应用程序开发的状态管理模式":["26.0"],"它是一个集中式的状态管理库":["26.0"],"获取器":["26.1"],"用于从":["26.1"],"的全局状态中派生出一些状态":["26.1"],"类似于组件的计算属性":["26.1"],"computed":["26.1","31.3"],"但是":["26.1","42.5","52.2"],"方便开发者进行状态的调试和追踪":["26.2"],"组件通信":["26.2"],"可以轻松实现跨组件的状态共享和通信":["26.2"],"避免了传统的":["26.2"],"state":["26.3","26.5","27.10"],"mutations":["26.3"],"actions":["26.3"],"getters":["26.3"],"import":["26.3","27.8","27.31","29.2","84.6","96.11"],"use":["26.3","80.0","104.3"],"假设我们有一个简单的计数器应用":["26.4"],"以下是使用":["26.4"],"的例子":["26.4"],"store":["26.4","26.5"],"vuex":["26.5"],"count":["26.5"],"increment":["26.5","51.2","53.1"],"go":["26.6"],"run":["26.6"],"true":["26.6","35.2","55.0","70.6","73.8","93.1","108.11","128.2"],"read":["26.6"],"book":["26.6"],"获取所有的todos":["26.6"],"alltodos":["26.6"],"script":["27.0","30.5","37.4"],"标签中添加":["27.0"],"setup":["27.0","27.23"],"就可以做到":["27.0"],"函数是":["27.1"],"新增的一个选项":["27.1"],"它是组合式":["27.1"],"使用reactive":["27.2"],"去修改值无须":["27.2"],"ref其实也是内部调用":["27.2"],"来实现的":["27.2"],"我是message":["27.4"],"obj":["27.6","35.9","38.2","38.11"],"hr":["27.7"],"reactive":["27.8","27.18","27.19","27.20","31.3"],"不论是响应式还是普通的":["27.9"],"如果原始对象是":["27.12"],"非响应式":["27.12"],"作用基本一致":["27.15"],"他们都是用来监听响应式状态发生变化的":["27.16"],"当响应式状态发生变化时":["27.16"],"就会触发一个回调函数":["27.16"],"let":["27.17","27.18","27.20","34.2","34.7","34.12","34.13","34.20","34.24","34.28","35.8","36.11","40.6","40.7","40.8","40.11","40.17","41.7","41.15","42.5","54.2","55.3","55.4","56.4","74.10","74.11","74.12","74.15","74.21","84.2","87.4","87.7","87.14","89.1","96.8","96.11","103.4","106.17"],"watch":["27.19"],"响应式":["27.21"],"追踪其依赖":["27.21"],"可以接收一个参数":["27.22"],"叫oninvalidate":["27.22"],"在组件的":["27.23"],"更新时机":["27.24"],"过程":["27.25"],"成为生命周期":["27.25"],"只调用一次":["27.27"],"元素插入父级dom调用":["27.27"],"any":["27.28","92.5"],"在元素上做些操作":["27.28"],"初始化一次":["27.28"],"el":["27.28"],"该值为":["27.29"],"oldvalue":["27.29"],"先前的值":["27.29"],"仅在":["27.29"],"beforeupdate":["27.29"],"updated":["27.29"],"中可用":["27.29"],"v":["27.30","28.12"],"move":["27.30"],"可以帮助我们提高代码的复用性":["27.31"],"让我们能在不同的组件中都利用":["27.31"],"函数":["27.31","71.3","71.5","71.12","93.0"],"案列":["27.31"],"实现一个窗口改变时获取宽高的":["27.31"],"hook":["27.31"],"组件通信方式":["28.1"],"props":["28.1"],"可以实现父子组件":["28.1"],"child":["28.2","28.7"],"info":["28.2"],"我爱祖国":["28.2"],"money":["28.2"],"子组件获取父组件传递数据":["28.2"],"一种是原生的":["28.3"],"标签绑定原生":["28.4"],"事件点击事件":["28.4"],"默认会给事件回调注入":["28.4"],"event":["28.4","62.12"],"事件对象":["28.4"],"我是子组件2":["28.5"],"click":["28.5","121.1","126.1"],"handler":["28.5"],"点击我触发xxx自定义事件":["28.5"],"我们会发现在":["28.5"],"但是在":["28.6"],"vue3":["28.6","28.10","29.13"],"中没有":["28.6"],"构造函数":["28.6"],"实现的":["28.7"],"下方代码":["28.7"],"相当于给组件":["28.7"],"传递一个":["28.7"],"与绑定一个自定义事件":["28.7"],"vue2":["28.8","91.6"],"框架中":["28.8"],"attrs属性与":["28.8"],"listeners":["28.8"],"比如":["28.8","28.9"],"那么子组件内部的方法与响应式数据父组件可以使用的":["28.9"],"在父组件挂载完毕获取组件实例":["28.9"],"父组件内部代码":["28.9"],"注入":["28.10"],"提供两个方法":["28.10"],"pinia":["28.11"],"web3doc":["28.11"],"父组件内部向指定的具名插槽传递结构":["28.12"],"需要注意":["28.12"],"可以替换为":["28.12"],"并且对":["29.5"],"menu":["29.6"],"data":["29.6","50.8","50.9","83.5","103.4","104.12","106.3"],"slot":["29.8","29.10"],"父组件使用需对应名称":["29.9"],"派发给父组件的":["29.10"],"去使用":["29.10"],"父组件":["29.11","29.16"],"defineasynccomponent":["29.12"],"异步加载":["29.12"],"新增了":["29.13"],"了":["29.13"],"就不必跟踪何时加载数据并呈现相应的内容":["29.13"],"react":["29.14"],"portal":["29.14"],"主要解决的问题":["29.14"],"因为teleport节点挂载在其他指定的dom节点下":["29.14"],"只会触发":["29.15"],"基本":["29.15"],"component":["29.15"],"children":["29.16"],"modelvalue":["29.17"],"update":["29.17"],"input":["29.17","124.4"],"新增":["29.17"],"一个组件可以设置多个":["29.17"],"bash":["30.1","91.9","91.10"],"g":["30.2"],"版本在":["30.3"],"choose":["30.4"],"version":["30.4"],"of":["30.4"],"that":["30.4"],"you":["30.4"],"want":["30.4"],"to":["30.4"],"标签上支持原生":["30.5"],"esm":["30.5"],"yarn":["30.6"],"create":["30.6","102.4"],"init":["30.7","85.3","96.6","110.4","137.11"],"one":["31.1"],"piece":["31.1"],"初次渲染快55":["31.2"],"zhangsan":["32.1","42.4"],"lisi":["32.1"],"send":["32.2","50.6","57.5","104.2","104.4","108.14"],"getname":["32.2","75.2"],"子组件":["32.2"],"tip":["32.3","35.5","35.6","39.12","70.0"],"常用的就是定义":["32.3"],"default":["32.4"],"是一种可以按顺序保存数据的数据类型":["34.0"],"使用场景":["34.0"],"声明数组并赋值称为数组的初始化":["34.1"],"这种字面量方式也是最多的使用方式":["34.1"],"利用new":["34.1"],"arr":["34.2","35.10","55.5","56.2","56.3"],"aa":["34.2"],"bb":["34.2"],"cc":["34.2"],"dd":["34.2"],"ee":["34.2"],"增":["34.5"],"删":["34.5","40.1"],"push":["34.6","90.6"],"colors":["34.7","34.8","34.9","34.12","34.13","34.17","34.26"],"red":["34.9","34.12","34.13","34.14","34.17","34.26"],"green":["34.9","34.10","34.14","34.17","34.26","87.6"],"blue":["34.9","34.10","34.14","34.17","87.6","118.0"],"colors2":["34.10","34.15"],"pop":["34.11","135.1","135.2"],"splice":["34.16"],"indexof":["34.18"],"numbers":["34.19","34.20","34.28","34.29"],"reverse":["34.22"],"values":["34.24"],"都不改变原数组":["34.27"],"有如下":["34.27"],"alert":["35.1","78.3"],"yes":["35.1"],"else":["35.1","53.5","57.5","75.3"],"no":["35.1","96.8"],"会自上向下依次对":["35.2"],"后的条件表达式进行求值判断":["35.2"],"如果条件表达式结果为":["35.2"],"则执行当前":["35.2"],"后的语句":["35.2"],"执行完毕语句结束":["35.2"],"false":["35.2","39.7","39.10","73.8","87.3","87.12"],"则继续向下判断":["35.2"],"直到找到":["35.2"],"表达式2":["35.3"],"表达式3":["35.3"],"while":["35.4","36.9"],"语句":["35.4"],"i":["35.8","55.2","56.4","73.6","79.2"],"可迭代对象":["35.10"],"需要执行的代码":["35.10"],"示例":["35.10"],"j":["35.11"],"if":["35.11","54.3","54.6","89.5"],"可能会定义非常多的相同代码或者功能相似的代码":["36.0"],"这些代码可能需要大量重复使用":["36.0"],"声明定义方式":["36.2"],"sayhi":["36.3"],"hi":["36.3"],"声明函数的关键字":["36.3"],"对外只提供一个简单的函数接口":["36.4"],"我们可以利用函数的参数实现函数重复不同的代码":["36.6"],"函数名":["36.6"],"形参1":["36.6"],"如果实参的个数和形参的个数一致":["36.7"],"则正常输出结果":["36.7"],"以最后一个为准":["36.8"],"函数没有":["36.8"],"返回的值是":["36.8"],"undefined":["36.8","41.16","42.3","87.8"],"函数返回值注意事项":["36.8"],"终止函数":["36.8"],"getsum":["36.8"],"num1":["36.8","41.11"],"num2":["36.8"],"没有名字的函数":["36.10"],"fn":["36.11"],"xxx":["36.12","86.3"],"它也可以在服务器端运行":["37.0"],"用于编写后端代码":["37.0"],"输出hello":["37.1"],"world":["37.1","38.8","40.9","74.13"],"然后浏览器才能执行":["37.2"],"lang":["37.3"],"en":["37.3"],"结尾的文件中":["37.4"],"然后通过":["37.4"],"快捷键":["37.6","37.7"],"是一种无序的复合数据集合":["38.2"],"var":["38.2","38.9","38.11","42.3","53.1","69.3","81.8","96.8","116.1"],"foo":["38.2","40.8","40.13","74.12","74.17"],"bar":["38.2","38.8"],"上面代码中":["38.3","38.4","38.7","38.8"],"对象":["38.3","38.10","50.2","50.3","108.11","117.2","117.3"],"的所有键名虽然看上去像数值":["38.3"],"实际上都被自动转成了字符串":["38.3"],"如果键名不符合标识名的条件":["38.3"],"比如第一个字符为数字":["38.3"],"或者含有空格或运算符":["38.3"],"且也不是数字":["38.3"],"则必须加上引号":["38.3"],"否则会报错":["38.3"],"报错":["38.3"],"指向同一个对象":["38.4"],"因此为其中任何一个变量添加属性":["38.4"],"另一个变量都可以读写该属性":["38.4"],"此时":["38.4"],"表示一个代码区块":["38.5"],"里面有一个标签":["38.5"],"指向表达式":["38.5"],"为了避免这种歧义":["38.5"],"引擎的做法是":["38.5"],"如果遇到这种情况":["38.5"],"引用对象":["38.7"],"而且":["38.10"],"方法的返回值也不再包括该属性":["38.10"],"注意":["38.10"],"删除一个不存在的属性":["38.10"],"不报错":["38.10"],"而且返回":["38.10"],"循环有两个使用注意点":["38.12"],"它遍历的是对象所有可遍历":["38.12"],"enumerable":["38.12"],"的属性":["38.12"],"会跳过不可遍历的属性":["38.12"],"它不仅遍历对象自身的属性":["38.12"],"style":["38.13"],"是用于实现赋值":["39.1"],"比较和执行算数运算等动能的符号":["39.1"],"除":["39.2"],"时才会对变量进行赋值":["39.3"],"加等于":["39.3"],"n":["39.3"],"所返回的值不同":["39.5"],"是自增前的值":["39.5"],"旧值":["39.5"],"是自增后的值":["39.5"],"都会使原变量立刻减少":["39.6"],"不同的是":["39.6"],"大于号":["39.7"],"小于等于号":["39.7"],"与运算是短路的与":["39.9"],"如果第一个值为":["39.9","39.10"],"则不看第二个值":["39.9","39.10"],"与运算是找":["39.9"],"或运算也是短路的或":["39.10"],"执行顺序":["39.12"],"再进行操作":["40.2","74.6"],"lo":["40.4","74.8"],"常见的有":["40.5","74.9"],"trim":["40.5","74.9"],"stringvalue":["40.6","40.8","74.10","74.12"],"chatat":["40.10","74.14"],"startswith":["40.13","74.17"],"str":["40.15","41.14","74.19"],"字符串设计了几个方法":["40.16","74.20"],"cat":["40.17","40.19","74.21","74.23"],"否则返回":["40.18","74.22"],"bat":["40.19","74.23"],"种":["41.1"],"hexnum1":["41.2"],"0xa":["41.2"],"16进制的10":["41.2"],"浮点类型则在数值汇总必须包含小数点":["41.2"],"还可通过科学计数法表示":["41.2"],"就相当于给变量赋予了":["41.3"],"值":["41.3"],"firstname":["41.4"],"lastname":["41.4","88.10"],"传一个":["41.5"],"会返回":["41.5"],"的原因":["41.5"],"可以将其他类型的数据转化成布尔值":["41.6"],"规则如下":["41.6"],"数据类型":["41.6"],"转换为":["41.6"],"genericsymbol":["41.7"],"属性名可以是字符串或数值":["41.9"],"并且":["41.10"],"数组也是动态大小的":["41.10"],"会随着数据添加而自动增长":["41.10"],"sum":["41.11"],"date":["41.12","69.3"],"abc":["41.15"],"11px":["41.15"],"null":["41.16","54.3"],"都转换为":["41.16"],"基本数据类型存储在栈中":["41.17"],"赋值操作":["41.18"],"zs":["41.19","104.2"],"引用类型对应的值存储在堆中":["41.20"],"出错":["42.1"],"在函数内定义变量时省略":["42.1"],"操作符":["42.1"],"可以创建一个全局变量":["42.1"],"referenceerror":["42.2","42.6"],"没有定义":["42.2"],"不能重复声明":["42.2"],"的元素":["43.1"],"修改文档结构":["43.1"],"getelementbyid":["43.2"],"创建一个新的段落元素":["43.2"],"forward":["44.1"],"back":["44.2"],"它提供了操作浏览器窗口的方法和属性":["45.0"],"如打开":["45.0"],"关闭窗口":["45.0"],"调整窗口大小":["45.0"],"以及获取窗口的位置和尺寸等":["45.0"],"document":["45.0","62.9","63.1","66.3","128.2","131.1"],"它代表当前窗口或标签页中加载的文档":["45.0"],"它提供了对文档内容进行访问和操作的方法和属性":["45.0"],"对象提供了与当前窗口的":["46.0"],"url":["46.0","50.4","50.9","96.12","106.16"],"的协议部分":["46.1"],"hostname":["46.1"],"获取url的协议":["46.2"],"用于识别浏览器和操作系统":["47.1"],"useragent":["47.2"],"获取浏览器的名称":["47.2"],"屏幕的高度":["48.1"],"屏幕高度":["48.2"],"对象是":["49.0"],"打开一个新的浏览器窗口或标签页":["49.1"],"close":["49.1","106.4"],"com":["49.2","135.1","135.2","137.11"],"即异步的":["50.1"],"的核心对象":["50.2"],"xmlhttprequest":["50.2"],"通过":["50.2","50.3","81.12","88.0","113.7"],"method":["50.4","84.5","106.16"],"async":["50.4"],"xhr":["50.5"],"未发送":["50.6"],"headers":["50.6"],"received":["50.6"],"以获取响应头":["50.6"],"方法已经被调用":["50.6"],"响应头和响应状态已经返回":["50.6"],"loading":["50.6"],"正在下载响应体":["50.6"],"get":["50.8","88.9"],"touppercase":["50.8"],"datatype":["50.8","98.1"],"json":["50.8","50.9","56.2","66.4","110.5","110.6","111.4"],"params":["50.8","84.5"],"发送请求":["50.8"],"是":["51.0","58.0"],"outervariable":["51.1","59.3"],"innerfunction":["51.1","59.2","59.3","59.4"],"getage":["51.3","75.2"],"工厂函数可以包含一些内部变量和方法":["51.4"],"这些内部变量和方法对外部不可见":["51.4"],"只有通过返回的对象实例才能访问":["51.4"],"实现模块化":["51.4"],"闭包中的变量是引用传递的":["51.5"],"而不是传值":["51.5"],"如果在闭包中修改外部变量":["51.5"],"那么外部作用域中的变量也会被修改":["51.5"],"可以使用一些简单的方法来实现浅拷贝":["52.1"],"assign":["52.1"],"此方法将原始对象转换为":["52.2"],"字符串":["52.2"],"然后再将":["52.2"],"字符串解析为一个新的对象":["52.2"],"从而实现深拷贝":["52.2"],"需要注意的是":["52.2"],"此方法对于无法序列化的属性":["52.2"],"如函数":["52.2"],"正则表达式":["52.2"],"循环引用等":["52.2"],"返回一个新函数":["53.1"],"每个函数接收一个参数并返回一个新函数":["53.2"],"使得函数的组合和复合变得简单而灵活":["53.2"],"高阶函数的创建":["53.2"],"可以将原始函数转化为高阶函数":["53.2"],"即接收一个函数作为参数并返回一个新函数的函数":["53.2"],"中实现柯里化函数的方法有多种":["53.3"],"length":["53.4","53.5","53.6","90.7"],"apply":["53.4","54.3","54.7"],"是两种常见的性能优化技术":["54.0"],"用于限制函数的执行频率":["54.0"],"它们可以帮助控制事件处理函数的触发次数":["54.0"],"以减少资源消耗和提升用户体验":["54.0"],"resize":["54.1","54.4"],"throttle":["54.2","54.7"],"func":["54.2"],"delay":["54.2"],"那么定时器触发后执行函数":["54.5"],"如果在指定时间内又有新的函数调用发生":["54.5"],"则重新开始计时":["54.5"],"以下是一个简单的防抖函数的实现示例":["54.5"],"context":["54.6","114.1","114.2","119.6","121.2"],"this":["54.6","54.7","75.1","75.2","76.2","79.2","81.7","88.1","88.6","88.8","88.10","90.6"],"args":["54.6"],"arguments":["54.6"],"res":["55.3","55.4","55.6","103.4","104.2","104.4","104.5","104.6","106.16","108.5","108.14"],"unique":["55.5"],"res1":["56.1"],"stringify":["56.2","57.5"],"有三种状态":["57.0"],"pending":["57.0"],"进行中":["57.0"],"fulfilled":["57.0"],"已成功":["57.0"],"catch":["57.2","57.4","83.3","83.4"],"方法可以处理异步操作失败的结果":["57.2"],"处理第一个操作成功的结果":["57.3"],"anotherpromise":["57.3"],"promise2":["57.4"],"promise3":["57.4"],"results":["57.4"],"处理所有":["57.4"],"实例成功的结果":["57.4"],"error":["57.5","83.3","87.10","90.7","96.8"],"statustext":["57.5"],"onerror":["57.5"],"network":["57.5"],"示例用法":["57.5"],"requestdata":["57.5"],"username":["57.5","66.1","66.3","96.10"],"是回调函数":["58.1"],"输出结果为":["58.3"],"打印结果":["58.3","58.4"],"这里注意初始值要默认赋予空对象":["58.4"],"不然会报错":["58.4"],"newarr":["58.5","58.7"],"chinese":["58.8"],"建议始终提供":["58.9"],"initialvalue":["58.9"],"来明确指定累加器的初始值":["58.9"],"以避免空数组或其他边界情况可能导致的错误":["58.9"],"globalfunction":["59.1"],"outer":["59.2","59.3","59.4","62.10"],"innervariable":["59.2"],"outerfunction":["59.3"],"在末尾":["60.1"],"结束标签前":["60.1"],"insertbefore":["60.1"],"在父节点中任意子节点之前插入新节点":["60.1"],"如下代码演示":["60.1"],"h3":["60.1"],"删除节点时一定是由父子关系":["60.2"],"它们要么是父子关系":["60.3"],"apis":["60.4"],"parentnode":["60.4"],"获取父节点":["60.4"],"以相对位置查找节点":["60.4"],"实际应用中非常灵活":["60.4"],"table":["60.4","98.1","102.4","102.5","102.7"],"tr":["60.4"],"td":["60.4"],"文本或其他类型的内容":["61.1"],"在":["61.1"],"浏览器将":["61.1"],"标签":["61.3"],"如上图中":["61.3"],"是学习":["61.4"],"的核心":["61.4"],"事件处理是":["62.0"],"便立即调用一个函数":["62.1"],"对象专门用来添加事件监听的方法":["62.2"],"它的两个参数分别为":["62.2"],"事件类型":["62.2"],"事件回调":["62.2"],"以避免不必要的事件处理":["62.3"],"可以使用以下方法来移除事件监听器":["62.3"],"该事件在鼠标指针每次移动时都会触发":["62.5"],"可以用于实时跟踪鼠标位置":["62.5"],"mouseover":["62.5"],"当鼠标指针进入元素的可见区域时触发":["62.5"],"mouseout":["62.5"],"当鼠标指针离开元素的可见区域时触发":["62.5"],"mouseenter":["62.5"],"addeventlistener":["62.6","62.7","62.9"],"keydown":["62.6","62.11"],"当文本框内容发生改变并失去焦点时触发":["62.8"],"事件不同":["62.8"],"事件在用户完成输入并离开文本框时才会触发":["62.8"],"queryselector":["62.9","124.3"],"事件流是事件在执行时的底层机制":["62.10"],"主要体现在父子盒子之间事件的执行上":["62.10"],"键盘事件":["62.11"],"keyup":["62.11"],"keypress":["62.11"],"在事件处理程序中":["62.12"],"通过判断事件的目标元素":["62.12"],"target":["62.12"],"来确定是哪个子元素触发了事件":["62.12"],"根据需要对目标元素进行处理":["62.12"],"appendchild":["63.0","127.7","128.2","131.1"],"newelement":["63.1"],"设置元素的文本内容":["63.2"],"textcontent":["63.2"],"属性或":["63.2"],"innertext":["63.2"],"添加为":["63.3"],"的子元素":["63.3"],"将元素插入到已有元素之前":["63.3"],"是你要修改的":["64.1"],"样式属性的名称":["64.1"],"切换类名":["64.2"],"toggle":["64.2"],"getelementsbyclassname":["65.0","65.1"],"根据类名获取元素节点集合":["65.0"],"elementid":["65.1"],"通过类名获取元素":["65.1"],"传入类名":["65.1"],"修改元素的":["65.2"],"是由服务器发送到浏览器的小型文本文件":["66.0"],"expires":["66.1","66.3"],"fri":["66.1"],"dec":["66.1"],"的值":["66.4"],"存储的值通常是字符串类型":["66.4"],"如果需要存储其他数据类型":["66.4"],"如对象或数组":["66.4"],"可以使用":["66.4"],"storage":["67.0","68.0"],"api":["67.0","68.0","108.14"],"提供的一种本地存储机制":["67.0","68.0"],"其中":["67.1","68.1"],"中检索数据":["67.2","68.2"],"如果键不存在":["67.2","68.2"],"中的数据":["67.3","68.3"],"removeitem":["67.4","68.4"],"key":["67.4","68.4","90.5"],"clear":["67.5","68.5"],"方法来删除":["67.5","68.5"],"setitem":["67.6","68.6"],"storeduser":["67.6","68.6"],"getminutes":["69.1"],"获取分钟数":["69.1"],"getmonth":["69.1"],"获取月份":["69.1"],"一月":["69.1"],"mydate":["69.2","69.3"],"秒起至现在的总秒数或毫秒数":["69.4"],"它是一种特殊的计量时间的方式":["69.4"],"注":["69.4"],"ecmascript":["69.4","76.0"],"中时间戳是以毫秒计的":["69.4"],"获取时间戳的方法":["69.4"],"分别为":["69.4"],"setfullyear":["69.5"],"用于处理各种不同类型的数据和操作":["70.0"],"简介":["70.0"],"数组":["70.1","78.5","81.12"],"string":["70.1","87.1","87.5","87.13","87.14","88.11","92.2","92.5","92.6"],"字符串对象":["70.1"],"number":["70.1","87.5","87.9","88.2","89.3","89.4","95.1"],"的基础对象":["70.2"],"它提供了一系列的方法来操作和处理数据集合":["70.3"],"如添加":["70.3"],"它提供了许多字符串相关的方法":["70.4"],"它提供了一系列数字相关的方法":["70.5"],"如四舍五入":["70.5"],"包括":["70.6"],"它提供了一系列的方法来操作日期和时间":["70.7"],"如获取当前时间":["70.7"],"它提供了一系列数学运算方法":["70.8"],"可以用于文本匹配":["70.9"],"的一个内置对象":["71.0"],"它提供了一些数学属性和方法":["71.0"],"获取圆周率":["71.1"],"到小于":["71.4"],"返回大于或等于一个给定数的最小整数":["71.5"],"返回小于或等于一个给定数字的最大整数":["71.6"],"取整":["71.7"],"是可以返回指定一组数据中最小值":["71.8"],"是可以返回指定一组数据中最大值":["71.9"],"exponent":["71.10"],"次幂":["71.10"],"求某个数的多少次方":["71.10"],"返回一个值的正弦值":["71.12"],"返回一个值的余弦值":["71.13"],"中能表示的最小正数值":["72.1"],"tofixed":["72.2"],"digits":["72.2"],"将数值转换为指定小数位数的字符串表示":["72.2"],"表示保留的小数位数":["72.2"],"toprecision":["72.2"],"precision":["72.2"],"将数值转换为指定精度的字符串表示":["72.2"],"表示有效位数":["72.2"],"tostring":["72.2"],"将数值转换为字符串":["72.2"],"是一个内置的对象类型":["73.1"],"可以通过字面量或构造函数来创建":["73.1"],"正则表达式是一种由字符和特殊符号组成的模式":["73.1"],"用于定义字符串的搜索规则":["73.1"],"它接收两个参数":["73.4"],"匹配字符串的结尾":["73.5"],"匹配前面的元素零次或多次":["73.5"],"全局匹配":["73.6"],"找到所有匹配项而不仅仅是第一个":["73.6"],"匹配数字":["73.7"],"匹配非数字":["73.7"],"test":["73.8","87.8"],"检查字符串是否匹配正则表达式":["73.8"],"并返回":["73.8"],"或":["73.8","83.4","96.8","106.17"],"exec":["73.8"],"在字符串中执行正则表达式匹配":["73.8"],"输出":["73.9"],"不区分大小写匹配":["73.10"],"m":["73.10","85.6","136.9"],"多行匹配":["73.10"],"允许":["73.10"],"密码等":["73.11"],"字符串替换":["73.11"],"使用正则表达式进行文本替换":["73.11"],"格式化或删除特定的字符":["73.11"],"包左不包右":["74.3"],"解释":["74.3","74.4"],"从字符串中截取指定的内容":["74.3","74.4","74.5"],"不会修改原字符串":["74.3","74.5"],"而是将截取到的内容返回":["74.3","74.5"],"slice":["74.4"],"warning":["74.5"],"prototype":["75.1"],"公有方法":["75.2"],"instanceof":["75.3"],"dog":["75.3"],"woof":["75.3"],"但在":["76.0"],"其中程序被组织为一组对象":["77.1"],"封装":["77.2"],"封装是面向对象编程的重要原则":["77.2"],"它指的是将数据和操作数据的方法封装在一个单元中":["77.2"],"以隐藏内部实现细节":["77.2"],"只暴露必要的接口":["77.2"],"继承":["77.2"],"大家好啊":["78.3"],"调用对象":["78.3"],"来调用构造函数":["78.4"],"构造函数的特点有两个":["78.4"],"函数体内部使用了":["78.4"],"代表了所要生成的对象实例":["78.4"],"生成对象的时候":["78.4"],"必须使用":["78.4"],"命令":["78.4"],"freeze":["78.5"],"冻结一个对象":["78.5"],"防止对其进行修改":["78.5"],"getownpropertydescriptor":["78.5"],"obj2":["78.6"],"myproto":["78.7"],"descriptor":["78.11"],"symbol":["78.13"],"mysymbol":["78.13"],"添加属性无效":["78.18"],"不会影响原对象":["78.18"],"delete":["78.18"],"原型和原型链是面向对象编程中的重要概念":["79.0"],"原型对象是另一个普通对象":["79.1"],"它包含了可供共享的属性和方法":["79.1"],"当我们访问对象的属性或方法时":["79.1"],"会首先在对象自身查找":["79.1"],"如果找不到":["79.1"],"则继续在对象的原型上查找":["79.1"],"am":["79.2"],"这样可以节省内存空间":["79.3"],"setprototypeof":["79.4"],"要在整个脚本文件中启用严格模式":["80.0"],"只需在脚本的顶部添加一行":["80.0"],"即可":["80.0"],"准确来说":["81.1"],"是在函数发生预编译的前一刻":["81.1"],"这个隐含的参数就是":["81.2"],"以函数形式调用":["81.3"],"this是window":["81.3"],"可以理解成":["81.3"],"的形式调用时":["81.3"],"指向调用方法的那个对象":["81.3"],"绑定":["81.4"],"无论":["81.4"],"专门为我们提供了一些方法来改变函数内部的":["81.5"],"它还可以改变这个函数内部的":["81.7"],"指向":["81.7"],"call":["81.10"],"类似":["81.10"],"方法的应用":["81.10"],"由于":["81.10"],"fn1":["81.11","89.4"],"传的刚好是":["81.12"],"所以我们可以":["81.12"],"曲线救国":["81.12"],"举例":["81.12"],"方法使用得最为频繁":["81.14"],"如果有些函数":["81.14"],"我们不需要立即调用":["81.14"],"但是又想改变这个函数内部的":["81.14"],"此时用":["81.14"],"items":["82.2"],"promise":["83.1"],"或者":["83.3","87.9","107.16"],"普通错误处理":["83.4"],"代码异常处理":["83.4"],"在请求或响应被":["83.4"],"then":["83.4"],"处理前拦截它们":["83.4"],"实现请求":["84.1"],"响应拦截器功能":["84.1"],"localstorage":["84.3"],"getitem":["84.3"],"请求头携带":["84.3"],"设置请求头":["84.3"],"status":["84.4","85.4","108.14"],"case":["84.4"],"接口重定向了":["84.4"],"break":["84.4"],"参数不正确":["84.4"],"postaction":["84.6"],"sys":["84.6"],"在页面中调用":["84.6"],"总是会有所不一样":["84.7"],"十分钟封装一个好用的":["84.7"],"email":["85.1"],"将本地库所有变更添加到暂存区":["85.5"],"or":["85.6"],"filename":["85.7"],"比较暂存区和":["85.7"],"的所有差异":["85.7"],"查看极简日志信息":["85.8"],"oneline":["85.8"],"查看最近":["85.8"],"branch":["85.11","85.12"],"checkout":["85.13"],"分支合并到":["85.14"],"分支":["85.14"],"discard":["85.15"],"changes":["85.15"],"working":["85.15"],"directory":["85.15"],"而不新建":["85.16"],"reference":["85.16"],"为远程仓库起别名":["85.18"],"拉取远程分支":["85.20"],"并与本地分支合并":["85.20"],"表示将本地分支推送到与之存在追踪关系的远程分支":["85.21"],"通常两者同名":["85.21"],"如果该远程分支不存在":["85.21"],"则会被新建":["85.21"],"在空白处点鼠标右键选择":["86.2"],"keygen":["86.4"],"t":["86.4"],"rsa":["86.4","86.5"],"pub文件":["86.5"],"就可以克隆ssh地址了":["86.6"],"num":["87.2"],"普通数字":["87.2"],"也可以通过函数返回布尔值":["87.3"],"可以在元素类型后面接上":["87.4"],"表示由此类型元素组成的一个数组":["87.4"],"ts":["87.4","87.14","88.11","89.4","91.3","92.1","94.0","96.11"],"ok":["87.5"],"增长枚举":["87.6"],"不能带有return":["87.8"],"也可以定义":["87.8"],"是所有类型的子类型":["87.9"],"就是说你可以把":["87.9"],"赋值给":["87.9"],"将不会有返回值":["87.10"],"但本身不会出错":["87.11"],"编译成功":["87.12"],"man":["87.13"],"sex":["87.13"],"方式二":["87.14"],"使用any临时断言":["87.14"],"somevalue":["87.14"],"作为对象的模板":["88.0"],"distance":["88.2"],"private":["88.3"],"在类型":["88.8"],"上不存在":["88.8"],"boolean":["88.9"],"personclass2":["88.9"],"set":["88.9","99.5","102.7"],"fullname":["88.10"],"是指不包含具体实现的方法":["88.11"],"constructor":["88.11"],"public":["88.11","104.3"],"匿名函数":["89.1"],"箭头函数":["89.1"],"myadd":["89.1"],"同样也可以有任意个":["89.4"],"编译器创建参数数组":["89.4"],"名字是你在省略号":["89.4"],"后面给定的名字":["89.4"],"你可以在函数体内使用这个数组":["89.4"],"在实现上我们要注意严格判断两个参数的类型是否相等":["89.5"],"而不能简单的写一个":["89.5"],"typeof":["89.5"],"不预先指定具体的类型":["90.0"],"u":["90.5"],"getvalue":["90.6"],"类型":["90.7","104.15"],"typescript":["91.1"],"的简称":["91.1"],"的基础上加入了类型系统":["91.2"],"让每个参数都有明确的意义":["91.2"],"从而带来了更加":["91.2"],"边解释边执行":["91.3"],"错误只有在运行的时候才能发现":["91.3"],"友好地在编辑器里提示错误":["91.5"],"如以前在":["91.6"],"global":["91.7"],"add":["91.7","127.7","135.1","137.1","137.11"],"查看版本":["91.7"],"tsc":["91.7"],"interfaces":["92.0"],"这样写是会报错的":["92.1"],"因为我们在person定义了name":["92.1"],"stirng":["92.3"],"带有可选属性的接口与普通的接口定义差不多":["92.4"],"在可选属性名字定义的后面加一个":["92.4"],"符号":["92.4"],"propname":["92.5"],"允许添加新的任意属性":["92.5"],"编译正确":["93.1"],"declaration":["94.0"],"生成相应的":["94.0"],"sourcemap":["94.0"],"outfile":["94.0"],"将输出文件合并为一个文件":["94.0"],"outdir":["94.0"],"指定输出目录":["94.0"],"rootdir":["94.0"],"用来控制输出目录结构":["94.0"],"removecomments":["94.0"],"删除编译后的所有的注释":["94.0"],"noemit":["94.0"],"不生成输出文件":["94.0"],"importhelpers":["94.0"],"相当于":["95.1"],"定义函数别名":["95.2"],"eslint":["96.2"],"stylelint":["96.2"],"prettier":["96.2"],"来对我们的代码质量做检测和修复":["96.2"],"环境准备":["96.3"],"pnpm":["96.4"],"performant":["96.4"],"意味":["96.4"],"高性能的":["96.4"],"项目配置":["96.5"],"eslintrc":["96.6"],"cjs":["96.6"],"npx":["96.6"],"配置文件":["96.6"],"module":["96.6"],"exports":["96.6","107.7"],"运行环境":["96.6"],"运行更漂亮的eslint":["96.7"],"使prettier规则优先级更高":["96.7"],"eslint优先级低":["96.7"],"关闭规则":["96.8"],"warn":["96.8"],"打开的规则作为警告":["96.8"],"不影响代码执行":["96.8"],"规则作为一个错误":["96.8"],"代码不能执行":["96.8"],"界面报错":["96.8"],"要求使用":["96.8"],"而不是":["96.8"],"multiple":["96.8"],"empty":["96.8"],"styles":["96.9"],"目录下创建一个":["96.9"],"index":["96.9","97.0"],"文件":["96.9","96.10","110.6","137.6"],"当然项目中需要用到清除默认样式":["96.9"],"因此在":["96.9"],"引入":["96.9"],"reset":["96.9"],"去创建我们需要":["96.10"],"数据与接口":["96.10"],"文件夹内部创建一个":["96.10"],"用户信息数据":["96.10"],"createuserlist":["96.10"],"userid":["96.10"],"avatar":["96.10"],"wpimg":["96.10"],"wallstcn":["96.10"],"f778738c":["96.10"],"e4f8":["96.10"],"b634":["96.10"],"56703b4acafe":["96.10"],"gif":["96.10"],"admin":["96.10"],"elmessage":["96.11"],"element":["96.11"],"plus":["96.11"],"创建axios实例":["96.11"],"loginformdata":["96.12"],"loginresponsedata":["96.12"],"userinforeponsedata":["96.12"],"项目用户相关的请求地址":["96.12"],"enum":["96.12"],"login":["96.12","108.14","111.5"],"配置对应的信息":["97.1"],"检查配置文件是否配置成功":["97.1"],"数据库的常用命令包括管理数据库和表的命令":["98.0"],"databases":["98.1"],"列出所有数据库":["98.1"],"column1":["98.1","102.5","102.6"],"向表中插入数据":["98.2"],"select":["98.2"],"提供了多种数据类型":["99.0"],"用于定义表中列":["99.0"],"int":["99.1"],"常用的整数类型":["99.1"],"个字符":["99.3"],"varchar":["99.3"],"ss":["99.4"],"datetime":["99.4"],"存储日期和时间":["99.4"],"存储枚举值":["99.5"],"从一个预定义的值列表中选择一个值":["99.5"],"tables":["100.0"],"组成":["100.0"],"每个表包含多个记录":["100.0"],"允许用户根据需要自由地修改和定制其源代码":["100.1"],"跨平台支持":["100.1"],"mysql可以在多个操作系统上运行":["100.1"],"包括windows":["100.1"],"macos和各种linux发行版":["100.1"],"服务器":["102.0"],"命令行客户端":["102.1"],"中创建一个新的数据库":["102.2"],"用于存储数据":["102.2"],"sql":["102.3","102.8"],"column2":["102.6"],"语句从表中删除数据":["102.8"],"shell":["103.1","103.5","111.5","111.7"],"install":["103.2","104.10","107.16","112.2"],"movie":["103.3"],"on":["103.4","126.1"],"chunk":["103.4"],"得到数据流":["103.4"],"通过字符串得到html结构":["103.4"],"美丽人生":["103.6"],"la":["103.6"],"vita":["103.6"],"è":["103.6"],"bella":["103.6"],"p2578474613":["103.6"],"辛德勒的名单":["103.6"],"schindler":["103.6"],"list":["103.6","104.4"],"p492406163":["103.6"],"星际穿越":["103.6"],"interstellar":["103.6"],"p2614988097":["103.6"],"盗梦空间":["103.6"],"inception":["103.6"],"平台":["104.0"],"并向客户端响应具体的内容":["104.2"],"req":["104.2","104.4","104.5","104.6","106.16","108.5","108.11","108.14"],"gender":["104.2"],"files":["104.3"],"next":["104.5","104.6"],"三个参数":["104.5"],"mw2":["104.7"],"调用了第二个局部生效的中间件":["104.7"],"两种定义局部中间件的方式":["104.7"],"错误级别的中间件":["104.8"],"用来捕获整个项目中发生的异常错误":["104.8"],"从而防止项目异常崩溃的问题":["104.8"],"错误级别中间件的处理函数中":["104.8"],"必须有":["104.8"],"个形参":["104.8"],"形参顺序从前到后分别是":["104.8"],"err":["104.8"],"错误级别的中间件必须注册在所有路由之后":["104.8"],"require":["104.8","106.3","106.6","107.9","107.19","108.2"],"代码跨域获取资源":["104.11"],"浏览器的同源安全策略默认会阻止网页":["104.11"],"跨域":["104.11"],"获取资源":["104.11"],"但如果接口服务器配置了":["104.11"],"个请求头":["104.12"],"accept":["104.12","104.14"],"language":["104.12","104.14"],"dpr":["104.12"],"downlink":["104.12"],"save":["104.12","109.0"],"请求头中包含自定义头部字段":["104.15"],"向服务器发送了":["104.15"],"runtime":["105.1"],"environment":["105.1"],"是一个基于":["105.1"],"的性能和效率非常高":["105.2"],"传统的":["105.2"],"java":["105.2"],"语言是一个请求开启一个线程":["105.2"],"当请求处理完毕后就关闭这个线程":["105.2"],"而":["105.2"],"时的劣势":["105.3"],"模式":["106.1"],"说明":["106.1"],"r":["106.1"],"读取文件":["106.1"],"文件不存在抛异常":["106.1"],"读取的数据":["106.3"],"如果未指定编码格式则返回一个":["106.3"],"buffer":["106.3"],"监听流的开启和关闭":["106.4"],"这几个监听不是必须的":["106.4"],"once":["106.4","106.7"],"open":["106.4"],"可读流打开了":["106.4"],"flag":["106.6"],"若是字符串则指定编码格式":["106.6"],"回调函数":["106.6"],"ws":["106.7"],"createwritestream":["106.7"],"hello3":["106.7"],"txt":["106.7"],"进制的形式显示":["106.8"],"每一个元素范围是":["106.8"],"00":["106.8"],"ff":["106.8"],"即":["106.8"],"原因":["106.9"],"代码在运行的时候":["106.9"],"会以执行":["106.9"],"命令时所处的目录":["106.9"],"截断文件":["106.10"],"truncate":["106.10"],"len":["106.10"],"truncatesync":["106.10"],"建立目录":["106.10"],"mkdir":["106.10"],"mode":["106.10"],"模块是":["106.11","106.15"],"会被忽略":["106.12"],"pathstr":["106.12"],"ext":["106.13"],"文件路径":["106.13"],"文件扩展名":["106.13"],"fpath":["106.14"],"not":["106.17"],"found":["106.17"],"判断用户请求的是否为":["106.17"],"模块是可组合":["107.2"],"分解和更换的单元":["107.2"],"提高维护性":["107.3"],"内置模块":["107.5"],"和函数作用域类似":["107.6"],"在自定义模块中定义的变量":["107.6"],"将模块内的成员共享出去":["107.7"],"变量代表当前模块":["107.8"],"导入自定义模块时":["107.11"],"若省略文件扩展名":["107.11"],"则":["107.11","107.21"],"进行加载":["107.12","107.22"],"直到":["107.12"],"文件系统的根目录":["107.12"],"假设在":["107.12","107.22"],"main":["107.13","107.23"],"作为":["107.13"],"中的内置模块与自定义模块":["107.15"],"包是由第三方个人或团队开发出来的":["107.15"],"免费供所有人使用":["107.15"],"包的元整名称":["107.16"],"registry":["107.17"],"查看当前包镜像源":["107.17"],"包的入口文件":["107.18"],"readme":["107.18"],"md":["107.18"],"包的说明文档":["107.18"],"模块的代码只会被执行一次":["107.19"],"这样的路径标识符":["107.21"],"会把它当作内置模块或第三方模块进行加载":["107.21"],"直到文件系统的根目录":["107.22"],"users":["107.22"],"lemomn":["107.22"],"project":["107.22"],"并寻找":["107.23"],"属性值作为":["107.23"],"加载的入口":["107.23"],"db":["108.2"],"affectedrows":["108.3"],"插入成功":["108.3"],"向表中新增数据时":["108.3"],"如果数据对象的每个属性和数据表的字段一一对应":["108.3"],"则可以通过如下方式快速插入数据":["108.3"],"bruce":["108.3","108.5","108.14"],"调用接口":["108.6"],"优点":["108.6"],"开发体验好":["108.6"],"前端专业页面开发":["108.6"],"后端专注接口开发":["108.6"],"且需要良好的":["108.7"],"seo":["108.7"],"saveuninitalized":["108.11"],"向":["108.11"],"中存数据":["108.11"],"中间件配置成功后":["108.11"],"可通过":["108.11"],"访问":["108.11"],"存储用户信息":["108.11"],"不推荐使用":["108.13"],"认证机制":["108.13"],"工作原理图":["108.13"],"用户的信息通过":["108.13"],"token":["108.13"],"字符串的形式":["108.13"],"密钥为任意字符串":["108.14"],"secretkey":["108.14"],"登录成功":["108.14"],"sign":["108.14"],"添加开发依赖项":["109.0"],"dev":["109.0"],"移除依赖项":["109.0"],"uninstall":["109.0","110.3"],"manager":["110.0"],"一起安装的":["110.2"],"当你安装":["110.2"],"安装指定的包":["110.3"],"安装项目中":["110.3"],"文件中列出的所有依赖项":["110.3"],"脚本和其他元数据":["110.4"],"可以通过运行":["110.4"],"命令来初始化一个新的项目":["110.4"],"文件的":["110.5"],"dependencies":["110.5"],"本教程将向你展示如何发布自己的包到":["111.0"],"如果你还没有":["111.1"],"在你的项目目录中":["111.2"],"打开终端":["111.2"],"在项目目录中":["111.3"],"这个文件由":["111.4"],"按照提示提供你的用户名":["111.5"],"在你的项目中":["111.6"],"修改代码并增加新的功能或修复":["111.6"],"然后":["112.1"],"可以按照以下步骤安装":["112.1"],"运行以下命令来安装依赖项":["112.2"],"将读取项目根目录下的":["112.2"],"并下载安装所有列出的依赖项":["112.2"],"中的一个元素":["113.1"],"允许使用":["113.1"],"x":["113.3","116.2","117.3","132.3","133.3","136.4"],"轴向右延伸":["113.3"],"但在大多数情况下":["113.4"],"的绘图上下文进行绘制是最基本和有效的方法":["113.4"],"文本":["113.5"],"图像":["113.5"],"矩形和其他形状等":["113.5"],"绘图元素可以通过":["113.5"],"陈述观点":["113.6"],"以及制作各种绚丽的视觉展示等":["113.6"],"您可以通过":["113.6"],"脚本使":["113.7"],"绘制出具有动态效果的图像和视觉艺术也显得非常合适":["113.7"],"html5":["113.8"],"中提供了许多优势":["113.8"],"但也存在一些限制":["113.8"],"图像旋转":["114.0"],"math":["114.1"],"pi":["114.1"],"表示放大十倍":["114.2"],"fillrect":["114.2","114.5","119.2","121.2"],"轴和":["114.3"],"轴移动的距离":["114.3"],"单位像素":["114.3"],"默认值1":["114.4"],"单位倍数":["114.4"],"水平倾斜":["114.4"],"默认值0":["114.4"],"单位弧度":["114.4"],"垂直倾斜":["114.4"],"源":["115.0"],"绘制在另一个物体":["115.0"],"目标":["115.0"],"只会显示目标图像之外源图像部分":["115.1"],"destination":["115.1"],"在源图像上方显示目标图像":["115.1"],"在源图像顶部显示目标图像":["115.1"],"源图像之外的目标图像部分不会被显示":["115.1"],"htmlcanvaselement":["116.1"],"找到画布":["116.1"],"moveto":["116.2"],"把路径移动到画布中的指定点":["116.2"],"不创建线条":["116.2"],"高度为线条宽度的一半":["117.1"],"linejoin":["117.1","124.3"],"指定线段交点的样式":["117.1"],"交点为扇形":["117.1"],"bevel":["117.1"],"交点为三角形底边":["117.1"],"miter":["117.1"],"从左到右的渐变等等":["117.2"],"该方法的返回值是一个":["117.2"],"canvasgradient":["117.2"],"该对象只有一个":["117.2"],"addcolorstop":["117.2"],"方向":["117.2"],"用来指定渐变点的颜色":["117.2"],"方法接受两个参数":["117.2"],"第一个参数是":["117.2"],"之间的一个位置量":["117.2"],"表示起点":["117.2"],"表示终点":["117.2"],"第二个参数是一个字符串":["117.2","117.3"],"blob":["117.3"],"有四个可能的值":["117.3"],"分别是":["117.3"],"repeat":["117.3"],"双向重复":["117.3"],"水平重复":["117.3"],"shadowoffsetx":["117.4"],"阴影的水平位移":["117.4"],"文字":["119.0","119.6"],"路径":["119.2"],"stroke":["119.3"],"closepath":["119.3"],"嘴巴":["119.3"],"sy":["119.5"],"swidth":["119.5"],"sheight":["119.5"],"获取图片":["119.5"],"textbaseline":["119.6"],"文本的垂直位置":["119.6"],"alphabetic":["119.6"],"大小":["119.6"],"字体":["119.6"],"100px":["119.6"],"microsoft":["119.6"],"yahei":["119.6"],"填充渲染文字":["119.6"],"控制点2":["120.2"],"again":["121.1"],"获取画笔":["121.2"],"getcontext":["121.2"],"2d":["121.2"],"fillstyle":["121.2"],"ccc":["121.2"],"restore":["122.3"],"绘制分钟的刻度":["122.3"],"canvas":["122.4","123.2"],"ref":["123.2"],"连接初圆润":["124.3"],"细线条":["124.4"],"savebtn":["124.4"],"保存签名":["124.4"],"change":["124.4"],"e":["126.1"],"0xff0000":["126.2"],"drawrect":["126.2"],"技术的快速":["127.1"],"轻量级的":["127.1"],"利用":["127.3"],"webgl":["127.3"],"pixijs":["127.4","127.6"],"提供了一系列强大的功能":["127.5"],"包括精灵":["127.5"],"加载一个纹理":["127.7"],"loader":["127.7"],"image":["127.7","137.7"],"devicepixelratio":["128.2","129.1","131.1"],"像素比":["128.2","129.1","131.1"],"antialias":["128.2"],"抗锯齿":["128.2"],"将应用画布添加到dom中":["128.2","129.1","131.1"],"innerheight":["129.1"],"backgroundcolor":["129.1"],"0x1099bb":["129.1","131.1"],"resolution":["129.1","131.1"],"screen":["129.2","132.3"],"blur":["131.2"],"将模糊滤镜添加到精灵上":["131.2"],"sprite":["131.2"],"outlinefilter":["131.3"],"0xffff00":["131.3"],"texture":["132.2"],"pixi":["132.2"],"设置位置":["132.3"],"ticker":["132.4"],"beginfill":["133.1"],"0x66ccff":["133.1"],"0x660000":["133.2","133.5"],"参数一个数组":["133.2"],"数组中的每一个元素是一个点的坐标":["133.2"],"每两个元素是一个点的x坐标和y坐标":["133.2"],"绘制圆角矩形":["133.3"],"x坐标":["133.4"],"y坐标":["133.4"],"半径":["133.4"],"其实角度":["133.4"],"宽度":["133.5"],"颜色":["133.5"],"assets":["135.0","135.1"],"用于加载资源":["135.0"],"pic1":["135.1"],"pic":["135.1","135.2"],"rmb":["135.1","135.2"],"bdstatic":["135.1","135.2"],"05b0ea405c9e690ab51627853a13de56":["135.1","135.2"],"jpeg":["135.1","135.2"],"pic2":["135.1","135.2"],"img14":["135.1","135.2"],"360buyimg":["135.1","135.2"],"jfs":["135.2"],"t1":["135.2"],"5c1b0581e1fa6c1c3":["135.2"],"58519cee2a0039e0":["135.2"],"jpg":["135.2"],"是一个基于文本的开放网络标准":["136.1"],"用来定义用于网络的矢量图形":["136.1"],"是看不出效果的":["136.3"],"cx":["136.5","136.6"],"cy":["136.5"],"ellipse":["136.6"],"points":["136.7"],"lemon":["137.0"],"建议勾选":["137.1"],"scripts":["137.2"],"docs":["137.2","137.4"],"build":["137.2"],"site":["137.3"],"文件就是我们的配置文件":["137.6"],"新建一个":["137.6"],"lastupdated":["137.7"],"hero":["137.7"],"组件库名称":["137.7"],"组件库文本":["137.7"],"tagline":["137.7"],"组件库副标题描述":["137.7"],"description":["137.9"],"themeconfig":["137.9"],"sitetitle":["137.9"],"左上角的":["137.9"],"logo":["137.9"],"关于侧边栏":["137.10"],"collapsible":["137.10"],"dist":["137.11"],"如果是发布到自定义域名":["137.11"],"echo":["137.11"],"cname":["137.11"],"git":["137.11"]},{"0":["10.12","12.22","26.4","27.31","35.8","41.2","55.3","55.4","55.6","61.2","69.3","69.5","71.14","90.6","107.18","108.2","114.3","133.1","133.2"],"1":["10.5","10.14","16.2","34.17","34.20","41.2","55.2","61.2","73.9","87.3","87.4","106.3","114.5"],"2":["12.25","13.1","34.19","34.20","35.9","35.10","36.3","36.7","36.8","54.3","61.3","71.10","73.9","74.3","84.1","85.1","85.15","85.19","99.1","106.6","111.5","111.6","132.3"],"3":["8.4","12.25","26.1","26.3","30.4","34.19","34.20","34.28","35.9","35.10","36.3","45.0","56.0","72.1","78.6","78.8","81.8","81.12","85.14","85.21","108.3"],"4":["11.10","34.15","34.19","34.23","34.28","34.29","34.30","51.4","56.0","71.10","81.8","85.7","96.7","108.14","128.2"],"5":["30.3","34.2","34.23","34.24","34.28","34.29","34.30","53.1","74.3","85.8"],"6":["53.1","81.8"],"7":["81.12"],"8":["72.2","81.12","106.3"],"10":["34.24","39.5","81.12","117.1"],"14":["69.5"],"15":["34.24"],"16":["39.2"],"20":["8.6","41.18","89.3","119.3","136.9"],"23":["40.15","66.1","74.19"],"29":["34.21","108.5"],"30":["58.8","78.12","78.16","78.19"],"34":["39.13","40.15","74.19"],"35":["135.1"],"40":["136.7"],"42":["72.2","87.7"],"50":["119.6","136.3"],"59":["66.1"],"70":["114.1","136.7"],"80":["60.4","136.7"],"95":["136.5"],"100":["114.2","119.6","120.1","133.2","136.6","136.8"],"120":["136.8"],"123":["27.4","71.14","87.1","92.7"],"127":["108.2"],"147":["99.1"],"150":["126.2"],"180":["114.1"],"200":["117.2","119.6","136.4"],"250":["119.3"],"255":["106.8"],"300":["136.9"],"308":["72.2"],"324":["72.1"],"345":["72.2"],"360":["71.13"],"403":["84.4"],"404":["84.4"],"420":["18.11"],"483":["99.1"],"647":["99.1"],"648":["99.1"],"1000":["26.5"],"1970":["69.1"],"2023":["66.1"],"2224":["135.1"],"5000":["96.11"],"12087":["135.1"],"23739":["135.1"],"111111":["96.10"],"11111111":["106.8"],"img":["0.0","119.5"],"入门":["5.1"],"js":["5.2","25.2","39.5","41.5","41.10","52.1","54.5","62.2","62.3","69.2","71.5","71.6","71.8","71.9","71.11","71.12","78.4","81.4","81.10","81.12","81.14","83.4","106.11","106.15","107.11","107.22","110.1","114.3","117.4"],"的基础":["5.2"],"并且也被其他编程语言":["5.2"],"如":["5.2","29.14","54.0","73.11"],"的语言标准":["5.3"],"还在此基础上新增了一些拓展":["5.3"],"使得我们可以在浏览器可以操作":["5.3"],"dom":["5.3","136.1"],"bom":["5.3"],"在":["5.3","22.1","26.3","32.3","50.5"],"let":["5.4","27.6","27.8","27.19","28.2","35.2","35.9","35.10","39.5","40.12","40.18","41.5","41.9","41.10","55.6","74.16","74.22","87.8","90.6","119.5"],"和":["5.4","21.2","26.2","30.5","39.6","69.4","70.6","87.8"],"const":["5.4","25.9","27.4","27.31","52.1","55.1","72.2","73.8","76.2","78.9","78.17","79.1","81.12","84.2","87.13","88.10","90.5","104.10"],"关键字":["5.4","10.12","12.16","88.0"],"提供块级作用域":["5.4"],"支持箭头函数":["5.4"],"简化函数定义和":["5.4"],"this":["5.4","7.4","24.9","53.4","53.5","87.14"],"的处理":["5.4"],"新增模板字符串":["5.4"],"支持多行字符串和插入表达式":["5.4"],"引入了解构赋值":["5.4"],"可以方便地从数组或对象中提取值":["5.4"],"提供了类和模块化的支持":["5.4"],"更接近传统面向对象编程":["5.4"],"添加了":["5.4"],"promise":["5.4"],"用于更好地处理异步操作":["5.4"],"for":["5.4","36.0"],"of":["5.4"],"循环":["5.4"],"用于遍历可迭代对象":["5.4"],"引入":["5.4"],"symbol":["5.4"],"类型":["5.4","87.8"],"用于创建唯一的对象属性名":["5.4"],"也被称为模板字面量":["6.0"],"is":["6.1","6.4","7.3","29.15","87.14","106.16"],"and":["6.1","6.2","6.4","106.16"],"i":["6.1","55.3","55.4","55.6","73.3","75.1","76.1","76.2","107.16"],"multiple":["6.2"],"lines":["6.2","96.8"],"maintains":["6.2"],"the":["6.2"],"hello":["6.3","6.4","37.1","73.8","75.2","76.1","76.2","78.7","104.7","106.6"],"my":["6.3","6.4","24.4","24.17","28.8","75.2"],"箭头函数通常与其他":["7.0"],"函数体在箭头后面的花括号内":["7.1"],"如果函数体只有一行代码并且返回一个表达式":["7.1"],"可以省略花括号和":["7.1"],"输出":["7.2","7.3","53.1","59.1","59.2","59.3","59.4","67.6","68.6","72.2"],"多个参数":["7.2"],"因为箭头函数会继承外层作用域的":["7.4"],"可能导致":["7.4"],"我们可以从数组或对象中提取数据":["8.0"],"并将其赋值给对应的变量":["8.0"],"e":["8.2","8.3","62.9","106.12"],"console":["8.2","34.26","36.8","38.5","40.8","40.9","41.3","41.5","41.7","41.18","51.3","53.1","57.5","59.2","59.3","62.9","67.6","68.6","72.2","74.12","74.13","75.2","76.1","78.20","84.6","87.11","89.4","90.6","96.8","106.7","106.12","135.2"],"log":["8.2","34.26","36.8","37.1","38.5","40.8","40.9","41.3","41.7","41.14","41.18","51.1","53.1","57.5","59.2","59.3","59.4","62.6","62.9","67.6","68.6","72.2","74.12","74.13","75.2","76.1","78.20","81.11","89.4","90.6","92.7","104.6","106.7","106.12","126.1","135.2"],"a":["8.3","8.5","10.8","85.6","87.14","88.9","92.5","92.6","103.6","106.14","107.22","137.1"],"c":["8.3","8.4","35.9","37.0","78.6","86.4","106.12","106.14"],"b":["8.4","8.5","39.5","106.12","106.14"],"rest":["8.5"],"name":["8.9","27.6","27.17","27.20","78.2","78.4","78.18","79.1","88.9","102.4","102.6","112.2","124.4"],"country":["8.10"],"unknown":["8.10"],"padding":["10.1"],"不能涉及差异化样式":["10.2"],"color":["10.3","124.4"],"css":["10.4","11.0","11.1","11.5","11.6","11.7","12.3","12.9","15.1","117.2","136.1"],"orange":["10.5"],"tip":["10.5","35.1","35.3","61.4","74.3","74.5","99.5"],"注意":["10.5","38.13","74.3","74.5","87.3","137.9"],"选择器3":["10.6"],"选择器":["10.6","13.0"],"li":["10.7","60.5"],"good":["10.9"],"hover":["10.11"],"光标经过链接的样式":["10.11"],"的第":["10.12"],"个":["10.12"],"可以是数字":["10.12"],"even":["10.12"],"odd":["10.12"],"公式":["10.12"],"从":["10.12","71.4","94.0"],"开始":["10.12"],"size":["10.14","64.1"],"伪元素清除浮动":["10.14"],"额外标签法":["10.14"],"隔墙法":["10.14"],"在浮动元素后面添加一个块级标签":["10.14"],"如div":["10.14"],"并设置":["10.14"],"clear":["10.14"],"both":["10.14"],"div":["10.14","12.23","12.24","21.2","21.3","21.5","24.16","28.4","60.1","121.1"],"工具":["11.0"],"即可":["11.1"],"水平排列":["11.2"],"默认值":["11.2"],"reverse":["11.2"],"水平逆向排列":["11.2"],"项目平均分布在主轴上":["11.3"],"两端不留空白":["11.3"],"around":["11.3","11.10"],"两端留有空白":["11.3"],"指定":["11.4"],"项目是否换行":["11.4"],"nowrap":["11.4"],"的缩写":["11.5"],"属性可以控制项目在空间不足时的缩小比例":["11.6"],"则会参考该值进行布局":["11.7"],"嵌套的":["11.8"],"容器有自己的主轴和交叉轴":["11.8"],"end":["11.9","103.4","106.4"],"多行项目靠交叉轴末尾位置对齐":["11.9"],"center":["11.9","15.7"],"多行项目在交叉轴上居中对齐":["11.9"],"space":["11.9","16.1"],"between":["11.9"],"通过设置":["11.10"],"属性为":["11.10"],"实现项目平均分布":["11.10"],"columns":["12.1","100.0"],"通过将网格容器":["12.1"],"container":["12.1","12.3","12.23","12.24"],"我们可以通过设置":["12.2"],"display":["12.2","15.8","16.2"],"rows":["12.3"],"属性来定义列和行的大小和结构":["12.3"],"span":["12.4","12.16","29.10"],"允许一个网格项跨越多个行或列":["12.4"],"我们可以使用":["12.4"],"布局提供了一系列强大的属性":["12.5"],"可以指定固定大小":["12.6"],"如像素":["12.6"],"百分比等":["12.6"],"也可以使用":["12.6"],"fr":["12.6"],"单位表示可用空间的比例分配":["12.6"],"header":["12.7","12.24","108.13"],"areas":["12.8"],"的缩写属性":["12.8"],"可以通过一个属性同时定义列":["12.8"],"行和区域":["12.8"],"可以使用两个值表示行和列的间隔":["12.9"],"分别定义网格列和行之间的间隔":["12.10"],"与":["12.10","26.3","42.8","67.0","68.0","94.0"],"定义了当网格容器中的网格项目无法放入先前定义的网格轨道时":["12.11"],"自动创建的额外列和行的大小":["12.11"],"可以指定固定大小或使用":["12.11"],"默认值是":["12.12"],"row":["12.12"],"表示按照行进行放置":["12.12"],"用于在网格项目中定义对齐方式":["12.13"],"控制项目在列轴上的对齐方式":["12.13"],"控制网格项目在列轴上的对齐方式":["12.14"],"用于定义单个网格项目自身在网格单元格中的对齐方式":["12.15"],"用于将网格项目放置在指定的列和行位置":["12.16"],"可以使用数字":["12.16"],"布局":["12.17"],"100px":["12.18"],"auto":["12.18"],"1fr":["12.18","12.19"],"定义三列":["12.18","12.19"],"第一列宽度为":["12.18"],"repeat":["12.19"],"每列宽度为1fr":["12.19"],"width":["12.20","15.1","16.2","18.11","27.31","123.2","132.1"],"768px":["12.20"],"initial":["12.22","61.2"],"scale":["12.22","61.2"],"title":["12.22","29.6","61.2"],"simple":["12.22"],"layout":["12.22","12.23","12.24"],"body":["12.23","12.24","108.11","129.1"],"class":["12.23","12.24","30.4","60.1","88.0","88.9"],"布局和":["12.26"],"布局适用于复杂的网页布局":["12.27"],"如主页布局":["12.27"],"支持网格区域的命名":["12.28"],"更具语义性":["12.28"],"flexbox":["12.28"],"grid":["12.29","12.31"],"中的顺序一致":["12.30"],"可以使用":["12.30","64.0"],"order":["12.30"],"布局在现代浏览器中得到了很好的支持":["12.31"],"布局强大":["12.32"],"但在某些情况下可能会对性能产生一定影响":["12.32"],"以提高代码的可读性和维护性":["12.33"],"嵌套使用":["12.33"],"id":["13.0","25.6"],"比较规则":["13.1"],"按照":["13.1"],"从左到右":["13.1"],"的顺序":["13.1"],"依次比较大小":["13.1"],"当前位胜出后":["13.1"],"后面的不再对比":["13.1"],"例如":["13.1","62.1","113.8"],"height":["15.3","16.3","132.3"],"100vh":["15.3"],"position":["15.5"],"absolute":["15.5"],"translate":["15.6"],"content":["15.7","84.3"],"000":["16.1"],"white":["16.1"],"400px":["16.2"],"设置元素的宽度":["16.2"],"box":["16.2","27.30","60.1"],"60px":["16.3"],"line":["16.3"],"30px":["16.3"],"track":["17.0"],"没有滑块":["17.0"],"mpeg":["18.0","18.2"],"您的浏览器不支持音频播放":["18.0"],"视频示例":["18.0"],"video":["18.0"],"定义了声音内容":["18.5"],"source":["18.5","18.6","18.11"],"定义一个视频":["18.6"],"用户控制界面":["18.7"],"poster":["18.7"],"视频封面":["18.7"],"autoplay":["18.7"],"播放":["18.8"],"runoob":["18.10","18.11"],"com":["18.10","18.11","57.5"],"try":["18.10","18.11","97.0"],"src":["18.11","20.4","24.7","37.4","119.5"],"https":["18.11","20.3","57.5","131.1","137.11"],"www":["18.11","104.12"],"demo":["18.11"],"markup":["19.0"],"文档类型声明":["19.1"],"告诉浏览器文档使用的":["19.1"],"以下是一些常用的":["19.2"],"h1":["19.2","28.9","108.5"],"到":["19.2"],"h6":["19.2"],"标题标签":["19.2"],"用于定义标题":["19.2","21.1"],"article":["19.3"],"等":["19.3","64.1"],"从而实现更丰富的用户体验":["19.4"],"在进阶阶段":["19.4"],"可以学习响应式设计":["19.4"],"web":["19.4"],"accessibility":["19.4"],"这是h2级别的标题":["20.1"],"h3":["20.1"],"这是一个段落文本":["20.2"],"列表项1":["20.5","20.6"],"这是一个div容器":["20.7"],"style":["20.8","27.28","30.4","121.1"],"表头1":["20.9"],"点击我":["20.12"],"username":["20.13","108.5","108.14","137.11"],"用户名":["20.13"],"首页":["20.14","106.17"],"mp4":["20.15"],"controls":["20.15"],"它们由尖括号包围":["21.0"],"为最高级别的标题":["21.1"],"为最低级别":["21.1"],"但用于内联元素的包裹":["21.2"],"strong":["21.2"],"标签中包裹这个":["21.3"],"custom":["21.5"],"example":["21.5","57.5"],"然后自动填充以前保存的密码":["22.1"],"这里推荐一种特别简单的方法解决这个问题":["22.1"],"属性":["22.1","38.12","63.2"],"javascript":["24.1","25.8","39.1","67.2","67.3","68.2","68.3","72.2","73.4"],"manager":["24.3"],"first":["24.4"],"html":["24.6","24.14","25.4","29.10","61.4","106.17","137.6"],"模板中":["24.6"],"imagesrc":["24.7"],"isvisible":["24.9"],"item":["24.12","34.12","34.13"],"in":["24.12","82.2"],"click":["24.13","27.5","27.7","27.10","27.13","27.14","62.9"],"实例数据的双向绑定":["24.14"],"template":["24.16","29.12"],"可以进行":["24.18"],"操作等":["24.18"],"beforeupdate":["24.18","27.27"],"数据更新前":["24.18"],"在数据更新之前调用":["24.18"],"发生在重新渲染之前":["24.18"],"可以在此处进行状态更新前的准备工作":["24.18"],"updated":["24.18"],"官方提供的路由管理器":["25.1"],"用于实现单页面应用":["25.1"],"spa":["25.1"],"到您的":["25.2"],"home":["25.3","96.10","104.8"],"components":["25.3"],"标签来渲染路由匹配到的组件":["25.4"],"to":["25.5","127.7"],"component":["25.6","30.4"],"path":["25.7","25.10","66.1","127.7"],"parent":["25.7"],"router":["25.8"],"routes":["25.9","25.10","96.10"],"如路由别名":["25.12"],"用于管理":["26.0"],"可以被多个组件共用":["26.1"],"避免重复逻辑代码":["26.1"],"mutations":["26.1"],"变更":["26.1"],"是":["26.1"],"props":["26.2"],"events":["26.2"],"状态定义":["26.3"],"状态修改":["26.3"],"异步操作":["26.3","57.1"],"获取状态":["26.3"],"export":["26.3"],"default":["26.3","29.13","35.3"],"将":["26.3"],"应用关联":["26.3"],"应用的入口文件":["26.3"],"main":["26.3"],"state":["26.4"],"count":["26.4","34.7"],"increment":["26.4"],"incrementasync":["26.5"],"context":["26.5","114.3","117.4"],"settimeout":["26.5","42.6"],"commit":["26.5","85.10","96.2","137.11"],"获取未完成的todos":["26.6"],"unfinishedtodos":["26.6"],"filter":["26.6"],"todo":["26.6"],"获取特定id的todo":["26.6"],"gettodobyid":["26.6"],"find":["26.6"],"组件只需引入不用注册":["27.0"],"属性和方法也不用":["27.0"],"return":["27.0","41.11","51.1","52.2","54.2","55.5","58.7","88.1","89.2","89.4","89.5","90.2","90.3","90.4"],"api":["27.1","28.6","57.5","84.1","96.11","103.2","108.11","113.4","113.5","113.7"],"的统一入口":["27.1"],"简单来说":["27.1"],"就是所有的":["27.1"],"count1":["27.2"],"count2":["27.2"],"val":["27.2"],"notref":["27.4"],"number":["27.4","41.1","87.4","87.14","88.11"],"changemsg":["27.5"],"change":["27.5","27.7"],"string":["27.6","87.9","87.10","88.7","88.9"],"message":["27.6","27.18","27.19","27.20","29.10","41.3","87.10"],"button":["27.7","27.10","27.13","28.8","60.2"],"修改":["27.7"],"vue":["27.8","27.12","27.31","28.7","28.8","30.2","30.7","96.7"],"或是一个":["27.9"],"数据是会变的":["27.12"],"但不会更新视图":["27.12"],"它可以接收一个函数或对象作为参数":["27.15"],"会返回一个只读的":["27.15"],"data":["27.16","104.14"],"参数一":["27.16"],"监听的数据":["27.16"],"nav":["27.17","27.19","137.9"],"bar":["27.17"],"message2":["27.18"],"并在其依赖变更时重新运行该函数":["27.21"],"也是一个函数":["27.22"],"函数或生命周期钩子被调用时":["27.23"],"pre":["27.24","56.3","58.5","58.7"],"组件更新前执行":["27.24"],"在我们使用":["27.25"],"vue3":["27.25","28.5"],"元素被更新之前调用":["27.27"],"dir":["27.28"],"directivebinding":["27.28"],"value":["27.28","57.1","57.2","72.2","78.13","88.10"],"background":["27.28"],"无论值是否有更改都可用":["27.29"],"arg":["27.29"],"传递给指令的参数":["27.29"],"如果有的话":["27.29"],"例如在":["27.29"],"foo":["27.29","107.12"],"onmounted":["27.31"],"onunmounted":["27.31"],"ref":["27.31","122.4","124.4"],"from":["27.31","102.6","102.8","132.2"],"function":["27.31","36.11","50.9","52.2","54.5","58.7","62.2","62.7","62.9","78.4","80.0","83.4","106.3","106.6","106.7","121.2","124.3","127.7"],"usewindowresize":["27.31"],"子父组件":["28.1"],"甚至兄弟组件通信":["28.1"],"自定义事件":["28.1"],"可以实现子父组件通信":["28.1"],"全局事件总线":["28.1"],"方式":["28.2"],"事件":["28.3"],"另外一种自定义事件":["28.3"],"原生":["28.3","30.5"],"当然点击事件想注入多个参数可以按照下图操作":["28.4"],"但是切记注入的事件对象务必叫做":["28.4"],"script":["28.5","109.0"],"标签内部":["28.5"],"使用了":["28.5"],"defineemits":["28.5"],"方法":["28.5","52.1"],"此方法是":["28.5"],"提供的方法":["28.5"],"不需要引入直接使用":["28.5"],"也就没有":["28.6"],"prototype":["28.6"],"以及组合式":["28.6"],"实现父子组件数据同步":["28.7"],"msg":["28.7"],"在父组件内部使用一个子组件":["28.8"],"ref与":["28.9"],"son":["28.9"],"可以实现隔辈组件传递参数":["28.10"],"组件组件提供数据":["28.10"],"top":["28.11"],"可以用":["28.12"],"a替换":["28.12"],"填入组件a部分的结构":["28.12"],"mycomponent":["29.2"],"tree":["29.5"],"shaking":["29.5"],"我是标题":["29.6"],"父组件使用插槽":["29.8"],"在父组件给这个插槽填充内容":["29.8"],"p":["29.9","38.3","87.13"],"父组件":["29.9"],"child":["29.9","29.11","62.10","88.11"],"v":["29.9","85.11","91.7"],"children":["29.12"],"组件有两个插槽":["29.13"],"它们都只接收一个直接子节点":["29.13"],"插槽里的节点会尽可能展示出来":["29.13"],"如果不能":["29.13"],"则展示":["29.13"],"fallback":["29.13"],"完全不受父级style样式影响":["29.14"],"使用":["29.14","112.1","135.0"],"通过to":["29.14"],"属性插入到指定元素位置":["29.14"],"view":["29.15","129.1","131.1"],"多个条件判断的子组件":["29.15"],"子组件":["29.16","32.1","32.4"],"开发者可以自定义":["29.17"],"model修饰符":["29.17"],"bind":["29.17"],"的":["29.17","38.7","39.9","105.1"],"sync":["29.17"],"修饰符和组件的":["29.17"],"with":["30.4"],"x":["30.4","104.12","119.6","124.3"],"preview":["30.4"],"use":["30.4","83.4","102.3"],"syntax":["30.4"],"直接回车":["30.4"],"这两种使用vite创建vue3项目的步骤一样":["30.6"],"运行命令":["30.6","102.1"],"输入项目名称":["30.6"],"正式版在今年9月份发布":["31.1"],"2年多开发":["31.1"],"更新渲染快133":["31.2"],"watch":["31.3"],"新的生命周期函数":["31.3"],"普通写法":["32.2"],"seutp":["32.3"],"语法糖模式发现":["32.3"],"如果有多个数据可以用数组保存起来":["34.0"],"var":["34.1","66.2","81.4","117.2"],"arr":["34.1","56.1"],"改":["34.5","40.1"],"unshift":["34.6"],"创建一个数组":["34.7","34.8"],"removed":["34.9","34.14","34.17"],"yellow":["34.10","118.0"],"black":["34.10"],"shift":["34.11","37.7"],"green":["34.12","34.13"],"colors3":["34.15"],"includes":["34.18"],"nicholas":["34.21"],"sort":["34.22"],"blue":["34.26"],"some":["34.27"],"mapresult":["34.32"],"可以省略":["35.1"],"false":["35.1","38.10","39.11","55.0","121.2","124.3","137.10"],"哈哈哈":["35.1"],"为止":["35.2"],"如果所有的条件表达式都是":["35.2"],"则执行":["35.2"],"从键盘输入小明的期末成绩":["35.2"],"score":["35.2"],"prompt":["35.2"],"请输入小明的期末成绩":["35.2"],"检查score是否合法":["35.2"],"执行的流程":["35.3"],"do":["35.4"],"执行流程":["35.5"],"语句在执行时":["35.5","35.6"],"执行顺序":["35.6"],"element":["35.10","62.2"],"内层循环":["35.11"],"虽然":["36.0"],"函数名":["36.2"],"函数体代码":["36.2"],"全部小写":["36.3"],"函数是做某件事情":["36.3"],"函数名一般是动词":["36.3"],"形参2":["36.6"],"在声明函数的小括号里面是":["36.6"],"形式上的参数":["36.6"],"实参1":["36.6"],"如果实参的个数多于形参的个数":["36.7"],"会取到形参的个数":["36.7"],"后面的代码不会被执行":["36.8"],"alert":["36.8"],"我是不会被执行的哦":["36.8"],"fn":["36.8"],"跳出本次循环":["36.9"],"无法直接使用":["36.10"],"xxxx":["36.12","50.9","86.4"],"的语法类似于":["37.0"],"语言":["37.0"],"代码":["37.2"],"head":["37.3","85.15"],"meta":["37.3","96.11"],"charset":["37.3"],"utf":["37.3","106.3"],"标签的":["37.4"],"ctrl":["37.6"],"world":["38.2","40.3","40.6","73.8","74.7","74.10"],"上面代码中":["38.2","114.2"],"大括号就定义了一个对象":["38.2"],"它被赋值给变量":["38.2"],"所以变量":["38.2"],"1p":["38.3"],"不报错":["38.3"],"h":["38.3"],"w":["38.3","106.1"],"q":["38.3"],"上面对象的三个键名":["38.3"],"都不符合标识名的条件":["38.3"],"所以必须加上引号":["38.3"],"对象的每一个键名又称为":["38.3"],"如果取消某一个变量对于原对象的引用":["38.4"],"不会影响到另一个变量":["38.4"],"无法确定是对象还是代码块":["38.5"],"一律解释为代码块":["38.5"],"上面的语句是一个代码块":["38.5"],"而且只有解释为代码块":["38.5"],"属性时":["38.7"],"如果使用点运算符":["38.7"],"就是字符串":["38.7"],"但是不使用引号":["38.7"],"那么":["38.7"],"就是一个变量":["38.7"],"指向字符串":["38.7"],"方括号运算符内部还可以使用表达式":["38.7"],"分别使用点运算符和方括号运算符":["38.8"],"对属性赋值":["38.8"],"允许属性的":["38.8"],"obj":["38.9","81.4"],"key1":["38.9"],"并没有":["38.10"],"但是":["38.10","38.12"],"命令照样返回":["38.10"],"因此":["38.10"],"不能根据":["38.10"],"命令的结果":["38.10"],"认定某个属性是存在的":["38.10"],"只有一种情况":["38.10"],"命令会返回":["38.10"],"那就是该属性存在":["38.10"],"且不得删除":["38.10"],"tostring":["38.11","38.12","93.1"],"运算符的一个问题是":["38.11"],"它不能识别哪些属性是对象自身的":["38.11"],"还遍历继承的属性":["38.12"],"举例来说":["38.12"],"对象都继承了":["38.12"],"循环不会遍历到这个属性":["38.12"],"属性是存在的":["38.12"],"如果":["38.13"],"区块内部有变量的赋值操作":["38.13"],"必须是当前对象已经存在的属性":["38.13"],"否则会创造一个当前作用域的全局变量":["38.13"],"幂运算":["39.2"],"模运算":["39.2"],"取余数":["39.2"],"等价于":["39.3"],"减等于":["39.3"],"新值":["39.5"],"的值不同":["39.6"],"是新值":["39.6"],"大于等于号":["39.7"],"如果找到":["39.9","39.10"],"则直接返回":["39.9","39.10"],"或运算是找":["39.10"],"条件运算符在执行时":["39.12"],"会先对条件表达式进行求值判断":["39.12"],"圆括号":["39.13"],"可以用来提高运算的优先级":["39.13"],"因为它的优先级是最高的":["39.13"],"除了常用":["40.2","74.6"],"trimleft":["40.5","74.9"],"trimmedstringvalue":["40.6","74.10"],"stringvalue":["40.7","40.12","74.11","74.16"],"na":["40.7","74.11"],"indexof":["40.10","74.14"],"abcde":["40.11","74.15"],"true":["40.13","50.8","74.17","78.15","87.7","96.6","121.2","124.3"],"match":["40.16","74.20"],"bat":["40.17","74.21"],"sat":["40.17","40.19","74.21","74.23"],"fat":["40.17","40.19","74.21","74.23"],"text":["40.18","63.2","74.22","104.12","119.6"],"cat":["40.18","74.22","75.3"],"floatnum1":["41.2"],"floatnum2":["41.2"],"jacob":["41.4"],"car":["41.5"],"的值":["41.6"],"othergenericsymbol":["41.7"],"我们这里主要讲述下面三种":["41.8"],"person":["41.9","51.3","78.4","79.1","92.5"],"num2":["41.11"],"函数表达式":["41.11"],"regexp":["41.12"],"typeof":["41.14","52.2"],"对象":["41.16"],"对象会转换为":["41.16"],"所有表示空性的没有的错误的值都会转换为":["41.16"],"引用类型的对象存储于堆中":["41.17"],"在栈中存放的是指向堆内存的地址":["41.20"],"不同的类型数据导致赋值变量时的不同":["41.20"],"全局变量":["42.1"],"在严格模式下":["42.1"],"如果像这样给未声明的变量赋值":["42.1"],"则会导致抛出referenceerror":["42.1"],"定义多个变量":["42.1"],"syntaxerror":["42.2"],"标识符age":["42.2"],"已经声明过了":["42.2"],"块作用域没有重复声明则使用相同标识符则不会报错":["42.2"],"zhangsan":["42.3"],"age":["42.3","78.4","78.12","78.16","78.19","88.11","92.1","92.2"],"是块级作用域":["42.5"],"所以检查不到之前是否声明过":["42.5"],"没有定义":["42.6"],"常见的异步循环问题":["42.6"],"typeerror":["42.7"],"给常量赋值":["42.7"],"也不允许重复声明":["42.7"],"都存在变量提升":["42.8"],"但":["42.8"],"对象代表当前窗口或标签页中加载的文档":["43.0"],"createelement":["43.1"],"tagname":["43.1","63.1"],"并将其添加到文档中":["43.2"],"newparagraph":["43.2"],"对象提供了对浏览器历史记录的操作":["44.0"],"导航到下一个页面":["44.1","44.2"],"如获取或修改元素":["45.0"],"创建新的元素或节点":["45.0"],"修改文档结构等":["45.0"],"location":["45.0"],"它提供了与当前窗口的":["45.0"],"url":["45.0","50.8","73.11"],"相关的信息和操作":["45.0","46.0"],"它包含了":["45.0"],"的主机名部分":["46.1"],"pathname":["46.1"],"protocol":["46.2"],"对象提供了关于浏览器的信息":["47.0"],"appname":["47.1","47.2"],"浏览器的名称":["47.1"],"对象提供了关于用户屏幕的信息":["48.0"],"availwidth":["48.1"],"屏幕的可用宽度":["48.1"],"获取屏幕的可用宽度":["48.2"],"关闭当前窗口":["49.1","49.2"],"resizeto":["49.1"],"blank":["49.2"],"是一种创建交互式网页应用的网页开发技术":["50.1"],"可以在不重新加载整个网页的情况下":["50.1"],"对象的":["50.2"],"open":["50.2","50.8","106.7"],"方法与服务端建立连接":["50.2"],"构造函数用于初始化一个":["50.3"],"password":["50.4","57.5","96.10"],"参数说明":["50.4"],"表示当前的请求方式":["50.4"],"请求中要发送的数据体":["50.5"],"响应体下载中":["50.6"],"responsetext":["50.6"],"已经获取部分数据":["50.6"],"done":["50.6"],"请求完成":["50.6"],"整个请求过程已完毕":["50.6"],"只要":["50.6"],"属性值一变化":["50.6"],"就会触发一次":["50.6"],"readystatechange":["50.6"],"if":["50.8","52.2","54.2","54.7","58.5","106.3","106.17","116.1"],"success":["50.9"],"中一种强大且常用的特性":["51.0"],"它允许内部函数访问其外部函数的作用域":["51.0"],"incrementcounter":["51.2"],"john":["51.3","79.1"],"可以实现模块化的代码结构":["51.4"],"将相关的功能和状态封装在闭包中":["51.4"],"提供公共接口给外部":["51.4"],"从而实现代码的隔离和组织":["51.4"],"保存状态":["51.4"],"闭包可以用于保存函数的状态":["51.4"],"闭包中的变量是共享的":["51.5"],"如果多个闭包引用相同的外部变量":["51.5"],"那么它们会共享相同的变量实例":["51.5"],"shallowcopy":["52.1"],"会丢失或报错":["52.2"],"使用递归函数":["52.2"],"deepclone":["52.2"],"object":["52.2"],"null":["52.2","67.2","68.2","87.8","94.0","117.3"],"用于增加":["53.1"],"multiply":["53.1"],"部分应用函数":["53.2"],"柯里化可以部分应用函数":["53.2"],"即预先设置函数的一部分参数":["53.2"],"然后返回一个接收剩余参数的新函数":["53.2"],"这使得函数的调用更加灵活和可定制":["53.2"],"需要注意的是":["53.2"],"下面是几种常见的实现方式":["53.3"],"else":["53.4","83.5","89.5"],"nextargs":["53.4","53.6"],"apply":["53.5"],"本质上是优化高频率执行代码的一种手段":["54.0"],"浏览器的":["54.0"],"resize":["54.0"],"scroll":["54.1","54.4"],"timer":["54.2","54.3"],"args":["54.2"],"可以将时间戳写法的特性与定时器写法的特性相结合":["54.3"],"实现一个更加精确的节流":["54.3"],"实现如下":["54.3"],"throttled":["54.3"],"debounce":["54.5"],"func":["54.5"],"cleartimeout":["54.6"],"不为null":["54.6"],"newarr":["55.1","58.6"],"j":["55.2"],"replace":["56.2"],"g":["56.2","73.3"],"split":["56.2","88.10"],"cur":["56.3","58.5"],"length":["56.4"],"rejected":["57.0"],"已失败":["57.0"],"当":["57.0"],"对象的状态从":["57.0"],"在操作成功时调用":["57.1"],"处理第二个操作成功的结果":["57.3"],"yetanotherpromise":["57.3"],"catch":["57.3","57.5"],"error":["57.3","57.4","87.5","88.8","104.8"],"处理任意一个":["57.4"],"实例失败的结果":["57.4"],"在上述示例中":["57.4"],"接收一个":["57.4"],"login":["57.5","108.11"],"post":["57.5","84.3","104.4","108.11"],"then":["57.5","84.6","135.1"],"response":["57.5"],"数组的一个高阶函数":["58.0"],"它用于对数组中的元素进行累积操作":["58.0"],"它接受四个参数":["58.1"],"前一个值":["58.1"],"prev":["58.1"],"设置初始值":["58.3"],"reduce":["58.5","58.6","58.7"],"english":["58.8"],"方法不会修改原始数组":["58.9"],"它始终返回一个新的累积结果":["58.9"],"如果需要对原始数组进行修改":["58.9"],"请使用其他数组方法":["58.9"],"中有两种主要的作用域类型":["59.0"],"inner":["59.2","59.3","62.10"],"innervariable":["59.3"],"在现有":["60.1"],"结构基础上插入新的元素节点":["60.1"],"hr":["60.1"],"普通盒子":["60.1"],"点击按钮向":["60.1"],"点击按钮删除节点":["60.2"],"要么是兄弟关系":["60.3"],"序号":["60.4"],"课程名":["60.4"],"难度":["60.4"],"操作":["60.4"],"ul":["60.5"],"文档解析为":["61.1"],"树":["61.1"],"并提供了一组":["61.1"],"标题":["61.2"],"等都属于元素节点":["61.3"],"是指":["61.3"],"标签中的属性":["61.3"],"中常用的一项功能":["62.0"],"用户使用":["62.1"],"方法来添加事件监听器":["62.2"],"eventhandler":["62.2"],"eventname":["62.2"],"不同的是":["62.5"],"不会在子元素上触发":["62.5"],"mouseleave":["62.5"],"键盘按下了":["62.6"],"focus":["62.7"],"keydown":["62.8"],"当用户按下键盘上的任意键时触发":["62.8"],"可以使用该事件来监测实时的键盘输入":["62.8"],"并进行相应处理":["62.8"],"keyup":["62.8"],"表单事件":["62.11"],"submit":["62.11"],"input":["62.11"],"或者根据目标元素的特定属性或位置来执行相应操作":["62.12"],"通过事件委托":["62.12"],"你只需要在父元素上绑定一个事件监听器":["62.12"],"无论子元素的数量如何变化":["62.12"],"只要满足选择器条件的子元素触发了事件":["62.12"],"都可以被捕获和处理":["62.12"],"这样可以避免为每个子元素分别绑定事件监听器":["62.12"],"从而减少内存占用和提高性能":["62.12"],"将一个节点添加为另一个节点的子节点":["63.0"],"removechild":["63.0"],"insertbefore":["63.3"],"font":["64.1"],"而":["64.1","87.9"],"如果元素已经具有指定的类名":["64.2"],"则移除它":["64.2"],"如果元素没有指定的类名":["64.2"],"getelementsbytagname":["65.0"],"根据标签名获取元素节点集合":["65.0"],"queryselector":["65.0"],"elements":["65.1"],"classname":["65.1"],"内容":["65.2"],"innerhtml":["65.2"],"然后浏览器会将":["66.0"],"gmt":["66.1"],"cookies":["66.2"],"thu":["66.3"],"01":["66.3"],"jan":["66.3"],"stringify":["66.4"],"方法将其转换为字符串存储":["66.4"],"然后在需要时使用":["66.4"],"parse":["66.4"],"方法将其还原":["66.4"],"每个域名和浏览器对":["66.4"],"允许开发者在浏览器中存储和检索持久化的键值对数据":["67.0"],"是要存储的数据的键":["67.1","68.1"],"返回":["67.2","68.2","72.2"],"方法来删除指定键的数据":["67.4","68.4"],"getitem":["67.6","68.6"],"允许开发者在浏览器中存储和检索会话级别的键值对数据":["68.0"],"十二月":["69.1"],"getseconds":["69.1"],"获取秒数":["69.1"],"gettime":["69.1","69.4"],"获取日期的时间戳":["69.1"],"返回值为从":["69.1"],"年":["69.1"],"月":["69.1"],"有四种方式初始化日期":["69.2"],"setfullyear":["69.3"],"date":["69.4","122.3"],"now":["69.4"],"new":["69.4","76.2","104.8","119.5","122.3","129.2"],"的内置对象为开发者提供了丰富的功能和方法":["70.0"],"能够简化开发过程并处理各种数据和操作":["70.0"],"数值对象":["70.1"],"boolean":["70.1"],"布尔对象":["70.1"],"其他对象都继承自它":["70.2"],"删除":["70.3"],"如拼接":["70.4"],"转换为字符串":["70.5"],"设置时间":["70.7"],"如求绝对值":["70.8"],"分割":["70.9"],"替换等复杂的文本处理任务":["70.9"],"除了上述常用的内置对象外":["70.9"],"可以对数字进行计算":["71.0"],"用于":["71.0"],"圆周率":["71.1"],"返回一个数的绝对值":["71.3"],"往上不包括":["71.4"],"四舍五入原则":["71.7"],"找出最小值":["71.8"],"找出最大值":["71.9"],"返回的是一个数的平方根":["71.11"],"positive":["72.1"],"infinity":["72.1","87.2"],"表示正无穷大":["72.1"],"当一个数超过了":["72.1"],"valueof":["72.2"],"对象的原始数值":["72.2"],"示例代码":["72.2"],"max":["72.2","96.8"],"7976931348623157e":["72.2"],"可以使用正则表达式执行以下操作":["73.1"],"匹配":["73.1"],"matching":["73.1"],"正则表达式可以使用字面量形式或构造函数形式来创建":["73.2"],"模式字符串和可选的修饰符字符串":["73.4"],"匹配前面的元素一次或多次":["73.5"],"不区分大小写匹配":["73.6"],"m":["73.6","88.2","137.11"],"匹配空格字符":["73.7"],"s":["73.7","73.10","137.0"],"匹配非空格字符":["73.7"],"返回匹配结果的数组或":["73.8"],"str":["73.8","106.16"],"使用名称访问捕获的子串":["73.9"],"来匹配字符串的开始和结束":["73.10"],"允许点号":["73.10"],"匹配任意字符":["73.10"],"包括换行符":["73.10"],"数据提取":["73.11"],"使用正则表达式从文本中提取特定的信息":["73.11"],"类似":["74.4","94.0"],"是类似的":["74.4"],"这个方法的第二个参数截取的长度":["74.5"],"不是结束索引":["74.5"],"am":["75.1","76.1","76.2"],"子类":["75.1","77.2"],"dog":["75.1","103.6"],"breed":["75.1"],"call":["75.1"],"sayhello":["75.2","76.1"],"meow":["75.3"],"之后":["76.0"],"引入了":["76.0"],"创建类的实例":["76.2"],"person1":["76.2","90.5"],"每个对象都有自己的状态和行为":["77.1"],"继承是一种对象之间共享属性和方法的机制":["77.2"],"通过继承":["77.2"],"一个类":["77.2"],"可以继承另一个类":["77.2"],"父类":["77.2"],"张三":["78.2"],"调用对象的属性":["78.3"],"我们采取":["78.3"],"对象名":["78.3"],"属性名":["78.3"],"我们理解为":["78.3"],"uname":["78.4"],"sex":["78.4"],"prop":["78.5"],"返回指定对象上一个自有属性对应的属性描述符":["78.5"],"getownpropertynames":["78.5"],"返回一个给定对象自身的所有属性的名称数组":["78.5"],"getownpropertysymbols":["78.5"],"obj3":["78.6"],"jane":["78.10"],"修改无效":["78.10"],"newobj":["78.14"],"删除属性无效":["78.18"],"用于实现继承和共享属性和方法":["79.0"],"直到找到为止":["79.1"],"示例":["79.1"],"friend":["79.2"],"create":["79.2","96.11","98.3","102.2"],"的原型是":["79.2"],"继承":["79.3"],"通过原型链":["79.3"],"等方法来设置对象的原型":["79.4"],"而不是直接修改":["79.4"],"现在这里的代码会在严格模式下运行":["80.0"],"启用单个函数的严格模式":["80.0"],"如果你只想在特定函数内启用严格模式":["80.0"],"可以在函数体的开头添加":["80.0"],"会创建一个执行期上下文的内部对象":["81.1"],"以方法的形式调用":["81.3"],"this是调用方法的对象":["81.3"],"绑定到什么":["81.4"],"方法的另一个应用":["81.7"],"可以实现继承":["81.7"],"之所以能实现继承":["81.7"],"其实是利用了上面的作用":["81.7"],"先将":["81.8"],"然后执行":["81.8"],"函数":["81.8"],"需要传递":["81.10"],"数组":["81.10","93.0"],"所以它有一些巧妙应用":["81.10"],"稍后看接下来的应用举例就知道了":["81.10"],"语法":["81.10","81.14"],"求数组中多个元素的最大值":["81.12"],"arr1":["81.12"],"下面这一行代码的目的":["81.12"],"无需改变":["81.12"],"是最为合适的":["81.14"],"新函数":["81.14"],"fn1":["81.14"],"想要将this指向哪里":["81.14"],"函数实参1":["81.14"],"http":["83.1"],"install":["83.2","111.7"],"params":["83.3"],"添加请求拦截器":["83.4"],"axios":["83.4"],"interceptors":["83.4","96.11"],"request":["83.4"],"status":["83.5"],"headers":["83.5"],"集中式管理":["84.1"],"apibaseurl":["84.2"],"service":["84.2"],"type":["84.3","124.4"],"如果没有设置请求头":["84.3"],"method":["84.3"],"您未登录":["84.4"],"或者登录已经超时":["84.4"],"请先登录":["84.4"],"您没有权限操作":["84.4"],"请求地址出错":["84.4"],"postaction":["84.5"],"xxx":["84.6"],"引入上面login方法所在的文件":["84.6"],"res":["84.6","90.6","108.11"],"配置局部账户":["85.1"],"只对当前":["85.1"],"日志信息":["85.6"],"提交当前目录及其子目录的变更":["85.6"],"cached":["85.7"],"比较指定文件暂存区和":["85.7"],"的差异":["85.7"],"n":["85.8","87.8","95.1"],"次的版本信息":["85.8"],"已有分支":["85.10"],"基于某个":["85.10"],"分支":["85.12"],"分支名":["85.13"],"把当前分":["85.14"],"基于":["85.14"],"暂存区指定文件恢复成和":["85.15"],"一样":["85.15"],"reset":["85.15"],"bash":["85.16","85.20"],"git":["85.16","86.1","86.2"],"add":["85.18","104.4","112.2"],"别名":["85.18"],"地址":["85.18","85.19"],"origin":["85.21"],"master":["85.21"],"如果省略本地分支名":["85.21"],"copy内容到git":["86.5"],"infinitynumber":["87.2"],"无穷大":["87.2"],"warning":["87.3"],"list":["87.4"],"ok":["87.7"],"类型的变量":["87.9"],"void":["87.9","88.9","88.11"],"类型不可以分给其他类型":["87.9"],"这样写会报错":["87.9"],"void类型不可以分给其他类型":["87.9"],"abc":["87.12","88.7"],"报错":["87.12"],"函数中使用联合类型":["87.12"],"any":["87.14","89.4","128.2","129.1","131.1"],"strlength1":["87.14"],"一般方法":["88.1"],"say":["88.1","88.6","88.8"],"我叫":["88.1"],"protected":["88.3"],"修饰符":["88.4","88.5"],"man":["88.6"],"extends":["88.6","88.11","92.3","96.6"],"super":["88.6"],"constructor":["88.7"],"你的意思是改为访问静态成员":["88.8"],"吗":["88.8"],"asd":["88.9"],"names":["88.10"],"setage":["88.11"],"返回值":["89.0"],"为上面那个函数添加类型":["89.1"],"ts":["89.1","92.4","96.9"],"items":["89.4"],"而在使用的时候再指定具体类型的一种特性":["90.0"],"array":["90.3"],"上不存在属性":["90.7"],"我们可以使用泛型约束来实现":["90.7"],"是一种由微软开发的自由和开源的编程语言":["91.1"],"智能":["91.2"],"的提示":["91.2"],"相对于js而言":["91.2"],"先编译再执行":["91.3"],"在写的时候就会发现错误了":["91.3"],"编译阶段就能检查类型发现大部分错误":["91.5"],"项目里使用":["91.6"],"编译":["91.7"],"index":["91.7","96.12","106.17","137.2","137.6"],"tsc":["91.9"],"npm":["91.10","103.1","111.4"],"来定义对象的类型":["92.0"],"接口是对象的状态":["92.0"],"但是对象里面缺少age属性":["92.1"],"使用接口约束的时候不能多一个属性也不能少一个属性":["92.1"],"interface":["92.4","92.5"],"propname":["92.6"],"大":["93.1"],"代表所有拥有":["93.1"],"hasownproperty":["93.1"],"方法的类型":["93.1"],"所以所有原始类型":["93.1"],"非原始类型都可以赋给":["93.1"],"tslib":["94.0"],"导入辅助工具函数":["94.0"],"isolatedmodules":["94.0"],"将每个文件做为单独的模块":["94.0"],"transpilemodule":["94.0"],"严格的类型检查选项":["94.0"],"strict":["94.0"],"启用所有严格类型检查选项":["94.0"],"noimplicitany":["94.0"],"在表达式和声明上有隐含的":["94.0"],"any类型时报错":["94.0"],"strictnullchecks":["94.0"],"启用严格的":["94.0"],"检查":["94.0"],"noimplicitthis":["94.0"],"我是一个字符串":["95.2"],"定义联合类型别名":["95.2"],"husky":["96.2"],"来做":["96.2"],"拦截":["96.2"],"node":["96.3","103.5","107.11"],"由":["96.4"],"yarn":["96.4"],"衍生而来":["96.4"],"解决了":["96.4"],"env":["96.6","96.11"],"browser":["96.6"],"浏览器端":["96.6"],"es2021":["96.6"],"规则继承":["96.6"],"全部规则默认是关闭的":["96.6"],"这个配置项开启推荐规则":["96.6"],"推荐规则参照文档":["96.6"],"比如":["96.6"],"函数不能重名":["96.6"],"js的eslint插件":["96.7"],"查找vue语法错误":["96.7"],"发现错误指令":["96.7"],"不允许多个空行":["96.8"],"process":["96.8"],"production":["96.8"],"debugger":["96.8"],"unexpected":["96.8"],"multiline":["96.8"],"禁止空余的多行":["96.8"],"useless":["96.8"],"escape":["96.8"],"禁止不必要的转义字符":["96.8"],"import":["96.9"],"在入口文件引入":["96.9"],"但是你会发现在":["96.9"],"desc":["96.10"],"平台管理员":["96.10"],"roles":["96.10"],"buttons":["96.10"],"cuser":["96.10"],"detail":["96.10"],"token":["96.10","108.14"],"baseurl":["96.11"],"vite":["96.11"],"app":["96.11","132.4","134.2"],"base":["96.11"],"timeout":["96.11"],"请求拦截器":["96.11"],"admin":["96.12","137.7"],"acl":["96.12"],"userinfo":["96.12","108.14"],"info":["96.12"],"htm":["97.0"],"files":["97.0","106.3","106.6"],"uri":["97.0"],"cmd":["97.1"],"nginx":["97.1"],"t":["97.1"],"数据操作命令以及授权和权限管理命令":["98.0"],"column2":["98.1","102.5","102.7"],"创建一个新的表":["98.1"],"alter":["98.1"],"where":["98.2"],"condition":["98.2"],"从表中检索数据":["98.2"],"从用户撤销特定数据库或表的权限":["98.3"],"user":["98.3","108.11"],"字段":["99.0"],"可变长度的字符串":["99.3"],"存储一个或多个预定义的值":["99.5"],"除了上述常见的数据类型":["99.5"],"每个记录包含多个字段":["100.0"],"通过使用查询语言":["100.0"],"如sql":["100.0"],"可扩展性":["100.1"],"mysql具有良好的可扩展性":["100.1"],"可以通过分布式架构和主从复制来处理大规模数据和高并发访问":["100.1"],"高性能":["100.1"],"mysql通过优化查询执行计划":["100.1"],"创建数据库":["102.0"],"创建表":["102.0"],"打开命令行终端":["102.1"],"u":["102.1"],"sql":["102.2"],"database":["102.3"],"column1":["102.4","102.7"],"values":["102.5"],"value1":["102.5","102.7"],"table":["102.6","102.8"],"解析标记并提供用于遍历":["103.2"],"操作结果数据结构的":["103.2"],"douban":["103.3"],"创建一个空数组":["103.4"],"把数据以对象的形式存放在数组中":["103.4"],"allfiles":["103.4"],"获取html中的数据":["103.4"],"load":["103.4","127.7","135.1","135.2"],"p513344864":["103.6"],"楚门的世界":["103.6"],"truman":["103.6"],"show":["103.6"],"p479682972":["103.6"],"忠犬八公的故事":["103.6"],"hachi":["103.6"],"tale":["103.6"],"p2587099240":["103.6"],"海上钢琴师":["103.6"],"leggenda":["103.6"],"del":["103.6"],"快速":["104.0"],"男":["104.2"],"请求成功":["104.2"],"bruce":["104.3","107.12"],"可直接访问":["104.3"],"参数把流转关系交给下一个中间件或路由":["104.5"],"中间件注意事项":["104.5"],"调用了第1个全局中间件":["104.6"],"定义第二个全局中间件":["104.6"],"get":["104.7"],"send":["104.7","104.8"],"throw":["104.8"],"服务器内部发生了错误":["104.8"],"page":["104.8"],"定义错误级别的中间件":["104.8"],"捕获整个项目的异常错误":["104.8"],"从而防止程序的崩溃":["104.8"],"导入中间件":["104.10"],"相关的":["104.11"],"响应头":["104.11"],"就可解除浏览器端的跨域访问限制":["104.11"],"值仅限于":["104.12"],"plain":["104.12"],"multipart":["104.12"],"form":["104.12"],"application":["104.12","104.15","132.1"],"urlencoded":["104.12"],"三者之一":["104.12"],"如果客户端向服务器发送了额外的请求头信息":["104.12"],"则需要在服务器端":["104.12"],"通过":["104.12"],"dpr":["104.14"],"downlink":["104.14"],"save":["104.14"],"json":["104.15","108.12"],"格式的数据":["104.15"],"chrome":["105.1"],"v8":["105.1"],"引擎":["105.1"],"则完全没有采用这种模型":["105.2"],"它本质上就是一个单线程":["105.2"],"但一个线程如何服务于大量的请求":["105.2"],"如何处理高并发的呢":["105.2"],"程序运行不稳定":["105.3"],"读写文件":["106.1"],"rs":["106.1"],"同步模式下打开文件用于读取":["106.1"],"同步模式下打开文件用于读写":["106.1"],"txt":["106.3","106.6"],"可读流关闭了":["106.4"],"数据读取完毕":["106.4"],"关闭可写流":["106.4"],"nodejs":["106.6","107.21"],"流打开了":["106.7"],"00000000":["106.8"],"每一个元素占用一个字节内存":["106.8"],"是对底层内存的直接操作":["106.8"],"动态拼接出被操作文件的完整路径":["106.9"],"解决方案":["106.9"],"mkdirsync":["106.10"],"删除目录":["106.10"],"rmdir":["106.10"],"rmdirsync":["106.10"],"重命名文件和目录":["106.10"],"rename":["106.10"],"oldpath":["106.10"],"newpath":["106.10"],"d":["106.12"],"require":["106.13","107.12","107.13"],"定义文件的存放路径":["106.13"],"fpath":["106.13"],"your":["106.16"],"about":["106.17"],"关于页面":["106.17"],"模块化可提高代码的复用性和可维护性":["107.2"],"实现按需加载":["107.2"],"更好的分离":["107.3"],"自定义模块":["107.5"],"方法等成员":["107.6"],"供外界使用":["107.7"],"导入自定义模块时":["107.7","107.21"],"得到的就是":["107.7"],"变量是一个对象":["107.8"],"不会导致模块的代码被执行多次":["107.9"],"会按顺序尝试加载文件":["107.11"],"users":["107.12"],"project":["107.12"],"文件里调用了":["107.12"],"加载的入口":["107.13"],"如果没有":["107.13"],"中的包都是免费且开源的":["107.15"],"由于":["107.15"],"包的名称":["107.18"],"version":["107.18"],"不论是内置模块":["107.19"],"如果省略了文件的扩展名":["107.21"],"里调用":["107.22"],"tools":["107.22"],"如果目录里没有":["107.23"],"文件":["107.23","110.4"],"或者":["107.23"],"createpool":["108.2"],"host":["108.2"],"set":["108.3"],"更新数据":["108.3"],"update":["108.3","109.0","110.3"],"用户体验好":["108.6"],"页面局部刷新":["108.6"],"无需重新请求页面":["108.6"],"减轻服务器的渲染压力":["108.6"],"可考虑服务端渲染":["108.7"],"后台管理项目":["108.7"],"islogin":["108.11"],"保存在客户端浏览器中":["108.13"],"服务器通过还原":["108.13"],"字符串的形式来认证用户的身份":["108.13"],"组成部分":["108.13"],"payload":["108.13"],"signature":["108.13"],"参数":["108.14"],"用户信息对象":["108.14"],"加密密钥":["108.14"],"配置对象":["108.14"],"token有效期":["108.14"],"尽量不保存敏感信息":["108.14"],"因此只有用户名":["108.14"],"没有密码":["108.14"],"expiresin":["108.14"],"10h":["108.14"],"字符串还原为":["108.14"],"客户端访问有权限的接口时":["108.14"],"需通过请求头的":["108.14"],"remove":["109.0"],"更新依赖项":["109.0"],"upgrade":["109.0"],"运行脚本命令":["109.0"],"run":["109.0"],"清理缓存":["109.0"],"的默认包管理器":["110.1"],"也是世界上最大的开源软件注册表":["110.1"],"时":["110.2"],"卸载指定的包":["110.3"],"更新指定的包":["110.3"],"并生成":["110.4"],"部分":["110.5"],"你可以列出项目所需的包及其版本号":["110.5"],"定义脚本和使用":["110.6"],"publish":["110.6"],"请访问":["111.1"],"并执行以下命令来初始化项目":["111.2"],"编写你的包的代码":["111.3"],"init":["111.4"],"密码和邮箱":["111.5"],"执行以下命令发布你的包":["111.5"],"bug":["111.6"],"通过包管理器安装":["112.1"],"添加依赖项":["112.2"],"若要添加新的依赖项":["112.2"],"可以运行以下命令":["112.2"],"脚本在矩形区域中绘制图像":["113.1"],"动画和其他复杂的视觉效果":["113.1"],"轴向下延伸":["113.3"],"可以通过":["113.3"],"提供了两种基本的绘图上下文":["113.4"],"进行控制":["113.5"],"在一个网页上创造一个交互式地图":["113.6"],"让用户点击地图上的数据点来查看更多的信息或与其他应用程序进行交互":["113.6"],"您可以控制图形元素的位移":["113.7"],"位置":["113.7"],"颜色和其他属性":["113.7"],"不同的浏览器可能解释":["113.8"],"图像缩放":["114.0"],"fillrect":["114.1","114.3"],"原来的矩形是":["114.2"],"缩放后展示出来是":["114.2"],"垂直缩放":["114.4"],"水平位移":["114.4"],"单位像素":["114.4"],"垂直位移":["114.4"],"之上":["115.0"],"那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面":["115.0"],"在源图像中显示目标图像":["115.1"],"只有源图像内的目标图像部分会被显示":["115.1"],"源图像是透明的":["115.1"],"在源图像外显示目标图像":["115.1"],"document":["116.1","129.1"],"getelementbyid":["116.1"],"判断是否有getcontext":["116.1"],"lineto":["116.2"],"添加一个新点":["116.2"],"绘制一条从当前位置到指定新点":["116.2"],"交点为菱形":["117.1"],"miterlimit":["117.1"],"指定交点菱形的长度":["117.1"],"该属性只在":["117.1"],"属性的值等于":["117.1"],"时有效":["117.1"],"表示":["117.2"],"颜色":["117.2","131.3"],"gradient":["117.2"],"pink":["117.2"],"skyblue":["117.2"],"y":["117.3","119.6","124.3","132.3","133.3","136.4"],"垂直重复":["117.3"],"no":["117.3"],"不重复":["117.3"],"如果第二个参数是空字符串或":["117.3"],"则等同于":["117.3"],"shadowoffsety":["117.4"],"阴影的垂直位移":["117.4"],"下面是一个例子":["117.4"],"填充":["119.2"],"beginpath":["119.2","124.3"],"rect":["119.2"],"左眼":["119.3"],"stroke":["119.4"],"closepath":["119.4"],"两条线段使用fill":["119.4"],"tx":["119.5"],"png":["119.5","127.7","137.7","137.9"],"文本":["119.6"],"绘制文字最大宽度":["119.6"],"终点x":["120.2"],"终点y":["120.2"],"isdraw":["121.2","124.3"],"onmousedown":["121.2","124.3"],"onmouseup":["121.2"],"globalcompositeoperation":["121.2"],"获取当前的时间":["122.3"],"time":["122.3"],"hour":["122.3"],"gethours":["122.3"],"min":["122.3"],"getminutes":["122.3"],"sec":["122.3"],"round":["124.3"],"设置允许绘制的变量":["124.3"],"event":["124.3"],"pagex":["124.3"],"offsetleft":["124.3"],"pagey":["124.3"],"offsettop":["124.3"],"moveto":["124.3","133.5"],"onmouseleave":["124.3"],"inputcolor":["124.4"],"endfill":["126.2"],"库":["127.1"],"用于创建交互式":["127.1"],"2d":["127.1"],"技术进行硬件加速渲染":["127.3"],"能够处理大量的图形元素并实现流畅的动画效果":["127.3"],"提供了简洁而直观的":["127.4"],"sprite":["127.5"],"可以在现代浏览器上运行":["127.6"],"onassetsloaded":["127.7"],"当纹理加载完成后执行的回调函数":["127.7"],"创建一个矩形":["128.2"],"rectangle":["128.2"],"设置边框样式":["128.2"],"linestyle":["128.2"],"appendchild":["129.1"],"显示helloworld文字":["129.1"],"创建一个圆形":["129.2"],"circle":["129.2"],"创建一个纹理":["131.1"],"texture":["131.1"],"img14":["131.1"],"filters":["131.2"],"监听鼠标是否进入精灵":["131.2"],"轮廓宽度":["131.3"],"创建发光滤镜":["131.3"],"glowfilter":["131.3"],"window":["132.1"],"innerwidth":["132.1"],"drawellipse":["133.1"],"drawpolygon":["133.2"],"宽":["133.3"],"高":["133.3"],"圆角半径":["133.3"],"结束角度":["133.4"],"顺":["133.4"],"逆时针":["133.4"],"透明度":["133.5"],"jfs":["135.1"],"t1":["135.1"],"5c1b0581e1fa6c1c3":["135.1"],"58519cee2a0039e0":["135.1"],"jpg":["135.1"],"异步加载资源":["135.1","135.2"],"texturespromise":["135.1","135.2"],"加载完成后创建精灵":["135.1"],"loadbundle":["135.2"],"progress":["135.2"],"加载完成":["135.2"],"图像在放大或改变尺寸的情况下其图形质量不会有所损失":["136.1"],"因此能够优雅而简洁地渲染不同大小的图形":["136.1"],"并和":["136.1"],"x1":["136.3"],"x2":["136.3"],"r":["136.5"],"cy":["136.6"],"l":["136.9"],"blog":["137.0"],"readme":["137.1"],"新建文件夹":["137.2"],"在文件夹":["137.2"],"内新建":["137.2"],"cd":["137.3"],"dev":["137.4"],"打包":["137.4"],"作为我们的主页":["137.6"],"在新建一个":["137.6"],"logo":["137.7"],"alt":["137.7"],"yyg":["137.7"],"ui":["137.7"],"actions":["137.7"],"theme":["137.7"],"brand":["137.7"],"左上角的logo":["137.9"],"它的路径是从public文件夹开始的":["137.9"],"所以这里引用的是public":["137.9"],"jpg这张图":["137.9"],"是不是可以动态展开":["137.10"],"collapsed":["137.10"],"发布到":["137.11"],"repo":["137.11"],"push":["137.11"]},{"0":["10.1","13.1","30.3","34.14","35.2","38.7","78.15","88.10","108.11","114.1","114.4","133.4","135.1"],"1":["29.15","34.2","34.9","34.14","38.9","42.6","51.2","60.4","69.4","80.0","87.9","88.10","89.4","89.5","90.2","90.3","114.2","114.4"],"2":["10.5","10.14","12.20","16.1","16.2","27.24","28.4","30.6","34.2","36.6","41.14","42.6","51.2","53.1","54.7","74.5","78.3","80.0","85.16","87.4","89.4","89.5","90.2","90.3","103.6","114.4","116.1"],"3":["10.14","27.1","28.4","32.1","35.11","36.7","36.8","38.7","39.7","42.6","58.4","81.3","84.1","85.18","87.4","89.4","103.6","108.2"],"4":["7.4","26.1","34.20","39.7","42.6","45.0","53.1","58.9","72.1","74.5","87.6","89.4","99.1","108.11","136.1"],"5":["12.25","34.19","34.20","35.8","39.6","51.4","56.0","71.7","85.7","87.6","108.14"],"6":["40.8","56.0","74.12","85.8","87.2"],"7":["5.4","38.7","108.3"],"8":["5.4","37.3"],"9":["96.7"],"10":["117.2","117.4"],"11":["69.3"],"15":["131.3"],"16":["96.3"],"17":["39.2"],"18":["42.4","78.2","88.6"],"20":["88.8"],"25":["66.1","76.2"],"29":["42.1"],"30":["76.1","76.2","114.1","114.2","122.3","136.8","136.9"],"32":["133.4"],"35":["131.1"],"40":["136.9"],"50":["15.5","120.2","136.5"],"54":["133.3"],"64":["133.1"],"66":["136.9"],"80":["104.8"],"90":["71.12","136.7"],"100":["31.1","35.2","114.1","114.3","117.2","128.2","129.1","133.5","136.7"],"120":["136.9"],"123":["38.10","88.9","95.2"],"150":["136.4"],"160":["133.3"],"164":["133.1"],"200":["118.0","120.2","128.2","136.3","136.7","136.8"],"294":["99.1"],"295":["99.1"],"300":["128.2"],"324":["72.2"],"350":["119.3"],"400":["18.0"],"408":["84.4"],"409":["84.4"],"450":["120.1","120.2"],"500":["120.2"],"600":["122.4","123.2"],"967":["99.1"],"1970":["66.3","99.4"],"2016":["5.4"],"2017":["5.4"],"2224":["131.1"],"3000":["104.3"],"12087":["131.1"],"23739":["131.1"],"65535":["99.3"],"actionscript":["5.2"],"jscript":["5.2"],"等":["5.2","58.9"],"所使用":["5.2"],"node":["5.3","107.23"],"环境中可以读写文件等操作":["5.3"],"因为":["5.3"],"是在":["5.3"],"基础上的拓展":["5.3"],"所有":["5.3"],"es7":["5.4"],"es2016":["5.4"],"prototype":["5.4"],"includes":["5.4","58.5"],"用于检查数组是否包含某个元素":["5.4"],"引入指数运算符":["5.4"],"es8":["5.4"],"es2017":["5.4"],"entries":["5.4"],"values":["5.4"],"是一种方便拼接字符串的新语法":["6.0"],"模板字符串使用反引号":["6.0"],"m":["6.1","6.4","73.3"],"years":["6.1","6.4","75.2"],"old":["6.1","6.4","75.2"],"console":["6.1","6.2","6.3","8.3","8.4","8.5","8.8","8.10","8.11","27.17","34.10","34.14","34.15","34.23","34.24","35.9","35.10","36.11","39.5","40.3","40.6","40.11","40.12","41.15","41.16","50.9","62.7","66.2","71.1","73.8","74.7","74.10","74.15","74.16","78.3","78.10","78.11","78.14","78.18","79.1","87.13","88.6","89.5","104.2","106.3","106.6","106.16","116.1"],"breaks":["6.2"],"log":["6.2","8.3","8.4","8.5","8.8","8.10","8.11","34.10","34.15","34.24","35.9","35.10","36.11","39.5","40.3","40.6","40.11","41.5","41.15","41.16","51.3","62.7","66.2","73.8","74.7","74.10","74.15","78.3","78.11","78.18","79.1","84.6","87.11","87.13","88.6","89.5","104.2","106.3","106.6","106.16","116.1"],"输出":["6.2","6.4","35.10","51.1","51.2","51.3","73.8","79.2","81.3"],"is":["6.3","21.5","24.9","75.2"],"i":["6.4","75.2","79.1"],"特性":["7.0"],"关键字":["7.1","76.0"],"add":["7.1","27.2","98.1","132.4"],"multiply":["7.2"],"x":["7.2","38.3","84.3","87.12"],"y":["7.2","73.10"],"箭头函数中的this":["7.3"],"person2":["7.3","76.2"],"alice":["7.3"],"的指向错误":["7.4"],"在需要动态绑定":["7.4"],"下面我将详细介绍数组解构和对象解构的用法":["8.0"],"以及一些扩展功能":["8.0"],"前面必须要加分号":["8.6"],"age":["8.9","42.1","42.4","66.1","78.2","92.3"],"只能选择全部标签":["10.2"],"css":["10.2","10.6","12.2","12.6","12.8","12.10","12.11","12.12","12.13","12.14","12.16","12.30","15.2","60.5"],"pink":["10.3"],"md":["10.4","137.2"],"有标签名":["10.5"],"标签名必须写在前面":["10.5"],"id":["10.5","20.11","108.3"],"选择器":["10.5"],"理论上可以作为交集的条件":["10.5"],"但实际应用中几乎不用":["10.5"],"n":["10.6"],"color":["10.7","10.8","20.8"],"p1":["10.9"],"p2":["10.9"],"active":["10.11","124.4"],"链接被按下时的样式":["10.11"],"先找父亲的第":["10.12"],"个孩子":["10.12"],"再看是否为元素":["10.12"],"是成功":["10.12"],"否失败":["10.12"],"是直接找第":["10.12"],"属性且属性值以":["10.13"],"开头的":["10.13"],"style":["10.14","96.9","136.5"],"父级元素添加overflow":["10.14"],"将其属性值设置为":["10.14"],"hidden":["10.14","16.3"],"auto":["10.14","12.16"],"或":["10.14","57.0","137.3"],"scroll":["10.14","54.0"],"父级添加after伪元素":["10.14"],"它通过在父元素上设置":["11.0"],"display":["11.0","11.5","11.8","12.3","12.6","12.8","12.9"],"container":["11.1","11.5","11.8","12.2","12.6","12.8","12.9","12.10","12.11","12.22","135.0","135.1","135.2"],"一旦容器成为":["11.1"],"column":["11.2","12.4","12.12","98.1"],"垂直排列":["11.2"],"垂直逆向排列":["11.2"],"项目在交叉轴上的对齐方式":["11.3"],"项目靠交叉轴起始位置对齐":["11.3"],"不换行":["11.4","16.1"],"默认值":["11.4"],"换行":["11.4"],"item":["11.6","11.7","34.31","34.32","55.5","103.4"],"scss":["11.8"],"多行项目平均分布在交叉轴上":["11.9"],"两端不留空白":["11.9"],"around":["11.9"],"两端留有空白":["11.9"],"导航栏布局":["11.10"],"direction":["11.10"],"row":["11.10","12.4"],"分割为网格单元格":["12.1"],"cells":["12.1"],"开发者可以更轻松地控制页面元素在网格中的位置和大小":["12.1"],"来实现":["12.2"],"和":["12.4","15.6","21.1","73.6","81.8","108.13","113.4","136.1"],"属性来指定一个网格项的位置和跨度":["12.4"],"用于更精确地控制网页布局":["12.5"],"可以使用空格分隔值来创建多列或多行":["12.6"],"sidebar":["12.7"],"content":["12.7","29.6","63.2","106.3","106.16"],"footer":["12.7"],"类似":["12.10"],"但允许分别指定列和行的间隔":["12.10"],"fr":["12.11"],"单位":["12.11"],"也可以设置为":["12.12"],"控制项目在行轴上的对齐方式":["12.13","12.15"],"grid":["12.13","12.14"],"控制网格项目在行轴上的对齐方式":["12.14"],"控制项目在列轴上的对齐方式":["12.15"],"网格线名称或":["12.16"],"值来指定位置":["12.16"],"我们可以创建灵活且复杂的网页布局":["12.17"],"第二":["12.18"],"列宽度自适应":["12.18"],"第三列占据剩余空间":["12.18"],"rows":["12.18","12.19"],"repeat":["12.20","40.5","74.9"],"大于768px时":["12.20"],"使用两列布局":["12.20"],"布局在实际应用中非常强大":["12.21"],"body":["12.22","29.14","61.2"],"div":["12.22","24.6","25.4","27.12","29.16"],"class":["12.22","76.0"],"header":["12.22","12.23","27.30","29.6"],"nav":["12.23","12.24","82.2"],"navigation":["12.23","12.24"],"布局是":["12.26"],"产品展示页面等":["12.27"],"flexbox":["12.27","12.33"],"适用于一维布局":["12.28"],"支持在主轴上对齐网格项":["12.28"],"布局时":["12.29"],"属性来改变网格项的顺序":["12.30"],"但在旧版本的浏览器中可能存在兼容性问题":["12.31"],"为了确保网页在不同浏览器中正常显示":["12.31"],"当网页中包含大量网格项和复杂的布局时":["12.32"],"可能会导致渲染性能下降":["12.32"],"布局":["12.33"],"实现更复杂的布局需求":["12.33"],"结合":["12.33"],"类选择器":["13.0"],"元素选择器":["13.0"],"400px":["15.1","15.3","121.1"],"200px":["15.1"],"background":["15.1"],"box":["15.3","62.5"],"width":["15.3","16.0","18.0","49.1","104.14","122.4","136.4"],"left":["15.5","119.6"],"top":["15.5"],"margin":["15.6"],"水平居中":["15.7"],"align":["15.7"],"nowrap":["16.1"],"改变元素为box弹性盒子":["16.2"],"line":["16.2"],"clamp":["16.2"],"限定行数":["16.2"],"不是一个规范的属性":["16.2"],"没有在css规范草案中":["16.2"],"position":["16.3"],"relative":["16.3"],"overflow":["16.3"],"piece":["17.0"],"垂直滚动条和水平滚动条交汇的部分":["17.0"],"videoplayer":["18.0"],"ogg":["18.2"],"webm":["18.3"],"规定了多媒体资源":["18.5"],"可以是多个":["18.5"],"定义多种媒体资源":["18.6"],"比如":["18.6","28.3"],"自动播放":["18.7"],"muted":["18.7"],"是否静音":["18.7"],"loop":["18.7"],"psuse":["18.8"],"暂停":["18.8"],"demo":["18.10"],"horse":["18.10"],"movie":["18.11"],"mp4":["18.11"],"type":["18.11","20.13","28.2","28.8","106.16"],"您的浏览器不支持":["18.11"],"html5":["18.11","19.1"],"标签":["18.11","21.3"],"language":["19.0"],"是一种用于创建网页和网页应用程序的标记语言":["19.0"],"版本是":["19.1"],"文档的根元素":["19.1"],"包含整个网页的内容":["19.1"],"头部部分":["19.1"],"为最高级别的标题":["19.2"],"为最低级别":["19.2"],"p":["19.2","20.7","21.1","29.16","38.12","43.2","65.2","88.1","88.10","102.1"],"段落标签":["19.2","21.1"],"用于定义段落文本":["19.2","21.1"],"a":["19.2","21.5","29.15","55.0","61.2","61.3","85.5","89.4","89.5","104.12","106.13","107.21"],"锚链接标签":["19.2"],"多媒体支持":["19.3"],"video":["19.3"],"audio":["19.3"],"无障碍性":["19.4"],"表单验证":["19.4"],"框架等":["19.4"],"标记":["20.0"],"为了避免这种情况":["20.0"],"这是h3级别的标题":["20.1"],"h4":["20.1"],"www":["20.3","21.4","84.3"],"example":["20.3","20.4","21.4"],"jpg":["20.4","104.3"],"列表项2":["20.5","20.6"],"包含一段文本":["20.7"],"blue":["20.8"],"表头2":["20.9"],"这是另一行文本":["20.10"],"checkbox":["20.11"],"input":["20.13","24.14"],"text":["20.13","22.1","50.9","103.4","129.1","137.9"],"about":["20.14","25.3","104.7"],"关于我们":["20.14"],"您的浏览器不支持视频播放":["20.15"],"ul":["21.1","32.4","60.2"],"li":["21.1","32.4","60.2","103.4"],"em":["21.2"],"强调标签":["21.2"],"分别表示强调和斜体":["21.2"],"img":["21.2","30.6"],"从而形成嵌套的关系":["21.3"],"https":["21.4"],"this":["21.5","24.10","26.3","26.4","26.5","26.6","28.6","54.2","79.1","81.12","88.7","88.9","94.0","103.4"],"tag":["21.5"],"的标签上添加下面的属性":["22.1"],"autocomplete":["22.1"],"off":["22.1"],"框架":["24.1","105.1"],"它允许您将应用程序划分为可复用的组件":["24.1"],"html":["24.3","25.6","29.14","37.6","106.13","106.14"],"直接引入vue":["24.3"],"app":["24.4","26.3","126.2"],"on":["24.7","106.4","131.2"],"用于监听":["24.7"],"dom":["24.7"],"visible":["24.9"],"isvisible":["24.10"],"items":["24.12","137.9","137.10"],"key":["24.12","52.2"],"handleclick":["24.13"],"me":["24.13"],"message":["24.16","27.5","104.8","106.3","106.6"],"data":["24.16","82.2","84.5","96.11","96.12"],"component":["24.17","25.7","25.10","29.2"],"数据更新后":["24.18"],"在数据更新之后调用":["24.18"],"发生在重新渲染之后":["24.18"],"可以在此处执行依赖于更新后":["24.18"],"的操作":["24.18"],"beforedestroy":["24.18"],"销毁前":["24.18"],"在实例销毁之前调用":["24.18"],"可以在此处进行清理工作":["24.18"],"的路由功能":["25.1"],"学习":["25.1"],"项目中":["25.2"],"bash":["25.2"],"使用npm":["25.2"],"const":["25.3","50.6","53.5","62.5","64.2","69.4","73.4","75.2","75.3","76.1","88.1","89.2","90.4","90.6","92.6","96.12"],"template":["25.4","27.0","27.12","29.13","29.14","29.17"],"home":["25.5"],"router":["25.6"],"link":["25.6","137.7","137.9"],"beforeeach":["25.8"],"to":["25.8"],"path":["25.9","108.14"],"category":["25.9"],"lazy":["25.10"],"重定向":["25.12"],"应用中的共享状态":["26.0"],"state":["26.0"],"中唯一允许修改状态的地方":["26.1"],"它们类似于事件":["26.1"],"每个":["26.1"],"mutation":["26.1"],"都有一个字符串的事件类型和一个回调函数":["26.1"],"在回调函数中进行实际的状态修改操作":["26.1"],"actions":["26.1"],"动作":["26.1"],"的繁琐操作":["26.2"],"可预测性":["26.2"],"由于状态的变更必须通过":["26.2"],"中":["26.3","115.0"],"导入":["26.3"],"并将其关联到":["26.3"],"实例中":["26.3"],"这样":["26.3"],"整个应用的组件都可以通过":["26.3"],"来访问":["26.3"],"decrement":["26.4"],"组件中的代码":["26.4","26.5","26.6"],"methods":["26.4","26.5"],"在上面的例子中":["26.5"],"我们在":["26.5"],"中新增了一个":["26.5"],"才能于":["27.0"],"中使用":["27.0"],"也不用写":["27.0"],"compositionapi":["27.1"],"新特性都应该写在这个函数内部":["27.1"],"组件中所用到的":["27.1"],"count3":["27.2"],"button":["27.2","27.12","32.2","60.1"],"click":["27.2","32.2","62.2"],"changemsg":["27.4"],"value":["27.4","27.31","38.10","69.2"],"change":["27.4","27.13","27.14","62.11"],"创建一个自定义的":["27.7"],"并对其依赖项跟踪和更新触发进行显式控制":["27.7"],"需求":["27.7"],"使用":["27.7","137.2"],"person":["27.8","81.3","88.9","92.1","92.4"],"zhangsan":["27.8","42.7","81.3"],"ref":["27.9","27.15"],"change1":["27.10"],"test1":["27.10"],"按钮":["27.13","27.14"],"对象":["27.15","38.11","38.12","57.5"],"vue":["27.15","29.13","29.14","29.17","96.6"],"参数二":["27.16"],"数据改变时触发的回调函数":["27.16"],"newval":["27.16","27.17"],"oldval":["27.16","27.17"],"bar":["27.19","40.13","74.17"],"name":["27.19","29.11","41.9","42.7","81.8","89.2","92.1","92.7","102.3","102.8","111.7"],"name2":["27.20"],"不用直接指定要监视的数据":["27.21"],"回调函数中使用的哪些响应式数据就监视哪些响应式数据":["27.21"],"用于清除":["27.22"],"effect":["27.22"],"侦听器会被链接到该组件的生命周期":["27.23"],"并在组件卸载时自动停止":["27.23"],"sync":["27.24"],"组合式api":["27.25"],"是没有":["27.25"],"update":["27.27","98.2"],"这个周期方法被移除":["27.27"],"beforeupdate":["27.28"],"更新之前":["27.28"],"updated":["27.28"],"为":["27.29"],"modifiers":["27.29"],"包含修饰符":["27.29"],"的对象":["27.29"],"height":["27.31","49.1","121.1","123.2","132.1","136.4"],"onresize":["27.31"],"window":["27.31"],"innerwidth":["27.31"],"bus":["28.1"],"可以实现任意组件通信":["28.1"],"pubsub":["28.1"],"发布订阅模式实现任意组件通信":["28.1"],"vuex":["28.1"],"string":["28.2","41.1","41.6","41.14","87.12","90.4","90.5","92.4","92.7","95.1"],"接受的数据类型":["28.2"],"default":["28.2"],"默认参数":["28.2"],"接受默认数据":["28.2"],"事件可以让用户与网页进行交互":["28.3"],"handler1":["28.4"],"我要传递多个参数":["28.4"],"方法执行":["28.5"],"传递一个数组":["28.5"],"数组元素即为将来组件需要触发的自定义事件类型":["28.5"],"此方执行会返回一个":["28.5"],"emit":["28.5"],"方法用于触发自定义事件":["28.5"],"当点击按钮的时候":["28.5"],"事件回调内部调用":["28.5"],"方法去触发自定义事件":["28.5"],"写法没有":["28.6"],"那么在":["28.6"],"想实现全局事件的总线功能就有点不现实啦":["28.6"],"在":["28.7","81.14","115.0"],"vue3":["28.7","32.1","96.6"],"中一个组件可以通过使用多个":["28.7"],"让父子组件多个数据同步":["28.7"],"下方代码相当于给组件":["28.7"],"success":["28.8"],"size":["28.8"],"small":["28.8"],"title":["28.8","37.3","103.4"],"标题":["28.8"],"但是需要注意":["28.9"],"如果想让父组件获取子组件的数据或者方法需要通过":["28.9"],"defineexpose":["28.9"],"对外暴露":["28.9"],"方法用于提供数据":["28.10"],"此方法执需要传递两个参数":["28.10"],"分别提供数据的":["28.10"],"也是集中式管理状态容器":["28.11"],"类似于":["28.11","62.8"],"b替换":["28.12"],"填入组件b部分的结构":["28.12"],"作用域插槽":["28.12"],"可以理解为":["28.12"],"子组件数据由父组件提供":["28.12"],"但是子组件内部决定不了自身结构与外观":["28.12"],"样式":["28.12"],"子组件":["28.12"],"代码如下":["28.12"],"components":["29.2","137.7"],"更加友好":["29.5"],"在使用":["29.5"],"right":["29.6","119.6"],"fancybutton":["29.10"],"msg":["29.12","29.16","108.11"],"插槽里的节点":["29.13"],"异步组件":["29.13"],"自定义classname等等":["29.14"],"comp":["29.15"],"v":["29.15","32.4"],"if":["29.15","55.2","55.3","55.4","55.6","56.4","106.6","121.2","124.3"],"选项已移除":["29.17"],"父组件":["29.17"],"modelvalue简写为v":["29.17"],"cli":["30.2"],"babel":["30.4","96.7"],"alongside":["30.4"],"linter":["30.4"],"formatter":["30.4"],"config":["30.4","83.4","84.4","96.11"],"history":["30.4"],"动态导入":["30.5"],"hmr":["30.5"],"速度快到惊人的":["30.5"],"构建的项目模板":["30.6"],"latest":["30.7"],"位贡献者":["31.1"],"内存减少54":["31.2"],"使用proxy代替defineproperty实现数据响应式":["31.2"],"provide与inject":["31.3"],"新组件":["31.3"],"fragment":["31.3"],"对":["32.1","38.13"],"的改进":["32.1"],"不好定义了需要在开启一个":["32.3"],"script":["32.3","37.2","110.3"],"for":["32.4","35.4","52.2"],"然后放到一个变量中":["34.0"],"管理非常方便":["34.0"],"array":["34.1","34.32","52.2","55.1","56.3","56.4","58.7","87.4"],"创建了一个空的数组":["34.1"],"查":["34.5","40.1"],"splice":["34.6","34.11"],"red":["34.7","41.10","122.3"],"count":["34.8"],"yellow":["34.9","129.2"],"orange":["34.9"],"brown":["34.10"],"取得最后一项":["34.12"],"取得第一项":["34.13"],"删除第一项":["34.14"],"purple":["34.17"],"插入两个值":["34.17"],"删除一个元素":["34.17"],"find":["34.18"],"element":["34.21","43.1","62.3"],"index":["34.21","34.32","103.5","106.13","106.14"],"every":["34.27"],"someresult":["34.28"],"everyresult":["34.29"],"filterresult":["34.31"],"执行流程":["35.1"],"语句在执行会先对":["35.1"],"isnan":["35.2"],"alert":["35.2","78.4"],"请输入一个合法的分数":["35.2"],"当成绩为100时":["35.2"],"奖励一辆bmw":["35.2"],"语句在执行时":["35.3"],"会依次将":["35.3"],"后的表达式和":["35.3"],"后的表达式进行全等比较":["35.3"],"会先对条件表达式进行判断":["35.5"],"如果结果为":["35.5","39.12"],"true":["35.5","39.11","39.12","41.3","62.10","78.20","87.5","88.6","131.2"],"则执行循环体":["35.5"],"会先执行":["35.6"],"后的循环体":["35.6"],"执行完毕后":["35.6"],"会对while后的条件表达式进行判断":["35.6"],"prop":["35.9"],"用来跳过当次循环":["35.11"],"循环语句也能实现一些简单的重复操作":["36.0"],"但是比较具有局限性":["36.0"],"此时我们就可以使用":["36.0"],"这是函数表达式写法":["36.2"],"匿名函数后面跟分号结束":["36.2"],"var":["36.2","67.2","68.2","106.10","117.3"],"函数不调用自己不执行":["36.3"],"调用函数的时候千万不要忘记加小括号":["36.3"],"函数是可以相互调用的":["36.3"],"实参2":["36.6"],"在函数调用的小括号里面是实参":["36.6"],"实际的参数":["36.6"],"形参和实参的执行过程":["36.6"],"如果实参的个数小于形参的个数":["36.7"],"多于的形参定义为undefined":["36.7"],"最终的结果就是":["36.7"],"nan":["36.7"],"形参可以看做是不用声明的变量":["36.7"],"返回的结果是最后一个值":["36.8"],"我们求任意两个数的":["36.8"],"加减乘数结果":["36.8"],"继续执行下次循环":["36.9"],"tip":["36.12","77.2","79.4"],"无需调用":["36.12"],"但它是一种解释性语言":["37.0"],"不需要编译":["37.0"],"document":["37.1","62.5"],"通过":["37.2","58.0","104.2"],"标签将":["37.2"],"基":["37.3"],"属性引入":["37.4"],"标签如果带":["37.4"],"alt":["37.7"],"就指向一个对象":["38.2"],"该对象内部包含两个键值对":["38.2"],"又称为两个":["38.2"],"成员":["38.2"],"第一个键值对是":["38.2"],"属性":["38.3","38.11","38.13","61.3","79.4","81.8","88.6","92.0","117.2"],"property":["38.3"],"它的":["38.3"],"键值":["38.3"],"可以是任何数据类型":["38.3"],"如果一个属性的值为函数":["38.3"],"通常把这个属性称为":["38.3"],"方法":["38.3","64.1"],"它可以像函数那样调用":["38.3"],"function":["38.3","79.1","81.4","87.12","119.5"],"return":["38.3","53.6","54.5","58.5","58.6","83.4","89.3","90.6","96.11","106.3","106.6"],"然后":["38.4","57.5","117.2"],"的值变为":["38.4"],"这时不会对":["38.4"],"才能执行":["38.5"],"如果要解释为对象":["38.5"],"最好在大括号前加上圆括号":["38.5"],"因为圆括号的里面":["38.5"],"只能是表达式":["38.5"],"所以确保大括号只能解释为对象":["38.5"],"数字键可以不加引号":["38.7"],"因为会自动转成字符串":["38.7"],"后绑定":["38.8"],"也就是说":["38.8"],"你可以在任意时刻新增属性":["38.8"],"没必要在定义对象的时候":["38.8"],"key2":["38.9"],"defineproperty":["38.10"],"configurable":["38.10"],"上面代码之中":["38.10"],"哪些属性是继承的":["38.11"],"就像上面代码中":["38.11"],"本身并没有":["38.11"],"但是":["38.11"],"native":["38.12"],"code":["38.12","96.7"],"没有任何输出":["38.12"],"上面代码中":["38.12","38.13","114.5","117.2"],"继承了":["38.12"],"undefined":["38.13","41.5"],"并没有":["38.13"],"赋值等于创造了一个全局变量":["38.13"],"正确的写法应该是":["38.13"],"先定义对象":["38.13"],"中常用的运算符有":["39.1"],"算数运算符":["39.1"],"浮点数的进度问题":["39.2"],"浮点数值的最高精度是":["39.2"],"乘等于":["39.3"],"是旧值":["39.6"],"js":["39.6","41.16","50.6","62.5","69.4","71.3","71.4","81.3","81.7","91.7","106.10","107.23","117.1"],"a1":["39.6"],"判等号":["39.7"],"判断两边值是否相等":["39.7"],"没有":["39.9","39.10"],"才会返回":["39.9","39.10"],"对于非布尔值进行与运算":["39.9"],"对于非布尔值或运算":["39.10"],"即圆括号中的表达式会第一个运算":["39.13"],"使用运算符时":["39.13"],"如果遇到拿不准的":["39.13"],"可以直接通过":["39.13"],"以及":["40.2","74.6"],"进行字符串拼接之外":["40.2","74.6"],"trimright":["40.5","74.9"],"copyresult":["40.7","74.11"],"padstart":["40.8","74.12"],"startwith":["40.10","74.14"],"hello":["40.12","74.16","79.1","81.11","87.7"],"world":["40.12","74.16","87.7"],"false":["40.13","41.7","42.1","70.6","74.17"],"arr":["40.15","74.19","87.5"],"search":["40.16","46.1","74.20"],"pattern":["40.17","73.4","73.8","74.21"],"at":["40.17","40.19","74.21","74.23","104.8"],"bat":["40.18","74.22"],"sat":["40.18","74.22"],"fat":["40.18","74.22"],"result":["40.19","74.23","90.4"],"boolean":["41.1"],"floatnum3":["41.2"],"有效":["41.2"],"但不推荐":["41.2"],"floatnum":["41.2"],"包含":["41.3"],"值的变量跟未定义变量是有区别的":["41.3"],"jingleheimerschmidt":["41.4"],"字符串是不可变的":["41.4"],"意思是一旦创建":["41.4"],"非空字符串":["41.6"],"number":["41.6","71.0","87.12","89.1","90.3","90.5","90.7","92.2","92.3","92.7","95.2"],"foosymbol":["41.7"],"nicholas":["41.9"],"colors":["41.10"],"let":["41.11","52.2","54.5","89.4","92.2","92.3"],"map":["41.12","53.5","58.9"],"利用string":["41.14"],"typeof":["41.15"],"只用这5种情况":["41.16"],"其他都为true":["41.16"],"当我们把变量赋值给一个变量时":["41.17"],"10值":["41.18"],"引用类型数据存放在堆中":["41.19"],"每个堆内存对象都有对应的引用地址指向它":["41.19"],"引用地址存放在栈中":["41.19"],"简单类型赋值":["41.20"],"是生成相同的值":["41.20"],"found":["42.1"],"不能定义名为eval":["42.1"],"和arguments":["42.1"],"的变量":["42.1"],"否则会导致语法错误":["42.1"],"声明提升":["42.1"],"foo":["42.1","81.4"],"lisi":["42.2","42.7"],"不会被提升":["42.3"],"try":["42.5"],"你可能以为会输出0":["42.6"],"实际上会输出5":["42.6"],"比":["42.8"],"优先级高":["42.8"],"它提供了对文档内容进行访问和操作的方法和属性":["43.0"],"创建新元素":["43.1"],"并使用":["43.1"],"appendchild":["43.1"],"createelement":["43.2"],"textcontent":["43.2"],"可以使用它向前或向后导航":["44.0"],"go":["44.1"],"forward":["44.2"],"导航到相对于当前页面的偏移量为2的页面":["44.2"],"的各个部分":["45.0"],"如协议":["45.0"],"主机名":["45.0"],"路径和查询参数等":["45.0"],"同时也提供了一些导航方法":["45.0"],"如重定向到其他":["45.0"],"刷新页面等":["45.0"],"它包含了":["46.0"],"的路径部分":["46.1"],"将页面重定向到新的url":["46.2"],"assign":["46.2"],"如浏览器的名称":["47.0"],"版本":["47.0","110.4"],"appversion":["47.1"],"获取浏览器的版本":["47.2"],"如屏幕的尺寸":["48.0"],"不包括系统任务栏或工具栏":["48.1"],"屏幕可用宽度":["48.2"],"availwidth":["48.2"],"获取屏幕的可用高度":["48.2"],"的顶级对象":["49.0"],"调整窗口的大小":["49.1"],"close":["49.2","106.7"],"调整窗口大小":["49.2"],"与服务器交换数据":["50.1"],"并且更新部分网页":["50.1"],"的原理简单来说通过":["50.1"],"构建请求所需的数据内容":["50.2"],"并通过":["50.2"],"实例对象":["50.3"],"常见的有":["50.4"],"get":["50.4","50.5","57.5","108.11"],"post":["50.4","50.8","96.10"],"服务端地址":["50.4"],"如果不传递数据则为":["50.5"],"null":["50.5","50.8","54.2","54.7","81.12"],"如果使用":["50.5"],"属性用于接收服务器端的响应结果":["50.6"],"举个例子":["50.6"],"request":["50.6","83.5"],"new":["50.6","81.3","87.10","90.6","104.4","117.3"],"send":["50.8","108.5","108.11"],"else":["50.8","106.17"],"xml":["50.9"],"请求成功后的回调函数":["50.9"],"即使外部函数已经执行完毕":["51.0"],"也可以继续访问":["51.0"],"closure":["51.1"],"在上述示例中":["51.2","57.3","57.5","59.4","66.1"],"通过捕获外部变量":["51.4"],"闭包可以持久化存储函数的状态":["51.4"],"并在每次调用时保持该状态":["51.4"],"这在处理异步操作":["51.4"],"定时器和事件处理等场景中特别有用":["51.4"],"实现函数柯里化":["51.4"],"可能会导致意外的行为":["51.5"],"闭包是":["51.5"],"javascript":["51.5","67.1","67.4","68.1","68.4","73.3","77.2","111.3","113.6","136.1"],"中一项强大的特性":["51.5"],"originalobject":["52.1"],"使用扩展运算符":["52.1"],"newobj":["52.2","78.7"],"isarray":["52.2","56.4","58.7"],"in":["52.2"],"用于乘以":["53.1"],"柯里化可能会增加代码的复杂性和理解难度":["53.2"],"过度的柯里化可能导致函数嵌套过深":["53.2"],"难以阅读和调试":["53.2"],"因此":["53.2","66.4"],"在使用柯里化时":["53.2"],"需要根据具体场景和需求权衡使用的程度":["53.2"],"concat":["53.4","56.3","58.7"],"nextargs":["53.5"],"mergedargs":["53.5"],"arg":["53.5"],"这种方法使用箭头函数和递归来实现柯里化":["53.6"],"keypress":["54.0"],"mousemove":["54.0","54.4"],"等事件在触发时":["54.0"],"会不断地调用绑定在事件上的回调函数":["54.0"],"mousedown":["54.1","54.4"],"settimeout":["54.2","54.6"],"apply":["54.2"],"starttime":["54.3"],"curtime":["54.3"],"delay":["54.5"],"timer":["54.5"],"callnow":["54.6"],"第一次会立即执行":["54.6"],"以后只有事件执行后才会再次触发":["54.6"],"定义要进行的函数":["54.7"],"from":["55.1","106.8","106.10"],"length":["55.3","55.4","55.6","87.14"],"has":["55.6"],"使用infinity":["56.1"],"无论多少层都将扁平化为一维数组":["56.1"],"优化":["56.2"],"res3":["56.2"],"变为":["57.0"],"时":["57.0","72.1"],"会调用相应的回调函数":["57.0"],"在操作失败时调用":["57.1"],"error":["57.1","57.2","70.9","83.4","88.6","95.1","96.11"],"在回调函数中":["57.1"],"可以执行异步操作":["57.1"],"例如发送网络请求":["57.1"],"处理成功的结果":["57.2"],"处理失败的结果":["57.2"],"处理任意一个操作失败的结果":["57.3"],"第一个":["57.3","114.5"],"方法返回了一个新的":["57.3"],"并返回一个新的":["57.4"],"当":["57.4","94.0"],"中的所有":["57.4"],"实例都成功完成时":["57.4"],"新的":["57.4"],"实例的":["57.4"],"函数封装了一个基本的":["57.5"],"请求":["57.5","84.3"],"它接收三个参数":["57.5"],"请求的":["57.5"],"请求的方法":["57.5"],"例如":["57.5","62.2"],"和请求的数据":["57.5"],"可选":["57.5"],"函数内部创建了一个":["57.5"],"并使用传递的参数设置请求的相关属性":["57.5"],"方法发送请求":["57.5"],"当请求成功完成时":["57.5"],"将数组缩减为单个值":["58.0"],"当前值":["58.1"],"currentvalue":["58.1"],"当前索引":["58.1"],"pre":["58.6"],"cur":["58.6","58.7"],"sum":["58.8"],"reduce":["58.8"],"如":["58.9","70.9"],"filter":["58.9"],"foreach":["58.9"],"全局作用域和局部作用域":["59.0"],"内部的":["59.4","78.5"],"盒子插入节点":["60.1"],"btn":["60.1"],"再来看另一种情形的代码演示":["60.1"],"不仅如此":["60.3"],"span":["60.4"],"初级":["60.4"],"变色":["60.4"],"api":["61.1","96.10","107.15","113.1","113.3","113.8","127.1","127.4"],"应用程序编程接口":["61.1"],"来访问和操作":["61.1"],"树中的节点":["61.1"],"文本":["61.2"],"href":["61.2","61.3"],"标签的":["61.3"],"提供了丰富的功能和方法":["61.4"],"使开发者能够通过":["61.4"],"与网页进行交互和动态操作":["61.4"],"它允许你监听和响应用户与网页元素之间的交互":["62.0"],"鼠标点击":["62.1"],"网页中的一个按钮":["62.1"],"其中":["62.2","63.1","102.1"],"是要监听的事件名称":["62.2"],"mouseover":["62.2"],"contextmenu":["62.5"],"当用户在元素上点击鼠标右键时触发":["62.5"],"通常用于显示自定义的上下文菜单":["62.5"],"wheel":["62.5"],"当用户使用鼠标滚轮时触发":["62.5"],"queryselector":["62.5"],"keyup":["62.6"],"有焦点触发":["62.7"],"当用户释放键盘上的按键时触发":["62.8"],"在事件处理程序中":["62.9"],"可以通过事件对象访问有关事件的详细信息":["62.9"],"事件对象提供了许多属性和方法":["62.9"],"以帮助我们处理事件":["62.9"],"事件捕获":["62.10"],"可以通过将第三个参数设置为":["62.10"],"来启用事件捕获模式":["62.10"],"在事件捕获模式下":["62.10"],"focus":["62.11"],"blur":["62.11"],"页面加载事件":["62.11"],"事件委托还可以解决动态添加或删除的子元素无法自动绑定事件监听器的问题":["62.12"],"因为委托是基于事件冒泡的":["62.12"],"所以后续添加的子元素也能够触发绑定在父元素上的事件监听器":["62.12"],"总结起来":["62.12"],"事件委托是一种利用事件冒泡机制":["62.12"],"在父元素上统一绑定事件监听器":["62.12"],"通过事件的目标元素来判断并处理子元素的事件":["62.12"],"提供了更简洁":["62.12"],"删除指定的子节点":["63.0"],"setattribute":["63.0"],"或者":["63.2","84.6","107.13"],"existingelement":["63.3"],"插入到":["63.3"],"是相应的属性值":["64.1"],"获取元素的计算样式":["64.1"],"getcomputedstyle":["64.1"],"则添加它":["64.2"],"检查是否包含类名":["64.2"],"contains":["64.2"],"hasclass":["64.2"],"根据选择器获取匹配的第一个元素节点":["65.0"],"queryselectorall":["65.0"],"根据选择器获取匹配的所有元素节点":["65.0"],"通过标签名获取元素":["65.1"],"getelementsbytagname":["65.1"],"传入标签名":["65.1"],"修改元素的属性":["65.2"],"存储在用户的计算机上":["66.0"],"每次用户请求与相同域名下的网页时":["66.0"],"浏览器都会将相关":["66.0"],"我们设置了两个":["66.1"],"00":["66.3"],"的存储容量都有限制":["66.4"],"通常在几":["66.4","67.6","68.6"],"kb":["66.4"],"左右":["66.4","67.6","68.6"],"存储大量数据可能会导致溢出或性能问题":["66.4"],"sessionstorage":["67.0"],"不同":["67.0","68.0"],"是对应的值":["67.1","68.1"],"存储的值必须是字符串类型":["67.1","68.1"],"username":["67.2","68.2","102.1","108.11"],"setitem":["67.3","68.3"],"中的所有数据":["67.5","68.5"],"的存储容量是有限的":["67.6","68.6"],"mb":["67.6","68.6"],"localstorage":["68.0"],"日至今的毫秒数":["69.1"],"gettimezoneoffset":["69.1"],"获取本地时间与":["69.1"],"utc":["69.1"],"时间之间的时差":["69.1"],"返回值为以分钟为单位的整数值":["69.1"],"setdate":["69.1"],"day":["69.1"],"设置日期的天数为指定的值":["69.1"],"参数为一个整数":["69.1"],"setfullyear":["69.1"],"year":["69.1"],"设置日期的年份为指定的值":["69.1"],"参数为一个四位数的整数":["69.1"],"sethours":["69.1"],"hour":["69.1"],"设置日期的小时数为指定的值":["69.1"],"第二个参数为月份":["69.3"],"到":["69.3"],"之间的整数值":["69.3"],"表示从一月到十二月":["69.3"],"实例化":["69.4"],"today":["69.5"],"无论是处理基本数据类型":["70.0"],"集合数据":["70.0"],"文本数据还是进行数学计算":["70.0"],"date":["70.1"],"日期时间":["70.1"],"math":["70.1","132.3","133.4"],"提供了一系列通用的方法":["70.2"],"查询":["70.3"],"查找":["70.4"],"替换等":["70.4"],"计算等":["70.5"],"格式化等":["70.7"],"计算平方根":["70.8"],"生成随机数等":["70.8"],"还有一些其他的内置对象":["70.9"],"类型":["71.0","96.8"],"舍弃小数部分":["71.5","71.6"],"整数部分加1":["71.5"],"整数部分不变":["71.6"],"求":["71.10"],"的":["71.10","78.3"],"求某数的平方根":["71.11"],"pi":["71.13","132.3"],"将返回":["72.1"],"min":["72.2"],"5e":["72.2"],"positive":["72.2"],"negative":["72.2"],"使用正则表达式来检查字符串是否符合特定模式":["73.1"],"搜索":["73.1"],"searching":["73.1"],"使用正则表达式在字符串中查找特定模式的出现位置":["73.1"],"替换":["73.1"],"replacing":["73.1"],"匹配前面的元素零次或一次":["73.5"],"定义字符类":["73.5"],"多行匹配":["73.6"],"允许":["73.6"],"匹配单词字符":["73.7"],"w":["73.7","91.9"],"匹配非单词字符":["73.7"],"greeting":["73.9"],"subject":["73.9"],"u":["73.10","87.8"],"启用":["73.10"],"unicode":["73.10"],"匹配模式":["73.10"],"粘附模式":["73.10"],"日期":["73.11"],"数字等":["73.11"],"语法解析":["73.11"],"使用正则表达式解析特定的语法或格式":["73.11"],"截取时":["74.3"],"表示从指定的索引位置开始":["74.3"],"但不同之处在于":["74.4"],"不能接受负值作为参数":["74.4"],"如果传递了一个负值":["74.4"],"则默认使用":["74.4"],"参数举例":["74.5"],"从索引值为":["74.5"],"object":["75.1"],"create":["75.1","78.14","84.2","88.6"],"and":["75.2"],"am":["75.2","79.1"],"unknown":["75.3"],"sound":["75.3"],"使得类的定义和使用更加直观和方便":["76.0"],"使用构造函数创建对象实例":["76.1"],"person1":["76.1","81.3"],"john":["76.1","76.2"],"jane":["76.2","79.2"],"在面向对象编程中":["77.1"],"的属性和方法":["77.2"],"从而实现代码的重用和扩展":["77.2"],"多态性":["77.2"],"多态性允许不同的对象对相同的消息作出不同的响应":["77.2"],"它可以通过函数重载或方法覆盖来实现":["77.2"],"obj":["78.3"],"sayhi":["78.4"],"我的名字叫":["78.4"],"返回一个给定对象自身的所有":["78.5"],"symbol":["78.5"],"属性的数组":["78.5"],"getprototypeof":["78.5"],"返回指定对象的原型":["78.5"],"mergedobj":["78.6"],"不会影响原对象":["78.10"],"propnames":["78.12"],"symbols":["78.13"],"sayhello":["79.1"],"我们可以实现继承":["79.3"],"子对象可以继承父对象的属性和方法":["79.3"],"proto":["79.4"],"myfunction":["80.0"],"在这个函数内的代码会在严格模式下运行":["80.0"],"严格模式的一些特性和限制包括":["80.0"],"变量必须先声明后使用":["80.0"],"避免意外创建全局变量":["80.0"],"一个执行期上下文定义了一个函数执行时的环境":["81.1"],"每调用一次函数":["81.1"],"指向的是一个对象":["81.2"],"构造函数":["81.3"],"指向实例对象":["81.3"],"arrowfn":["81.4"],"常见的方法有":["81.5"],"call":["81.5"],"语法":["81.7"],"fn1":["81.7","81.10"],"实现继承":["81.8"],"给":["81.8"],"father":["81.8"],"增加":["81.8"],"myname":["81.8"],"myage":["81.8"],"想要将this指向哪里":["81.10"],"函数实参1":["81.10"],"函数实参2":["81.10","81.14"],"备注":["81.10"],"指向":["81.12"],"所以":["81.12"],"第一个参数填":["81.12"],"或者填":["81.12"],"都可以":["81.12"],"严格模式中":["81.12"],"参数":["81.14"],"第一个参数":["81.14"],"函数运行时":["81.14"],"指定":["81.14"],"库":["83.1"],"可以用在浏览器和":["83.1"],"axios":["83.2"],"在发送请求之前做些什么":["83.4"],"对请求错误做些什么":["83.4"],"提出了要求":["83.5"],"但没有收到答复":["83.5"],"是浏览器中xmlhttprequest的一个实例":["83.5"],"请求头设置":["84.1"],"一般可以在请求头中携带公共的参数":["84.1"],"baseurl":["84.2"],"application":["84.3"],"form":["84.3"],"urlencoded":["84.3"],"url":["84.4","96.10"],"请求超时":["84.4"],"系统已存在相同数据":["84.4"],"imort":["84.6"],"getaction":["84.6"],"getaction方法所在的文件路径":["84.6"],"省时又省力他不香吗":["84.7"],"前端架构带你":["84.7"],"local":["85.1"],"比较两个版本的差异":["85.7"],"以前者为基准看后者的变化":["85.7"],"表示最后一次":["85.7"],"commit":["85.7"],"对应的版本":["85.7"],"查看所有分支的版本历史":["85.8"],"all":["85.8"],"以图形形式展示版本历史":["85.8"],"强制删除本地分支":["85.12"],"分":["85.14"],"做":["85.14"],"以便把":["85.14"],"合":["85.14"],"到当前分":["85.14"],"amend":["85.16"],"合并":["85.16"],"删除远程仓库别名":["85.18"],"克隆远程仓库指定分支到本地":["85.19"],"等同于推送一个空的本地分支到远程分支":["85.21"],"表示删除指定的远程分支":["85.21"],"等同于":["85.21"],"scm":["86.1"],"bush":["86.2"],"here":["86.2"],"email":["86.3"],"xxxx":["86.3"],"xxx":["86.4"],"com":["86.4","103.3","131.1"],"直接按三次回车":["86.4"],"ssh个人设置":["86.5"],"image":["86.5"],"也可以使用es6的字符串模板":["87.1"],"decimal":["87.2"],"使用构造函数":["87.3"],"创造的对象不是布尔值":["87.3"],"第二种方式是使用数组泛型":["87.4"],"当赋值或访问一个已知索引的元素时":["87.5"],"会得到正确的类型":["87.5"],"字符串枚举":["87.6"],"warning":["87.8"],"test":["87.9","108.2"],"num1":["87.9"],"throw":["87.10"],"只会抛出异常没有返回值":["87.11"],"定义一个一个函数得到一个数字或字符串值的长度":["87.12"],"getlength":["87.12"],"strlength2":["87.14"],"可以定义类":["88.0"],"基本上":["88.0"],"es6的class可以看作只是一个":["88.0"],"我":["88.1"],"了":["88.1"],"创建类的实例":["88.1"],"dog":["88.2"],"extends":["88.2"],"cry":["88.2"],"可以让你定义的变量":["88.4"],"内部访问":["88.4"],"代表定义的变量私有的只能在内部访问":["88.5"],"zs":["88.6"],"静态函数":["88.8"],"同样也是不能通过this":["88.8"],"去调用":["88.8"],"也是通过类名去调用":["88.8"],"constructor":["88.9"],"super":["88.11"],"的类型":["89.0"],"fn":["89.2","92.7"],"b":["89.5","92.4","106.13","107.21"],"str":["90.2","106.8","106.10"],"树哥":["90.5"],"interface":["90.7","92.1"],"len":["90.7"],"它是":["91.1"],"ts属于":["91.2"],"强类型":["91.2"],"语言":["91.2"],"ts不能直接执行":["91.3"],"需要先编译成":["91.3"],"支持最新的javascript新特特性":["91.5"],"周边生态繁荣":["91.5"],"typescript就并不是那么顺畅":["91.6"],"ts":["91.7","96.8"],"indexts":["91.7"],"升成tsconfig":["91.7"],"install":["91.10","137.3"],"g":["91.10","109.0"],"和行为":["92.0"],"必须与接口保持一致":["92.1"],"any":["92.6","94.0","96.8"],"类":["93.0"],"严格模式下":["93.1"],"不可以":["93.1"],"bigobject":["93.1"],"表达式值为":["94.0"],"类型的时候":["94.0"],"生成一个错误":["94.0"],"alwaysstrict":["94.0"],"以严格模式检查每个模块":["94.0"],"并在每个文件里加入":["94.0"],"use":["94.0","96.11","108.14"],"额外的检查":["94.0"],"nounusedlocals":["94.0"],"有未使用的变量时":["94.0"],"抛出错误":["94.0"],"nounusedparameters":["94.0"],"有未使用的参数时":["94.0"],"noimplicitreturns":["94.0"],"并不是所有函数里的代码都有返回值时":["94.0"],"nofallthroughcasesinswitch":["94.0"],"abc":["95.1"],"不能将类型":["95.1"],"s1":["95.2"],"commitlint":["96.2"],"来统一提交规范":["96.2"],"preinstall":["96.2"],"pnpm":["96.3"],"内部潜在的":["96.4"],"bug":["96.4"],"极大的优化了性能":["96.4"],"扩展了使用场景":["96.4"],"被誉为":["96.4"],"最先进的包管理工具":["96.4"],"对象不能出现重复key":["96.6"],"recommended":["96.6"],"vue3语法规则":["96.6"],"plugin":["96.6"],"essential":["96.6"],"ts语法规则":["96.6"],"typescript":["96.6"],"要为特定类型的文件指定处理器":["96.6"],"查找违规风格指南":["96.7"],"该解析器允许使用eslint校验所有babel":["96.7"],"io":["96.8"],"unused":["96.8"],"vars":["96.8"],"禁止定义未使用的变量":["96.8"],"prefer":["96.8"],"expect":["96.8"],"禁止使用":["96.8"],"ignore":["96.8"],"explicit":["96.8"],"全局样式文件中没有办法使用":["96.9"],"变量":["96.9"],"因此需要给项目中引入全局变量":["96.9"],"variable":["96.9"],"创建一个":["96.9"],"system":["96.10"],"系统管理员":["96.10"],"用户登录接口":["96.10"],"login":["96.10"],"请求地址":["96.10"],"method":["96.10"],"请求方式":["96.10"],"response":["96.10","96.11"],"响应拦截器":["96.11"],"处理网络错误":["96.11"],"logout":["96.12"],"登录接口":["96.12"],"export":["96.12"],"reqlogin":["96.12"],"qrouter":["97.0"],"加上这一句":["97.0"],"找指定路径下的文件":["97.0"],"c":["97.1","106.13"],"d":["97.1"],"下面列出了一些常用的":["98.0"],"向表中添加一个新的列":["98.1"],"set":["98.2","135.1"],"identified":["98.3"],"by":["98.3"],"password":["98.3","108.2"],"创建一个新用户":["98.3"],"alter":["98.3"],"的数据类型":["99.0"],"每个数据类型都有特定的存储需求和可接受的值范围":["99.0"],"bigint":["99.1"],"double":["99.2"],"双精度浮点数":["99.2"],"7976931348623157e":["99.2"],"timestamp":["99.4"],"存储时间戳":["99.4"],"范围从":["99.4"],"mysql":["99.5"],"还提供了其他特定用途的数据类型":["99.5"],"如二进制类型":["99.5"],"用户可以对数据库进行各种操作":["100.0"],"包括创建":["100.0"],"读取":["100.0"],"更新和删除数据":["100.0"],"数据库的优势包括":["100.0"],"索引和缓存等技术":["100.1"],"提供了快速的数据读写性能":["100.1"],"丰富的功能":["100.1"],"mysql提供了丰富的功能和工具":["100.1"],"包括存储过程":["100.1"],"触发器":["100.1"],"插入数据":["102.0"],"查询数据":["102.0"],"database":["102.2","108.2"],"将":["102.3","102.5","102.6","108.14"],"datatype":["102.4"],"column2":["102.4"],"value2":["102.5","102.7"],"where":["102.6","102.7","102.8","108.3"],"condition":["102.6","102.7","102.8"],"init":["103.1"],"它不会像网络浏览器那样解释结果":["103.2"],"具体来说":["103.2"],"它不会生成视觉渲染":["103.2"],"top250":["103.3"],"each":["103.4"],"star":["103.4"],"info":["103.4"],"bd":["103.4"],"pianista":["103.6"],"sull":["103.6"],"oceano":["103.6"],"p2574551676":["103.6"],"三傻大闹宝莱坞":["103.6"],"idiots":["103.6"],"p579729551":["103.6"],"放牛班的春天":["103.6"],"les":["103.6"],"choristes":["103.6"],"p2884280708":["103.6"],"机器人总动员":["103.6"],"wall":["103.6"],"e":["103.6","121.2"],"开放":["104.0"],"极简的":["104.0"],"query":["104.2"],"可以获取到客户端发送过来的查询参数":["104.2"],"这里的":["104.2"],"目录下的静态资源":["104.3"],"http":["104.3","104.8","107.17"],"localhost":["104.3"],"images":["104.3"],"bg":["104.3"],"向外导出路由对象":["104.4"],"module":["104.4"],"exports":["104.4","107.8"],"注册路由模块":["104.4"],"在注册路由之前注册中间件":["104.5"],"错误级别中间件除外":["104.5"],"中间件可连续调用多个":["104.5"],"调用了第2个全局中间件":["104.6"],"page":["104.7"],"发生了错误":["104.8"],"listen":["104.8"],"server":["104.8"],"running":["104.8"],"require":["104.10"],"主要在服务器端进行配置":["104.11"],"客户端浏览器无须做任何额外的配置":["104.11"],"即可请求开启了":["104.11"],"ccess":["104.12"],"对额外的请求头进行声明":["104.12"],"否则这次请求会失败":["104.12"],"viewport":["104.14"],"在浏览器与服务器正式通信之前":["104.15"],"浏览器会先发送":["104.15"],"option":["104.15"],"运行时环境":["105.1"],"基于":["105.1"],"express":["105.1"],"可以快速构建":["105.1"],"web":["105.1","108.12"],"这是因为":["105.2"],"采用的是异步的":["105.2"],"非阻塞的模型":["105.2"],"这里所谓的":["105.2"],"可能会出现服务不可用的情况":["105.3"],"写文件":["106.1"],"不存在则创建":["106.1"],"存在则覆盖原有内容":["106.1"],"wx":["106.1"],"文件存在打开失败":["106.1"],"failed":["106.3","106.6"],"可写流打开了":["106.4"],"可写流关闭了":["106.4"],"要读取一个可读流中的数据":["106.4"],"要为可读流绑定一个data事件":["106.4"],"data事件绑定完毕自动开始读取数据":["106.4"],"err":["106.6"],"流关闭了":["106.7"],"通过ws向文件中输出内容":["106.7"],"因此大小一旦确定就不能修改":["106.8"],"常用方法":["106.8"],"encoding":["106.8"],"直接提供完整的路径":["106.9"],"从而防止路径动态拼接的问题":["106.9"],"renamesync":["106.10"],"监视文件更改":["106.10"],"watchfile":["106.10"],"filename":["106.10"],"listener":["106.10"],"hello前端":["106.10"],"buf":["106.10"],"buffer":["106.10"],"官方提供的":["106.11","106.15"],"readfile":["106.12"],"fullname":["106.13"],"设置":["106.16"],"响应头":["106.16"],"模块的内部数据":["107.2"],"实现是私有的":["107.2"],"实现按需加载":["107.3"],"第三方模块":["107.5"],"只能在当前模块内被访问":["107.6"],"指向的对象":["107.7"],"默认情况下":["107.7"],"是对外的接口":["107.8"],"提高模块加载效率":["107.9"],"按确切的文件名加载":["107.11"],"补全":["107.11","107.21"],"tools":["107.12"],"则":["107.12","107.23"],"会按以下顺序查找":["107.12","107.22"],"文件":["107.13","137.2"],"的内置模块仅提供了一些底层的":["107.15"],"现在也有其他的包管理工具":["107.16"],"版本号":["107.18"],"main":["107.18"],"入口文件":["107.18"],"核心代码":["107.18"],"用户自定义模块":["107.19"],"会按顺序分别尝试加载以下的文件":["107.21"],"按照确切的文件名进行加载":["107.21"],"入口不存在或无法解析":["107.23"],"将会试图加载目录下的":["107.23"],"user":["108.2"],"root":["108.2"],"快捷方式":["108.3"],"页面最终在浏览器里生成":["108.6"],"缺点":["108.6"],"不利于":["108.6"],"seo":["108.6"],"完整的":["108.6"],"交互性强":["108.7"],"无需考虑":["108.7"],"status":["108.11"],"done":["108.11"],"从":["108.11"],"取数据":["108.11"],"token":["108.12"],"是真正的用户信息":["108.13"],"加密后的字符串":["108.13"],"是安全性相关部分":["108.13"],"保证":["108.13"],"安全性":["108.13"],"三者使用":["108.13"],"分隔":["108.13"],"authorization":["108.14"],"字段":["108.14"],"字符串发送到服务器进行身份认证":["108.14"],"服务器可以通过":["108.14"],"中间件将客户端发送过来的":["108.14"],"解析还原成":["108.14"],"unless":["108.14"],"指定哪些接口无需访问权限":["108.14"],"cache":["109.0"],"clean":["109.0"],"检查过时的依赖项":["109.0"],"outdated":["109.0","110.3"],"安装全局依赖项":["109.0"],"包管理器":["110.0"],"允许开发者轻松地安装":["110.1"],"更新":["110.1","111.6"],"也会自动安装":["110.2"],"你可以通过在终端中运行以下命令来检查是否已安装":["110.2"],"检查过时的包":["110.3"],"run":["110.3"],"运行在":["110.3"],"在创建项目时":["110.4"],"可以提供一些信息":["110.4"],"如项目名称":["110.4"],"当其他开发者获得你的项目时":["110.5"],"他们可以使用":["110.5"],"命令":["110.6"],"你可以将自己的包发布到":["110.6"],"官方网站":["111.1"],"shell":["111.2"],"可以创建一个或多个":["111.3"],"命令生成":["111.4"],"并包含了你的包的基本信息":["111.4"],"publish":["111.5"],"这将会将你的包上传到":["111.5"],"package":["111.6","111.7"],"json":["111.6"],"npm":["112.1","137.3"],"全局安装":["112.1"],"打开终端并运行以下命令":["112.1"],"是你要添加的包的名称":["112.2"],"移除依赖项":["112.2"],"如果你想移除不再需要的依赖项":["112.2"],"remove":["112.2"],"它提供了许多":["113.1"],"访问":["113.3"],"轴和":["113.3"],"2d":["113.4"],"webgl":["113.4"],"它们都通过特定的方法和属性来控制视觉效果":["113.4"],"可以简单地绘制圆形":["113.5"],"矩形":["113.5"],"线条等图形":["113.5"],"在实现过程中":["113.6","113.7"],"您可以使用":["113.6"],"来监控用户的交互":["113.6"],"从而创建动画效果":["113.7"],"您可以通过原生":["113.7"],"translate":["114.0"],"图像平移":["114.0"],"上面代码会显示一个顺时针倾斜":["114.1"],"如果缩放因子为":["114.2"],"就表示图像没有任何缩放":["114.2"],"如果为":["114.2"],"则表示方向翻转":["114.2"],"下面是一个例子":["114.4"],"只有源图像外的目标图像部分会被显示":["115.1"],"lighter":["115.1"],"显示源图像":["115.1"],"目标图像":["115.1"],"copy":["115.1"],"忽略目标图像":["115.1"],"xor":["115.1"],"getcontext":["116.1"],"当前浏览器不支持canvas":["116.1"],"请下载最新的浏览器":["116.1"],"位置的直线":["116.2"],"linewidth":["116.2"],"设置或返回当前的线条宽度":["116.2"],"linejoin":["116.2"],"getlinedash":["117.1"],"返回一个数组":["117.1"],"表示虚线里面线段和间距的长度":["117.1"],"setlinedash":["117.1"],"数组":["117.1"],"用于指定虚线里面线段和间距的长度":["117.1"],"context":["117.1"],"beginpath":["117.1","121.2"],"fillstyle":["117.2"],"fillrect":["117.2"],"定义了渐变样式":["117.2"],"以后":["117.2"],"将这个样式指定给":["117.2"],"就会生成以这个样式填充的矩形区域":["117.2"],"该方法的返回值是一个":["117.3"],"canvaspattern":["117.3"],"src":["117.3"],"stroke":["119.2"],"显示路径":["119.2"],"closepath":["119.2","124.3"],"右眼":["119.3"],"时会填充为三角形":["119.4"],"onload":["119.5"],"第一种绘制图片的方式":["119.5"],"参数1图片对象":["119.5"],"参数2":["119.5"],"3将图片渲染到画布的水平和垂直位置":["119.5"],"文本对齐选项":["119.6"],"center":["119.6"],"end":["119.6"],"文本基线对齐":["119.6"],"destination":["121.2"],"out":["121.2"],"onmousemove":["121.2","124.3"],"arc":["121.2"],"pagex":["121.2"],"getseconds":["122.3"],"绘制秒针":["122.3"],"onmouseup":["124.3"],"lineto":["124.3","133.5"],"clearbtn":["124.4"],"橡皮擦":["124.4"],"isca":["124.4"],"鼠标进入移出事件":["126.1"],"pointerenter":["126.1"],"stage":["126.2"],"addchild":["126.2"],"图形和动画":["127.1"],"它提供了简单易用的":["127.1"],"它还支持使用":["127.3"],"canvas":["127.3"],"使开发者能够快速上手并高效地创建图形和动画":["127.4"],"纹理":["127.5"],"texture":["127.5"],"并提供了针对移动设备的优化":["127.6"],"创建一个精灵":["127.7","132.2","135.1","135.2"],"sprite":["127.7","135.1","135.2"],"0xff0000":["128.2"],"beginfill":["128.2","129.2"],"0x66ccff":["128.2"],"drawrect":["128.2"],"你好":["129.1"],"fontfamily":["129.1"],"楷体":["129.1"],"fontsize":["129.1"],"fill":["129.1"],"graphics":["129.2"],"drawcircle":["129.2"],"360buyimg":["131.1"],"pop":["131.1"],"jfs":["131.1"],"t1":["131.1"],"5c1b0581e1fa6c1c3":["131.1"],"58519cee2a0039e0":["131.1"],"interactive":["131.2"],"distance":["131.3"],"虚化":["131.3"],"innerheight":["132.1"],"backgroundcolor":["132.1"],"0x1099bb":["132.1"],"vite":["132.2"],"svg":["132.2"],"旋转45度":["132.3"],"rotation":["132.3"],"delta":["132.4"],"endfill":["133.1"],"drawroundedrect":["133.3"],"textures":["135.1","135.2"],"创建容器":["135.1","135.2"],"锚点":["135.1"],"anchor":["135.1"],"加载完成后创建精灵":["135.2"],"then":["135.2"],"smil":["136.1"],"等其他网络标准无缝衔接":["136.1"],"y1":["136.3"],"rx":["136.6"],"从无到有的过程":["137.0"],"file":["137.1"],"新建文件夹":["137.1"],"git":["137.2"],"如果下载了":["137.2"],"可以在当前的文件夹右键":["137.2"],"选择":["137.2"],"public":["137.6"],"文件夹用于静态资源的引用":["137.6"],"目录结构如下":["137.6"],"快速开始":["137.7"],"guide":["137.7"],"组件":["137.7"],"features":["137.7"],"icon":["137.7"],"右上角的导航栏":["137.9"],"关于":["137.9"],"导航标签的名字":["137.9"],"这种格式是有下拉菜单的版本":["137.9"],"关于1":["137.9","137.10"],"默认是不是展开":["137.10"],"f":["137.11"],"lining98":["137.11"],"master":["137.11"],"gh":["137.11"],"pages":["137.11"],"配置":["137.11"]},{"0":["10.14","28.2","39.2","41.6","73.8","74.4","87.5","104.8","119.5","124.3","131.2","131.3","135.2","136.8"],"1":["10.12","11.6","55.3","71.13","71.14","74.3","87.5","90.6","94.0","106.7","106.12","126.1","131.3"],"2":["28.2","38.9","41.10","60.4","62.6","69.4","90.6","99.2","128.2","129.2","135.1","135.2"],"3":["10.5","13.1","16.1","27.24","30.6","34.2","41.2","54.7","61.3","74.3","79.3","80.0","85.1","111.6"],"4":["26.3","30.6","50.8","81.3","84.1","85.14","85.18","108.3","132.3"],"5":["11.10","45.0","58.9","69.3","89.4","117.4","124.3","135.1","135.2"],"6":["12.25","51.4","89.4","94.0"],"7":["12.25","40.4","74.8","85.8","96.7","106.10"],"8":["53.1","96.3","106.16"],"9":["5.4","99.1"],"10":["71.9","133.3"],"13":["106.10"],"15":["58.3"],"16":["97.1","104.8"],"18":["39.7","42.1","71.8","88.1","90.5"],"19":["96.7"],"20":["41.10","121.2","122.3"],"21":["71.9"],"24":["71.8"],"25":["76.1"],"29":["41.9"],"30":["42.2","75.2","136.7"],"40":["34.24"],"50":["114.3","114.4","133.5","136.4","136.7","136.9"],"80":["35.2"],"99":["34.2","35.2","136.9"],"100":["34.24","114.4","117.1","119.5","129.2"],"111":["36.3"],"123":["84.6","90.4"],"127":["104.8"],"145":["106.10"],"180":["71.13"],"200":["50.6","117.1","133.5"],"201":["96.10"],"213":["92.6"],"223":["99.1"],"250":["120.1","136.7"],"299":["57.5"],"300":["115.1","118.0"],"308":["99.2"],"350":["120.2"],"372":["99.1"],"401":["96.11"],"404":["25.12"],"500":["84.4","119.4"],"501":["84.4"],"502":["84.4"],"600":["31.1","49.2"],"775":["99.1"],"800":["49.2"],"808":["99.1"],"854":["99.1"],"1234":["29.11"],"2018":["5.4"],"2600":["31.1"],"9000":["84.2"],"46539":["71.7"],"31250000":["41.2"],"定义了脚本语言的语法规范":["5.2"],"类型":["5.2"],"操作符":["5.2"],"对象和一系列的内置函数等内容":["5.2"],"的扩展语言":["5.3"],"在浏览器环境中的组成关系":["5.3"],"web":["5.3","104.0","106.15"],"用于遍历对象的键值对和值":["5.4"],"string":["5.4","89.2","90.2","90.3","92.1"],"padstart":["5.4","40.5","74.9"],"padend":["5.4","40.5","74.9"],"用于字符串填充":["5.4"],"async":["5.4"],"await":["5.4"],"语法":["5.4"],"更方便地处理异步操作":["5.4"],"getownpropertydescriptors":["5.4"],"返回对象属性的描述符":["5.4"],"es9":["5.4"],"es2018":["5.4"],"来包裹字符串":["6.0"],"log":["6.1","6.3","8.6","8.9","27.4","27.17","27.18","27.19","27.20","34.9","34.12","34.13","34.14","34.17","34.23","34.32","39.2","39.6","40.12","40.19","50.9","58.6","58.7","69.4","71.1","74.16","74.23","78.6","78.8","78.10","78.14","81.4","88.1","88.10","88.11","106.10","106.13","108.14"],"输出":["6.1","6.3","35.9","75.2","76.1","76.2","78.11"],"如解构赋值":["7.0"],"模板字符串等":["7.0"],"a":["7.1","37.7","92.4"],"b":["7.1","29.15","107.22"],"undefined":["7.3","41.1","42.4"],"的场景":["7.4"],"如事件处理函数":["7.4"],"tip":["8.0","19.4","27.2","35.10","42.4","54.2"],"解构赋值是一种简洁而强大的语法":["8.0"],"它在处理数据时非常实用":["8.0"],"console":["8.6","8.9","27.4","27.18","27.19","27.20","34.9","34.12","34.13","34.17","34.31","34.32","35.8","39.2","39.6","40.19","58.6","58.7","67.2","68.2","69.4","74.23","78.6","78.7","78.8","78.12","78.13","78.16","78.19","81.4","88.1","88.10","88.11","90.4","106.10","106.13","108.14","121.2"],"margin":["10.1","15.5"],"h1":["10.2","10.6"],"font":["10.4"],"weight":["10.4"],"因为没有意义":["10.5"],"交集选择器中":["10.5"],"不可能":["10.5"],"出现":["10.5"],"两个元素选择器":["10.5"],"h2":["10.6","27.7"],"h3":["10.6"],"blue":["10.7","34.7","34.8","115.1"],"green":["10.8","118.0","136.5"],"css":["10.9","11.2","11.9","12.1","12.4","12.15","12.26","60.2","103.2","104.3"],"选中div后紧紧相邻的兄弟p元素":["10.9"],"相邻兄弟选择器":["10.9"],"focus":["10.11"],"用于选择获取焦点的表单元素":["10.11"],"一般针对表单元素而言":["10.11"],"忽略其他非":["10.12"],"的元素":["10.12"],"html":["10.12","37.0","62.12","63.2","81.3","106.16","108.6"],"div":["10.12","24.4","27.15","61.2","63.1"],"p":["10.12","24.6","38.8"],"span":["10.12"],"结尾的":["10.13"],"clearfix":["10.14"],"必须要有content属性":["10.14"],"display":["10.14","11.2","12.10","12.11","12.12","12.13","12.14"],"block":["10.14"],"块级元素":["10.14"],"height":["10.14","15.2","122.4"],"不要看见该元素":["10.14"],"核心代码清除浮动":["10.14"],"visibility":["10.14"],"将子元素定义为弹性项目":["11.0"],"使它们能够在主轴和交叉轴上灵活布局":["11.0"],"容器":["11.1"],"其中的子元素就会成为":["11.1"],"container":["11.2","11.9","12.12","12.13","12.14"],"项目靠交叉轴末尾位置对齐":["11.3"],"项目在交叉轴上居中对齐":["11.3"],"baseline":["11.3"],"项目的基线对齐":["11.3"],"stretch":["11.3","11.9"],"项目会自动换行到下一行":["11.4"],"reverse":["11.4"],"弹性增长因子为1":["11.6"],"inner":["11.8"],"默认值":["11.9"],"多行项目被拉伸以填满交叉轴空间":["11.9"],"center":["11.10","15.1","129.1"],"实现水平导航栏布局":["11.10"],"响应式网格":["11.10"],"wrap":["11.10"],"和媒体查询创建响应式网格布局":["11.10"],"布局在":["12.1"],"容器内部的子元素即成为网格项":["12.2"],"1fr":["12.3","12.6"],"2fr":["12.3","12.6"],"定义三列":["12.3"],"第二列是第一列的两倍宽度":["12.3"],"item":["12.4","12.15","12.16","12.30","28.12","34.28","34.29","96.10"],"以下是一些常用的":["12.5"],"area":["12.7"],"header":["12.8","104.12"],"10px":["12.9"],"template":["12.11","27.15","29.5"],"grid":["12.15"],"了解如何创建网格布局对于掌握":["12.17"],"50px":["12.18"],"定义两行":["12.18","12.19"],"第一行高度为":["12.18"],"第二行占据剩余空间":["12.18"],"100px":["12.19","16.0"],"每行高度为100px":["12.19"],"在上述示例中":["12.19","51.1","53.1","54.2","59.1","59.2","66.3"],"我们使用":["12.19"],"1200px":["12.20"],"可以用于创建各种复杂的网页布局":["12.21"],"nav":["12.22"],"navigation":["12.22"],"sidebar":["12.23","12.24"],"中两种常用的布局模型":["12.26"],"适用于单一方向的布局":["12.27"],"即只控制主轴或交叉轴的布局":["12.27"],"支持网格项在主轴上的换行":["12.28"],"对齐和排序":["12.28"],"适用于弹性布局需求":["12.28"],"我们可能会遇到一些常见问题":["12.29"],"nth":["12.30"],"child":["12.30"],"可以使用":["12.31","137.1"],"在使用":["12.32"],"实现一维和二维布局的组合效果":["12.33"],"使用媒体查询和响应式设计":["12.33"],"实现在不同设备和屏幕尺寸下的布局适配":["12.33"],"通配选择器":["13.0"],"skyblue":["15.1"],"text":["15.1","99.3","106.16","106.17"],"align":["15.1","129.1"],"width":["15.2"],"400px":["15.2"],"200px":["15.3"],"items":["15.7"],"垂直居中":["15.7"],"place":["15.8"],"content":["15.8","16.3"],"border":["16.0"],"overflow":["16.1","16.2"],"hidden":["16.1","16.2"],"orient":["16.2"],"vertical":["16.2"],"检索伸缩盒子对象的子元素的排列方式":["16.2"],"after":["16.3"],"absolute":["16.3"],"right":["16.3"],"corner":["17.0"],"滚动条上的滚动滑块":["17.0"],"mp4":["18.0"],"您的浏览器不支持视频播放":["18.0"],"control":["18.0"],"属性供添加播放":["18.0"],"wav":["18.2"],"ogg":["18.3","18.10"],"在":["18.5","28.4","57.2","77.2"],"video":["18.5"],"和":["18.6","19.2","26.6","27.25","37.0","53.2","66.1","107.7"],"循环播放":["18.7"],"warning":["18.7"],"注意":["18.7","35.10","42.4","87.8","114.1"],"load":["18.8","62.11"],"type":["18.10","104.14","106.17"],"js":["18.11","27.5","39.2","50.3","94.0","103.5","106.9","107.21","115.1"],"var":["18.11","34.24","78.4"],"myvideo":["18.11"],"document":["18.11","81.3"],"getelementbyid":["18.11","81.3"],"function":["18.11","50.6","58.8","62.5","87.14","89.4","106.12","117.3"],"if":["18.11","50.6","69.5","87.12","87.14","96.10","108.11"],"paused":["18.11"],"它通过使用一系列标签和属性来描述网页的结构和内容":["19.0"],"包含了与网页相关的配置和信息":["19.1"],"如字符编码":["19.1"],"标题":["19.1"],"引入外部资源等":["19.1"],"用于创建超链接到其他网页或文档":["19.2"],"img":["19.2","30.7","103.3","103.4"],"图像标签":["19.2","21.2"],"用于插入图片到网页中":["19.2","21.2"],"ul":["19.2","28.12","62.12"],"li":["19.2","28.12","62.12"],"无序列表和列表项标签":["19.2","21.1"],"canvas":["19.3"],"绘图":["19.3"],"进一步提高网页开发技能":["19.4"],"创造出更加优秀的网页和网页应用程序":["19.4"],"总结":["19.4","79.4"],"我将在每个代码示例中添加特殊字符":["20.0"],"这是h4级别的标题":["20.1"],"h5":["20.1"],"com":["20.3","21.4","86.1","86.3","117.3"],"alt":["20.4"],"内联容器":["20.8"],"单元格1":["20.9"],"label":["20.11"],"for":["20.11","28.12","103.6"],"id":["20.13","24.4","24.12","25.9","28.12","61.2","62.12","81.3","86.4","104.2"],"contact":["20.14"],"联系方式":["20.14"],"标签可以分为两类":["21.0"],"用于创建无序列表":["21.1"],"ol":["21.1"],"br":["21.2"],"换行标签":["21.2"],"this":["21.3","54.3","62.5","88.11"],"click":["21.4","27.12","28.3","28.8","29.16","81.3"],"here":["21.4","137.2"],"自定义标签的功能通常需要通过":["21.5"],"javascript":["21.5","24.13","53.2","60.5","67.5","68.5","73.6","79.4","91.1"],"来处理和操作":["21.5"],"new":["22.1","24.13","55.1","73.4","75.2","75.3","76.0","87.3","88.1","88.7","88.10","98.3"],"并以声明式的方式构建数据驱动的":["24.1"],"js脚本":["24.3"],"或者":["24.3"],"bash":["24.3","96.4"],"body":["24.4","37.3","62.12","96.10"],"message":["24.6","24.14","96.10"],"事件":["24.7"],"并在触发时执行相应的方法":["24.7"],"button":["24.7","29.16","81.3"],"is":["24.10","78.5"],"vue":["24.13","28.10","108.6"],"return":["24.16","58.8","87.12","108.11"],"hello":["24.16"],"如清除定时器":["24.18"],"解绑事件等":["24.18"],"destroyed":["24.18"],"销毁后":["24.18"],"在实例销毁之后调用":["24.18"],"组件已经解除绑定的所有数据监听器":["24.18"],"可以执行一些销毁后的清理工作":["24.18"],"activated":["24.18"],"激活":["24.18"],"keep":["24.18"],"之前":["25.1","63.3"],"install":["25.2","96.7","110.5","112.1"],"routes":["25.3"],"path":["25.3","66.3"],"component":["25.3","96.8"],"about":["25.5","137.6","137.9","137.10"],"to":["25.6","29.14"],"children":["25.7","29.13","29.17"],"from":["25.8"],"next":["25.8"],"import":["25.10"],"components":["25.10"],"在大型应用程序中":["26.0"],"组件之间的数据共享和通信可能变得复杂":["26.0"],"用于提交":["26.1"],"而不是直接变更状态":["26.1"],"可以包含任意异步操作":["26.1"],"然后再通过提交":["26.1"],"mutations":["26.2"],"来进行":["26.2"],"使得状态变更变得可追踪和可预测":["26.2"],"插件支持":["26.2"],"render":["26.3"],"h":["26.3"],"mount":["26.3"],"在组件中使用":["26.3"],"在组件中":["26.3","26.5","26.6"],"可以通过计算属性":["26.3"],"computed":["26.3"],"或者方法":["26.3"],"methods":["26.3","104.12"],"来访问和修改":["26.3"],"在上面的例子中":["26.4","26.6"],"我们在":["26.4","26.6"],"中定义了":["26.4"],"我们通过调用":["26.5"],"来触发":["26.5"],"action":["26.5"],"当点击按钮后":["26.5"],"传入id":["26.6"],"中定义了三个":["26.6"],"我们可以通过":["26.6"],"来获取这些":["26.6"],"的值":["26.6"],"函数":["27.0","51.2","104.5"],"也不用写export":["27.0"],"default":["27.0","96.9"],"数据":["27.1"],"方法等等":["27.1"],"均要配置在":["27.1"],"按钮":["27.2","27.12"],"提示":["27.2"],"模板中使用的数据和方法":["27.2"],"都需要通过":["27.2"],"msg":["27.4","29.13","29.17","96.11"],"这样是可以被监听到的修改value":["27.5"],"zs":["27.6","88.1"],"const":["27.6","50.3","54.7","64.1","73.3","73.10","81.3","83.3","88.2","92.4","92.5","96.10"],"changemsg":["27.6","29.12","29.13"],"实现":["27.7"],"debounce":["27.7"],"的示例":["27.7"],"控制台警告":["27.8"],"value":["27.8","28.10","78.11"],"cannot":["27.8"],"返回一个原值的只读代理":["27.9"],"change2":["27.10"],"change":["27.12","28.4"],"name":["27.13","29.17","78.9","78.17","102.2"],"data":["27.14","83.3","84.3","84.6","96.10","106.4"],"参数三":["27.16"],"options配置项":["27.16"],"为一个对象":["27.16"],"immediate":["27.16"],"新的值":["27.17"],"newval":["27.18","27.19","27.20"],"oldval":["27.18","27.19","27.20"],"默认初始时就会执行第一次":["27.21"],"产生的副作用":["27.22"],"就是在触发监听之前会调用一个函数可以处理你的逻辑":["27.22"],"但是我们采用异步的方式创建了一个监听器":["27.23"],"这个时候监听器没有与当前组件绑定":["27.23"],"强制效果始终同步触发":["27.24"],"beforecreate":["27.25"],"改用updated":["27.27"],"beforeunmount":["27.27","27.28"],"在元素被移除前调用":["27.27"],"更新结束":["27.28"],"bar":["27.29"],"修饰符对象为":["27.29"],"true":["27.29","35.3","50.4","126.2","127.7"],"内容":["27.30","63.2"],"innerheight":["27.31"],"addeventlistener":["27.31","62.5","81.3"],"resize":["27.31"],"removeeventlistener":["27.31","62.3"],"集中式状态管理容器":["28.1"],"实现任意组件通信":["28.1"],"ref":["28.1"],"父组件获取子组件实例":["28.1"],"number":["28.2","90.4"],"dbclick":["28.3","28.4"],"vue3":["28.4","28.9"],"框架":["28.4"],"第一个参数为触发事件类型":["28.5"],"第二个":["28.5"],"三个":["28.5"],"n":["28.5"],"个参数即为传递给父组件的数据":["28.5"],"需要注意的是":["28.5","38.10"],"代码如下":["28.5"],"如果想在":["28.6"],"中使用全局事件总线功能":["28.6"],"可以使用插件":["28.6"],"mitt":["28.6"],"传递两个":["28.7"],"分别是":["28.7"],"pageno":["28.7"],"与":["28.7"],"pagesize":["28.7"],"以及绑定两个自定义事件":["28.7"],"handler":["28.8"],"子组件内部可以通过":["28.8"],"因为":["28.9"],"中组件内部的数据对外":["28.9"],"关闭的":["28.9"],"外部不能访问":["28.9"],"可以获取某一个组件的父组件实例":["28.9"],"key":["28.10","28.12","32.4"],"与提供数据":["28.10"],"vuex":["28.11"],"但是核心概念没有":["28.11"],"组件内部遍历数组":["28.12"],"index":["28.12","32.4","34.28","34.29","34.31","55.5","58.1","107.23"],"in":["28.12","32.4","83.5"],"todos":["28.12"],"作用域插槽将数据回传给父组件":["28.12"],"row":["28.12"],"用法":["29.2"],"直接在其他":["29.2"],"子组件接受值":["29.6"],"通过":["29.6","61.4","115.0"],"来接受":["29.6"],"是无须引入的直接使用即可":["29.6"],"v":["29.8","121.1","124.4"],"简写":["29.9"],"这里的两个":["29.10"],"list":["29.12","29.13","109.0"],"默认渲染的页面":["29.13"],"插入至":["29.14"],"else":["29.15","58.5","84.3","124.3"],"onchangemsg":["29.16"],"改变msg":["29.16"],"绑定多个v":["29.17"],"以上":["30.3"],"mode":["30.4"],"router":["30.4"],"additional":["30.4"],"模块热更新":["30.5"],"rollup打包":["30.5"],"选择语言":["30.6"],"次提交":["31.1"],"重写虚拟dom的实现和tree":["31.2"],"文档碎片":["31.3"],"teleport":["31.3"],"瞬移组件的位置":["31.3"],"新增泛型支持":["32.1"],"需要在":["32.1"],"script":["32.1","96.8"],"标签上加上":["32.1"],"派发":["32.2"],"自定义":["32.3"],"现在有了":["32.3"],"数组中可以存放任意类型的数据":["34.0"],"例如字符串":["34.0"],"arr1":["34.1"],"zzz":["34.2"],"其他元素都是undefined":["34.2"],"需要留意的是哪些方法会对原数组产生影响":["34.5"],"哪些方法不会":["34.5"],"concat":["34.6","53.5","58.5","58.6"],"推入两项":["34.7"],"red":["34.8"],"从数组开头推入两项":["34.8"],"slice":["34.11"],"concole":["34.15"],"array":["34.21","34.31","41.8"],"直接使用sort":["34.24"],"方法排序":["34.24"],"arr":["34.24"],"foreach":["34.27"],"filter":["34.27"],"后的条件表达式进行求值判断":["35.1"],"如果结果为true":["35.1"],"则执行if后的语句":["35.1"],"如果为false则不执行":["35.1"],"语句只会控制紧随其后其后的那一行代码":["35.1"],"汽车一辆":["35.2"],"当成绩为":["35.2"],"时":["35.2"],"奖励一台iphone":["35.2"],"如果比较结果为":["35.3"],"则自当前":["35.3"],"处开始执行代码":["35.3"],"执行完毕":["35.5"],"继续判断":["35.5"],"如果为":["35.5"],"则再次执行循环体":["35.5"],"如果为false":["35.6"],"则循环终止":["35.6"],"如果为true":["35.6"],"则继续执行循环体":["35.6"],"以此类推":["35.6"],"它不能直接用于遍历普通的对象":["35.10"],"要遍历对象属性":["35.10"],"需要使用":["35.10"],"object":["35.10","38.12","41.6"],"entries":["35.10"],"或":["35.10"],"中的函数":["36.0"],"变量名":["36.2"],"fn1":["36.3"],"fn2":["36.3"],"cook":["36.6"],"aru":["36.6"],"形参是接受实参的":["36.6"],"酸辣土豆丝":["36.6"],"形参类似于一个变量":["36.6"],"是一个变量但是没有接受值":["36.7"],"结果就是undefined":["36.7"],"建议":["36.7"],"getresult":["36.8"],"res":["36.8"],"不仅可以退出循环":["36.9"],"立即执行":["36.12"],"可以与":["37.0"],"write":["37.1","106.4","106.7"],"代码引入到":["37.2"],"内联形式":["37.3"],"属性":["37.4"],"其中":["38.2"],"键名":["38.2"],"成员的名称":["38.2"],"字符串":["38.2"],"的属性":["38.3","38.13"],"就指向一个函数":["38.3"],"如果属性的值还是一个对象":["38.3"],"就形成了链式引用":["38.3"],"o1":["38.3"],"o2":["38.3"],"产生影响":["38.4"],"还是指向原来的那个对象":["38.4"],"但是":["38.4"],"这种引用只局限于对象":["38.4"],"如果两个变量指向同一个原始类型的值":["38.4"],"那么":["38.4"],"变量这时都是值的拷贝":["38.4"],"正确":["38.5"],"报错":["38.5"],"这种差异在":["38.5"],"eval":["38.5"],"语句":["38.5"],"作用是对字符串求值":["38.5"],"对象":["38.7"],"的数字键":["38.7"],"就定义好属性":["38.8"],"属性是不能删除的":["38.10"],"所以":["38.10"],"命令返回":["38.10"],"关于":["38.10"],"方法的介绍":["38.10"],"请看":["38.10"],"标准库":["38.10","38.12"],"对象一章":["38.10"],"另外":["38.10","81.8"],"运算符会返回":["38.11"],"因为这个属性是继承的":["38.11"],"这时":["38.11"],"可以使用对象的":["38.11"],"hasownproperty":["38.11","52.2"],"方法判断一下":["38.11"],"该属性不会被":["38.12"],"循环遍历到":["38.12"],"因为它默认是":["38.12"],"不可遍历":["38.12"],"的":["38.12","94.0"],"关于对象属性的可遍历性":["38.12"],"参见":["38.12"],"章节中":["38.12"],"一章的介绍":["38.12"],"如果继承的属性是可遍历的":["38.12"],"那么就会被":["38.12"],"然后在":["38.13"],"区块内操作它":["38.13"],"这是因为":["38.13","59.4"],"区块没有改变作用域":["38.13"],"它的内部依然是当前作用域":["38.13"],"这造成了":["38.13"],"语句的一个很大的弊病":["38.13"],"就是绑定对象不明确":["38.13"],"x":["38.13","49.1","87.14","104.14","129.1","131.1","135.1","135.2"],"单纯从上面的代码块":["38.13"],"递增和递减运算符":["39.1"],"比较运算符":["39.1"],"位小数":["39.2"],"但在进行计算时其精确度远远不如整数":["39.2"],"除等于":["39.3"],"a2":["39.6"],"不等号":["39.7"],"它会转换为布尔值然后运算":["39.9","39.10"],"但是最终会返回原值":["39.9","39.10"],"则直接返回第一个值":["39.9"],"则返回第一个":["39.10"],"则执行表达式":["39.12"],"来改变优先级即可":["39.13"],"需要知道字符串的特点是一旦创建了":["40.1"],"还可通过":["40.2","74.6"],"w":["40.4","74.8"],"includes":["40.10","55.4","74.14"],"replace":["40.16","74.20"],"matches":["40.17","74.21"],"pos":["40.18","74.22"],"ond":["40.19","74.23"],"125e7":["41.2"],"等于":["41.2"],"在数值类型中":["41.2"],"存在一个特殊数值":["41.2"],"nan":["41.2","41.6"],"意为":["41.2"],"这个变量被声明了":["41.3"],"只是值为":["41.3"],"它们的值就不能变了":["41.4"],"lang":["41.4"],"值是由":["41.5"],"值派生而来":["41.5"],"非零数值":["41.6"],"包括无穷值":["41.6"],"foo":["41.7"],"otherfoosymbol":["41.7"],"age":["41.9","41.10","67.3","68.3","89.2"],"箭头函数":["41.11"],"set":["41.12","55.6","128.2","133.1","135.2"],"专门用来将字符串转换为数值的两个方法":["41.15"],"parseint":["41.15"],"将一个字符串转换为一个整数":["41.15"],"解析时":["41.15"],"会自左向右读取一个字符串":["41.15"],"直到读取到字符串中所有的有效的整数":["41.15"],"也可以使用":["41.15"],"来对一个数字进行取整":["41.15"],"parsefloat":["41.15"],"将一个字符串转换为浮点数":["41.15"],"解析器首先要确认的就是这个值是基本类型值还是引用类型值":["41.17"],"的值为一个基本类型":["41.18"],"是存储在栈中":["41.18"],"将":["41.18","81.8","102.2","102.4","102.7","102.8","111.7"],"是一个引用类型":["41.19"],"在赋值操作过程汇总":["41.19"],"实际是将堆内存对象在栈内存的引用地址复制了一份给了":["41.19"],"两个对象对应不同的地址":["41.20"],"关键字声明的变量会自动提升到函数作用域顶部":["42.1"],"相当于":["42.1"],"referenceerror":["42.3"],"catch":["42.5"],"语句或":["42.5"],"在延迟定时器执行时":["42.6"],"他是异步的":["42.6"],"循环已经结束了":["42.6"],"最后的值始终都是":["42.6"],"才是期望的值":["42.6"],"syntaxerror":["42.7"],"声明的作用域也是块":["42.7"],"上面的代码就相当于":["42.8"],"childelement":["43.1"],"将其添加到文档中":["43.1"],"修改元素属性":["43.1"],"这是新创建的段落":["43.2"],"appendchild":["43.2"],"加载历史记录中的不同页面":["44.0","45.0"],"delta":["44.1"],"导航到相对于当前页面的偏移量为":["44.1"],"history":["45.0"],"它提供了对浏览器历史记录的操作":["45.0"],"可以使用它向前或向后导航":["45.0"],"navigator":["45.0"],"它提供了关于浏览器的信息":["45.0"],"如浏览器的名称":["45.0"],"的各个部分":["46.0"],"如协议":["46.0"],"的查询字符串部分":["46.1"],"assign":["46.1"],"https":["46.2","111.1","117.3"],"www":["46.2","104.14","111.1"],"example":["46.2","117.3"],"用户代理字符串等":["47.0"],"浏览器的版本":["47.1"],"appversion":["47.2"],"获取操作系统平台":["47.2"],"分辨率等":["48.0"],"availheight":["48.1","48.2"],"屏幕的可用高度":["48.1"],"屏幕可用高度":["48.2"],"表示浏览器窗口或标签页":["49.0"],"它提供了操作浏览器窗口的方法和属性":["49.0"],"moveto":["49.1","117.1","119.3"],"resizeto":["49.2"],"xmlhttprequest":["50.1","104.11"],"对象来向服务器发异步请求":["50.1"],"从服务器获得数据":["50.1"],"send":["50.2","104.6"],"方法发送给服务器端":["50.2"],"布尔值":["50.4"],"表示是否异步执行操作":["50.4"],"默认为":["50.4"],"请求发送数据的时候":["50.5"],"需要注意如下":["50.5"],"将请求数据添加到":["50.5"],"open":["50.5"],"e":["50.6"],"整个请求过程完毕":["50.6"],"status":["50.6","96.11"],"接收请求":["50.8"],"onreadystatechange":["50.8"],"readystate":["50.8"],"fail":["50.9","108.11"],"闭包可以捕获外部函数的变量和参数":["51.0"],"并将其保存在内部函数的词法环境中":["51.0"],"内部定义了":["51.1"],"函数返回了":["51.2"],"后者可以访问并修改":["51.2"],"柯里化是一种将多参数函数转化为一系列单参数函数的技术":["51.4"],"闭包可以用于实现函数柯里化":["51.4"],"使函数能够记住之前传递的参数":["51.4"],"并返回一个新的函数等待传递剩余的参数":["51.4"],"延迟执行函数":["51.4"],"可以使得函数更灵活":["51.5"],"更具可复用性":["51.5"],"合理使用闭包可以创建私有变量":["51.5"],"这些方法都会创建一个新对象":["52.1"],"originalobject":["52.2"],"函数接收一个参数":["53.1"],"并返回一个新的匿名函数":["53.1"],"新函数接收参数":["53.1"],"并返回":["53.1"],"提供了一些工具库":["53.2"],"如":["53.2","107.16","113.5","113.7"],"lodash":["53.2"],"ramda":["53.2"],"这是一种使用闭包和递归的柯里化函数实现方式":["53.4"],"函数接收一个要柯里化的函数":["53.4","53.6"],"返回一个新的柯里化函数":["53.4"],"shift":["53.5"],"返回一个新的箭头函数":["53.6"],"极大地浪费资源":["54.0"],"降低前端性能":["54.0"],"为了优化体验":["54.0"],"需要对这类事件进行调用次数的限制":["54.0"],"mousemove":["54.1"],"keyup":["54.1","54.4","62.2"],"函数接收一个要节流的函数":["54.2"],"当前时间":["54.3"],"remaining":["54.3"],"从上一次到现在":["54.3"],"还剩下多少多余时间":["54.3"],"context":["54.3","115.1","116.1"],"args":["54.5"],"cleartimeout":["54.5"],"null":["54.6","81.10","81.14","96.8"],"handlescroll":["54.7"],"处理滚动事件的逻辑":["54.7"],"创建函数":["54.7"],"throttlehandlescroll":["54.7"],"splice":["55.2"],"parse":["56.2"],"isarray":["56.3"],"是一种用于处理异步操作的对象":["57.0"],"它表示一个异步操作的最终完成":["57.0"],"或失败":["57.0"],"及其结果的值":["57.0"],"读取文件等":["57.1"],"当异步操作成功时":["57.1"],"调用":["57.1","57.5"],"方法中传递的函数会在异步操作成功时被调用":["57.2"],"并接收到成功的结果":["57.2"],"这样":["57.3"],"可以在第二个":["57.3"],"方法中继续处理":["57.3"],"方法会被调用":["57.4"],"传递一个包含所有":["57.4"],"实例结果的数组":["57.4"],"如果任意一个":["57.4"],"实例失败":["57.4"],"将调用新":["57.4"],"事件被触发":["57.5"],"函数判断响应的状态码":["57.5"],"如果在":["57.5"],"到":["57.5"],"的范围内":["57.5"],"则调用":["57.5"],"将响应文本作为成功的结果传递给":["57.5"],"否则":["57.5"],"将状态文本作为错误信息传递给":["57.5"],"和数组本身":["58.1"],"prev":["58.8"],"cur":["58.8"],"方法在处理大量数据时可能不太高效":["58.9"],"因为它是顺序执行的":["58.9"],"每个元素依赖前一个元素的累积结果":["58.9"],"输出的是外部作用域的":["59.4"],"值":["59.4"],"而不是全局作用域的值":["59.4"],"btn1":["60.1"],"我们可以依据节点之间的关系查找节点":["60.3"],"基础":["60.5"],"这使得开发者可以使用":["61.1"],"动态地修改网页的内容":["61.1"],"样式和结构":["61.1"],"以及响应用户的交互事件":["61.1"],"链接名":["61.2"],"class":["61.2","61.3"],"文本节点":["61.3"],"可以实现动态修改网页内容":["61.4"],"实时更新页面":["61.4"],"下面是一些常见的方法和技巧来处理":["62.0"],"等":["62.2","73.11"],"是一个函数":["62.2"],"它会在事件触发时执行":["62.2"],"使用匿名函数来定义事件处理程序":["62.2"],"eventname":["62.3"],"监听鼠标是移入当前":["62.5"],"dom":["62.5"],"元素":["62.5"],"修改文本内容":["62.5"],"键盘谈起了":["62.6"],"用户输入文本事件":["62.6"],"blur":["62.7"],"事件也可以用于检测键盘输入":["62.8"],"并做出相应的响应":["62.8"],"keypress":["62.8"],"当用户按下键盘上的字符键时触发":["62.8"],"以下是一些常用的事件对象属性":["62.9"],"target":["62.9"],"触发事件的目标元素":["62.9"],"事件将从祖先元素开始":["62.10"],"向下传播到触发事件的元素":["62.10"],"domcontentloaded":["62.11"],"视图事件":["62.11"],"高效的事件处理方式":["62.12"],"mylist":["62.12"],"选项1":["62.12"],"设置元素的属性值":["63.0"],"是你想要创建的元素的标签名":["63.1"],"例如":["63.1","73.10"],"设置元素的":["63.2"],"作为它的兄弟元素":["63.3"],"从父元素中移除子元素":["63.3"],"removechild":["63.3"],"文档对象模型":["64.0"],"来操作元素的样式和类":["64.0"],"computedstyle":["64.1"],"window":["64.1"],"这将返回一个布尔值":["64.2"],"指示元素是否具有指定的类名":["64.2"],"上述方法可以用于修改元素的样式和类":["64.2"],"以实现动态的样式变化或元素状态的切换":["64.2"],"你可以根据需要进行组合和应用":["64.2"],"innerhtml":["65.0"],"获取或设置元素的":["65.0"],"tagname":["65.1"],"使用选择器获取元素":["65.1"],"setattribute":["65.2"],"方法":["65.2","92.0","107.2"],"自动发送回服务器":["66.0"],"每个":["66.1"],"由一个键值对组成":["66.1"],"gmt":["66.3"],"建议谨慎使用并根据实际需求控制数据量":["66.4","67.6","68.6"],"会在每次请求时自动发送到服务器":["66.4"],"不应将敏感信息存储在":["66.4"],"中":["66.4"],"中的数据在浏览器关闭后仍然存在":["67.0"],"因此适用于需要长期保存的数据":["67.0"],"username":["67.1","68.1","104.2"],"因此":["67.6","68.6"],"存储大量数据可能会导致溢出或性能问题":["67.6","68.6"],"是基于域名的":["67.6"],"每个域名都有独立的":["67.6"],"不同域名之间的":["67.6"],"中的数据在用户关闭浏览器标签页或浏览器会话结束后会被清除":["68.0"],"因此适用于临时保存会话数据":["68.0"],"是基于域名和会话的":["68.6"],"每个域名和浏览器会话都有独立的":["68.6"],"不同域名或会话之间的":["68.6"],"setmilliseconds":["69.1"],"millisecond":["69.1"],"设置日期的毫秒数为指定的值":["69.1"],"setminutes":["69.1"],"minute":["69.1"],"设置日期的分钟数为指定的值":["69.1"],"setmonth":["69.1"],"month":["69.1"],"设置日期的月份为指定的值":["69.1"],"范围为":["69.1"],"setseconds":["69.1"],"datestring":["69.2"],"我们将日期对象设置为":["69.3"],"天后的日期":["69.3"],"获取时间戳":["69.4"],"日期处理":["70.0"],"正则表达式匹配等":["70.0"],"都可以依靠内置对象来完成":["70.0"],"数学对象":["70.1"],"regexp":["70.1"],"正则表达式对象":["70.1"],"error":["70.1","87.12","89.5"],"如对象的创建":["70.2"],"排序等":["70.3"],"这些方法可以帮助我们处理文本数据":["70.4"],"可以进行基本的数学计算":["70.5"],"两个值":["70.6"],"它提供了逻辑运算和条件判断的功能":["70.6"],"可以用于处理时间相关的任务":["70.7"],"promise":["70.9","83.4"],"map":["70.9"],"和其他全局对象不同":["71.0"],"它不是一个构造器":["71.0"],"之间的随机数":["71.4"],"包含":["71.4"],"次方":["71.10"],"pi":["71.12","121.2","133.4"],"negative":["72.1"],"表示负无穷大":["72.1"],"当一个负数超过了":["72.1"],"使用正则表达式来查找匹配的模式":["73.1"],"并进行替换操作":["73.1"],"当涉及到字符串模式匹配和替换时":["73.1"],"的正则表达式":["73.1"],"匹配括号内的任意字符":["73.5"],"来匹配字符串的开始和结束":["73.6"],"匹配邮箱":["73.7"],"groups":["73.9"],"只从上次匹配结束的位置开始匹配":["73.10"],"标志可以通过在正则表达式字面量或构造函数中使用单个字符的方式添加":["73.10"],"markdown":["73.11"],"json":["73.11","87.8","91.7","107.11","107.21","137.11"],"截取到最后":["74.3"],"表示从倒数第三个开始":["74.3"],"还会自动调整参数的位置":["74.4"],"如果第二个参数小于第一个":["74.4"],"的字符开始":["74.5"],"截取":["74.5"],"constructor":["75.1"],"bark":["75.1"],"john":["75.2","78.18","88.7"],"构造函数是一个带有":["76.0"],"关键字调用的函数":["76.0"],"它的主要作用是初始化对象的属性和方法":["76.0"],"person2":["76.1","90.5"],"jane":["76.1"],"对象是数据和操作数据的方法的封装单元":["77.1"],"作为一种支持面向对象编程的语言":["77.2"],"提供了创建对象":["77.2"],"定义类":["77.2"],"实现继承和封装等功能":["77.2"],"es6":["77.2"],"sex":["78.2"],"男":["78.2"],"调用属性还有一种方法":["78.3"],"年龄":["78.4"],"性别":["78.4"],"bigbai":["78.4"],"prototype":["78.5"],"属性的值":["78.5"],"value1":["78.5"],"value2":["78.5"],"判断两个值是否相同":["78.5"],"keys":["78.5"],"false":["78.15","133.4"],"的原型是":["79.1"],"在这个例子中":["79.2"],"对象通过":["79.2"],"创建":["79.2"],"动态更新":["79.3"],"原型和原型链是实现继承和共享属性和方法的关键机制":["79.4"],"禁止删除变量":["80.0"],"delete":["80.0","84.5"],"和函数":["80.0"],"禁止使用八进制字面量":["80.0"],"012":["80.0"],"就会创建一个新的上下文对象":["81.1"],"他们之间是相互独立且独一无二的":["81.1"],"这个对象我们称为函数执行的":["81.2"],"事件绑定函数":["81.3"],"指向":["81.3"],"绑定事件的对象":["81.3"],"mybutton":["81.3"],"me":["81.3"],"apply":["81.5"],"想要将this指向哪里":["81.7"],"函数实参1":["81.7"],"函数实参2":["81.7"],"备注":["81.7"],"son":["81.8"],"通过这一步":["81.8"],"里面的":["81.8"],"修改为":["81.8"],"加上相应的参数":["81.8"],"让":["81.8"],"第一个参数中":["81.10"],"如果不需要改变":["81.10","81.14"],"则传":["81.10","81.14"],"先将":["81.11"],"不让填null":["81.12"],"maxvalue":["81.12"],"求数组":["81.12"],"函数的":["81.14"],"node":["83.1","83.5","94.0","107.13"],"使用cdn":["83.2"],"post":["83.3","96.12","104.12"],"reject":["83.4"],"添加响应拦截器":["83.4"],"response":["83.4"],"也是http的实例":["83.5"],"http":["83.5"],"clientrequest":["83.5"],"token":["84.1"],"基础请求地址":["84.2"],"timeout":["84.2"],"qs":["84.3"],"stringify":["84.3"],"序列化":["84.3"],"比如表单数据":["84.3"],"服务器内部错误":["84.4"],"服务未实现":["84.4"],"网关错误":["84.4"],"put":["84.5"],"httpaction":["84.5"],"userid":["84.6"],"userlist":["84.6"],"封装":["84.7"],"指定文件添加暂存区":["85.5"],"提交指定文件":["85.6"],"往前一个版本":["85.7"],"版本号1":["85.7"],"版本号2":["85.7"],"graph":["85.8"],"查看涉及到指定文件的":["85.8"],"commit":["85.8"],"commitid":["85.10"],"基于当前分支创建分支并切换到新分支":["85.10"],"把":["85.14"],"staged":["85.15"],"unstage":["85.15"],"remove":["85.18"],"别名":["85.20"],"打开git":["86.2"],"配置后结果":["86.3"],"会生成":["86.4"],"20230222160826601":["86.5"],"str":["87.1"],"hex":["87.2"],"0xf00d":["87.2"],"十六进制":["87.2"],"createdboolean":["87.3"],"元素类型":["87.4"],"length":["87.5","87.12","106.10"],"如果你配置了":["87.8"],"tsconfig":["87.8"],"开启了严格模式":["87.8"],"strict":["87.8"],"这样是没问题的":["87.9"],"因为存在死循环":["87.10"],"loop":["87.10"],"需求":["87.14"],"定义一个函数得到一个字符串或者数值数据的长度":["87.14"],"getlength":["87.14"],"语法糖":["88.0"],"它的绝大部分功能":["88.0"],"调用实例的方法":["88.1"],"wang":["88.2"],"也可以外部访问":["88.4"],"不能在外部访问":["88.5"],"为私有属性":["88.6"],"只能在类":["88.6"],"中访问":["88.6"],"可以在这里使用":["88.6"],"let":["88.6","88.7","88.11","121.2"],"需注意":["88.8"],"如果两个函数都是static":["88.8"],"静态的是可以通过this互相调用":["88.8"],"extends":["88.9","90.7"],"c":["88.10","106.3","106.6","107.21","107.23"],"我的名字是":["88.11"],"年龄是":["88.11"],"info":["89.4"],"如果参数类型不同":["89.5"],"则参数类型应设置为":["89.5"],"any":["89.5","96.12"],"参数数量不同你可以将不同的参数设置为可选":["89.5"],"fn":["89.5"],"params":["89.5","104.2"],"如果不传类型":["90.3"],"那么typescript会类型推论":["90.3"],"abc":["90.4"],"的一个超集":["91.1"],"所以对于项目而言":["91.2"],"会使代码更加规范":["91.2"],"从而解决了大型项目代码的复杂性":["91.2"],"完全支持":["91.3"],"vue3已全面支持":["91.5"],"增加前期开发的成本":["91.6"],"毕竟你需要写更多的代码":["91.6"],"配置文件":["91.7"],"init":["91.7","111.2"],"ts":["91.10"],"obj":["92.3"],"a是必须要有的":["92.5"],"其他就不会校验了":["92.5"],"ok":["93.1"],"字面量模式":["93.1"],"空对象类型和大":["93.1"],"switch":["94.0","96.11"],"语句的":["94.0"],"fallthrough":["94.0"],"错误":["94.0"],"即":["94.0"],"不允许":["94.0"],"case":["94.0","96.11"],"语句贯穿":["94.0"],"模块解析选项":["94.0"],"moduleresolution":["94.0"],"选择模块解析策略":["94.0"],"classic":["94.0"],"typescript":["94.0","96.2"],"pre":["94.0"],"分配给类型":["95.1"],"定义变量时没有赋值":["95.1"],"推断为any类型":["95.1"],"s2":["95.2"],"来统一包管理工具":["96.2"],"涉及到技术栈包含":["96.2"],"安装指令":["96.4","96.7"],"i":["96.4"],"g":["96.4"],"项目初始化命令":["96.4"],"overrides":["96.6"],"指定解析器":["96.6"],"解析器":["96.6"],"esprima":["96.6"],"默认解析器":["96.6"],"babel":["96.6"],"babel解析器":["96.6"],"parser":["96.6","96.7"],"ts解析器":["96.6"],"pnpm":["96.7","107.16"],"d":["96.7"],"non":["96.8"],"assertion":["96.8"],"namespace":["96.8"],"禁止使用自定义":["96.8"],"模块和命名空间":["96.8"],"semi":["96.8"],"vuejs":["96.8"],"org":["96.8","107.17"],"multi":["96.8"],"word":["96.8"],"names":["96.8"],"要求组件名称始终为":["96.8"],"链接的单词":["96.8"],"vite":["96.9"],"config":["96.9"],"文件配置如下":["96.9"],"export":["96.9"],"defineconfig":["96.9"],"获取请求体携带过来的用户名与密码":["96.10"],"调用获取用户信息函数":["96.10"],"用于判断是否有此用户":["96.10"],"checkuser":["96.10"],"find":["96.10"],"没有用户返回失败信息":["96.10"],"code":["96.10"],"账号或者密码不正确":["96.10"],"如果有返回成功信息":["96.10"],"token过期":["96.11"],"break":["96.11"],"获取用户信息":["96.12","108.14"],"如果不存在":["97.0"],"则转给哪个文件执行":["97.0"],"nginx项目部署500的问题":["97.0"],"vue项目路由不是真实存在的":["97.0"],"conf":["97.1"],"从表中删除一个列":["98.1"],"以下是":["99.0"],"大整数类型":["99.1"],"036":["99.1"],"2250738585072014e":["99.2"],"用于存储较长文本数据的字符串类型":["99.3"],"01":["99.4"],"00":["99.4"],"binary":["99.5"],"varbinary":["99.5"],"blob":["99.5"],"数据组织和存储":["100.0"],"数据库提供了结构化的数据存储方式":["100.0"],"使数据的组织和管理更加方便和高效":["100.0"],"数据共享和访问控制":["100.0"],"视图":["100.1"],"复制和高可用性选项等":["100.1"],"强大的社区支持":["100.1"],"mysql拥有庞大的用户社区和活跃的开发者社区":["100.1"],"提供了广泛的文档":["100.1"],"更新数据和删除数据等操作":["102.0"],"下面是":["102.0"],"是您的":["102.1"],"用户名":["102.1"],"然后输入密码进行连接":["102.1"],"替换为要插入数据的表的名称":["102.5"],"等替换为要检索的列名":["102.6"],"替换为要更新数据的表的名称":["102.7"],"y":["103.1","135.1","135.2"],"应用":["103.2","105.1"],"加载外部资源或执行":["103.2"],"根据浏览器检查元素区":["103.3"],"rating":["103.4"],"num":["103.4"],"pic":["103.4"],"attr":["103.4"],"src":["103.4"],"push":["103.4"],"p1461851991":["103.6"],"无间道":["103.6"],"無間道":["103.6"],"p2564556863":["103.6"],"疯狂动物城":["103.6"],"zootopia":["103.6"],"p2614500649":["103.6"],"控方证人":["103.6"],"witness":["103.6"],"prosecution":["103.6"],"开发框架":["104.0"],"是一个动态的参数":["104.2"],"ids":["104.2"],"是动态匹配到的":["104.2"],"url":["104.2"],"style":["104.3"],"app":["104.4"],"别忘记调用":["104.5"],"get":["104.6","104.12","108.14"],"user":["104.6","104.7","108.14"],"内置中间件":["104.8"],"自":["104.8"],"版本开始":["104.8"],"内置了":["104.8"],"个常用的中间件":["104.8"],"极大的提高了":["104.8"],"项目的开发效率和体验":["104.8"],"static":["104.8"],"配置中间件":["104.10"],"的接口":["104.11"],"在浏览器中有兼容性":["104.11"],"只有支持":["104.11"],"level2":["104.11"],"custom":["104.12"],"仅支持客户端发起":["104.12"],"head":["104.12"],"请求":["104.12"],"如果客户端希望通过":["104.12"],"只有三个值":["104.14"],"application":["104.14"],"请求进行预检":["104.15"],"以获知服务器是否允许该实际请求":["104.15"],"所以这一次的":["104.15"],"electron":["105.1"],"可以构建跨平台的桌面应用":["105.1"],"指的是":["105.2"],"的主线程只有一个":["105.2"],"为了确保主线程不被阻塞":["105.2"],"主线程是用于接收客户端请求":["105.2"],"程序运行效率较低":["105.3"],"不存在创建":["106.1"],"存在截断":["106.1"],"读写":["106.1"],"存在打开失败":["106.1"],"复制文件内容":["106.3"],"users":["106.3","106.6"],"笔记":["106.3"],"mp3":["106.3"],"将读取到的数据写入到可写流中":["106.4"],"简便方式":["106.4"],"success":["106.6"],"通过可写流写入文件的内容":["106.7"],"将一个字符串转换为":["106.8"],"alloc":["106.8"],"size":["106.8"],"创建指定大小的":["106.8"],"获取文件所处的绝对路径":["106.9"],"readfile":["106.9"],"占用内存的大小":["106.10"],"一个汉字3字节":["106.10"],"字符串的长度":["106.10"],"8进制输出第一个元素":["106.10"],"用来处理路径的模块":["106.11"],"它提供了一系列的方法和属性":["106.11"],"dirname":["106.12"],"files":["106.12"],"txt":["106.12"],"utf8":["106.12"],"fext":["106.14"],"用来创建":["106.15"],"解决中文乱码的问题":["106.16"],"setheader":["106.16","106.17"],"charset":["106.16"],"utf":["106.16"],"只是向外部暴露一些接口":["107.2"],"这种模块级别的访问限制":["107.6"],"叫做模块作用域":["107.6"],"加载某个模块即加载该模块的":["107.8"],"扩展名加载":["107.11"],"入口不存在或无法解析":["107.13"],"则":["107.13"],"导致在基于内置模块进行项目开发时":["107.15"],"效率很低":["107.15"],"包是基于内置模块封装出来的":["107.15"],"yarn":["107.16","137.3"],"taobao":["107.17"],"切换源头":["107.17"],"description":["107.18"],"介绍包做的什么功能":["107.18"],"描述":["107.18","110.4"],"keywords":["107.18"],"关键字":["107.18"],"xxx":["107.18"],"xx":["107.18"],"还是第三方模块":["107.19"],"他们都会优先从缓存中加载":["107.19"],"扩展名进行加载":["107.21"],"如果以上两步都失败了":["107.23"],"测试是否正常工作":["108.2"],"query":["108.2"],"select":["108.2"],"优点":["108.5"],"前端耗时短":["108.5"],"浏览器只需直接渲染页面":["108.5"],"无需额外请求数据":["108.5"],"有利于":["108.5"],"页面在浏览器拼接完成":["108.6"],"因此爬虫无法爬取页面的有效信息":["108.6"],"react":["108.6"],"可使用前后端分离":["108.7"],"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9":["108.13"],"eyjpzci6mtcsinvzzxjuyw1lijoiqnj1y2uilcjwyxnzd29yzci6iiisim5py2tuyw1lijoiagvsbg8ilcjlbwfpbci6innjdxracxeuy29tiiwidxnlcl9wawmioiiilcjpyxqioje2nde4nju3mzesimv4cci6mty0mtkwmtczmx0":["108.13"],"bmqzaknszgd8izxrggyvlvwgl7egmtwitvjgd":["108.13"],"a5u5c":["108.13"],"使用方式":["108.13"],"客户端会把":["108.13"],"当":["108.14"],"中间件配置成功后":["108.14"],"即可在那些有权限的接口中":["108.14"],"来访问从":["108.14"],"字符串中解析出来的用户信息":["108.14"],"admin":["108.14"],"getinfo":["108.14"],"global":["109.0"],"移除全局依赖项":["109.0"],"列出安装的依赖项":["109.0"],"ls":["109.0"],"卸载和共享":["110.1"],"并查看版本":["110.2"],"shell":["110.2","112.1"],"文件的":["110.3"],"scripts":["110.3","137.11"],"部分定义的脚本":["110.3"],"publish":["110.3"],"将自己的包发布到":["110.3"],"仓库":["110.3","111.5"],"入口文件等":["110.4"],"在项目中":["110.4"],"你可以手动编辑":["110.4"],"命令安装所有的依赖项":["110.5"],"仓库中":["110.6"],"使其可供其他开发者使用":["110.6"],"在发布包之前":["110.6"],"按照以下步骤进行操作":["111.0"],"npm":["111.2"],"文件":["111.3"],"readme":["111.4"],"md":["111.4"],"并使其对其他人可用":["111.5"],"文件中的版本号":["111.6"],"是你要移除的包的名称":["112.2"],"更新依赖项":["112.2"],"要更新依赖项到最新版本":["112.2"],"upgrade":["112.2"],"允许控制绘图区域":["113.1"],"颜色":["113.1"],"线条":["113.1"],"轴上的位置以及宽度和高度等信息":["113.3"],"通过为图形或其他元素设置":["113.3"],"常见的":["113.4"],"绘图上下文时":["113.4"],"也可以绘制更高级的元素":["113.5"],"3d":["113.5"],"图形和曲线":["113.5"],"并使用":["113.6"],"api":["113.6"],"来更新和显示数据":["113.6"],"语言或":["113.7"],"库":["113.7"],"jquery":["113.7"],"时存在差异":["113.8"],"因此需要在开发过程中进行跨浏览器的测试":["113.8"],"此外":["113.8"],"transform":["114.0"],"通过一个变换矩阵完成图像变换":["114.0"],"度的矩形":["114.1"],"方法必须在":["114.1"],"为水平翻转":["114.2"],"表示垂直翻转":["114.2"],"fillstyle":["114.3","115.1"],"fillrect":["114.4","115.1"],"上面代码中":["114.4"],"原始图形是":["114.4"],"方法绘制的矩形":["114.5"],"左上角从":["114.5"],"平移到":["114.5"],"把图像源和目标图像":["115.0"],"使用异或操作对源图像与目标图像进行组合":["115.1"],"获取画笔":["116.1"],"2d":["116.1"],"设置或返回两条线相交时":["116.2"],"所创建的拐角类型":["116.2"],"linecap":["116.2"],"设置或返回线条的结束端点样式":["116.2"],"beginpath":["116.2"],"lineto":["117.1"],"方法定义一个辐射渐变":["117.2"],"需要指定两个圆":["117.2"],"r0":["117.2"],"r1":["117.2"],"方法接受六个参数":["117.2"],"是辐射起始的圆的圆心坐标":["117.2"],"是起始圆的半径":["117.2"],"pattern":["117.3"],"png":["117.3"],"onload":["117.3"],"rgba":["117.4"],"arcto":["119.3"],"方法主要用来绘制圆弧":["119.3"],"需要给出两个点的坐标":["119.3"],"当前点与第一个点形成一条直线":["119.3"],"第一个点与第二个点形成另一条直线":["119.3"],"然后画出与这两根直线相切的弧线":["119.3"],"第二种绘制图片的方式":["119.5"],"把图片缩放到600400":["119.5"],"top":["119.6"],"hanging":["119.6"],"middle":["119.6"],"ideographic":["119.6"],"bottom":["119.6"],"文本方向":["119.6"],"ltr":["119.6"],"scratchcard":["121.1"],"pagey":["121.2"],"math":["121.2"],"fill":["121.2","136.4","136.5","136.7","136.8"],"closepath":["121.2"],"random":["121.2"],"绘制分针":["122.3"],"stroke":["124.3","136.5"],"onclick":["124.3"],"globalcompositeoperation":["124.3"],"source":["124.3"],"over":["124.3"],"linewidth":["124.3"],"nullbtn":["124.4"],"清空画布":["124.4"],"线宽":["124.4"],"alpha":["126.1"],"interactive":["126.2","127.7"],"给矩形添加点击事件":["126.2"],"和强大的渲染能力":["127.1"],"使开发者能够轻松构建高性能的图形界面和游戏":["127.1"],"本文将介绍":["127.1"],"进行降级渲染":["127.3"],"以确保在不支持":["127.3"],"它具有一致的接口设计和详细的文档":["127.4"],"滤镜":["127.5"],"filters":["127.5"],"它支持响应式设计":["127.6"],"resources":["127.7"],"texture":["127.7"],"允许交互":["127.7"],"endfill":["128.2","133.2","133.3","133.4","133.5"],"scale":["128.2","132.3"],"矩形缩放":["128.2"],"position":["128.2","133.1","133.2"],"位移":["128.2"],"pink":["129.1"],"设置文字位置":["129.1"],"screen":["129.1","135.1","135.2"],"jpg":["131.1"],"创建一个精灵":["131.1"],"sprite":["131.1","132.2","132.4"],"pointerover":["131.2"],"outerstrength":["131.3"],"强度":["131.3"],"innerstrength":["131.3"],"color":["131.3"],"resolution":["132.1"],"devicepixelratio":["132.1"],"像素比":["132.1"],"设置缩放":["132.3"],"rotation":["132.4","135.1"],"创建容器":["135.0"],"设置位置":["135.1","135.2"],"旋转45度":["135.1"],"锚点":["135.2"],"anchor":["135.2"],"使用":["136.1","137.11"],"xml":["136.1"],"格式定义图形":["136.1"],"在不给":["136.1"],"y2":["136.3"],"ry":["136.6"],"opacity":["136.8"],"官方网站":["137.0"],"blog":["137.1"],"也可以在":["137.2"],"vscode":["137.2"],"上使用":["137.2"],"按":["137.2"],"ctrl":["137.2"],"j":["137.2"],"about1":["137.6","137.9","137.10"],"功能":["137.7"],"特点":["137.7"],"details":["137.7"],"具体描述信息":["137.7"],"关于2":["137.9"],"about2":["137.9"],"text代表每一项的名字":["137.9"],"link":["137.10"],"package":["137.11"],"运行":["137.11"]},{"0":["11.6","15.6","54.3","58.8","71.13","90.4","95.2","106.10","117.3","128.2","132.4"],"1":["34.1","38.8","39.13","51.3","71.12","74.4","74.5","106.9","106.10"],"2":["10.12","12.4","34.1","40.7","40.11","44.2","74.11","74.15","106.7","129.1","131.1","137.7"],"3":["7.1","7.2","10.12","12.30","41.14","60.4","71.5","71.10","78.3","85.15","90.6","96.3","106.7","111.5","116.1","117.1"],"4":["7.2","10.5","10.12","10.14","12.4","12.16","36.8","54.7","61.3","71.5","71.6","71.7","71.11","80.0","85.1","85.21","122.3","135.1","135.2"],"5":["26.1","39.5","41.9","80.0","81.3","108.11","119.3","128.2"],"6":["11.10","34.32","45.0","71.8","80.0","108.14","132.3"],"7":["10.14","39.5","51.4","71.9"],"8":["34.32","58.3","85.8","106.10","106.17","135.1","135.2"],"9":["12.25","40.8","74.12"],"10":["5.4","34.32","71.3","89.3","106.10"],"11":["58.3"],"16":["71.11"],"18":["87.13","92.3"],"19":["71.8","99.4"],"20":["88.6","114.2"],"21":["78.4"],"24":["71.9"],"25":["34.24","119.3"],"26":["67.3","68.3"],"28":["34.21"],"35":["72.2"],"45":["41.15"],"50":["117.2","128.2","136.6"],"54":["39.13"],"60":["35.2","136.9"],"68":["71.6"],"70":["136.9"],"79":["35.2"],"80":["104.2","104.6","104.7","106.17"],"88":["106.10"],"94":["34.2"],"100":["78.4","115.1","120.2","133.3"],"123":["38.3","38.7","90.7","92.6","93.1"],"150":["120.2","128.2"],"180":["71.12"],"200":["50.8","96.10","114.4","115.1","133.1","133.2"],"213":["92.5","95.2"],"300":["50.6","50.8","133.1","133.3","133.4"],"350":["120.1"],"400":["50.6","118.0","119.4","119.5","133.4","133.5"],"403":["96.11"],"404":["96.11"],"456":["41.15"],"500":["54.7","96.11","133.5"],"503":["84.4"],"504":["84.4"],"505":["84.4"],"560":["18.11"],"600":["10.4","133.2"],"807":["99.1"],"2019":["5.4"],"2038":["99.4"],"8080":["106.16"],"8601":["69.1"],"作为":["5.2"],"的一种实现":["5.2"],"是最广泛使用的一种":["5.2"],"其他脚本语言可以基于":["5.2"],"apis":["5.3","60.2","60.5"],"等":["5.3","41.12","70.9"],"环境中的组成关系":["5.3"],"finally":["5.4"],"用于在":["5.4"],"结束时执行回调":["5.4"],"rest":["5.4"],"spread":["5.4"],"属性":["5.4","7.3","12.5","64.2","66.1","107.8"],"提供了更便捷的对象和数组操作":["5.4"],"es10":["5.4"],"es2019":["5.4"],"flat":["5.4"],"并允许在字符串中插入变量":["6.0"],"表达式和多行文本":["6.0"],"tip":["6.4","21.5","29.10","29.16","36.7","53.2","57.4","59.4","76.2","81.11","119.3"],"模板字符串的引入简化了字符串拼接和多行文本的创建":["6.4"],"使得代码更加清晰易读":["6.4","8.0"],"在现代":["6.4"],"结合使用":["7.0"],"使得代码更加现代化和易读":["7.0"],"console":["7.1","34.7","34.8","34.28","34.29","36.6","39.9","39.10","40.17","40.18","41.2","50.6","58.5","58.8","74.21","74.22","81.12","84.3","106.14","106.17","108.2","119.6","126.2"],"log":["7.1","34.7","34.8","34.31","35.8","36.6","40.17","40.18","41.2","50.6","58.5","67.2","68.2","74.21","74.22","78.7","78.12","78.13","78.16","78.19","81.12","84.3","90.4","106.14","108.2","119.6","121.2","126.2"],"在上面的例子中":["7.3","75.3"],"传统函数的":["7.3"],"方法使用了对象的":["7.3"],"因此":["7.3","38.13"],"指向了":["7.3"],"对象":["7.3","79.2"],"应使用传统函数而非箭头函数":["7.4"],"箭头函数在":["7.4"],"javascript":["7.4","60.1","113.5"],"代码中广泛使用":["7.4"],"无论是数组解构还是对象解构":["8.0"],"color":["10.2"],"ccc":["10.2","122.3"],"因为一个元素":["10.5"],"不可能即使":["10.5"],"又是":["10.5"],"span":["10.5","63.1"],"元素":["10.5"],"text":["10.6","10.9","16.1","24.14","129.2"],"align":["10.6"],"decoration":["10.9"],"underline":["10.9"],"选中div后所有的兄弟p元素":["10.9"],"通用兄弟选择器":["10.9"],"input":["10.11","21.2","27.7"],"textarea":["10.11"],"css":["10.12","11.3","11.4","12.31","12.33","37.0","60.1","65.1","96.9","104.8"],"啥都选不到":["10.12"],"ie6":["10.14"],"专有":["10.14"],"zoom":["10.14"],"父级元素添加双伪元素":["10.14"],"布局提供了一种直观而强大的方法":["11.0"],"项目":["11.1","137.11"],"可以通过":["11.1","57.5"],"主轴为水平方向":["11.2"],"或":["11.2","108.13"],"项目被拉伸以填满交叉轴空间":["11.3"],"container":["11.3","11.4"],"display":["11.3","11.9"],"项目逆向换行到上一行":["11.4"],"row":["11.5"],"水平排列":["11.5"],"200px":["11.7","12.11","15.2"],"项目的基准宽度为200像素":["11.7"],"wrap":["11.9"],"垂直居中":["11.10"],"设置":["11.10"],"实现垂直居中对齐":["11.10"],"规范中被称为":["12.1"],"layout":["12.1"],"items":["12.2"],"网格项可以跨越多个网格单元格":["12.2"],"100px":["12.3","12.6","12.8","12.11"],"auto":["12.3","12.8"],"网格项跨越第二列到第四列":["12.4","12.16"],"三列":["12.6"],"第二列是第一列的两倍宽度":["12.6"],"sidebar":["12.8"],"content":["12.8"],"20px":["12.9","12.10"],"行间距为":["12.9"],"列间距为":["12.10"],"定义两列":["12.11"],"center":["12.13","12.14","15.8"],"项目在列轴上居中对齐":["12.13","12.14"],"end":["12.15","106.16","106.17"],"项目在列轴上右对齐":["12.15"],"布局至关重要":["12.17"],"在上述示例中":["12.18","12.20","12.22","12.23","12.24","12.25","51.3","59.3","73.9"],"我们使用":["12.18"],"关键字和":["12.18"],"单位来设置网格轨道的大小":["12.18"],"函数来定义网格模板":["12.19"],"它可以简化重复的设置":["12.19"],"通过":["12.19","28.10","57.5","106.6","108.14"],"大于1200px时":["12.20"],"使用三列布局":["12.20"],"我们使用媒体查询来根据不同屏幕尺寸应用不同的网格布局":["12.20"],"当屏幕宽度大于":["12.20"],"我们创建了一个简单的网页布局":["12.22"],"footer":["12.23","12.24"],"我们创建了一个复杂的网页布局":["12.23"],"其中使用了":["12.23"],"我们创建了一个嵌套的网格布局":["12.24"],"它们分别适用于不同的布局需求":["12.26"],"并可以结合使用以实现复杂的布局":["12.26"],"布局适用于简单的水平或垂直布局":["12.27"],"如导航菜单":["12.27"],"共同点":["12.28"],"都支持灵活的响应式设计":["12.28"],"可以根据屏幕尺寸和设备动态调整布局":["12.28"],"以下是一些最佳实践和优化建议":["12.29"],"前缀或回退方案":["12.31"],"布局时":["12.32"],"建议合理控制网格项的数量和布局复杂度":["12.32"],"使用":["12.33","26.6","27.31","108.3"],"前缀和回退方案":["12.33"],"确保在不支持":["12.33"],"相同级别的选择器":["13.0"],"显示最后面的样式":["13.0"],"特殊规则":["13.1"],"行内样式":["13.1"],"权重大于":["13.1"],"所有选择器":["13.1"],"important":["13.1"],"的权重":["13.1"],"大于":["13.1"],"水平居中":["15.1"],"background":["15.2","15.3","16.3"],"skyblue":["15.3"],"right":["15.6"],"height":["15.7"],"100vh":["15.7"],"1px":["16.0"],"solid":["16.0"],"超出的内容溢出隐藏":["16.1"],"设置溢出隐藏":["16.2"],"ellipsis":["16.2"],"隐藏的文本以省略号显示":["16.2"],"word":["16.2"],"break":["16.2"],"0px":["16.3"],"bottom":["16.3"],"fff":["16.3"],"thumb":["17.0"],"border":["17.0"],"radius":["17.0"],"10px":["17.0"],"暂停和音量控件":["18.0"],"在":["18.0","27.2","96.8"],"与":["18.0","18.5"],"之间你需要插入浏览器不支持的":["18.0"],"元素的提示文本":["18.0"],"audio":["18.6"],"track":["18.6"],"ie":["18.7"],"下可以正常使用":["18.7"],"chrome":["18.7"],"重新加载":["18.8"],"您的浏览器不支持":["18.10"],"play":["18.11"],"else":["18.11","50.6","54.6","56.4","69.5","87.12","87.14","121.2"],"pause":["18.11"],"使得网页可以在浏览器中正确显示和呈现":["19.0"],"定义文档使用的字符编码":["19.1"],"通常使用":["19.1"],"以支持多语言字符集":["19.1"],"定义网页的标题":["19.1"],"显示在浏览器的标题栏或标签页上":["19.1"],"用于创建无序列表":["19.2"],"ol":["19.2"],"有序列表和列表项标签":["19.2","21.1"],"用于创建有序列表":["19.2","21.1"],"div":["19.2","27.1","29.13","29.17"],"容器标签":["19.2"],"地理定位":["19.3"],"本地存储等":["19.3"],"这些新特性使得开发者可以更轻松地构建功能丰富":["19.3"],"是网页开发的基础":["19.4"],"它通过一系列标签和元素来描述网页的结构和内容":["19.4"],"html5":["19.4"],"引入了许多新特性":["19.4"],"使得网页开发更加强大和灵活":["19.4"],"以确保它们不会被渲染":["20.0"],"请在复制代码时将特殊字符删除":["20.0"],"这是h5级别的标题":["20.1"],"点击这里跳转到示例网站":["20.3"],"示例图片":["20.4"],"列表项3":["20.5","20.6"],"标签":["20.8"],"单元格2":["20.9"],"复选框":["20.11"],"value":["20.13","27.6","95.2"],"版权所有":["20.14"],"mp3":["20.15"],"您的浏览器不支持音频播放":["20.15"],"块级标签和内联标签":["21.0"],"table":["21.1"],"tr":["21.1"],"th":["21.1"],"用于插入一个换行符":["21.2"],"输入标签":["21.2"],"用于创建各种输入字段":["21.2"],"is":["21.3"],"a":["21.3","24.16","34.24","39.13","106.1","124.3"],"paragraph":["21.3"],"不同的标签可以接受不同的属性":["21.4"],"它们有不同的用途和功能":["21.4"],"例如设置样式":["21.4"],"总结":["21.5","35.10","53.2","76.2"],"标签用于定义网页的结构和内容":["21.5"],"通过块级标签和内联标签可以构建丰富多样的网页布局和内容展示":["21.5"],"ui":["24.1"],"使用npm安装vue":["24.3"],"message":["24.4"],"click":["24.7","126.2","127.7"],"handleclick":["24.7"],"hidden":["24.9"],"visible":["24.10"],"name":["24.12","43.1","96.8"],"methods":["24.13"],"alert":["24.13","37.1","69.5"],"type":["24.14","62.9","96.8"],"i":["24.16","85.16"],"am":["24.16"],"alive":["24.18"],"组件":["24.18"],"在使用":["24.18","67.6","68.6"],"包裹的组件激活时调用":["24.18"],"deactivated":["24.18"],"停用":["24.18"],"确保您对":["25.1"],"使用yarn":["25.2"],"add":["25.2"],"history":["25.3"],"userid":["25.6"],"profile":["25.6"],"child":["25.7"],"检查用户是否登录":["25.8"],"进行相关逻辑处理":["25.8"],"component":["25.9"],"lazyloadedcomponent":["25.10"],"vue":["25.10","27.1","27.9","27.21","27.22","96.2"],"页面等":["25.12"],"提供了一种可预测的方式来管理状态":["26.0"],"来改变状态":["26.1"],"modules":["26.1","28.11"],"模块":["26.1"],"当应用的状态较为复杂时":["26.1"],"可以使用":["26.1","26.3","35.1","113.5"],"将状态分割成多个子模块":["26.1"],"每个子模块有自己的":["26.1"],"支持插件":["26.2"],"可以方便地扩展和定制":["26.2"],"的状态":["26.3"],"中的":["26.3","26.5","51.1","115.0"],"通过计算属性获取状态":["26.3"],"count":["26.3"],"return":["26.3","27.2","27.31","87.14","92.7","106.12","108.2"],"通过getters获取状态":["26.3"],"状态和两个":["26.4"],"在组件中":["26.4"],"我们通过调用":["26.4"],"会延迟":["26.5"],"秒钟":["26.5"],"然后通过":["26.5"],"mutation":["26.5","28.11"],"方法来修改":["26.5"],"状态":["26.5"],"返回所有的":["26.6"],"数组":["26.6"],"返回未完成的":["26.6"],"方法过滤出":["26.6"],"为":["26.6"],"的":["26.6","57.5","87.5"],"项":["26.6"],"这是一个带参数的":["26.6"],"在组件中调用时需要传入一个":["26.6"],"甚至是自定义指令也可以在我们的":["27.0"],"中自动获得":["27.0"],"本篇内容基于":["27.0"],"中":["27.1","83.1","108.13"],"template":["27.1","27.31","29.2"],"setup":["27.2","96.8"],"函数":["27.2","57.5","81.11","81.14"],"出去才可以被使用":["27.2"],"函数创建的响应式数据":["27.2"],"在模板中可以直接被使用":["27.2"],"js":["27.2","39.9","39.10","83.1","83.2","107.13"],"true":["27.4","27.16","41.5","41.9","42.7","55.6","78.11","79.1","87.8","90.3","96.9"],"const":["27.5","73.6","75.1","92.1"],"lisi":["27.6","88.6"],"app":["27.7","29.14","96.8","104.10","133.1","133.2","133.3","133.4"],"v":["27.7"],"model":["27.7","124.4"],"keyword":["27.7","110.3"],"placeholder":["27.7"],"be":["27.8"],"made":["27.8"],"test2":["27.10"],"state":["27.12"],"age":["27.13","67.4","68.4","78.20"],"info":["27.15","96.10","109.0","110.3"],"deep":["27.16"],"是否立即调用一次":["27.16"],"旧的值":["27.17"],"immediate":["27.17"],"新的值":["27.18","27.19","27.20"],"从而可以收集需要监视的数据":["27.21"],"例如防抖":["27.22"],"所以即使组件销毁了":["27.23"],"监听器依然存在":["27.23"],"post":["27.24"],"组件更新后执行":["27.24"],"created":["27.25"],"这两个生命周期的":["27.25"],"unmounted":["27.27","27.28"],"指令被移除后调用":["27.27"],"卸载之前":["27.28"],"dir":["27.29"],"一个对象":["27.29"],"在注册指令时作为参数传递":["27.29"],"在以下指令中":["27.29"],"第三个":["27.29"],"当前元素的虚拟dom":["27.29"],"也就是vnode":["27.29"],"export":["27.31","96.8"],"default":["27.31","96.11"],"h3":["27.31"],"屏幕尺寸":["27.31"],"vc":["28.1"],"获取子组件的响应式数据以及方法":["28.1"],"slot":["28.1"],"插槽":["28.1"],"默认插槽":["28.1"],"子组件获取到":["28.2"],"change":["28.3"],"mouseenter":["28.3"],"mouseleave":["28.3"],"这类原生":["28.4"],"不管是在标签":["28.4"],"自定义标签上":["28.4"],"组件标签":["28.4"],"正常说组件标签书写":["28.5"],"应该为原生":["28.5"],"dom":["28.5"],"事件":["28.5","62.0"],"但是如果子组件内部通过":["28.5"],"实现":["28.6"],"官网地址":["28.6"],"https":["28.6"],"www":["28.6"],"实现父子数据同步":["28.7"],"方法获取组件属性与事件":["28.8"],"因此你也发现了":["28.8"],"它类似于":["28.8"],"props":["28.8"],"可以接受父组件传递过来的属性与属性值":["28.8"],"需要注意如果":["28.8"],"因此可以使用父组件内部的数据与方法":["28.9"],"必须子组件内部拥有一个按钮点击时候获取父组件实例":["28.9"],"当然父组件的数据与方法需要通过":["28.9"],"方法对外暴露":["28.9"],"html":["28.9","37.7","65.0","104.8"],"后代组件可以通过":["28.10"],"方法获取数据":["28.10"],"父组件内部代码如下":["28.12"],"页面":["29.2"],"立即使用即可":["29.2"],"无需引入":["29.2"],"componenta":["29.5"],"菜单区域":["29.6"],"abcde":["29.8"],"插值表达式渲染的内容都是一样的":["29.10"],"父组件模板中的表达式只能访问父组件的作用域":["29.10"],"页面还没加载出来展示的页面":["29.13"],"children":["29.14"],"默认":["29.14","96.6"],"和":["29.15","35.6","54.0","59.3","62.8","113.3"],"transition":["29.15"],"一起使用":["29.15","37.0"],"如果传递普通的值":["29.16"],"是不具有响应式的":["29.16"],"子组件":["29.17"],"p":["29.17","63.1"],"version":["30.3","110.2"],"lint":["30.4"],"where":["30.4"],"do":["30.4"],"prefer":["30.4"],"placing":["30.4"],"eslint":["30.4"],"它使用":["30.5"],"rollup":["30.5"],"打包你的代码":["30.5"],"切换目录":["30.6"],"安装包":["30.6"],"运行项目":["30.6"],"次pr":["31.1"],"vue3支持vue2的大多数特性":["31.1"],"shaking":["31.2"],"suspense":["31.3"],"异步加载组件的loading界面":["31.3"],"其它api更新":["31.3"],"generic":["32.1"],"t":["32.1"],"ts":["32.2"],"写法":["32.2"],"vue3":["32.2"],"就可以随意定义":["32.3"],"数字":["34.0"],"布尔值等":["34.0"],"arr2":["34.1"],"空属性":["34.2"],"下面对数组常用的操作方法做一个归纳":["34.5"],"b":["34.24","41.15","85.19"],"map":["34.27"],"array":["34.28","34.29","34.30"],"item":["34.30"],"index":["34.30","96.8","107.13"],"如果希望可以控制多行代码":["35.1"],"将语句扩起来":["35.1"],"最佳实践":["35.1"],"即使if后只有1行代码":["35.1"],"我们也应该编写代码块":["35.1"],"手机一台":["35.2"],"奖励一本参考书":["35.2"],"参考书一本":["35.2"],"其他时":["35.2"],"false":["35.3","39.12","84.2","90.3"],"则继续比较其他":["35.3"],"后的表达式":["35.3"],"直到找到":["35.3"],"为止":["35.3"],"语法":["35.4"],"如此重复":["35.5"],"知道条件表达式结果为":["35.5"],"的区别":["35.6"],"while语句是先判断再执行":["35.6"],"keys":["35.10"],"将对象转换为可迭代对象后再使用":["35.10"],"in":["35.10"],"就是封装了一段可被重复调用执行的代码块":["36.0"],"调用的方式":["36.2"],"函数调用必须写到函数体下面":["36.2"],"叫花鸡":["36.6"],"尽量让实参的个数和形参相匹配":["36.7"],"小结":["36.7"],"函数可以带参数也可以不带参数":["36.7"],"声明函数的时候":["36.7"],"函数名括号里面的是形参":["36.7"],"形参的默认值为":["36.7"],"返回的是一个数组":["36.8"],"我们的函数如果有return":["36.8"],"则返回的是":["36.8"],"如果函数么有":["36.8"],"则返回undefined":["36.8"],"fun1":["36.8"],"还能够返回":["36.9"],"语句中的值":["36.9"],"调用":["36.11"],"其实本质已经调用了":["36.12"],"多个立即执行函数之间用分号隔开":["36.12"],"用于创建动态网页和":["37.0"],"那么内部的":["37.4"],"代码没有作用":["37.4"],"键值":["38.2"],"成员的值":["38.2"],"键名与键值之间用冒号分隔":["38.2"],"第二个键值对是":["38.2"],"指向对象":["38.3"],"就可以链式引用":["38.3"],"对象的属性之间用逗号分隔":["38.3"],"最后一个属性后面可以加逗号":["38.3"],"trailing":["38.3"],"comma":["38.3"],"也可以不加":["38.3"],"m":["38.3"],"上面的代码中":["38.3","38.4"],"属性后面的那个逗号":["38.3"],"x":["38.4","89.4","114.4"],"y":["38.4","49.1","111.2","129.1","131.1"],"当":["38.4"],"中反映得最明显":["38.5"],"加不加引号都可以":["38.7"],"因为会被自动转为字符串":["38.7"],"注意":["38.7","81.11"],"数值键名不能使用点运算符":["38.7"],"因为会被当成小数点":["38.7"],"只能使用方括号运算符":["38.7"],"等价于":["38.8"],"命令只能删除对象本身的属性":["38.10"],"无法删除继承的属性":["38.10"],"关于继承参见":["38.10"],"面向对象编程":["38.10"],"章节":["38.10"],"tostring":["38.10","106.10"],"function":["38.10","41.8","70.1","78.2","92.7","104.7"],"native":["38.10"],"code":["38.10"],"是否为对象自身的属性":["38.11"],"if":["38.11","42.7","106.12","108.2","121.1"],"一般情况下":["38.12"],"都是只想遍历对象自身的属性":["38.12"],"所以使用":["38.12"],"的时候":["38.12"],"应该结合使用":["38.12"],"hasownproperty":["38.12"],"方法":["38.12","81.5","104.12"],"在循环内部判断一下":["38.12"],"某个属性是否为对象自身的属性":["38.12"],"person":["38.12"],"根本无法判断":["38.13"],"到底是全局变量":["38.13"],"还是对象":["38.13"],"的一个属性":["38.13"],"这非常不利于代码的除错和模块化":["38.13"],"编译器也无法对这段代码进行优化":["38.13"],"只能留到运行时判断":["38.13"],"这就拖慢了运行速度":["38.13"],"建议不要使用":["38.13"],"可以考虑用一个临时变量代替":["38.13"],"obj1":["38.13"],"逻辑运算符":["39.1"],"赋值运算符":["39.1"],"30000000000000004":["39.2"],"模等于":["39.3"],"n":["39.5","41.6"],"result":["39.5","83.4"],"aaa":["39.7"],"abc":["39.7","73.3","73.4","73.6","73.10"],"全等":["39.7"],"要求值和数据类型都一致":["39.7"],"则返回第二个值":["39.9"],"则返回第二个":["39.10"],"就不可变":["40.1"],"concat":["40.2","74.6"],"tolowercase":["40.5","74.9"],"touppercase":["40.5","74.9"],"c":["40.11","74.15","92.6"],"o":["40.12","74.16"],"at":["40.18","74.22"],"cond":["40.19","74.23"],"null":["41.1","41.6","50.4","87.7"],"symbol":["41.1","53.5"],"不是数值":["41.2"],"用于表示本来要返回数值的操作失败了":["41.2"],"而不是抛出错误":["41.2"],"java":["41.4"],"只要变量要保存对象":["41.5"],"任意对象":["41.6"],"undefined":["41.6"],"push":["41.10","55.3","55.4","55.6","56.4"],"函数声明和函数表达式两种方式":["41.11"],"利用":["41.14"],"拼接字符串的方法实现转换效果":["41.14"],"隐式转换":["41.14"],"直到读取到字符串中所有的有效的小数":["41.15"],"123px":["41.15"],"a123":["41.15"],"下面来举个例子":["41.17"],"的值赋给":["41.18"],"实际上他们共同指向了同一个堆内存对象":["41.19"],"所以更改":["41.19"],"会对":["41.19"],"复杂类型赋值":["41.20"],"是将保存对象的内存地址赋值给另一个变量":["41.20"],"反复多次使用":["42.1"],"声明同一个变量也没有问题":["42.1"],"两个关键字不能重复声明":["42.2"],"没有定义":["42.3"],"let":["42.3","50.8","119.6"],"不过":["42.4"],"声明还是在全局作用域中发生的":["42.4"],"变量会在整个页面生命周期内续存":["42.4"],"typeof":["42.5"],"操作符也不能解决":["42.5"],"会输出0":["42.6"],"setattribute":["43.1","43.2","124.3"],"修改元素的属性":["43.2"],"的页面":["44.1"],"go":["44.2"],"版本":["45.0"],"用户代理字符串等":["45.0"],"它还可以用于检测浏览器的功能和特性":["45.0","47.0"],"screen":["45.0","131.1"],"它提供了关于用户屏幕的信息":["45.0"],"如屏幕的尺寸":["45.0"],"分辨率等":["45.0"],"可以使用它来调整页面在不同屏幕上的显示":["45.0","48.0"],"主机名":["46.0"],"路径和查询参数等":["46.0"],"加载一个新的":["46.1"],"com":["46.2","111.1"],"重新加载当前页面":["46.2"],"platform":["47.1"],"运行浏览器的操作系统平台":["47.1"],"pixeldepth":["48.1"],"获取屏幕的颜色深度":["48.2"],"屏幕颜色深度":["48.2"],"以及与窗口内容交互的功能":["49.0"],"将窗口移动到指定的位置":["49.1"],"将窗口移动到屏幕左上角":["49.2"],"moveto":["49.2"],"然后用":["50.1"],"来操作":["50.1"],"对象提供的":["50.2"],"onreadystatechange":["50.2"],"事件监听服务器端你的通信状态":["50.2"],"接受并处理服务端向客户端响应的数据结果":["50.2"],"xhr":["50.3"],"new":["50.3","75.1","81.8","87.11","88.2","88.6","88.11","124.3","132.2"],"可选的用户名用于认证用途":["50.4"],"方法中的":["50.5"],"url":["50.5","104.8"],"地址中":["50.5"],"发送请求数据中的":["50.5"],"服务端返回的结果":["50.6"],"status":["50.8","50.9"],"success":["50.8","87.5","108.11"],"请求失败后的回调函数":["50.9"],"使得这些变量在内部函数执行时仍然可用":["51.0"],"以下是闭包的一些关键概念和用法":["51.0"],"可以访问外部函数":["51.1"],"函数作用域内的":["51.2"],"变量":["51.2"],"每次调用":["51.2"],"函数返回了一个包含":["51.3"],"可以延迟执行函数":["51.4"],"在某些场景中":["51.4"],"可以将函数包裹在闭包中":["51.4"],"并在需要时再调用执行":["51.4"],"以实现延迟执行的效果":["51.4"],"封装代码和状态":["51.5"],"并提供模块化的解决方案":["51.5"],"在编写复杂的":["51.5"],"并将原始对象":["52.1"],"的属性复制到新对象中":["52.1"],"但是":["52.1"],"此方法使用递归函数":["52.2"],"来复制对象的所有属性":["52.2"],"递归函数首先检查属性是否是基本类型或":["52.2"],"如果是":["52.2"],"则直接返回该属性":["52.2"],"如果是引用类型":["52.2"],"则创建一个新的对象或数组":["52.2"],"并递归复制嵌套的属性":["52.2"],"的结果":["53.1"],"通过调用":["53.1"],"我们获得一个新函数":["53.1"],"它将传递的参数与":["53.1"],"相加":["53.1"],"可以简化函数柯里化的实现":["53.2"],"这些库提供了一些函数来帮助创建和组合柯里化函数":["53.2"],"简化开发过程":["53.2"],"函数首先检查传入的参数个数是否达到了原始函数的要求":["53.4"],"如果达到了":["53.4","53.6"],"则直接调用原始函数":["53.4","53.6"],"这种方法与前面的闭包递归方式类似":["53.5"],"但引入了一个占位符的概念":["53.5"],"函数检查传入的参数个数是否达到了原始函数的要求":["53.6"],"否则返回一个新的箭头函数":["53.6"],"对此我们就可以采用":["54.0"],"throttle":["54.0"],"防抖":["54.0"],"keydown":["54.1","54.4"],"和延迟时间":["54.2"],"返回一个新的函数":["54.2"],"该函数在延迟时间内只能执行一次":["54.2"],"当函数被调用时":["54.2"],"arguments":["54.3"],"cleartimeout":["54.3"],"表单事件":["54.4"],"settimeout":["54.5"],"apply":["54.5","54.6"],"debouncehandlescroll":["54.7"],"将函数绑定到事件上":["54.7"],"arr":["55.1"],"每删除一个树":["55.2"],"保证j的值经过自加后不变":["55.2"],"同时":["55.2","113.5","113.7"],"减少循环次数提升性能":["55.2"],"indexof":["55.5"],"res4":["56.3"],"通过链式调用的方式":["57.0"],"使得异步操作的处理更加优雅和可读":["57.0"],"callback":["57.0"],"hell":["57.0"],"并将成功的结果":["57.1"],"传递给它":["57.1"],"当异步操作失败时":["57.1"],"方法中传递的函数会在异步操作失败时被调用":["57.2"],"成功的结果":["57.3"],"并返回另一个":["57.3"],"还有许多其他方法和特性":["57.4"],"例如":["57.4","104.8","104.11","110.4"],"race":["57.4"],"resolve":["57.4"],"当请求发生错误时":["57.5"],"函数调用":["57.5"],"将网络错误信息传递给":["57.5"],"使用封装的":["57.5"],"方法处理请求成功的响应":["57.5"],"我们可以对数组中的每个元素进行自定义的累积运算":["58.0"],"最终得到一个累积结果":["58.0"],"是初始值":["58.1"],"在上面的示例中":["58.3"],"务必确保回调函数的正确性和无副作用":["58.9"],"以免产生意外的结果":["58.9"],"是一个全局变量":["59.1"],"在任何地方都可以访问":["59.1"],"是":["59.2"],"函数的局部变量":["59.2"],"在该函数内部和其嵌套函数中可访问":["59.2"],"内部可以访问它的父级作用域中的变量":["59.3"],"的词法作用域规则决定了函数在定义时就创建了自己的作用域":["59.4"],"作用域是":["59.4"],"中重要的概念之一":["59.4"],"了解作用域的工作原理和规则对于正确编写和组织":["59.4"],"在任意节点前插入":["60.1"],"ul":["60.1"],"li":["60.1"],"web":["60.2","60.5"],"树的结构是层次化的":["61.1"],"由多个节点组成":["61.1"],"每个节点都有其特定的属性和方法":["61.1"],"可以用于获取或修改节点的信息":["61.1"],"添加":["61.1"],"如下图所示":["61.2"],"将":["61.2","108.13"],"文档以树状结构直观的表现出来":["61.2"],"标签的文字内容":["61.3"],"如":["61.3","102.1"],"title":["61.3"],"标签中的文字":["61.3"],"处理用户输入和交互等操作":["61.4"],"使得":["61.4"],"成为了":["61.4"],"鼠标拖拽":["62.1"],"网页中的一张图片":["62.1"],"event":["62.2"],"事件处理程序的逻辑代码":["62.2"],"也可以使用箭头函数来定义事件处理程序":["62.2"],"eventhandler":["62.3"],"innertext":["62.5"],"鼠标移入了":["62.5"],"修改光标的风格":["62.5"],"style":["62.5","65.2","81.3","136.7"],"cursor":["62.5"],"move":["62.5"],"监听鼠标是移出当前":["62.5"],"事件只在按下字符键时才触发":["62.8"],"不会在按下非字符键":["62.8"],"事件类型":["62.9"],"preventdefault":["62.9"],"阻止事件的默认行为":["62.9"],"resize":["62.11"],"scroll":["62.11"],"触摸事件":["62.11"],"touchstart":["62.11"],"选项2":["62.12"],"选项3":["62.12"],"getattribute":["63.0"],"获取元素的属性值":["63.0"],"innerhtml":["63.2"],"childelement":["63.3"],"以下是一些常用的方法和技巧":["64.0"],"propertyvalue":["64.1"],"getpropertyvalue":["64.1"],"propertyname":["64.1"],"以满足具体的交互需求":["64.2"],"需要注意的是":["64.2"],"类名的操作只会修改元素的类列表":["64.2"],"而不会直接修改元素的":["64.2"],"class":["64.2","77.2"],"如果需要直接修改":["64.2"],"内容":["65.0"],"textcontent":["65.0","81.3","121.2"],"queryselector":["65.1"],"传入":["65.1"],"选择器":["65.1"],"attributename":["65.2"],"attributevalue":["65.2"],"修改元素的样式":["65.2"],"以下是":["66.0","67.0","68.0"],"使用等号分隔":["66.1"],"通过设置":["66.1"],"可以指定":["66.1"],"的过期时间":["66.1"],"返回一个字符串":["66.2"],"包含当前域名下的所有":["66.2"],"我们将":["66.3"],"的过期时间设置为过去的时间":["66.3"],"以免遭受安全风险":["66.4"],"是一种在客户端浏览器上存储数据的常用机制":["66.4"],"适用于在用户计算机中存储有关网站的信息":["66.4"],"它提供了简单的设置":["66.4"],"获取和删除操作":["66.4"],"可用于实现用户身份验证":["66.4"],"john":["67.1","68.1","78.9","78.10","78.17"],"输出":["67.2","68.2","75.1","75.3","79.1"],"数据是相互隔离的":["67.6","68.6"],"时":["67.6","68.6","79.2"],"需要注意浏览器对于隐私和安全方面的限制":["67.6","68.6"],"例如隐私模式下的":["67.6","68.6"],"访问可能被限制":["67.6","68.6"],"second":["69.1"],"设置日期的秒数为指定的值":["69.1"],"settime":["69.1"],"time":["69.1"],"设置日期为指定的时间戳":["69.1"],"todatestring":["69.1"],"将日期对象转换为可读的字符串":["69.1"],"只返回日期部分":["69.1"],"toisostring":["69.1"],"将日期对象转换为":["69.1"],"iso":["69.1"],"格式的字符串":["69.1"],"tojson":["69.1"],"返回日期对象的":["69.1"],"year":["69.2"],"monthindex":["69.2"],"day":["69.2"],"hours":["69.2"],"还有一种获取时间戳的方法":["69.4"],"今天是2100年1月14日之前":["69.5"],"开发者可以利用这些内置对象来编写更高效":["70.0"],"功能更强大的":["70.0"],"异常对象":["70.1"],"函数构造器":["70.1"],"属性的设置和获取等":["70.2"],"它是构建其他对象的基石":["70.2"],"的灵活性使得它在处理列表和集合数据时非常便利":["70.3"],"进行字符串操作和处理":["70.4"],"还可以用于日期和时间处理":["70.5"],"用于控制流程和决策":["70.6"],"如计算时间差":["70.7"],"添加或减去日期等":["70.7"],"可以用于复杂的数值计算和处理":["70.8"],"set":["70.9","133.2","133.3","133.4","133.5"],"它们提供了更特定的功能和方法":["70.9"],"的所有方法和属性都是静态的":["71.0"],"不包含":["71.4"],"nan":["71.14","72.1","78.15"],"foo":["71.14"],"表示非数值":["72.1"],"regular":["73.1"],"expression":["73.1"],"提供了强大的工具":["73.1"],"正则表达式是一种描述字符串模式的表达式":["73.1"],"它可以用来检查":["73.1"],"pattern":["73.3","73.6","73.10"],"标记子表达式的开始和结束位置":["73.5"],"并捕获匹配的子字符串":["73.5"],"hi":["73.8"],"正则表达式":["73.9"],"gi":["73.10"],"pattern2":["73.10"],"正则表达式是":["73.11"],"中强大的工具之一":["73.11"],"它提供了灵活和高效的字符串处理能力":["73.11"],"表示从第一个截取到倒数第一个":["74.3"],"则自动交换":["74.4"],"比如说":["74.4"],"个字符":["74.5"],"从指定位置开始":["74.5"],"截取到最后":["74.5"],"woof":["75.1"],"mydog":["75.1"],"buddy":["75.1"],"labrador":["75.1"],"在构造函数内部":["76.0"],"通过使用":["76.0"],"this":["76.0","80.0"],"使用类的好处是它更加直观":["76.2"],"能够更清晰地表达对象的结构和行为":["76.2"],"此外":["76.2","113.6"],"方法在原型上定义":["76.2"],"因此它们在实例之间共享":["76.2"],"不会造成内存浪费":["76.2"],"它们通过相互之间的交互来完成特定的任务":["77.1"],"之后":["77.2"],"引入了":["77.2"],"关键字":["77.2"],"使得定义类和创建对象更加简洁和直观":["77.2"],"sayhi":["78.2"],"调用对象的方法":["78.3"],"大白":["78.4"],"男":["78.4"],"smallbai":["78.4"],"小白":["78.4"],"返回一个给定对象自身可枚举属性的名称数组":["78.5"],"seal":["78.5"],"封闭一个对象":["78.5"],"防止添加新属性和删除现有属性":["78.5"],"values":["78.5"],"writable":["78.11"],"enumerable":["78.11"],"其原型指向":["79.2"],"当我们调用":["79.2"],"由于":["79.2"],"原型上的属性和方法是动态的":["79.3"],"可以在运行时进行修改和添加":["79.3"],"它们使得":["79.4"],"具有强大的面向对象特性":["79.4"],"在严格模式下被视为无效的":["80.0"],"禁止对只读属性赋值":["80.0"],"禁止使用":["80.0"],"with":["80.0"],"语句":["80.0"],"当函数执行完毕":["81.1"],"它所产生的执行期上下文会被销毁":["81.1"],"上下文对象":["81.2"],"在这里":["81.3"],"this指向绑定事件的按钮元素":["81.3"],"也就是button对象":["81.3"],"clicked":["81.3"],"修改按钮文本内容为":["81.3"],"backgroundcolor":["81.3"],"green":["81.3","117.4"],"将按钮背景颜色设置为绿色":["81.3"],"输出调用foo":["81.4"],"bind":["81.5"],"第一个参数中":["81.7"],"如果不需要改变":["81.7"],"自动拥有":["81.8"],"里的属性":["81.8"],"最终实现继承":["81.8"],"son1":["81.8"],"张三":["81.8"],"json":["81.8","84.3","99.5","103.4","104.8"],"stringify":["81.8"],"到这里可以看出":["81.10"],"方法的作用是相同的":["81.10"],"唯一的区别在于":["81.10"],"然后执行":["81.11"],"中元素的最大值":["81.12"],"minvalue":["81.12"],"min":["81.12"],"其他参数":["81.14"],"函数的实参":["81.14"],"解释":["81.14"],"它不会调用":["81.14"],"但会返回":["81.14"],"res":["83.3","88.11"],"对响应数据做点什么":["83.4"],"在设置请求时发生了一些事情":["83.5"],"触发了一个错误":["83.5"],"可以简化服务器返回的数据":["84.1"],"处理":["84.1"],"http":["84.1"],"请求超时设置":["84.2"],"withcredentials":["84.2"],"默认类型":["84.3"],"服务不可用":["84.4"],"服务暂时无法访问":["84.4"],"请稍后再试":["84.4"],"一次封装终身受益":["84.7"],"美团后端连连点赞":["84.7"],"查看全局配置":["85.1"],"list":["85.1","86.3"],"file1":["85.5"],"记录":["85.8"],"filename":["85.8"],"查看指定文件每一行修改对应的":["85.8"],"checkout":["85.10"],"到":["85.14","99.4"],"工作区和暂存区所有文件恢复成和":["85.15"],"hard":["85.15"],"rebase":["85.16"],"修改别名":["85.18"],"远程仓库分支名":["85.19"],"分支名":["85.20"],"delete":["85.21","98.2","104.12","108.3"],"强制推送":["85.21"],"downloads":["86.1"],"bash命令窗口":["86.2"],"文件":["86.4","96.8","104.8"],"这个文件一般在c盘的":["86.4"],"20230222161109182":["86.5"],"ddd":["87.1"],"binary":["87.2"],"0b1010":["87.2"],"二进制":["87.2"],"这样会报错":["87.3"],"应为事实上":["87.3"],"数字是没有length":["87.5"],"元组类型还可以支持自定义名称和变为可选的":["87.5"],"异构枚举":["87.6"],"可以同时包含数字和字符串":["87.6"],"那么":["87.8"],"会报错":["87.8"],"或者这样的":["87.9"],"throw":["87.11"],"error":["87.11","88.11","107.23"],"es5都可以做到":["88.0"],"新的class写法只是让对象原型的写法更加清晰":["88.0"],"如果不写默认就是public":["88.4"],"ls":["88.6"],"super":["88.9"],"d":["88.10","107.21","107.22"],"zs":["88.11","92.2"],"无法创建抽象类的实例":["88.11"],"res1":["88.11"],"string":["89.4","96.8"],"args":["89.4"],"void":["89.5"],"params2":["89.5"],"默认t为boolean类型":["90.3"],"length":["90.4"],"而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程":["91.1"],"其次":["91.2"],"浏览器是不识别ts的":["91.2"],"所以在编译的时候":["91.2"],"可以直接转换":["91.3"],"有类型支持":["91.3"],"typescript":["91.5"],"但是便于后期的维护":["91.6"],"严格模式":["91.7"],"在tsconfig":["91.7"],"json中":["91.7"],"strict":["91.7"],"直接进行ts":["91.10"],"的抽象":["92.0"],"描述":["92.0"],"一样":["93.1"],"也是表示原始类型和非原始类型的集合":["93.1"],"a1":["93.1"],"a2":["93.1"],"a3":["93.1"],"baseurl":["94.0"],"用于解析非相对模块名称的基目录":["94.0"],"paths":["94.0"],"模块名到基于":["94.0"],"的路径映射的列表":["94.0"],"rootdirs":["94.0"],"根文件夹列表":["94.0"],"其组合内容表示项目运行时的结构内容":["94.0"],"typeroots":["94.0"],"包含类型声明的文件列表":["94.0"],"types":["94.0"],"需要包含的类型声明文件名列表":["94.0"],"allowsyntheticdefaultimports":["94.0"],"允许从没有设置默认导出的模块中默认导入":["94.0"],"source":["94.0"],"options":["94.0"],"sourceroot":["94.0"],"指定调试器应该找到":["94.0"],"文件而不是源文件的位置":["94.0"],"maproot":["94.0"],"指定调试器应该找到映射文件而不是生成文件的位置":["94.0"],"inlinesourcemap":["94.0"],"n2":["95.1"],"any类型":["95.1"],"定义值的别名":["95.2"],"boolean":["95.2"],"router":["96.2","97.0"],"pinia":["96.2"],"element":["96.2"],"plus":["96.2"],"create":["96.4"],"进入到项目根目录":["96.4"],"install":["96.4"],"指定解析器选项":["96.6"],"parseroptions":["96.6"],"ecmaversion":["96.6"],"latest":["96.6"],"校验ecma最新版本":["96.6"],"sourcetype":["96.6"],"设置为":["96.6"],"script":["96.6"],"或者":["96.6"],"uses":["96.8"],"防止":["96.8"],"src":["96.8","124.3"],"文件夹目录下创建一个":["96.8"],"用于注册":["96.8"],"components":["96.8"],"文件夹内部全部全局组件":["96.8"],"import":["96.8"],"svgicon":["96.8"],"from":["96.8"],"preprocessoroptions":["96.9"],"javascriptenabled":["96.9"],"additionaldata":["96.9"],"获取用户信息":["96.10"],"get":["96.10","96.12"],"request":["96.10"],"获取请求头携带token":["96.10"],"headers":["96.10"],"查看用户信息是否包含有次token用户":["96.10"],"无权访问":["96.11"],"请求地址错误":["96.11"],"服务器出现问题":["96.11"],"requserinfo":["96.12"],"退出登录":["96.12"],"要加上这段代码":["97.0"],"rewrite":["97.0"],"start":["97.1"],"命令":["98.0"],"删除一个表":["98.1"],"tables":["98.1"],"列出数据库中的所有表":["98.1"],"describe":["98.1"],"更新表中的数据":["98.2"],"更改用户的密码":["98.3"],"drop":["98.3"],"删除一个用户":["98.3"],"show":["98.3","121.1"],"中常用的数据类型":["99.0"],"utc":["99.4"],"类型等":["99.5"],"在设计表时":["99.5"],"数据库允许多个用户同时访问和共享数据":["100.0"],"同时提供了对数据的安全访问控制":["100.0"],"数据一致性和完整性":["100.0"],"数据库通过实施数据完整性约束和事务支持来保证数据的一致性和完整性":["100.0"],"教程和支持资源":["100.1"],"mysql提供了多种访问方式":["100.1"],"包括命令行客户端":["100.1"],"图形化客户端工具":["100.1","102.1"],"如mysql":["100.1"],"的基本使用步骤":["102.0"],"打开图形化客户端工具":["102.1"],"替换为您要使用的数据库的名称":["102.3"],"替换为您希望创建的表的名称":["102.4"],"等替换为表的列名":["102.5"],"替换为要检索数据的表的名称":["102.6"],"等替换为要更新的列名和相应的值":["102.7"],"替换为要删除数据的表的名称":["102.8"],"spa":["103.2"],"单页应用程序":["103.2"],"常见的":["103.2"],"要爬取的内容":["103.3"],"将数据写入文件中":["103.4"],"writefile":["103.4","106.3"],"files":["103.4","106.9"],"p1505392928":["103.6"],"大话西游之大圣娶亲":["103.6"],"西遊記大結局之仙履奇緣":["103.6"],"p2455050536":["103.6"],"熔炉":["103.6"],"도가니":["103.6"],"p1363250216":["103.6"],"教父":["103.6"],"godfather":["103.6"],"是用于快速创建服务器的第三方模块":["104.0"],"参数":["104.2"],"默认是一个空对象":["104.2"],"listen":["104.2","104.4","104.6","104.7","106.16","106.17"],"login":["104.3"],"通过带有":["104.3"],"前缀的地址访问":["104.3"],"目录下的文件":["104.3"],"添加访问前缀":["104.4"],"use":["104.4","104.10"],"api":["104.4","105.1"],"函数后别写代码":["104.5"],"多个中间件共享":["104.5"],"page":["104.6"],"快速托管静态资源的内置中间件":["104.8"],"图片":["104.8"],"样式等":["104.8"],"无兼容性":["104.8"],"解析":["104.8","108.14"],"格式的请求体数据":["104.8"],"有兼容性":["104.8"],"仅在":["104.8"],"版本中可用":["104.8"],"urlencoded":["104.8","104.14"],"的浏览器":["104.11"],"才能正常访问开启了":["104.11"],"的服务端接口":["104.11"],"put":["104.12"],"等方式请求服务器的资源":["104.12"],"alow":["104.12"],"来指明实际请求所允许使用的":["104.12"],"form":["104.14"],"multipart":["104.14"],"请求称为":["104.15"],"restify":["105.1"],"但不会处理具体的任务":["105.2"],"的背后还有一个线程池":["105.2"],"线程池会处理长时间运行的任务":["105.2"],"比如":["105.2"],"每秒的请求数维持在一个较低的水平":["105.3"],"追加":["106.1"],"ax":["106.1"],"存在失败":["106.1"],"将data写入到文件中":["106.3"],"hello":["106.3","114.2","119.6"],"lilichao":["106.4"],"desktop":["106.4"],"写入的内容":["106.6"],"w":["106.6"],"allounsafe":["106.8"],"可能包含敏感数据":["106.8"],"分配内存时不会清除内存残留的数据":["106.8"],"txt":["106.9"],"utf8":["106.9"],"创建一个10个字节的buffer":["106.10"],"buf2":["106.10"],"alloc":["106.10"],"通过索引":["106.10"],"来操作buf中的元素":["106.10"],"用来满足用户对路径的处理需求":["106.11"],"err":["106.12","108.2"],"datastr":["106.12"],"namewithoutext":["106.13"],"服务器的模块":["106.15"],"向客户端响应内容":["106.16"],"charset":["106.17"],"utf":["106.17"],"与外部其它模块通信":["107.2"],"模块化规范是对代码进行模块化拆分和组合时需要遵守的规则":["107.2"],"防止全局变量污染":["107.6"],"指向同一个对象":["107.7"],"最终共享的结果":["107.7"],"以":["107.7"],"将会试图加载目录下的":["107.13"],"提供了更高级":["107.15"],"更方便的":["107.15"],"极大提高了开发效率":["107.15"],"下载安装速度是比":["107.16"],"xxxx":["107.18"],"license":["107.18"],"isc":["107.18"],"开源协议":["107.18"],"发布":["107.18"],"publish":["107.18"],"从而提高模块的加载效率":["107.19"],"会在终端打印错误消息":["107.23"],"报告模块的缺失":["107.23"],"results":["108.2"],"删除数据":["108.3"],"语句会真正删除数据":["108.3"],"保险起见":["108.3"],"seo":["108.5"],"服务器响应的是完整的":["108.5"],"页面内容":["108.5"],"有利于爬虫爬取信息":["108.5"],"缺点":["108.5"],"占用服务器资源":["108.5"],"等框架的":["108.6"],"ssr":["108.6"],"server":["108.6"],"side":["108.6"],"render":["108.6"],"为同时兼顾首页渲染速度和前后端分离开发效率":["108.7"],"可采用首屏服务器端渲染":["108.7"],"清空":["108.11"],"是目前最流行的跨域认证解决方案":["108.12"],"存储在":["108.13"],"localstorage":["108.13"],"sessionstorage":["108.13"],"此后客户端与服务端通信需要携带":["108.13"],"进行身份认证":["108.13"],"存在":["108.13"],"获取信息成功":["108.14"],"data":["108.14"],"捕获解析":["108.14"],"失败后产生的错误":["108.14"],"当使用":["108.14"],"如果客户端发送过来的":["108.14"],"字符串过期或不合法":["108.14"],"会产生一个解析失败的错误":["108.14"],"影响项目的正常运行":["108.14"],"的错误中间件":["108.14"],"捕获这个错误并进行相关的处理":["108.14"],"显示依赖项树":["109.0"],"tree":["109.0"],"查看包信息":["109.0"],"搜索包":["109.0","110.3"],"包":["110.1"],"它提供了一个庞大的软件生态系统":["110.1"],"使开发者能够快速构建复杂的应用程序":["110.1"],"如果输出显示了":["110.2"],"使其可供他人使用":["110.3"],"search":["110.3"],"并添加或修改相关配置":["110.4"],"将会根据":["110.5"],"请确保遵循":["110.6"],"的发布准则和最佳实践":["110.6"],"npmjs":["111.1"],"实现你的功能逻辑":["111.3"],"这是你的包的说明文档":["111.4"],"提供关于包的介绍":["111.4"],"确保发布成功后":["111.5"],"你可以在":["111.5"],"执行以下命令发布新版本的包":["111.6"],"shell":["111.6"],"npm":["111.6","137.1"],"替换为你的包的名称":["111.7"],"g":["112.1"],"以上任一方法都将安装":["112.1"],"这将检查所有依赖项":["112.2"],"并将它们更新到最新可用版本":["112.2"],"运行脚本命令":["112.2"],"如果在":["112.2"],"文件的":["112.2"],"scripts":["112.2"],"部分定义了一些自定义脚本命令":["112.2"],"你可以使用以下命令运行它们":["112.2"],"文本":["113.1"],"图像等多种元素":["113.1"],"坐标值":["113.3"],"可以在":["113.3"],"渲染上下文":["113.4"],"它提供了许多":["113.4"],"来绘制图形":["113.4"],"还可以与其他":["113.6"],"greensock":["113.7"],"等库或框架":["113.7"],"来进行高级别的动画控制":["113.7"],"在处理大量的图像和其他复杂的数据时":["113.8"],"settransform":["114.0"],"方法之前调用":["114.1"],"否则是不起作用的":["114.1"],"旋转中心点始终是画布左上角的原点":["114.1"],"如果要更改中心点":["114.1"],"font":["114.2"],"16px":["114.2"],"serif":["114.2"],"filltext":["114.2"],"world":["114.2"],"red":["114.3"],"的矩形":["114.4"],"结果缩放成":["114.4"],"并且左上角从":["114.4"],"方法取消了这个变换":["114.5"],"已绘制的图形不受影响":["114.5"],"将画布恢复到默认状态":["114.5"],"变换矩形":["114.5"],"globalcompositeoperation":["115.0","115.1"],"操作":["115.0"],"绘制图形":["116.1"],"新建一条路径":["116.2"],"生成之后":["116.2"],"图形绘制命令被指向到路径上生成路径":["116.2"],"生成路径的第一步":["116.2"],"叫做":["116.2"],"是辐射终止的圆的圆心坐标":["117.2"],"是终止圆的半径":["117.2"],"该方法的返回值也是一个":["117.2"],"fillstyle":["117.3","117.4"],"fillrect":["117.3"],"fill":["119.2"],"填充颜色":["119.2"],"清除模式":["119.2"],"lineto":["119.3"],"提示":["119.3"],"上面代码中":["119.3"],"有":["119.3"],"个参数":["119.3"],"前两个参数是第一个点的坐标":["119.3"],"第三个参数和第四个参数是第二个点的坐标":["119.3"],"第三种绘制图片的方式":["119.5"],"裁剪图片":["119.5"],"img参数后面四个参数分别为原图片上面要裁剪的起点位置和终点位置":["119.5"],"最后四个参数分别为画布的位置和要渲染的矩形宽高":["119.5"],"rtl":["119.6"],"预测量文本宽度":["119.6"],"一等奖":["121.2"],"绘制时针":["122.3"],"urldata":["124.3"],"todataurl":["124.3"],"img":["124.3","137.4"],"image":["124.3"],"body":["124.3","132.1"],"appendchild":["124.3","132.1"],"downloada":["124.3"],"createelement":["124.3"],"download":["124.3"],"签名":["124.3"],"linewidth":["124.4"],"canvas":["124.4"],"pointerleave":["126.1"],"on":["126.2","127.7"],"e":["126.2"],"的特点":["127.1"],"用法和示例":["127.1"],"的设备上也能正常运行":["127.3"],"方便开发者查阅和学习":["127.4"],"事件处理等":["127.5"],"开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏":["127.5"],"使开发者能够创建适应不同屏幕大小和分辨率的应用":["127.6"],"onclick":["127.7"],"点击事件处理函数":["127.7"],"将精灵添加到场景":["127.7"],"stage":["127.7","133.1"],"addchild":["127.7","135.1","135.2"],"相对于左上角":["128.2"],"rotation":["128.2","135.2"],"旋转":["128.2"],"pivot":["128.2"],"设置文字锚点":["129.1"],"anchor":["129.1"],"endfill":["129.2"],"mask":["129.2"],"使用图形作为精灵的遮罩":["129.2"],"设置精灵的锚点":["131.1"],"pointerout":["131.2"],"0xff0000":["131.3"],"quality":["131.3"],"将轮廓滤镜添加到精灵上":["131.3"],"将应用画布添加到dom中":["132.1"],"document":["132.1"],"设置透明度":["132.3","135.1","135.2"],"alpha":["132.3","135.1","135.2"],"01":["132.4"],"position":["133.3","133.4","133.5"],"对多个资源分组":["135.0"],"设置容器属性即可应用到容器内的精灵":["135.0"],"math":["135.1","135.2"],"pi":["135.1","135.2"],"设置缩放":["135.1","135.2"],"scale":["135.1","135.2"],"将精灵添加到舞台":["135.1","135.2"],"创建精灵2":["135.1"],"旋转45度":["135.2"],"设置宽高时":["136.1"],"它的默认宽度是":["136.1"],"300px":["136.1"],"默认高度是":["136.1"],"stroke":["136.3","136.7","136.8"],"000000":["136.3"],"pink":["136.4"],"none":["136.5","136.7"],"cyan":["136.8"],"中文网":["137.0"],"yarn":["137.1"],"打开终端":["137.2"],"点击":["137.2"],"符号右边的下三角":["137.2"],"输入以下命令":["137.2"],"mkdir":["137.2"],"run":["137.3"],"dev":["137.3"],"build":["137.4"],"md":["137.6"],"about2":["137.6"],"️":["137.7"],"link是连接的位置":["137.9"],"其他":["137.9"],"这种是没有下拉菜单的版本":["137.9"],"vitepress":["137.9"],"的根目录是从":["137.9"],"开始算的":["137.9"],"关于2":["137.10"],"or":["137.11"],"打开":["137.11"],"点击分支":["137.11"],"可以看到会多个一个名":["137.11"]},{"0":["40.17","49.2","74.21","104.2","104.4","104.6","104.7","106.16","106.17","119.2","119.6","126.1","129.1","131.1"],"1":["12.16","34.12","34.13","90.4","92.7","104.2","104.4","104.6","104.7","106.16","106.17"],"2":["34.7","34.8","39.13","73.7","92.7","106.10","119.6"],"3":["12.16","32.2","39.13","74.4","74.5","106.10","131.1","137.7"],"4":["36.6","40.12","74.16","85.15","106.7"],"5":["7.1","30.6","104.8","104.11","117.1","119.6","121.2","126.1","129.1"],"6":["85.7"],"7":["11.10","39.2","88.11"],"8":["7.1"],"10":["42.1"],"12":["7.2"],"13":["71.9"],"14":["99.4"],"15":["117.1","122.3"],"18":["42.3","92.2","99.1"],"20":["90.5","93.1"],"21":["71.8"],"25":["67.1","68.1"],"30":["42.1","89.3"],"50":["34.2"],"60":["58.8"],"80":["104.4"],"100":["34.2","39.2","88.2","116.1","117.4","122.3"],"123":["89.5","92.5","95.1"],"127":["104.2","104.4","104.6","104.7","106.16","106.17"],"150":["115.1"],"180":["87.13"],"200":["116.1"],"222":["36.3"],"250":["115.1"],"255":["106.10"],"300":["116.1","119.5","119.6"],"320":["18.11"],"400":["117.3","119.2"],"401":["108.14"],"446":["99.1"],"456":["89.5"],"500":["108.14","118.0"],"551":["99.1"],"600":["119.2","119.5","124.4"],"615":["99.1"],"666":["36.8"],"709":["99.1"],"744":["99.1"],"750":["124.4"],"849":["71.7"],"1234":["87.14"],"2023":["20.14"],"8080":["104.3"],"101010":["72.2"],"标准进行实现":["5.2"],"以保持互操作性和一致性":["5.2"],"fs":["5.3"],"net":["5.3"],"flatmap":["5.4"],"用于数组的扁平化和映射":["5.4"],"trimstart":["5.4"],"trimend":["5.4"],"用于去除字符串两端的空白字符":["5.4"],"fromentries":["5.4"],"用于将键值对列表转换为对象":["5.4"],"从":["5.4"],"开始":["5.4"],"标准每年都会发布一个新版本":["5.4"],"每个版本都会引入一些新的特性和改进":["5.4"],"以使":["5.4"],"javascript":["5.4","103.2"],"语言变得更加强大":["5.4"],"现代和易用":["5.4"],"开发中":["6.4"],"模板字符串广泛用于生成":["6.4"],"html":["6.4","37.4","50.2"],"标记":["6.4"],"日志信息":["6.4"],"网络请求等多种场景":["6.4"],"输出":["7.1"],"输出了正确的结果":["7.3"],"而箭头函数中的":["7.3"],"方法继承了外层代码块的":["7.3"],"在浏览器环境中":["7.3"],"这里指向":["7.3"],"window":["7.3","54.7"],"因此输出了":["7.3"],"特别是在简单的回调函数和数组方法中":["7.4"],"能够减少代码量并提高代码的可读性":["7.4"],"都可以显著提高代码的可读性和可维护性":["8.0"],"使用默认值":["8.4","8.10"],"用的最多的交集选择器":["10.5"],"元素选择器配合类名选择器":["10.5"],"例如":["10.5"],"center":["10.6","12.15"],"color":["10.9","10.12","28.12"],"red":["10.9","10.12","28.12","115.1"],"选到2号p标签":["10.12"],"blue":["10.12"],"属性且属性值含有":["10.13"],"table":["10.14"],"转换为块级元素并一行显示":["10.14"],"能够轻松地实现复杂的网页布局和响应式设计":["11.0"],"属性控制它们的布局行为":["11.1"],"主轴为垂直方向":["11.2"],"主轴居中对齐":["11.3"],"交叉轴顶部对齐":["11.3"],"允许项目换行":["11.4"],"允许换行":["11.5"],"不缩小":["11.6"],"嵌套的flex容器":["11.8"],"多行之间平均分布":["11.9"],"平均分布多行元素":["11.10"],"属性在多行中平均分布元素":["11.10"],"或":["12.1","75.3","94.0","98.1"],"也可以占据一个单元格":["12.2"],"我们可以通过指定网格项的位置来控制它们在网格中的布局":["12.2"],"定义两行":["12.3"],"第一行高度为":["12.3","12.6"],"第二行高度自适应":["12.3","12.6"],"网格项跨越第一行到第三行":["12.4","12.16"],"auto":["12.6","12.25","15.3","15.6"],"两行":["12.6"],"footer":["12.8"],"50px":["12.8","12.11"],"列间距为":["12.9"],"10px":["12.10"],"行间距为":["12.10"],"自动创建的额外列宽度为":["12.11"],"自动创建的额外项目按照列进行放置":["12.12"],"end":["12.13","106.7"],"项目在行轴上底部对齐":["12.13"],"space":["12.14"],"between":["12.14"],"项目在行轴上均匀分布":["12.14"],"项目在行轴上居中对齐":["12.15"],"关键字表示网格轨道的大小将根据其内容自动调整":["12.18"],"而":["12.18","35.10","52.2"],"表示网格轨道的大小将占据剩余可用空间":["12.18"],"我们定义了三列":["12.19"],"每列宽度为":["12.19"],"时":["12.20","35.5","51.2"],"其中使用了":["12.22"],"布局将标题":["12.22"],"导航栏和内容区域分为三个网格项":["12.22"],"通过设置网格容器的列模板为":["12.22"],"1fr":["12.22","12.25"],"使得三个网格项平均占据网格容器的宽度":["12.22"],"布局将网页划分为多个网格项":["12.23"],"通过设置网格项的网格位置和跨度":["12.23"],"我们可以实现复杂的布局结构":["12.23"],"如标题横跨三列":["12.23"],"导航栏":["12.23"],"内容区域和侧边栏位于第二行":["12.23"],"页脚位于第三行":["12.23"],"img":["12.23","12.25","27.25","86.3","137.7","137.10"],"其中":["12.24"],"我们首先创建了一个主要的网格容器":["12.24"],"将页面划分为两列":["12.24"],"标题横跨两列":["12.24"],"然后":["12.24","119.3"],"我们在网格项中嵌套另一个网格容器":["12.24"],"用于进一步划分内容区域":["12.24"],"这样":["12.24"],"我们可以在同一个网格项中实现更复杂的布局":["12.24"],"我们使用":["12.25"],"repeat":["12.25"],"fill":["12.25","119.4","119.6"],"minmax":["12.25"],"200px":["12.25"],"来定义网格容器的列模板":["12.25"],"这将使网格容器动态调整列数":["12.25"],"以填充可用空间":["12.25"],"并保持每列最小宽度为":["12.25"],"最大宽度为可用空间的一份之一":["12.25"],"列表等":["12.27"],"都可以结合媒体查询实现不同屏幕尺寸下的适配":["12.28"],"都支持对齐和排序网格项":["12.28"],"将第三个网格项置于第一个位置":["12.30"],"以优化网页性能":["12.32"],"布局的旧版浏览器中正常显示":["12.33"],"权重最高":["13.1"],"在vscode中":["13.1"],"鼠标悬浮在样式上":["13.1"],"会弹出来显示选择器":["13.1"],"垂直居中":["15.1"],"设置行高和高度一样":["15.1"],"skyblue":["15.2"],"100px":["15.5"],"bottom":["15.6"],"为了让容器撑满视口高度":["15.7"],"000":["16.0","122.3"],"ellipsis":["16.1"],"以省略号显示隐藏的内容":["16.1"],"all":["16.2"],"强制打断单词换行":["16.2"],"tip":["16.2","26.5","26.6","35.9","93.1"],"多行溢出隐藏只能内核是":["16.2"],"的浏览器":["16.2"],"padding":["16.3"],"left":["16.3"],"4px":["16.3"],"d6d6d6":["17.0"],"右下角拖动块":["17.0"],"resizer":["17.0"],"元素允许使用多个":["18.0"],"元素":["18.0","18.10"],"元素可以链接不同的音频文件":["18.0"],"浏览器将使用第一个支持的音频文件":["18.0"],"标签中使用":["18.5"],"定义在媒体播放器文本轨迹":["18.6"],"edge":["18.7"],"只有在静音下可以使用":["18.7"],"网页的主体部分":["19.1"],"包含网页的实际内容":["19.1"],"如文本":["19.1"],"图像":["19.1"],"链接等":["19.1"],"用于组合多个元素为一个整体":["19.2"],"方便样式和布局控制":["19.2"],"span":["19.2","28.12"],"内联容器标签":["19.2"],"类似于":["19.2"],"但是它用于内联元素的包裹":["19.2"],"交互性强的现代网页应用程序":["19.3"],"通过学习":["19.4"],"你可以创建各种各样的网页":["19.4"],"并为用户提供丰富的在线体验":["19.4"],"这是h6级别的标题":["20.1"],"提交":["20.13"],"copy":["20.14"],"公司名":["20.14"],"td":["21.1"],"表格标签":["21.1"],"用于创建表格":["21.1"],"如文本框":["21.2"],"单选按钮":["21.2"],"复选框等":["21.2"],"链接目标":["21.4"],"控制元素行为等":["21.4"],"在实际开发中":["21.5"],"合理使用标签和属性可以提高网页的可读性":["21.5"],"可访问性和用户体验":["21.5"],"install":["24.3","96.8"],"me":["24.7"],"clicked":["24.13","127.7"],"包裹的组件停用时调用":["24.18"],"errorcaptured":["24.18"],"错误捕获":["24.18"],"在子孙组件抛出错误时被调用":["24.18"],"用于处理错误":["24.18"],"有一定的了解":["25.1"],"export":["25.3","96.11"],"default":["25.3","84.4","96.8"],"并且使得状态的变化变得可追踪":["26.0"],"和":["26.1","51.3","73.9","81.3"],"这样可以更好地组织和管理状态":["26.1"],"使代码结构更清晰":["26.1"],"的功能":["26.2"],"doublecount":["26.3"],"通过方法修改状态":["26.3"],"increment":["26.3"],"commit":["26.3"],"通过actions进行异步操作":["26.3"],"async":["26.3"],"fetchdata":["26.3"],"await":["26.3"],"dispatch":["26.3"],"来分别触发":["26.4"],"从而修改":["26.4"],"状态":["26.4"],"通过使用":["26.5","26.6","57.4"],"我们可以在异步操作中进行数据请求":["26.5"],"api":["26.5"],"调用等":["26.5"],"并在操作完成后通过调用":["26.5"],"来修改状态":["26.5"],"保持了状态的变更流程的一致性和可追踪性":["26.5"],"返回对应":["26.6"],"我们可以在组件中直接获取和使用派生状态":["26.6"],"而无需重复编写数据处理逻辑":["26.6"],"这样使得组件的代码更加简洁":["26.6"],"可维护性更高":["26.6"],"并且":["26.6"],"能够保持响应式":["26.6"],"当":["26.6"],"发生变化时":["26.6"],"也会相应地更新":["26.6"],"语法糖下进行":["27.0"],"message":["27.1","83.5","96.11","106.12","108.2"],"中需要通过":["27.2"],"的形式才能使用":["27.2"],"函数可以接收原始数据类型与引用数据类型":["27.2"],"函数只能接收引用数据类型":["27.2"],"false":["27.4","34.29","35.5","78.20","91.7","104.8"],"name":["27.5","38.12","93.1","108.14"],"lisi":["27.5"],"搜索关键字":["27.7"],"p":["27.7","63.2"],"是否开启深度监听":["27.16"],"true":["27.17","34.1","78.14","87.10","95.2"],"deep":["27.17"],"旧的值":["27.18","27.19","27.20"],"vue":["27.24"],"卸载完成":["27.28"],"第四个":["27.29"],"prevnode":["27.29"],"上一个虚拟节点":["27.29"],"钩子中可用":["27.29"],"div":["27.31"],"宽度":["27.31"],"高度":["27.31"],"具名插槽":["28.1"],"作用域插槽":["28.1"],"实现父子组件通信":["28.1"],"数据就可以在模板中使用了":["28.2"],"但是切记":["28.2"],"是只读的":["28.2"],"只能读取":["28.2"],"不能修改":["28.2"],"自定义事件可以实现子组件给父组件传递数据":["28.3"],"都是原生":["28.4"],"vue2中却不是这样的":["28.4"],"在vue2中组件标签需要通过native修饰符才能变为原生dom事件":["28.4"],"定义就变为自定义事件了":["28.5"],"let":["28.5"],"npmjs":["28.6"],"com":["28.6"],"package":["28.6","137.6"],"msg1":["28.7"],"defineprops":["28.8"],"接受了某一个属性":["28.8"],"方法返回的对象身上就没有相应属性与属性值":["28.8"],"button":["28.9","29.17"],"click":["28.9","29.17","124.3"],"handler":["28.9"],"点击我获取父组件实例":["28.9"],"获取存储的数值":["28.10"],"使用方式参照官网":["28.11"],"父组件决定子组件的结构与外观":["28.12"],"style":["28.12"],"done":["28.12"],"green":["28.12","117.2"],"title":["28.12"],"或者":["29.2"],"非ts":["29.6"],"子组件模板中的表达式只能访问子组件的作用域":["29.10"],"loading":["29.13"],"下":["29.14"],"需要通过ref":["29.16"],"reactive":["29.16"],"添加响应式":["29.16"],"onchangemsg":["29.17"],"改变msg":["29.17"],"etc":["30.4","105.1"],"save":["30.4"],"this":["30.4","54.5"],"as":["30.4"],"future":["30.4"],"projects":["30.4"],"并且它是预配置的":["30.5"],"并且支持大部分rollup插件":["30.5"],"项目的目录结构":["30.6"],"更好的支持typescript":["31.1"],"全局api的修改":["31.3"],"将原来的全局api转移到应用对象":["31.3"],"模板语法变化":["31.3"],"改进":["32.2"],"了":["32.3"],"abc":["34.1","89.4"],"undefined":["34.2","78.18","80.0","87.7"],"只有一个元素的数组":["34.14","34.17"],"log":["34.28","34.29","38.11","39.9","39.10","42.7","58.8","78.4","87.14","88.8","104.4","106.17"],"执行某些操作":["34.30"],"这样结构会更加的清晰":["35.1"],"如果":["35.1"],"后的添加表达式不是布尔值":["35.1"],"会转换为布尔值然后再运算":["35.1"],"什么奖励也没有":["35.2"],"啥也没有":["35.2"],"注意":["35.2","35.9","57.5","114.2","114.4"],"语句中只会有一个代码块被执行":["35.2"],"一旦有执行的代码块":["35.2"],"下边的条件都不会在继续判断了":["35.2"],"所以一定要注意":["35.2"],"条件的编写顺序":["35.2"],"如果所有的比较都是":["35.3"],"则执行":["35.3"],"后的语句":["35.3"],"循环结束":["35.5"],"while语句是先执行再判断":["35.6"],"实质的区别":["35.6"],"while语句可以确保循环至少执行一次":["35.6"],"不应该用它来遍历数组":["35.9"],"因为它还会遍历从对象原型继承的可枚举属性":["35.9"],"用于遍历对象属性":["35.10"],"用于遍历可迭代集合":["35.10"],"通过此代码块可以实现大量代码的重复使用":["36.0"],"大肘子":["36.6"],"函数的参数可以有":["36.6"],"也可以没有个数不限":["36.6"],"调用函数的时候":["36.7"],"函数名括号里面的是实参":["36.7"],"多个参数中间用逗号分隔":["36.7"],"形参的个数可以和实参个数不匹配":["36.7"],"但是结果不可预计":["36.7"],"我们尽量要匹配":["36.7"],"返回":["36.8","38.10"],"fun2":["36.8"],"函数返回的结果是":["36.8"],"同时还可以结束当前的函数体内的代码":["36.9"],"应用程序":["37.0"],"有两种方式":["37.2"],"是键名":["38.2"],"是键值":["38.2"],"两个键值对之间用逗号分隔":["38.2"],"有没有都可以":["38.3"],"属性可以动态创建":["38.3"],"不必在对象声明时就指定":["38.3"],"直接对":["38.3"],"对象的":["38.3"],"属性赋值":["38.3"],"结果就在运行时创建了":["38.3"],"的值发生变化后":["38.4"],"的值并不变":["38.4"],"这就表示":["38.4"],"并不是指向同一个内存地址":["38.4"],"上面代码中":["38.5","117.1","117.3"],"如果没有圆括号":["38.5"],"将其理解为一个代码块":["38.5"],"加上圆括号以后":["38.5"],"就理解成一个对象":["38.5"],"报错":["38.7","41.3","90.3","92.6","107.11","107.22"],"上面代码的第一个表达式":["38.7"],"对数值键名":["38.7"],"使用点运算符":["38.7"],"结果报错":["38.7"],"第二个表达式使用方括号运算符":["38.7"],"结果就是正确的":["38.7"],"是对象":["38.10"],"继承的属性":["38.10"],"虽然":["38.10"],"但该属性并没有被删除":["38.10"],"依然存在":["38.10"],"这个例子还说明":["38.10"],"即使":["38.10","51.1"],"该属性依然可能读取到值":["38.10"],"console":["38.11","42.7","78.4","87.14","88.8","104.4"],"老张":["38.12"],"key":["38.12","96.8"],"if":["38.12","103.4","108.14"],"obj2":["38.13"],"obj3":["38.13"],"可以写成":["38.13"],"temp":["38.13"],"07":["39.2","99.4"],"000000000000001":["39.2"],"worl":["40.4","74.8"],"qux":["40.13","74.17"],"age":["41.3","67.1","68.1","93.1"],"没有声明过这个变量":["41.3"],"script":["41.4","112.2"],"先销毁再创建":["41.4"],"而当时又没有那个对象可保存":["41.5"],"就可用":["41.5"],"来填充该变量":["41.5"],"a":["41.6","72.1","87.5"],"不存在":["41.6"],"虽然两个变量的值相等":["41.18"],"但是两个变量保存了两个不同的内存地址":["41.18"],"产生影响":["41.19"],"也就是两个变量指向堆内存中同一个对象":["41.20"],"所以不要重复声明同一个变量":["42.4"],"避免":["42.4"],"syntaxerror":["42.4"],"每次迭代循环声明一个新的迭代变量":["42.6"],"每个":["42.6"],"引用的都是不同的变量实例":["42.6"],"这种风格也适用于":["42.6"],"in":["42.6"],"of":["42.6","103.6"],"value":["43.1","62.6","65.2","124.3"],"设置元素的属性":["43.1"],"class":["43.2"],"highlight":["43.2"],"这只是":["45.0"],"中的一些常见对象":["45.0"],"还有其他对象和方法可用于处理浏览器窗口和与浏览器交互的其他方面":["45.0"],"请注意":["45.0"],"在不同的浏览器中可能会有一些差异":["45.0"],"因此在编写跨浏览器的代码时需要注意兼容性":["45.0"],"reload":["46.1","46.2"],"重新加载当前页面":["46.1"],"platform":["47.2"],"屏幕的颜色深度":["48.1"],"pixeldepth":["48.2"],"位":["48.2"],"document":["49.1"],"当前窗口加载的文档对象":["49.1"],"dom":["50.1"],"而更新页面":["50.1"],"将处理结果更新到":["50.2"],"页面中":["50.2"],"可选的密码用于认证用途":["50.4"],"方法中参数设置为":["50.5"],"错误信息":["50.6"],"post":["50.6"],"http":["50.6","84.4","104.2","104.4","104.6","104.7","108.13"],"xxxx":["50.6"],"responsetext":["50.8"],"responsexml":["50.8"],"fail":["50.8"],"已经执行完毕":["51.1"],"都会增加":["51.2"],"的值并打印":["51.2"],"的对象":["51.3","81.4"],"变量被隐藏在闭包内部":["51.3"],"只能通过返回对象的方法来访问和修改":["51.3"],"事件处理":["51.4"],"闭包可以用于处理事件回调函数":["51.4"],"通过闭包":["51.4"],"可以在事件处理函数内部访问外部函数的数据和状态":["51.4"],"从而更方便地处理事件相关的逻辑":["51.4"],"应用程序时":["51.5"],"了解闭包的概念和使用方法是非常有益的":["51.5"],"如果原始对象的属性是引用类型":["52.1"],"如对象或数组":["52.1"],"新对象和原始对象的该属性仍然引用同一个对象":["52.1"],"深拷贝可能会涉及到循环引用的问题":["52.2"],"即对象内部存在相互引用的属性":["52.2"],"在实现深拷贝时":["52.2"],"需要处理循环引用的情况":["52.2"],"以避免无限递归和栈溢出":["52.2"],"综上所述":["52.2"],"浅拷贝和深拷贝是":["52.2"],"中常用的对象复制技术":["52.2"],"浅拷贝只复制对象的引用":["52.2"],"深拷贝创建一个独立的副本":["52.2"],"同样":["53.1"],"相乘":["53.1"],"函数柯里化是一种将多参数的函数转化为一系列接受单个参数的函数的技术":["53.2"],"它提供了灵活和可复用的函数调用方式":["53.2"],"有助于参数复用":["53.2"],"函数组合和高阶函数的创建":["53.2"],"否则":["53.4"],"返回一个新的函数":["53.4"],"该函数将之前的参数与新的参数连接起来":["53.4","53.6"],"并再次调用":["53.4","53.6"],"在柯里化函数中":["53.5"],"我们可以使用":["53.5"],"来表示一个占位符":["53.5"],"用于在函数调用过程中填充参数位置":["53.5"],"debounce":["54.0"],"的方式来减少调用频率":["54.0"],"else":["54.3","106.6"],"settimeout":["54.3"],"addeventlistener":["54.7"],"scroll":["54.7"],"return":["55.2","55.3","55.4","55.6","84.3","88.8","88.9","108.14"],"infinity":["56.1"],"的问题":["57.0"],"使异步代码更易于理解和维护":["57.0"],"以下是":["57.0"],"的基本概念和用法":["57.0"],"并将错误信息":["57.1"],"并接收到错误信息":["57.2"],"如果任意一个操作失败":["57.3"],"将调用最后的":["57.3"],"方法":["57.3","79.2","81.8"],"reject":["57.4","84.3","84.4","96.11"],"等":["57.4","62.8","63.1"],"它们提供了更多的灵活性和功能":["57.4"],"可以更好地处理异步操作":["57.4"],"避免回调地狱":["57.4"],"并使代码更清晰和可维护":["57.4","59.4"],"方法处理请求失败的错误":["57.5"],"上述示例中假设请求的数据为":["57.5"],"格式":["57.5"],"并设置请求头的":["57.5"],"为":["57.5"],"根据具体的需求":["57.5"],"可以调整请求的数据和请求头":["57.5"],"通过封装":["57.5"],"请求为":["57.5"],"可以更优雅地处理异步请求":["57.5"],"并使用":["57.5"],"的链式调用":["57.5"],"错误处理和其他特性来组织和处理请求的结果":["57.5"],"可选参数":["58.1"],"方法从数组的第一个元素开始累加":["58.3"],"初始值为":["58.3"],"提供了":["58.3"],"initialvalue":["58.3"],"然后依次将每个元素与":["58.3"],"相加":["58.3"],"得到最终的累积结果":["58.3"],"方法是一个非常强大和灵活的数组方法":["58.9"],"通过合理使用它":["58.9"],"可以简化对数组的复杂计算和操作":["58.9"],"是一个全局函数":["59.1"],"也可以在任何地方调用":["59.1"],"在该函数内部可访问":["59.2"],"如果在":["59.3"],"中找不到变量":["59.3"],"引擎会向上查找并找到全局作用域中的":["59.3"],"代码至关重要":["59.4"],"作用域确定了变量和函数的可见性和访问范围":["59.4"],"可以帮助避免命名冲突和错误":["59.4"],"中级":["60.4"],"删除或移动节点等操作":["61.1"],"以下是一些常用的":["61.1"],"操作":["61.1","105.2"],"我们称之为文档树或":["61.2"],"文档树直观的体现了标签与标签之间的关系":["61.2"],"根节点":["61.3"],"特指":["61.3"],"web":["61.4"],"开发中不可或缺的一部分":["61.4"],"鼠标移出了":["62.5"],"失去焦点触发":["62.7"],"如":["62.8"],"shift":["62.8"],"ctrl":["62.8"],"时触发":["62.8"],"例如阻止表单提交或超链接跳转":["62.9"],"stoppropagation":["62.9"],"停止事件的传播":["62.9"],"touchend":["62.11"],"touchmove":["62.11"],"选项4":["62.12"],"选项5":["62.12"],"这将从":["63.3"],"中移除":["63.3"],"这将返回元素的计算样式对象":["64.1"],"你可以使用":["64.1"],"方法来获取指定属性的值":["64.1"],"可以使用":["64.2"],"setattribute":["64.2"],"获取或设置元素的文本内容":["65.0"],"property":["65.2"],"的基本用法和一些常见操作":["66.0","67.0","68.0"],"属性用于指定":["66.1"],"的可访问路径":["66.1"],"默认为当前页面的路径":["66.1"],"浏览器会将其视为已过期并删除该":["66.3"],"网站首选项等功能":["66.4"],"在实际应用中":["66.4","67.6","68.6"],"需要根据具体需求合理使用":["66.4"],"来增强用户体验和数据交互":["66.4"],"john":["67.2","68.2"],"提供了一种简单而强大的在浏览器中进行本地持久化存储的方式":["67.6"],"它可用于保存用户的首选项":["67.6"],"配置信息":["67.6"],"用户身份验证信息等":["67.6"],"可以根据具体需求合理使用":["67.6","68.6"],"来增强用户体验和数据持久性":["67.6"],"提供了一种简单而强大的在浏览器中进行会话级别的本地存储的方式":["68.6"],"它适用于临时保存会话相关的数据":["68.6"],"如用户登录信息":["68.6"],"临时配置等":["68.6"],"来增强用户体验和会话管理":["68.6"],"json":["69.1","137.6"],"tolocaledatestring":["69.1"],"将日期对象转换为本地日期格式的字符串":["69.1"],"tolocalestring":["69.1"],"将日期对象转换为本地日期和时间格式的字符串":["69.1"],"tolocaletimestring":["69.1"],"将日期对象转换为本地时间格式的字符串":["69.1"],"tostring":["69.1","87.12","87.14","106.8"],"将日期对象转换为字符串":["69.1"],"totimestring":["69.1"],"将日期对象的时间部分转换为字符串":["69.1"],"toutcstring":["69.1"],"时间格式的字符串":["69.1"],"minutes":["69.2"],"seconds":["69.2"],"milliseconds":["69.2"],"setdate":["69.3"],"getdate":["69.3"],"今天是2100年1月14日之后":["69.5"],"程序":["70.0"],"内置对象最大的优点就是帮助我们快速开发":["70.0"],"arguments":["70.1"],"函数参数集合":["70.1"],"用于处理不同的任务和需求":["70.9"],"直接使用并传入对应的参数":["71.0"],"not":["72.1"],"当进行非法的数学运算时":["72.1"],"0101111011011001":["72.2"],"这些是":["72.2"],"对象的一些常用属性和方法":["72.2"],"通过使用这些属性和方法":["72.2"],"可以在":["72.2"],"中更方便地处理数字和数值相关的操作":["72.2"],"搜索和替换字符串":["73.1"],"下面是关于":["73.1"],"正则表达式的详细介绍":["73.1"],"gi":["73.6"],"z":["73.7","136.9"],"并将":["73.9"],"捕获到两个分组中":["73.9"],"使用编号或名称可以访问捕获的子串":["73.9"],"捕获分组可用于从字符串中提取特定部分的信息":["73.9"],"进行更精确的匹配和处理":["73.9"],"new":["73.10"],"regexp":["73.10"],"通过学习和掌握正则表达式的语法和方法":["73.11"],"可以提高字符串处理的效率和精确度":["73.11"],"从而更好地应对各种字符串操作的需求":["73.11"],"表示前面的大":["74.3"],"后面的小":["74.3"],"返回值为空":["74.3"],"相当于截取的是第一个字符":["74.4"],"substr":["74.4"],"从倒数第几个开始":["74.5"],"函数根据传入的参数不同":["75.3"],"对象":["75.3","87.3","104.5"],"展现了不同的行为":["75.3"],"这就是多态的体现":["75.3"],"可以引用将要创建的对象":["76.0"],"构造函数的优点是它可以直接在构造函数中定义对象的属性和方法":["76.1"],"但每次创建对象实例时":["76.1"],"都会重新创建一次方法":["76.1"],"这可能会导致内存浪费":["76.1"],"尤其是当实例数量较多时":["76.1"],"无论是构造函数还是类":["76.2"],"它们都可以用于创建对象":["76.2"],"在现代的":["76.2"],"中":["76.2"],"类更为普遍":["76.2"],"因为它提供了更清晰":["76.2"],"直观和易于维护的代码结构":["76.2"],"通过面向对象编程":["77.2"],"开发者可以更好地组织和管理代码":["77.2"],"提高代码的可维护性和可重用性":["77.2"],"并使得复杂的程序更易于理解和扩展":["77.2"],"alert":["78.2","127.7"],"大家好啊":["78.2"],"方法名":["78.3"],"千万别忘记添加小括号":["78.3"],"返回一个给定对象自身可枚举属性值的数组":["78.5"],"hasownproperty":["78.5"],"判断一个属性是否是对象自身的属性":["78.5"],"非继承的属性":["78.5"],"configurable":["78.11"],"对象本身没有":["79.2"],"会在原型链上查找并在":["79.2"],"对象上找到该方法":["79.2"],"并允许我们创建灵活和高效的代码结构":["79.4"],"在全局上下文中为":["80.0"],"而不是默认指向全局对象":["80.0"],"启用严格模式的代码在遵循更严格的语法规则后":["80.0"],"更容易发现潜在的错误":["80.0"],"并且在某些情况下可能会有更好的性能":["80.0"],"建议在新的项目中使用严格模式":["80.0"],"并逐步更新现有的代码以适应严格模式":["80.0"],"使用":["81.3","117.3"],"call":["81.3"],"apply":["81.3"],"指向指定的那个对象":["81.3"],"foo":["81.3"],"obj":["81.3"],"此处是obj":["81.4"],"则传":["81.7"],"null":["81.7"],"上方代码中":["81.8"],"继承了":["81.8"],"里面传入的":["81.10"],"实参":["81.10"],"必须是数组":["81.10"],"或者伪数组":["81.10"],"里面传实参时":["81.11"],"需要以数组的形式":["81.11"],"即便是传一个实参":["81.11"],"也需要传数组":["81.11"],"中元素的最小值":["81.12"],"由指定":["81.14"],"和指定实参的":["81.14"],"原函数拷贝":["81.14"],"可以看出":["81.14"],"方法是有返回值的":["81.14"],"对响应错误做点什么":["83.4"],"config":["83.5"],"网络错误":["84.1"],"跨域请求是否需要携带":["84.2"],"cookie":["84.2"],"请求配置":["84.3"],"error":["84.3","88.7","108.14"],"promise":["84.3","84.4","96.11"],"版本不受支持":["84.4"],"异常问题":["84.4"],"请联系管理员":["84.4"],"headers":["84.5"],"signheader":["84.5"],"查看局部配置":["85.1"],"file2":["85.5"],"filename":["85.6"],"比较两个分支指定文件的差异":["85.7"],"分支1":["85.7"],"分支2":["85.7"],"记录和作者":["85.8"],"blame":["85.8"],"b":["85.10","89.4","106.4"],"工作区和暂存区所有文件恢复成和指定版本一样":["85.15"],"版本号":["85.15"],"head":["85.16"],"rename":["85.18"],"旧名":["85.18"],"新名":["85.18"],"force":["85.21","107.18","109.0"],"ssh目录下":["86.4"],"octal":["87.2"],"0o744":["87.2"],"八进制s":["87.2"],"返回的是一个":["87.3"],"y":["87.5","128.2"],"boolean":["87.5"],"no":["87.6"],"yes":["87.6"],"不能":["87.8"],"赋予":["87.8"],"while":["87.10"],"aaa":["87.11"],"male":["87.13"],"abcd":["87.14"],"更像面向对象编程的语法而已":["88.0"],"我叫zs":["88.1"],"我18了":["88.1"],"可以调用从父中继承得到的方法":["88.2"],"受保护":["88.6"],"及其子类中访问":["88.6"],"peter":["88.7"],"sayyyy":["88.8"],"aa":["88.8","90.2"],"可以使用this调用":["88.8"],"e":["88.10","107.21","107.22"],"f":["88.10"],"我的名字是zs":["88.11"],"年龄是7":["88.11"],"zs":["89.2","92.3","93.1"],"c":["89.4","92.5"],"bb":["90.2"],"因为只有一个参数t":["90.3"],"tofixed":["90.4"],"张麻子":["90.5"],"number没有length属性":["90.7"],"ts文件会先编译为js文件":["91.2"],"有强大的代码类型提示":["91.3"],"true为开启严格模式":["91.7"],"false为关闭":["91.7"],"启动文件名":["91.10"],"zhangsan":["92.1"],"hello":["92.4","137.2"],"字面量模式虽然可以赋值任意类型":["93.1"],"但是赋完值之后":["93.1"],"这个对象类型是没有办法去做一个修改的":["93.1"],"如果给它增加一个age属性":["93.1"],"它是没有办法去做增加的":["93.1"],"无法对这个变量的进行任何赋值的一个操作":["93.1"],"生成单个":["94.0"],"soucemaps":["94.0"],"而不是将":["94.0"],"sourcemaps":["94.0"],"生成不同的文件":["94.0"],"inlinesources":["94.0"],"将代码与":["94.0"],"生成到一个文件中":["94.0"],"要求同时设置了":["94.0"],"属性":["94.0"],"其他选项":["94.0"],"experimentaldecorators":["94.0"],"启用装饰器":["94.0"],"emitdecoratormetadata":["94.0"],"为装饰器提供元数据的支持":["94.0"],"变量s的值":["95.2"],"只能是上面value定义的值":["95.2"],"axios":["96.2","96.10"],"echarts":["96.2"],"等技术栈":["96.2"],"安装全部依赖":["96.4"],"安装完依赖运行程序":["96.4"],"run":["96.4","112.2"],"代码在ecmascript模块中":["96.6"],"eslint支持使用第三方插件":["96.6"],"在使用插件之前":["96.6"],"您必须使用npm安装它":["96.6"],"该eslint":["96.6"],"前缀可以从插件名称被省略":["96.6"],"plugins":["96.6"],"eslint规则":["96.6"],"rules":["96.6"],"object":["96.8"],"keys":["96.8"],"foreach":["96.8"],"在入口文件引入":["96.8"],"通过":["96.8"],"use":["96.8"],"方法安装自定义插件":["96.8"],"gloablcomponent":["96.8"],"less":["96.9"],"后面的":["96.9"],"不要忘记":["96.9"],"不然会报错":["96.9"],"配置完毕你会发现":["96.9"],"提供这些全局变量可以在组件样式中使用了":["96.9"],"没有返回失败的信息":["96.10"],"获取用户信息失败":["96.10"],"安装":["96.10"],"最后通过":["96.10"],"测试接口":["96.10"],"无网络":["96.11"],"type":["96.11"],"reqlogout":["96.12"],"last":["97.0"],"运行nginx":["97.1"],"desc":["98.1"],"显示表的结构":["98.1"],"从表中删除数据":["98.2"],"grants":["98.3"],"for":["98.3"],"显示用户的权限":["98.3"],"073":["99.1"],"03":["99.4"],"根据数据的特性和需求":["99.5"],"选择适当的数据类型是非常重要的":["99.5"],"数据查询和分析":["100.0"],"数据库提供了强大的查询语言和工具":["100.0"],"使用户能够轻松地执行复杂的数据查询和分析操作":["100.0"],"workbench":["100.1","102.1"],"以及各种编程语言的mysql连接器":["100.1"],"无论是小型应用程序还是大型企业级系统":["100.1"],"mysql都是一个可靠和优秀的选择":["100.1"],"输入服务器名称":["102.1"],"用户名和密码进行连接":["102.1"],"替换为您希望创建的数据库的名称":["102.2"],"等替换为表的列名和相应的数据类型":["102.4"],"等替换为要插入的值":["102.5"],"替换为检索条件":["102.6"],"替换为更新条件":["102.7"],"替换为删除条件":["102.8"],"stringify":["103.4"],"err":["103.4","106.9","108.14"],"throw":["103.4"],"arr":["103.4"],"文件保存成功":["103.4"],"p616779645":["103.6"],"触不可及":["103.6"],"intouchables":["103.6"],"p1454261925":["103.6"],"当幸福来敲门":["103.6"],"pursuit":["103.6"],"happyness":["103.6"],"p2614359276":["103.6"],"龙猫":["103.6"],"となりのトトロ":["103.6"],"p2540924496":["103.6"],"server":["104.2","104.7"],"running":["104.2","104.7","106.16","106.17"],"at":["104.2","104.7","106.16","106.17"],"logo":["104.3"],"png":["104.3"],"encoded":["104.8"],"extended":["104.8"],"第三方中间件":["104.8"],"ie10":["104.11"],"chrome4":["104.11"],"firefox3":["104.11"],"text":["104.14"],"plain":["104.14"],"服务器成功响应预检请求后":["104.15"],"才会发送真正的请求":["104.15"],"并且携带真实数据":["104.15"],"接口项目":["105.1"],"读写和操作数据库":["105.1"],"创建实用的命令行工具辅助前端开发":["105.1"],"网络操作":["105.2"],"线程池里的任务是通过队列和事件循环的机制来执行":["105.2"],"追加和读取":["106.1"],"jpg":["106.3"],"文件写入成功":["106.3"],"pipe":["106.4"],"可以将可读流中的内容":["106.4"],"直接输出到可写流中":["106.4"],"写入成功":["106.6"],"关闭流":["106.7"],"buf":["106.8"],"将":["106.8"],"数据转为字符串":["106.8"],"function":["106.9"],"data":["106.9"],"0xaa":["106.10"],"buf3":["106.10"],"allocunsafe":["106.10"],"如使用何种语法格式引用模块和向外暴露成员":["107.2"],"指向的对象为准":["107.7"],"若失败则报错":["107.13"],"可以从npm":["107.15"],"官网中搜索自己所需要的包":["107.15"],"要快的":["107.16"],"检查镜像源是否下载成功":["107.17"],"删除":["107.18"],"unpublish":["107.18"],"加载失败":["107.21"],"终端报错":["107.21"],"cannot":["107.23"],"find":["107.23"],"module":["107.23"],"xxx":["107.23"],"使用标记删除的形式":["108.3"],"模拟删除的动作":["108.3"],"即在表中设置状态字段":["108.3"],"标记当前的数据是否被删除":["108.3"],"status":["108.3"],"服务器需要完成页面内容的拼接":["108.5"],"若请求比较多":["108.5"],"会对服务器造成一定访问压力":["108.5"],"不利于前后端分离":["108.5"],"开发效率低":["108.5"],"技术能解决":["108.6"],"问题":["108.6"],"其他页面前后端分离的开发模式":["108.7"],"logout":["108.11"],"清空当前客户端的session信息":["108.11"],"destroy":["108.11"],"请求头":["108.13"],"authorization":["108.13"],"字段中":["108.13"],"加上":["108.13"],"bearer":["108.13"],"前缀":["108.13"],"next":["108.14"],"unauthorizederror":["108.14"],"invalid":["108.14"],"unknown":["108.14"],"search":["109.0"],"keyword":["109.0"],"清除缓存并重装依赖项":["109.0"],"并使用其他人已经创建的模块":["110.1"],"的版本号":["110.2"],"则说明已成功安装":["110.2"],"获取有关指定包的信息":["110.3"],"这只是一小部分常用的":["110.3"],"提供了更多的命令和选项":["110.3"],"可以根据需要进行学习和使用":["110.3"],"你可以添加依赖项":["110.4"],"配置脚本":["110.4"],"指定项目的许可证等":["110.4"],"文件中的配置自动下载和安装所需的包":["110.5"],"并确保提供清晰的文档":["110.6"],"合适的版本管理和高质量的代码":["110.6"],"并注册一个账号":["111.1"],"使用方法和示例代码":["111.4"],"上搜索你的包":["111.5"],"并查看它的页面":["111.5"],"publish":["111.6"],"到你的计算机上":["112.1"],"是你要运行的脚本命令的名称":["112.2"],"可以让开发人员创造出各种视觉效果":["113.1"],"上放置和移动元素":["113.3"],"文本":["113.4"],"图片等元素":["113.4"],"来动态地生成绘图元素":["113.5"],"从而实现更加复杂和丰富的视觉效果":["113.5"],"和库集成":["113.6"],"以创造更加丰富和定制化的用户体验":["113.6"],"的动画效果在各种设备与浏览器上都表现良好":["113.7"],"是非常适合移动设备和桌面浏览器上创建动态效果的途径":["113.7"],"的渲染速度可能会变慢":["113.8"],"取消前面的图像变换":["114.0"],"需要使用":["114.1"],"translate":["114.1"],"方法移动画布":["114.1"],"上面代码会显示一个水平倒转的":["114.2"],"高度放大":["114.2"],"倍的":["114.2"],"负向缩放本质是坐标翻转":["114.2"],"所针对的坐标轴就是画布左上角原点的坐标轴":["114.2"],"移动到":["114.4"],"多个":["114.4"],"方法具有叠加效果":["114.4"],"所以第二个矩形的左上角回到":["114.5"],"可以得到不同的效果":["115.0"],"fillrect":["116.1","117.4"],"closepath":["116.2"],"闭合路径之后图形绘制命令又重新指向到上下文中":["116.2"],"不是必需的":["116.2"],"stroke":["117.1","120.1","120.2"],"线条的宽度为":["117.1"],"线条的末端和交点都改成圆角":["117.1"],"并且设置为虚线":["117.1"],"white":["117.2"],"生成辐射样式以后":["117.2"],"用这个样式填充一个矩形":["117.2"],"图像加载成功以后":["117.3"],"生成图像样式":["117.3"],"然后使用这个样式填充指定区域":["117.3"],"第五个参数是半径":["119.3"],"与":["119.3"],"形成一条直线":["119.3"],"形成第二条直线":["119.3"],"弧线就是与这两根直线相切的部分":["119.3"],"arc":["119.6"],"math":["119.6"],"pi":["119.6"],"二等奖":["121.2"],"三等奖":["121.2"],"requestanimationframe":["122.3"],"href":["124.3"],"改变颜色":["124.3"],"onchange":["124.3"],"strokestyle":["124.3"],"destination":["124.3"],"out":["124.3"],"clearrect":["124.3"],"width":["124.4"],"height":["124.4"],"帮助读者快速上手这个强大的库":["127.1"],"锚点":["128.2"],"如旋转":["128.2"],"位移的基点":["128.2"],"x":["128.2"],"也是从左上角开始计算":["128.2"],"将矩形添加到舞台":["128.2"],"stage":["128.2","129.1","129.2","131.1","132.3","133.2","133.3","133.4","133.5","135.1","135.2"],"addchild":["128.2","129.1","129.2","131.1","132.3","133.1","133.2","133.3","133.4","133.5"],"set":["129.1","131.1"],"将文字添加到舞台":["129.1"],"anchor":["131.1"],"将精灵添加到舞台":["131.1","132.3"],"sprite":["131.3"],"view":["132.1"],"any":["132.1"],"app":["133.5"],"sprite2":["135.1","135.2"],"创建精灵2":["135.2"],"150px":["136.1"],"这点和":["136.1"],"canvas":["136.1"],"是一样的":["136.1"],"000000":["136.7"],"pnpm":["137.1"],"echo":["137.2"],"比如你在":["137.9"],"下创建一个":["137.9"],"notes":["137.9"],"文件夹":["137.9"],"那么它的路径就是":["137.9"],"about2":["137.10"],"的分支":["137.11"],"这个分支存放着就是打包好的代码":["137.11"],"settings":["137.11"],"会有一个地址":["137.11"],"这个地址就是部署之后的地址了":["137.11"],"这个项目是实时更新的不需要你重新部署操作":["137.11"],"你要做的就是更新你的":["137.11"],"分支即可":["137.11"]}]'},e={"0.0":{t:"# 关于作者\r",p:`qq:2357490894
微信: !img
`,l:"about/index.html",a:"关于作者"},"1.0":{t:"# 算法\r",p:"\r",l:"algorithms/demo1.html",a:"算法"},"1.1":{t:"123",p:"",l:"algorithms/demo1.html#_123",a:"_123"},"2.0":{t:"# demo2",p:"",l:"algorithms/demo2.html",a:"demo2"},"3.0":{t:"# demo3",p:"",l:"algorithms/demo3.html",a:"demo3"},"4.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"algorithms/index.html",a:"该内容正在努力建设中"},"5.0":{t:"# ECMAScript 的介绍\r",p:"\r",l:"ECMAScript/es6/index.html",a:"ecmascript-的介绍"},"5.1":{t:"ES6 入门教程\r",p:`阮一峰ECMAScript 6 入门
`,l:"ECMAScript/es6/index.html#es6-入门教程",a:"es6-入门教程"},"5.2":{t:"ECMAScript 简介\r",p:`
ECMAScript（简称 ES）是一种由 ECMA 国际（European Computer Manufacturers Association）制定和维护的脚本语言标准。它是 JavaScrip ...`,l:"ECMAScript/es6/index.html#ecmascript-简介",a:"ecmascript-简介"},"5.3":{t:"ECMAScript 与 JavaScript 的关系？\r",p:`
ECMAScript 简称 ES。ES 是一个脚本语言。注意，是 ES 也是脚本语言。
ES 通常可以看作是 JavaScript 的标准化规范。
ES 只提供了最基本的语法。如：怎样定义变量和函数 ...`,l:"ECMAScript/es6/index.html#ecmascript-与-javascript-的关系",a:"ecmascript-与-javascript-的关系"},"5.4":{t:"ECMAScript 版本发布记录\r",p:`以下是每个 ECMAScript 版本的主要内容概述：


ECMAScript 1 (ES1) - 1997:

第一个 ECMAScript 版本，定义了基本的语法和数据类型，包括变量、操作符、函 ...`,l:"ECMAScript/es6/index.html#ecmascript-版本发布记录",a:"ecmascript-版本发布记录"},"6.0":{t:"# 模板字符串\r",p:"ES6 引入了模板字符串（Template Strings），也被称为模板字面量，是一种方便拼接字符串的新语法。模板字符串使用反引号（`）来包裹字符串，并允许在字符串中插入变量、表达式和多行文本。\n",l:"ECMAScript/es6/模板字符串.html",a:"模板字符串"},"6.1":{t:"字符串插值\r",p:"使用${}来在模板字符串中插入变量或表达式，其中${}中的内容会被解析并替换为实际的值。\nconst name = 'John'\nconst age = 30\nconst message = `Hel ...",l:"ECMAScript/es6/模板字符串.html#字符串插值",a:"字符串插值"},"6.2":{t:"多行字符串\r",p:`使用模板字符串可以很方便地创建多行文本，不需要使用\\n来手动添加换行符。
const multiLineText = \`
  This is a multi-line text.
  It spans ...`,l:"ECMAScript/es6/模板字符串.html#多行字符串",a:"多行字符串"},"6.3":{t:"嵌套模板字符串\r",p:"模板字符串可以嵌套在其他模板字符串中，使得字符串拼接更加灵活。\nconst name = 'Alice'\nconst greeting = `Hello, ${`my name is ${name}` ...",l:"ECMAScript/es6/模板字符串.html#嵌套模板字符串",a:"嵌套模板字符串"},"6.4":{t:"带标签的模板字符串\r",p:`可以在模板字符串前添加一个标签函数，这个标签函数将模板字符串的各个部分解析成多个参数，使得我们可以对字符串进行自定义处理。
function tagFunc(strings, ...values) { ...`,l:"ECMAScript/es6/模板字符串.html#带标签的模板字符串",a:"带标签的模板字符串"},"7.0":{t:"# 箭头函数\r",p:`ES6 引入了箭头函数（Arrow Functions），是一种更简洁和灵活的函数定义方式。箭头函数通常与其他 ES6 特性（如解构赋值、模板字符串等）结合使用，使得代码更加现代化和易读。
`,l:"ECMAScript/es6/箭头函数.html",a:"箭头函数"},"7.1":{t:"基本语法\r",p:`箭头函数的基本语法如下：
const functionName = (parameter1, parameter2, ...) =&gt; {
  // 函数体
  return result;
}; ...`,l:"ECMAScript/es6/箭头函数.html#基本语法",a:"基本语法"},"7.2":{t:"没有参数或多个参数\r",p:`当箭头函数没有参数或有多个参数时，需要使用括号来表示参数列表。
// 没有参数
const greet = () =&gt; console.log('Hello!')
greet() // 输出：H ...`,l:"ECMAScript/es6/箭头函数.html#没有参数或多个参数",a:"没有参数或多个参数"},"7.3":{t:"箭头函数与 this\r",p:`箭头函数与传统函数有一个重要的区别：箭头函数没有自己的this，它继承自外层作用域的this。
在传统函数中，this的值是在函数调用时动态确定的，取决于调用方式（比如函数是否作为对象的方法调用、是否 ...`,l:"ECMAScript/es6/箭头函数.html#箭头函数与-this",a:"箭头函数与-this"},"7.4":{t:"使用注意事项\r",p:`
如果箭头函数只有一个参数，可以省略参数列表的括号。
如果箭头函数的函数体为空或只有一个表达式，可以省略花括号和return关键字。
避免在对象方法中使用箭头函数，因为箭头函数会继承外层作用域的thi ...`,l:"ECMAScript/es6/箭头函数.html#使用注意事项",a:"使用注意事项"},"8.0":{t:"# 解构赋值\r",p:`ES6 引入了解构赋值（Destructuring Assignment），是一种从数组或对象中提取值并赋给变量的语法，使得在处理数据时更加方便和简洁。
当使用解构赋值时，我们可以从数组或对象中提取数 ...`,l:"ECMAScript/es6/解构赋值.html",a:"解构赋值"},"8.1":{t:"数组解构赋值\r",p:`数组解构赋值允许我们根据数组的顺序，将数组的元素提取出来并赋值给变量。
`,l:"ECMAScript/es6/解构赋值.html#数组解构赋值",a:"数组解构赋值"},"8.2":{t:"基本用法\r",p:`const numbers = [1, 2, 3, 4, 5]

const [a, b, c, d, e] = numbers

console.log(a) // 1
console.log(b) ...`,l:"ECMAScript/es6/解构赋值.html#基本用法",a:"基本用法"},"8.3":{t:"忽略不需要的元素\r",p:`我们可以使用逗号将不需要的元素跳过。
const numbers = [1, 2, 3, 4, 5]

const [a, , c, , e] = numbers

console.log(a) // ...`,l:"ECMAScript/es6/解构赋值.html#忽略不需要的元素",a:"忽略不需要的元素"},"8.4":{t:"给变量指定默认值\r",p:`如果数组元素不足以匹配变量的个数，可以为变量指定默认值，避免出现undefined。
const numbers = [1, 2]

const [a, b, c = 3] = numbers

co ...`,l:"ECMAScript/es6/解构赋值.html#给变量指定默认值",a:"给变量指定默认值"},"8.5":{t:"剩余元素\r",p:`使用...语法可以将剩余的数组元素赋值给一个新数组。
const numbers = [1, 2, 3, 4, 5]

const [a, b, ...rest] = numbers

console ...`,l:"ECMAScript/es6/解构赋值.html#剩余元素",a:"剩余元素"},"8.6":{t:"交换变量的值\r",p:`使用解构赋值，可以非常简洁地交换两个变量的值，无需使用第三个变量。
let x = 10
let y = 20

;[x, y] = [y, x]  // 前面必须要加分号

console.log( ...`,l:"ECMAScript/es6/解构赋值.html#交换变量的值",a:"交换变量的值"},"8.7":{t:"对象解构赋值\r",p:`对象解构赋值允许我们根据对象的属性名，将对象的属性值提取出来并赋值给变量。
`,l:"ECMAScript/es6/解构赋值.html#对象解构赋值",a:"对象解构赋值"},"8.8":{t:"基本用法\r",p:`const person = {
  name: 'John',
  age: 30,
  country: 'USA'
}

const { name, age, country } = perso ...`,l:"ECMAScript/es6/解构赋值.html#基本用法",a:"基本用法"},"8.9":{t:"重命名变量\r",p:`我们可以通过在解构时为变量指定新的名称，来实现重命名。
const person = {
  fullName: 'John Doe',
  yearsOld: 30
}

const { fullN ...`,l:"ECMAScript/es6/解构赋值.html#重命名变量",a:"重命名变量"},"8.10":{t:"给变量指定默认值\r",p:`和数组解构一样，可以为对象解构赋值时，为变量指定默认值。
const person = {
  name: 'Alice',
  age: 25
}

const { name, age, count ...`,l:"ECMAScript/es6/解构赋值.html#给变量指定默认值",a:"给变量指定默认值"},"8.11":{t:"嵌套解构\r",p:`对象解构也支持嵌套解构，从嵌套对象中提取值。
const person = {
  name: 'Bob',
  age: 28,
  address: {
    city: 'New York', ...`,l:"ECMAScript/es6/解构赋值.html#嵌套解构",a:"嵌套解构"},"9.0":{t:"# es7",p:"",l:"ECMAScript/es7.html",a:"es7"},"10.0":{t:"# CSS 选择器\r",p:"\r",l:"frontEnd/css3/base/css选择器.html",a:"css-选择器"},"10.1":{t:"通配符选择器\r",p:`
选择页面所有元素
用于清除内外边距

* {
  padding: 0;
  margin: 0;
}

`,l:"frontEnd/css3/base/css选择器.html#通配符选择器",a:"通配符选择器"},"10.2":{t:"元素选择器\r",p:`
通过标签名选择元素
优点：可快速为同类型标签统一设置样式
缺点：不能涉及差异化样式，只能选择全部标签

h1 {
  color: #ccc;
}

`,l:"frontEnd/css3/base/css选择器.html#元素选择器",a:"元素选择器"},"10.3":{t:"类选择器\r",p:`
通过类名选择元素

.container {
  color: pink;
}

`,l:"frontEnd/css3/base/css选择器.html#类选择器",a:"类选择器"},"10.4":{t:"id 选择器\r",p:`
通过元素 id 属性选择元素

#md {
  font-weight: 600;
}

`,l:"frontEnd/css3/base/css选择器.html#id-选择器",a:"id-选择器"},"10.5":{t:"交集选择器\r",p:`&lt;p class=&quot;good&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;good beaauty&quot;&gt;&lt;/p&gt;

/* 语法 ...`,l:"frontEnd/css3/base/css选择器.html#交集选择器",a:"交集选择器"},"10.6":{t:"并集选择器\r",p:`
作用：选中多个选择器对应的元素，又称：分组选择器
语法：选择器1, 选择器2, 选择器3,... 选择器 n {}

h1,
h2,
h3 {
  text-align: center;
}

`,l:"frontEnd/css3/base/css选择器.html#并集选择器",a:"并集选择器"},"10.7":{t:"后代选择器\r",p:`
在所有后代节点中选

ul li {
  color: blue;
}

`,l:"frontEnd/css3/base/css选择器.html#后代选择器",a:"后代选择器"},"10.8":{t:"子选择器\r",p:`
只在亲儿子中选

div &gt; a {
  color: green;
}

`,l:"frontEnd/css3/base/css选择器.html#子选择器",a:"子选择器"},"10.9":{t:"兄弟选择器\r",p:`
选择所有指定元素的相邻后一个兄弟节点

&lt;h1&gt;h1-2&lt;/h1&gt;
&lt;p&gt;p0 被选中&lt;/p&gt;
&lt;div class=&quot;contain ...`,l:"frontEnd/css3/base/css选择器.html#兄弟选择器",a:"兄弟选择器"},"10.10":{t:"伪类选择器\r",p:`
根据元素状态或所处 DOM 结构选择元素

`,l:"frontEnd/css3/base/css选择器.html#伪类选择器",a:"伪类选择器"},"10.11":{t:"动态伪类选择器\r",p:`按这个顺序声明
a:link 链接一开始的样式
a:visited 链接访问后的样式
a:hover 光标经过链接的样式
a:active 链接被按下时的样式

:focus 用于选择获取焦点的表单元 ...`,l:"frontEnd/css3/base/css选择器.html#动态伪类选择器",a:"动态伪类选择器"},"10.12":{t:"结构伪类选择器(C3)\r",p:`


选择符
含义




E:first-child
第一个子元素 E


E:last-child
最后一个子元素 E


E:nth-child(n)
第 n 个子元素 E


E:first- ...`,l:"frontEnd/css3/base/css选择器.html#结构伪类选择器-c3",a:"结构伪类选择器-c3"},"10.13":{t:"属性选择器(C3)\r",p:`


选择符
含义




E[att]
选择具有 att 属性的 E 元素


E[att=&quot;val&quot;]
选择具有 att 属性且属性值等于 val 的 E 元素


E[att ...`,l:"frontEnd/css3/base/css选择器.html#属性选择器-c3",a:"属性选择器-c3"},"10.14":{t:"伪元素选择器(C3)\r",p:`
伪元素选择器利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构
before 和 after 创建了一个行内元素，在 DOM 树中无法找到，故为伪元素
必须有 cont ...`,l:"frontEnd/css3/base/css选择器.html#伪元素选择器-c3",a:"伪元素选择器-c3"},"10.15":{t:"相关链接\r",p:`一篇搞清伪类和伪元素
`,l:"frontEnd/css3/base/css选择器.html#相关链接",a:"相关链接"},"11.0":{t:"# Flex 布局 - 灵活的网页布局解决方案\r",p:"Flex 布局（也称为弹性盒子布局）是一种用于创建灵活、自适应的网页布局的 CSS 工具。它通过在父元素上设置display: flex，将子元素定义为弹性项目，使它们能够在主轴和交叉轴上灵活布局。F ...",l:"frontEnd/css3/base/flex.html",a:"flex-布局-灵活的网页布局解决方案"},"11.1":{t:"如何启用 Flex 布局？\r",p:`要启用 Flex 布局，只需在要成为 Flex 容器的父元素上设置display: flex即可：
.container {
  display: flex;
}

一旦容器成为 Flex 容器，其中 ...`,l:"frontEnd/css3/base/flex.html#如何启用-flex-布局",a:"如何启用-flex-布局"},"11.2":{t:"主轴和交叉轴\r",p:`Flex 布局具有一个主轴和一个交叉轴。默认情况下，主轴是水平方向，交叉轴是垂直方向。可以使用flex-direction属性更改主轴方向。
flex-direction 决定 Flex 项目的排列方 ...`,l:"frontEnd/css3/base/flex.html#主轴和交叉轴",a:"主轴和交叉轴"},"11.3":{t:"主轴对齐与交叉轴对齐\r",p:`可以使用justify-content属性控制主轴上的对齐方式，align-items属性控制交叉轴上的对齐方式。
justify-content 定义 Flex 项目在主轴上的对齐方式：

flex ...`,l:"frontEnd/css3/base/flex.html#主轴对齐与交叉轴对齐",a:"主轴对齐与交叉轴对齐"},"11.4":{t:"换行与排列\r",p:`默认情况下，Flex 项目会在一行中排列，如果项目超出了容器的宽度，它们会缩小以适应。可以使用flex-wrap属性来控制项目是否换行。
flex-wrap 指定 Flex 项目是否换行。

nowr ...`,l:"frontEnd/css3/base/flex.html#换行与排列",a:"换行与排列"},"11.5":{t:"flex-flow\r",p:`是flex-direction和flex-wrap的缩写。
.container {
  display: flex;
  flex-flow: row wrap; /* 水平排列，允许换行 */
} ...`,l:"frontEnd/css3/base/flex.html#flex-flow",a:"flex-flow"},"11.6":{t:"弹性增长与缩小\r",p:`
使用flex-grow属性可以控制项目在剩余空间中的放大比例
使用flex-shrink属性可以控制项目在空间不足时的缩小比例。

.item {
  flex-grow: 1; /* 弹性增长因子 ...`,l:"frontEnd/css3/base/flex.html#弹性增长与缩小",a:"弹性增长与缩小"},"11.7":{t:"弹性基准值\r",p:`flex-basis属性定义了项目的基准尺寸，如果没有设置宽度或高度，则会参考该值进行布局：
.item {
  flex-basis: 200px; /* 项目的基准宽度为200像素 */
}

`,l:"frontEnd/css3/base/flex.html#弹性基准值",a:"弹性基准值"},"11.8":{t:"嵌套 Flex 容器\r",p:`在 Flex 项目内部可以再创建一个新的 Flex 容器，嵌套的 Flex 容器有自己的主轴和交叉轴：
.container {
  display: flex;
  .inner-container ...`,l:"frontEnd/css3/base/flex.html#嵌套-flex-容器",a:"嵌套-flex-容器"},"11.9":{t:"多行对齐\r",p:`在多行 Flex 容器中，可以使用align-content属性控制交叉轴上多行的对齐方式。
align-content定义多行 Flex 项目在交叉轴上的对齐方式：

flex-start：多行项目 ...`,l:"frontEnd/css3/base/flex.html#多行对齐",a:"多行对齐"},"11.10":{t:"实现常见布局需求\r",p:`Flex 布局非常适合实现常见的网页布局需求，例如：


居中对齐：通过justify-content和align-items属性实现水平和垂直居中对齐。


两端对齐：使用justify-conte ...`,l:"frontEnd/css3/base/flex.html#实现常见布局需求",a:"实现常见布局需求"},"12.0":{t:"# Grid 布局：现代网页布局的终极解决方案\r",p:"\r",l:"frontEnd/css3/base/grid.html",a:"grid-布局-现代网页布局的终极解决方案"},"12.1":{t:"1. 理解 Grid 布局\r",p:"Grid 布局是一种二维布局模型，可以将网页划分为网格，其中包含了行（rows）和列（columns）。通过将网格容器（Grid Container）分割为网格单元格（Grid Cells），开发者可 ...",l:"frontEnd/css3/base/grid.html#_1-理解-grid-布局",a:"_1-理解-grid-布局"},"12.2":{t:"1.1 网格容器与网格项\r",p:`要使用 Grid 布局，首先需要将一个 HTML 元素定义为网格容器。我们可以通过设置 display: grid; 来实现：
.grid-container {
  display: grid;
} ...`,l:"frontEnd/css3/base/grid.html#_1-1-网格容器与网格项",a:"_1-1-网格容器与网格项"},"12.3":{t:"1.2 行与列\r",p:"Grid 布局的核心是行和列，通过定义网格的行和列，我们可以创造出复杂的网页布局。在网格容器中，通过 grid-template-columns 和 grid-template-rows 属性来定义列 ...",l:"frontEnd/css3/base/grid.html#_1-2-行与列",a:"_1-2-行与列"},"12.4":{t:"1.3 网格线与网格跨度\r",p:`在 Grid 布局中，网格线（Grid Lines）是定义网格单元格边界的线条。水平的网格线定义了行，而垂直的网格线定义了列。我们可以通过指定网格线的名称或索引来定位网格项。
网格跨度（Grid Sp ...`,l:"frontEnd/css3/base/grid.html#_1-3-网格线与网格跨度",a:"_1-3-网格线与网格跨度"},"12.5":{t:"2. Grid 布局的属性详解\r",p:`Grid 布局提供了一系列强大的属性，用于更精确地控制网页布局。以下是一些常用的 Grid 属性：
`,l:"frontEnd/css3/base/grid.html#_2-grid-布局的属性详解",a:"_2-grid-布局的属性详解"},"12.6":{t:"2.1 `grid-template-columns` 和 `grid-template-rows`\r",p:"grid-template-columns 和 grid-template-rows 用于定义网格的列和行的大小和结构。可以指定固定大小（如像素、百分比等），也可以使用 fr 单位表示可用空间的比例分 ...",l:"frontEnd/css3/base/grid.html#_2-1-grid-template-columns-和-grid-template-rows",a:"_2-1-grid-template-columns-和-grid-template-rows"},"12.7":{t:"2.2 `grid-template-areas`\r",p:`grid-template-areas 允许通过指定网格区域的名称来创建更具语义的布局。通过在网格容器中使用网格区域名称，而不是使用行和列属性，可以更清晰地定义布局结构。
.grid-containe ...`,l:"frontEnd/css3/base/grid.html#_2-2-grid-template-areas",a:"_2-2-grid-template-areas"},"12.8":{t:"2.3 `grid-template`\r",p:"grid-template 是 grid-template-columns、grid-template-rows 和 grid-template-areas 的缩写属性。可以通过一个属性同时定义列、行 ...",l:"frontEnd/css3/base/grid.html#_2-3-grid-template",a:"_2-3-grid-template"},"12.9":{t:"2.4 `grid-gap`\r",p:`grid-gap 定义网格项之间的间隔（行和列之间的间距）。可以使用两个值表示行和列的间隔。
.grid-container {
  display: grid;
  grid-gap: 10px 2 ...`,l:"frontEnd/css3/base/grid.html#_2-4-grid-gap",a:"_2-4-grid-gap"},"12.10":{t:"2.5 `grid-column-gap` 和 `grid-row-gap`\r",p:`grid-column-gap 和 grid-row-gap 分别定义网格列和行之间的间隔。与 grid-gap 类似，但允许分别指定列和行的间隔。
.grid-container {
  displ ...`,l:"frontEnd/css3/base/grid.html#_2-5-grid-column-gap-和-grid-row-gap",a:"_2-5-grid-column-gap-和-grid-row-gap"},"12.11":{t:"2.6 `grid-auto-columns` 和 `grid-auto-rows`\r",p:`grid-auto-columns 和 grid-auto-rows 定义了当网格容器中的网格项目无法放入先前定义的网格轨道时，自动创建的额外列和行的大小。可以指定固定大小或使用 fr 单位。
.gr ...`,l:"frontEnd/css3/base/grid.html#_2-6-grid-auto-columns-和-grid-auto-rows",a:"_2-6-grid-auto-columns-和-grid-auto-rows"},"12.12":{t:"2.7 `grid-auto-flow`\r",p:`grid-auto-flow 定义了当网格项目无法放入先前定义的网格轨道时，如何自动创建额外的网格项目。默认值是 row，表示按照行进行放置，也可以设置为 column。
.grid-containe ...`,l:"frontEnd/css3/base/grid.html#_2-7-grid-auto-flow",a:"_2-7-grid-auto-flow"},"12.13":{t:"2.8 `justify-items` 和 `align-items`\r",p:`justify-items 和 align-items 用于在网格项目中定义对齐方式。justify-items 控制项目在列轴上的对齐方式，align-items 控制项目在行轴上的对齐方式。
.g ...`,l:"frontEnd/css3/base/grid.html#_2-8-justify-items-和-align-items",a:"_2-8-justify-items-和-align-items"},"12.14":{t:"2.9 `justify-content` 和 `align-content`\r",p:"justify-content 和 align-content 用于定义网格项目在网格容器内部的对齐方式。justify-content 控制网格项目在列轴上的对齐方式，align-content 控 ...",l:"frontEnd/css3/base/grid.html#_2-9-justify-content-和-align-content",a:"_2-9-justify-content-和-align-content"},"12.15":{t:"2.10 `justify-self` 和 `align-self`\r",p:"justify-self 和 align-self 用于定义单个网格项目自身在网格单元格中的对齐方式。justify-self 控制项目在列轴上的对齐方式，align-self 控制项目在行轴上的对齐 ...",l:"frontEnd/css3/base/grid.html#_2-10-justify-self-和-align-self",a:"_2-10-justify-self-和-align-self"},"12.16":{t:"2.11 `grid-column` 和 `grid-row`\r",p:`grid-column 和 grid-row 用于将网格项目放置在指定的列和行位置。可以使用数字、span 关键字、网格线名称或 auto 值来指定位置。
.grid-item {
  grid-co ...`,l:"frontEnd/css3/base/grid.html#_2-11-grid-column-和-grid-row",a:"_2-11-grid-column-和-grid-row"},"12.17":{t:"3. 创建网格布局\r",p:`使用 Grid 布局，我们可以创建灵活且复杂的网页布局。了解如何创建网格布局对于掌握 Grid 布局至关重要。
`,l:"frontEnd/css3/base/grid.html#_3-创建网格布局",a:"_3-创建网格布局"},"12.18":{t:"3.1 网格轨道的大小和增长\r",p:`网格轨道（Grid Track）是相邻网格线之间的空间，包括行轨道和列轨道。我们可以通过设置网格轨道的大小和增长方式来控制网格布局。
.grid-container {
  display: grid ...`,l:"frontEnd/css3/base/grid.html#_3-1-网格轨道的大小和增长",a:"_3-1-网格轨道的大小和增长"},"12.19":{t:"3.2 网格模板的定义\r",p:`通过使用网格模板（Grid Template），我们可以更加直观地定义网格布局，使得布局结构更加清晰。
.grid-container {
  display: grid;
  grid-templa ...`,l:"frontEnd/css3/base/grid.html#_3-2-网格模板的定义",a:"_3-2-网格模板的定义"},"12.20":{t:"3.3 响应式设计与媒体查询\r",p:`Grid 布局与响应式设计完美结合，通过使用媒体查询（Media Queries），我们可以在不同的屏幕尺寸和设备上应用不同的网格布局。
.grid-container {
  display: gr ...`,l:"frontEnd/css3/base/grid.html#_3-3-响应式设计与媒体查询",a:"_3-3-响应式设计与媒体查询"},"12.21":{t:"4. Grid 布局的实际应用\r",p:`Grid 布局在实际应用中非常强大，可以用于创建各种复杂的网页布局。
`,l:"frontEnd/css3/base/grid.html#_4-grid-布局的实际应用",a:"_4-grid-布局的实际应用"},"12.22":{t:"4.1 简单网页布局\r",p:`Grid 布局可以用于创建简单的网页布局，如标题、导航栏和内容区域。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head ...`,l:"frontEnd/css3/base/grid.html#_4-1-简单网页布局",a:"_4-1-简单网页布局"},"12.23":{t:"4.2 复杂网页布局\r",p:`Grid 布局可以应用于创建复杂的网页布局，如新闻网站的首页布局。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head& ...`,l:"frontEnd/css3/base/grid.html#_4-2-复杂网页布局",a:"_4-2-复杂网页布局"},"12.24":{t:"4.3 布局的嵌套与组合\r",p:`Grid 布局可以嵌套使用，从而创建更加复杂和多样化的布局。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt; ...`,l:"frontEnd/css3/base/grid.html#_4-3-布局的嵌套与组合",a:"_4-3-布局的嵌套与组合"},"12.25":{t:"4.4 网格的动态调整\r",p:`Grid 布局的一个重要特点是网格项目的动态调整。网格项可以根据内容的大小自动调整，也可以通过调整网格容器的大小来实现动态布局。
&lt;!DOCTYPE html&gt;
&lt;html lang ...`,l:"frontEnd/css3/base/grid.html#_4-4-网格的动态调整",a:"_4-4-网格的动态调整"},"12.26":{t:"5. Grid 布局与 Flexbox 的比较\r",p:`Grid 布局和 Flexbox 布局是 CSS 中两种常用的布局模型。它们分别适用于不同的布局需求，并可以结合使用以实现复杂的布局。
`,l:"frontEnd/css3/base/grid.html#_5-grid-布局与-flexbox-的比较",a:"_5-grid-布局与-flexbox-的比较"},"12.27":{t:"5.1 适用场景\r",p:`
Grid 布局：适用于创建二维布局，即同时控制行和列的布局。Grid 布局适用于复杂的网页布局，如主页布局、产品展示页面等。
Flexbox 布局：适用于单一方向的布局，即只控制主轴或交叉轴的布局。 ...`,l:"frontEnd/css3/base/grid.html#_5-1-适用场景",a:"_5-1-适用场景"},"12.28":{t:"5.2 布局的差异与共同点\r",p:`

Grid 布局：可以实现更复杂的布局结构，支持二维布局，可以精确控制网格项的位置和跨度，支持网格区域的命名，更具语义性。


Flexbox 布局：适用于一维布局，支持在主轴上对齐网格项，支持网格 ...`,l:"frontEnd/css3/base/grid.html#_5-2-布局的差异与共同点",a:"_5-2-布局的差异与共同点"},"12.29":{t:"6. 常见问题与最佳实践\r",p:`在使用 Grid 布局时，我们可能会遇到一些常见问题，以下是一些最佳实践和优化建议：
`,l:"frontEnd/css3/base/grid.html#_6-常见问题与最佳实践",a:"_6-常见问题与最佳实践"},"12.30":{t:"6.1 网格项目的排序与定位\r",p:`在 Grid 布局中，网格项的顺序并不一定与它们在 HTML 中的顺序一致。可以使用 order 属性来改变网格项的顺序。
.grid-item:nth-child(3) {
  order: 1;  ...`,l:"frontEnd/css3/base/grid.html#_6-1-网格项目的排序与定位",a:"_6-1-网格项目的排序与定位"},"12.31":{t:"6.2 跨浏览器兼容性\r",p:`虽然 Grid 布局在现代浏览器中得到了很好的支持，但在旧版本的浏览器中可能存在兼容性问题。为了确保网页在不同浏览器中正常显示，可以使用 CSS 前缀或回退方案。
`,l:"frontEnd/css3/base/grid.html#_6-2-跨浏览器兼容性",a:"_6-2-跨浏览器兼容性"},"12.32":{t:"6.3 性能考虑\r",p:"尽管 Grid 布局强大，但在某些情况下可能会对性能产生一定影响。当网页中包含大量网格项和复杂的布局时，可能会导致渲染性能下降。在使用 Grid 布局时，建议合理控制网格项的数量和布局复杂度，以优化网 ...",l:"frontEnd/css3/base/grid.html#_6-3-性能考虑",a:"_6-3-性能考虑"},"12.33":{t:"6.4 最佳实践与优化建议\r",p:`
使用网格模板（grid-template）和网格区域（grid-template-areas）来定义布局，以提高代码的可读性和维护性。
嵌套使用 Grid 布局，实现更复杂的布局需求。
结合 Fle ...`,l:"frontEnd/css3/base/grid.html#_6-4-最佳实践与优化建议",a:"_6-4-最佳实践与优化建议"},"13.0":{t:"# 选择器优先级\r",p:`一般情况下，选择器的优先级为

!important 行内 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器
相同级别的选择器，显示最后面的样式。

`,l:"frontEnd/css3/base/选择器优先级.html",a:"选择器优先级"},"13.1":{t:"CSS 权重\r",p:`::: tip 详细描述

计算方式：每个选择器，都可以算出一组权重，格式为（a,b,c)


格式: (a, b, c)

a: ID 选择器的个数
b: 类、伪类、属性 选择器的个数
c: 元素、 ...`,l:"frontEnd/css3/base/选择器优先级.html#css-权重",a:"css-权重"},"14.0":{t:"# css",p:"",l:"frontEnd/css3/index.html",a:"css"},"15.0":{t:"# CSS 水平垂直居中\r",p:"\r",l:"frontEnd/css3/tricks/center.html",a:"css-水平垂直居中"},"15.1":{t:"行内元素\r",p:`
使用 line-height

&lt;div class=&quot;container&quot;&gt;
  &lt;span&gt;123&lt;/span&gt;
&lt;/div&gt; ...`,l:"frontEnd/css3/tricks/center.html#行内元素",a:"行内元素"},"15.2":{t:"块级元素\r",p:`&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;
&lt;/div&gt; ...`,l:"frontEnd/css3/tricks/center.html#块级元素",a:"块级元素"},"15.3":{t:"使用 margin\r",p:`
父元素使用 display: flex

.container {
  display: flex;
  height: 100vh;
}

.box {
  width: 400px;
  hei ...`,l:"frontEnd/css3/tricks/center.html#使用-margin",a:"使用-margin"},"15.4":{t:"使用定位\r",p:"\r",l:"frontEnd/css3/tricks/center.html#使用定位",a:"使用定位"},"15.5":{t:"定宽高\r",p:`.box {
  width: 400px;
  height: 200px;
  background: skyblue;

  position: absolute;
  left: 50%;
  ...`,l:"frontEnd/css3/tricks/center.html#定宽高",a:"定宽高"},"15.6":{t:"不定宽高\r",p:`
使用 transform

.box {
  width: 400px;
  height: 200px;
  background: skyblue;

  position: absolute; ...`,l:"frontEnd/css3/tricks/center.html#不定宽高",a:"不定宽高"},"15.7":{t:"使用 Flex 布局\r",p:`.container {
  display: flex;
  justify-content: center; /* 水平居中 */
  align-items: center; /* 垂直居中 * ...`,l:"frontEnd/css3/tricks/center.html#使用-flex-布局",a:"使用-flex-布局"},"15.8":{t:"使用 Grid 布局\r",p:`.container {
  display: grid;
  place-content: center;
}

`,l:"frontEnd/css3/tricks/center.html#使用-grid-布局",a:"使用-grid-布局"},"16.0":{t:"# CSS 文本溢出隐藏\r",p:`&lt;div class=&quot;content&quot;&gt;12333333333333333333333333&lt;/div&gt;

.content {
  width: 100 ...`,l:"frontEnd/css3/tricks/ellipsis.html",a:"css-文本溢出隐藏"},"16.1":{t:"单行溢出隐藏\r",p:`.content {
  width: 100px; /* 1.设置元素的宽度 */
  border: 1px solid #000;
  white-space: nowrap; /* 2.不换行 ...`,l:"frontEnd/css3/tricks/ellipsis.html#单行溢出隐藏",a:"单行溢出隐藏"},"16.2":{t:"多行溢出隐藏-webkit-内核\r",p:`&lt;div class=&quot;text&quot;&gt;
  这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是 ...`,l:"frontEnd/css3/tricks/ellipsis.html#多行溢出隐藏-webkit-内核",a:"多行溢出隐藏-webkit-内核"},"16.3":{t:"多行溢出隐藏 兼容较好\r",p:`.text {
  /* 1.限定宽度 */
  width: 400px;
  border: solid;
  margin: auto;
  /* 2.限定高度以及行高，并且行高与高度要成比例  ...`,l:"frontEnd/css3/tricks/ellipsis.html#多行溢出隐藏-兼容较好",a:"多行溢出隐藏-兼容较好"},"17.0":{t:"# 滚动条样式\r",p:`/* 滚动条 */
::-webkit-scrollbar {
  /* 纵向 */
  width: 8px;
  /* 横向 */
  height: 8px;
  background-colo ...`,l:"frontEnd/css3/tricks/scrollbar.html",a:"滚动条样式"},"18.0":{t:"# html5 音视频标签\r",p:`音视频标签中的资源除了可以用 src 属性来指定外，还可以用 source 标签，而且可以指定多个，可以用来解决某些兼容问题。
\`\`\`html

&lt;h2&gt;音频示例&lt;/h2&gt;
& ...`,l:"frontEnd/html5/base/audio_video.html",a:"html5-音视频标签"},"18.1":{t:"音视频频格式的 MIME 类型\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#音视频频格式的-mime-类型",a:"音视频频格式的-mime-类型"},"18.2":{t:"音频格式\r",p:`


Format
MIME-type




MP3
audio/mpeg


Ogg
audio/ogg


Wav
audio/wav



`,l:"frontEnd/html5/base/audio_video.html#音频格式",a:"音频格式"},"18.3":{t:"视频格式\r",p:`


格式
MIME-type




MP4
video/mp4


WebM
video/webm


Ogg
video/ogg



`,l:"frontEnd/html5/base/audio_video.html#视频格式",a:"视频格式"},"18.4":{t:"音视频标签描述\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#音视频标签描述",a:"音视频标签描述"},"18.5":{t:"HTML5 Audio 标签\r",p:`


标签
描述




&lt;audio&gt;
定义了声音内容


&lt;source&gt;
规定了多媒体资源, 可以是多个，在 &lt;video&gt; 与 &lt;audio&gt;标 ...`,l:"frontEnd/html5/base/audio_video.html#html5-audio-标签",a:"html5-audio-标签"},"18.6":{t:"HTML5 Video 标签\r",p:`| 标签 | 描述 |
|&lt;video&gt; |定义一个视频|
|&lt;source&gt;| 定义多种媒体资源,比如 &lt;video&gt; 和&lt;audio&gt;|
|&lt; ...`,l:"frontEnd/html5/base/audio_video.html#html5-video-标签",a:"html5-video-标签"},"18.7":{t:"`<video>`标签的属性\r",p:`


属性
描述




src
要播放的视频的 URL


width/height
视频显示区域的宽高


controls
用户控制界面


poster
视频封面


autoplay
自动播 ...`,l:"frontEnd/html5/base/audio_video.html#video-标签的属性",a:"video-标签的属性"},"18.8":{t:"音视频对象的方法\r",p:`


方法名
作用




play()
播放


psuse()
暂停


load()
重新加载



`,l:"frontEnd/html5/base/audio_video.html#音视频对象的方法",a:"音视频对象的方法"},"18.9":{t:"代码实例\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#代码实例",a:"代码实例"},"18.10":{t:"audio 音频\r",p:`&lt;audio controls&gt;
  &lt;source src=&quot;https://www.runoob.com/try/demo_source/horse.ogg&quot; ...`,l:"frontEnd/html5/base/audio_video.html#audio-音频",a:"audio-音频"},"18.11":{t:"video 视频\r",p:`&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;button onclick=&quot;playPause()&quot;&gt;播放/暂 ...`,l:"frontEnd/html5/base/audio_video.html#video-视频",a:"video-视频"},"19.0":{t:"# HTML - 超文本标记语言\r",p:`HTML（HyperText Markup Language）是一种用于创建网页和网页应用程序的标记语言。它通过使用一系列标签和属性来描述网页的结构和内容，使得网页可以在浏览器中正确显示和呈现。
`,l:"frontEnd/html5/base/index.html",a:"html-超文本标记语言"},"19.1":{t:"HTML 的基本结构\r",p:`HTML 文档由一系列嵌套的 HTML 标签组成。一个基本的 HTML 文档通常包含以下结构：
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
   ...`,l:"frontEnd/html5/base/index.html#html-的基本结构",a:"html-的基本结构"},"19.2":{t:"HTML 标签和元素\r",p:"HTML 标签用于定义网页的结构和内容，它们由尖括号包围。标签通常成对出现，包含开始标签和结束标签，例如&lt;tagname&gt;内容&lt;/tagname&gt;。有些标签是空标签，没有结束标 ...",l:"frontEnd/html5/base/index.html#html-标签和元素",a:"html-标签和元素"},"19.3":{t:"HTML5 的新特性\r",p:"HTML5 引入了许多新特性，如语义化标签（&lt;header&gt;、&lt;footer&gt;、&lt;nav&gt;、&lt;article&gt;等）、多媒体支持（&lt;video&gt ...",l:"frontEnd/html5/base/index.html#html5-的新特性",a:"html5-的新特性"},"19.4":{t:"实践和进阶\r",p:`学习 HTML 最重要的是通过实践来加深理解。创建简单的网页、布局、添加样式和图像，然后逐渐增加复杂性，学习如何使用 CSS 和 JavaScript 与 HTML 结合，从而实现更丰富的用户体验。
 ...`,l:"frontEnd/html5/base/index.html#实践和进阶",a:"实践和进阶"},"20.0":{t:"# 常用标签及用法\r",p:`当描述 HTML 标签时，代码块会被渲染成 HTML 标记，为了避免这种情况，我将在每个代码示例中添加特殊字符，以确保它们不会被渲染。请在复制代码时将特殊字符删除。
`,l:"frontEnd/html5/base/label.html",a:"常用标签及用法"},"20.1":{t:"标题标签 `<h1>` 到 `<h6>`\r",p:`&lt;h1&gt;这是h1级别的标题&lt;/h1&gt;
&lt;h2&gt;这是h2级别的标题&lt;/h2&gt;
&lt;h3&gt;这是h3级别的标题&lt;/h3&gt;
&lt;h4& ...`,l:"frontEnd/html5/base/label.html#标题标签-h1-到-h6",a:"标题标签-h1-到-h6"},"20.2":{t:"段落标签 `<p>`\r",p:`&lt;p&gt;这是一个段落文本。&lt;/p&gt;

`,l:"frontEnd/html5/base/label.html#段落标签-p",a:"段落标签-p"},"20.3":{t:"超链接标签 `<a>`\r",p:`&lt;a href=&quot;https://www.example.com&quot;&gt;点击这里跳转到示例网站&lt;/a&gt;

`,l:"frontEnd/html5/base/label.html#超链接标签-a",a:"超链接标签-a"},"20.4":{t:"图像标签 `<img>`\r",p:`&lt;img src=&quot;example.jpg&quot; alt=&quot;示例图片&quot; /&gt;

`,l:"frontEnd/html5/base/label.html#图像标签-img",a:"图像标签-img"},"20.5":{t:"无序列表和列表项标签 `<ul>` 和 `<li>`\r",p:`&lt;ul&gt;
  &lt;li&gt;列表项1&lt;/li&gt;
  &lt;li&gt;列表项2&lt;/li&gt;
  &lt;li&gt;列表项3&lt;/li&gt;
&lt;/ ...`,l:"frontEnd/html5/base/label.html#无序列表和列表项标签-ul-和-li",a:"无序列表和列表项标签-ul-和-li"},"20.6":{t:"有序列表和列表项标签 `<ol>` 和 `<li>`\r",p:`&lt;ol&gt;
  &lt;li&gt;列表项1&lt;/li&gt;
  &lt;li&gt;列表项2&lt;/li&gt;
  &lt;li&gt;列表项3&lt;/li&gt;
&lt;/ ...`,l:"frontEnd/html5/base/label.html#有序列表和列表项标签-ol-和-li",a:"有序列表和列表项标签-ol-和-li"},"20.7":{t:"容器标签 `<div>`\r",p:`&lt;div&gt;
  这是一个div容器。
  &lt;p&gt;包含一段文本。&lt;/p&gt;
&lt;/div&gt;

`,l:"frontEnd/html5/base/label.html#容器标签-div",a:"容器标签-div"},"20.8":{t:"内联容器标签 `<span>`\r",p:`这是一个
&lt;span style=&quot;color: blue;&quot;&gt;内联容器&lt;/span&gt;
标签。

`,l:"frontEnd/html5/base/label.html#内联容器标签-span",a:"内联容器标签-span"},"20.9":{t:"表格标签 `<table>`、`<tr>`、`<th>` 和 `<td>`\r",p:`&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;表头1&lt;/th&gt;
    &lt;th&gt;表头2&lt;/th&gt;
  &lt;/tr&gt;
  ...`,l:"frontEnd/html5/base/label.html#表格标签-table-、-tr-、-th-和-td",a:"表格标签-table-、-tr-、-th-和-td"},"20.10":{t:"换行标签 `<br>`\r",p:`这是一行文本。
&lt;br /&gt;
这是另一行文本。

`,l:"frontEnd/html5/base/label.html#换行标签-br",a:"换行标签-br"},"20.11":{t:"输入标签 `<input>`\r",p:`&lt;input type=&quot;text&quot; placeholder=&quot;输入文本&quot; /&gt;
&lt;input type=&quot;checkbox&quo ...`,l:"frontEnd/html5/base/label.html#输入标签-input",a:"输入标签-input"},"20.12":{t:"按钮标签 `<button>`\r",p:`&lt;button&gt;点击我&lt;/button&gt;

`,l:"frontEnd/html5/base/label.html#按钮标签-button",a:"按钮标签-button"},"20.13":{t:"表单标签 `<form>`\r",p:`&lt;form action=&quot;/submit&quot; method=&quot;post&quot;&gt;
  &lt;label for=&quot;username&quot; ...`,l:"frontEnd/html5/base/label.html#表单标签-form",a:"表单标签-form"},"20.14":{t:"标题、脚注和导航标签 `<header>`、`<footer>` 和 `<nav>`\r",p:`&lt;header&gt;
  &lt;h1&gt;网站标题&lt;/h1&gt;
  &lt;nav&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=& ...`,l:"frontEnd/html5/base/label.html#标题、脚注和导航标签-header-、-footer-和-nav",a:"标题、脚注和导航标签-header-、-footer-和-nav"},"20.15":{t:"多媒体标签 `<video>` 和 `<audio>`\r",p:`&lt;video src=&quot;example.mp4&quot; controls&gt;您的浏览器不支持视频播放。&lt;/video&gt;

&lt;audio src=&quot;e ...`,l:"frontEnd/html5/base/label.html#多媒体标签-video-和-audio",a:"多媒体标签-video-和-audio"},"21.0":{t:"# HTML 标签\r",p:`HTML 标签用于定义网页的结构和内容，它们由尖括号包围。HTML 标签可以分为两类：块级标签和内联标签。
`,l:"frontEnd/html5/base/tag.html",a:"html-标签"},"21.1":{t:"块级标签（Block-level Elements）\r",p:`块级标签通常用于创建页面的大型结构和组织，它们会单独占据一行，并且在前后都会产生换行。常见的块级标签包括：

&lt;div&gt;：最通用的容器标签，用于将一组元素包裹在一起，方便样式和布局控制。
 ...`,l:"frontEnd/html5/base/tag.html#块级标签-block-level-elements",a:"块级标签-block-level-elements"},"21.2":{t:"内联标签（Inline Elements）\r",p:`内联标签用于包裹文本的一部分，它们不会独占一行，而是按照文本的自然流动排列。常见的内联标签包括：

&lt;a&gt;：锚链接标签，用于创建超链接到其他网页或文档。
&lt;span&gt;：内联容器 ...`,l:"frontEnd/html5/base/tag.html#内联标签-inline-elements",a:"内联标签-inline-elements"},"21.3":{t:"嵌套标签\r",p:`HTML 标签可以嵌套在其他标签中，形成树状的结构。例如，可以将一段文本包裹在&lt;p&gt;标签中，然后在&lt;div&gt;标签中包裹这个&lt;p&gt;标签，从而形成嵌套的关系。
&lt; ...`,l:"frontEnd/html5/base/tag.html#嵌套标签",a:"嵌套标签"},"21.4":{t:"属性\r",p:`HTML 标签可以包含属性，属性用于为标签提供额外的信息或设置。属性以键值对的形式出现，放在标签的开始标签中。例如，&lt;a&gt;标签用href属性来指定链接地址：
&lt;a href=&quo ...`,l:"frontEnd/html5/base/tag.html#属性",a:"属性"},"21.5":{t:"自定义标签\r",p:`HTML5 允许开发者创建自定义的标签，这些标签可能在 HTML 规范中没有定义，但可以在特定的应用中使用。自定义标签应以data-为前缀，避免与未来 HTML 版本中的新标签冲突。
例如：
&lt; ...`,l:"frontEnd/html5/base/tag.html#自定义标签",a:"自定义标签"},"22.0":{t:"# input\r",p:"\r",l:"frontEnd/html5/problem/input.html",a:"input"},"22.1":{t:'input type="password" 浏览器自动填充账号和密码\r',p:"&lt;a-input type=&quot;password&quot; placeholder=&quot;请输入登录密码&quot; v-model=&quot;model.password&q ...",l:"frontEnd/html5/problem/input.html#input-type-password-浏览器自动填充账号和密码",a:"input-type-password-浏览器自动填充账号和密码"},"23.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"frontEnd/react/index.html",a:"该内容正在努力建设中"},"24.0":{t:"# Vue.js\r",p:"\r",l:"frontEnd/vue/base/index.html",a:"vue-js"},"24.1":{t:"简介\r",p:`Vue.js 是一套用于构建用户界面的渐进式 JavaScript 框架。它允许您将应用程序划分为可复用的组件，并以声明式的方式构建数据驱动的 UI。
`,l:"frontEnd/vue/base/index.html#简介",a:"简介"},"24.2":{t:"开始\r",p:"\r",l:"frontEnd/vue/base/index.html#开始",a:"开始"},"24.3":{t:"安装 Vue.js\r",p:`您可以通过直接引入 Vue.js 脚本文件或使用 npm（Node Package Manager）安装 Vue.js。
&lt;!-- 直接引入Vue.js脚本 --&gt;


或者
# 使用np ...`,l:"frontEnd/vue/base/index.html#安装-vue-js",a:"安装-vue-js"},"24.4":{t:"第一个 Vue.js 应用\r",p:`&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;My First Vue App&lt;/title&gt;
   ...`,l:"frontEnd/vue/base/index.html#第一个-vue-js-应用",a:"第一个-vue-js-应用"},"24.5":{t:"数据绑定\r",p:"\r",l:"frontEnd/vue/base/index.html#数据绑定",a:"数据绑定"},"24.6":{t:"插值表达式\r",p:`使用双花括号（Mustache 语法）进行数据插值，将数据绑定到 HTML 模板中。
&lt;div&gt;
  &lt;p&gt;{{ message }}&lt;/p&gt;
&lt;/div&g ...`,l:"frontEnd/vue/base/index.html#插值表达式",a:"插值表达式"},"24.7":{t:"指令\r",p:`Vue.js 提供了一些指令，用于在模板中实现特定的行为。

v-bind：将元素属性与 Vue 实例的数据绑定。

&lt;img v-bind:src=&quot;imageSrc&quot; / ...`,l:"frontEnd/vue/base/index.html#指令",a:"指令"},"24.8":{t:"条件渲染\r",p:"\r",l:"frontEnd/vue/base/index.html#条件渲染",a:"条件渲染"},"24.9":{t:"`v-if` 和 `v-else`\r",p:`根据条件渲染元素。
&lt;div v-if=&quot;isVisible&quot;&gt;This is visible.&lt;/div&gt;
&lt;div v-else&gt;This  ...`,l:"frontEnd/vue/base/index.html#v-if-和-v-else",a:"v-if-和-v-else"},"24.10":{t:"`v-show`\r",p:`根据条件显示或隐藏元素。
&lt;div v-show=&quot;isVisible&quot;&gt;This is visible.&lt;/div&gt;

`,l:"frontEnd/vue/base/index.html#v-show",a:"v-show"},"24.11":{t:"列表渲染\r",p:"\r",l:"frontEnd/vue/base/index.html#列表渲染",a:"列表渲染"},"24.12":{t:"`v-for`\r",p:`循环渲染列表中的元素。
&lt;ul&gt;
  &lt;li v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;{{ item. ...`,l:"frontEnd/vue/base/index.html#v-for",a:"v-for"},"24.13":{t:"事件处理\r",p:`使用v-on指令监听 DOM 事件，并执行相应的方法。
&lt;button v-on:click=&quot;handleClick&quot;&gt;Click Me&lt;/button&gt; ...`,l:"frontEnd/vue/base/index.html#事件处理",a:"事件处理"},"24.14":{t:"表单输入绑定\r",p:`使用v-model指令实现表单输入和 Vue 实例数据的双向绑定。
&lt;input v-model=&quot;message&quot; type=&quot;text&quot; /&gt;
 ...`,l:"frontEnd/vue/base/index.html#表单输入绑定",a:"表单输入绑定"},"24.15":{t:"组件\r",p:"\r",l:"frontEnd/vue/base/index.html#组件",a:"组件"},"24.16":{t:"定义组件\r",p:`// 定义一个名为 'my-component' 的组件
Vue.component('my-component', {
  template: '&lt;div&gt;{{ message }}&l ...`,l:"frontEnd/vue/base/index.html#定义组件",a:"定义组件"},"24.17":{t:"使用组件\r",p:`&lt;div id=&quot;app&quot;&gt;
  &lt;my-component&gt;&lt;/my-component&gt;
&lt;/div&gt;

`,l:"frontEnd/vue/base/index.html#使用组件",a:"使用组件"},"24.18":{t:"生命周期钩子\r",p:`


钩子函数
阶段
描述




beforeCreate
创建前
在实例被创建之前调用。此时，组件的数据观察和事件还未初始化。


created
创建后
在实例创建完成后调用。可以在这里进行数据 ...`,l:"frontEnd/vue/base/index.html#生命周期钩子",a:"生命周期钩子"},"25.0":{t:"# Vue Router 学习指南\r",p:"\r",l:"frontEnd/vue/base/vue-router.html",a:"vue-router-学习指南"},"25.1":{t:"1. 简介\r",p:`
Vue Router 是 Vue.js 官方提供的路由管理器，用于实现单页面应用（SPA）的路由功能。
学习 Vue Router 之前，确保您对 Vue.js 有一定的了解。

`,l:"frontEnd/vue/base/vue-router.html#_1-简介",a:"_1-简介"},"25.2":{t:"2. 安装\r",p:`
使用 npm 或 yarn 安装 Vue Router 到您的 Vue.js 项目中。

# 使用npm
npm install vue-router

# 使用yarn
yarn add vue- ...`,l:"frontEnd/vue/base/vue-router.html#_2-安装",a:"_2-安装"},"25.3":{t:"3. 基本用法\r",p:`
创建一个 Vue Router 实例并将其与 Vue 应用关联。
定义路由表，包含不同路径与对应组件的映射。

import { createRouter, createWebHistory } f ...`,l:"frontEnd/vue/base/vue-router.html#_3-基本用法",a:"_3-基本用法"},"25.4":{t:"4. 路由视图\r",p:`
在 Vue 组件中使用 &lt;router-view&gt; 标签来渲染路由匹配到的组件。

&lt;template&gt;
  &lt;div&gt;
    &lt;router-view& ...`,l:"frontEnd/vue/base/vue-router.html#_4-路由视图",a:"_4-路由视图"},"25.5":{t:"5. 路由导航\r",p:`
使用&lt;router-link&gt;组件创建导航链接，以在单页面应用中切换不同的路由。

&lt;template&gt;
  &lt;div&gt;
    &lt;router-link  ...`,l:"frontEnd/vue/base/vue-router.html#_5-路由导航",a:"_5-路由导航"},"25.6":{t:"6. 路由传参\r",p:`
使用路由参数传递数据给组件。

const routes = [{ path: '/user/:id', component: User }]

&lt;router-link :to=&quot; ...`,l:"frontEnd/vue/base/vue-router.html#_6-路由传参",a:"_6-路由传参"},"25.7":{t:"7. 嵌套路由\r",p:`
在组件中定义嵌套的子路由。

const routes = [
  {
    path: '/parent',
    component: Parent,
    children: [{ pa ...`,l:"frontEnd/vue/base/vue-router.html#_7-嵌套路由",a:"_7-嵌套路由"},"25.8":{t:"8. 路由守卫\r",p:`
使用路由守卫来处理导航前后的逻辑，例如登录验证、权限控制等。

router.beforeEach((to, from, next) =&gt; {
  // 检查用户是否登录，进行相关逻辑处理
  ...`,l:"frontEnd/vue/base/vue-router.html#_8-路由守卫",a:"_8-路由守卫"},"25.9":{t:"9. 动态路由\r",p:`
使用动态路由来根据不同条件加载组件。

const routes = [{ path: '/category/:id', component: Category }]

`,l:"frontEnd/vue/base/vue-router.html#_9-动态路由",a:"_9-动态路由"},"25.10":{t:"10. 路由懒加载\r",p:`
使用路由懒加载来优化页面加载性能。

const routes = [
  {
    path: '/lazy',
    component: () =&gt; import('./compon ...`,l:"frontEnd/vue/base/vue-router.html#_10-路由懒加载",a:"_10-路由懒加载"},"25.11":{t:" ",p:"",l:"frontEnd/vue/base/vue-router.html#",a:""},"25.12":{t:"11. 更多配置\r",p:`
了解更多高级配置，如路由别名、重定向、404 页面等。
--&gt;

`,l:"frontEnd/vue/base/vue-router.html#_11-更多配置",a:"_11-更多配置"},"26.0":{t:"# vuex\r",p:`
Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它是一个集中式的状态管理库，用于管理 Vue.js 应用中的共享状态（state）。在大型应用程序中，组件之间的数据共享和通信可能变得 ...`,l:"frontEnd/vue/base/vuex.html",a:"vuex"},"26.1":{t:"核心概念\r",p:`

State（状态）：在 Vuex 中，状态即应用程序中需要共享的数据。它类似于组件的 data，但是不限于某个组件，而是存储在 Vuex 的全局状态树中，使得不同组件可以共享和访问这些数据。


 ...`,l:"frontEnd/vue/base/vuex.html#核心概念",a:"核心概念"},"26.2":{t:"优点\r",p:`

集中式管理：所有的状态都集中在 Vuex 的 store 中，方便开发者进行状态的调试和追踪。


组件通信：可以轻松实现跨组件的状态共享和通信，避免了传统的 Props 和 Events 的繁琐 ...`,l:"frontEnd/vue/base/vuex.html#优点",a:"优点"},"26.3":{t:"使用\r",p:`

安装 Vuex：使用 npm 或 yarn 安装 Vuex 库。在终端中运行以下命令：
npm install vuex
或
yarn add vuex



创建一个 Vuex 的 store： ...`,l:"frontEnd/vue/base/vuex.html#使用",a:"使用"},"26.4":{t:"Mutations 的使用\r",p:`当使用 Vuex 时，通常会将状态的修改拆分为两个部分：mutations 和 actions。
Mutations 用于同步地修改状态。它们是唯一允许直接修改状态的地方，而且是一个纯函数（不应该有副 ...`,l:"frontEnd/vue/base/vuex.html#mutations-的使用",a:"mutations-的使用"},"26.5":{t:"Actions 的使用\r",p:"Actions 用于处理异步操作，并且可以包含任意异步代码。它们不直接修改状态，而是通过调用 mutations 来间接修改状态。通常，在组件中通过 dispatch 调用 actions 中的方法。 ...",l:"frontEnd/vue/base/vuex.html#actions-的使用",a:"actions-的使用"},"26.6":{t:"getters 的使用\r",p:"Getters 用于派生出 Vuex store 中的状态（state），类似于组件的计算属性（computed），但是 Getters 可以被多个组件共用，避免了重复逻辑代码。Getters 可以对 ...",l:"frontEnd/vue/base/vuex.html#getters-的使用",a:"getters-的使用"},"27.0":{t:"# vue3 API\r",p:`
vue在线学习工具


在 vue3.2 中，我们只需在script标签中添加setup。就可以做到，组件只需引入不用注册，属性和方法也不用 return 才能于 template 中使用，也不用写 ...`,l:"frontEnd/vue/v3/api.html",a:"vue3-api"},"27.1":{t:"setup\r",p:`
理解：Vue3.0 中一个新的配置项，值为一个函数。
setup() 函数是 Vue3 新增的一个选项，它是组合式 API 的统一入口，简单来说，就是所有的 CompositionAPI 新特性都应 ...`,l:"frontEnd/vue/v3/api.html#setup",a:"setup"},"27.2":{t:"ref 和 reactive\r",p:`
ref() 函数用来根据给定的值创建一个响应式的数据对象，ref() 函数调用的返回值是一个对象，这个对象上只包含一个 value 属性, 只在setup函数内部访问ref函数需要加.value，其 ...`,l:"frontEnd/vue/v3/api.html#ref-和-reactive",a:"ref-和-reactive"},"27.3":{t:"ref全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#ref全家桶",a:"ref全家桶"},"27.4":{t:"isRef\r",p:`判断是不是一个ref对象
import { ref,isRef } from 'vue'
let message = ref(&quot;我是message&quot;)
let notRef:num ...`,l:"frontEnd/vue/v3/api.html#isref",a:"isref"},"27.5":{t:"shallowRef\r",p:`创建一个跟踪自身 .value 变化的 ref，但不会使其值也变成响应式的
修改其属性是非响应式的这样是不会改变的
&lt;template&gt;
  &lt;div&gt;
    &lt;but ...`,l:"frontEnd/vue/v3/api.html#shallowref",a:"shallowref"},"27.6":{t:"triggerRef\r",p:`强制更新页面DOM
import {Ref,shallowRef,triggerRef} from 'vue'
type Obj = {
    name:string
}
let message:R ...`,l:"frontEnd/vue/v3/api.html#triggerref",a:"triggerref"},"27.7":{t:"customRef\r",p:`自定义ref
customRef 是个工厂函数要求我们返回一个对象 并且实现 get 和 set  适合去做防抖之类的
&lt;template&gt;
  &lt;div ref=&quot;div ...`,l:"frontEnd/vue/v3/api.html#customref",a:"customref"},"27.8":{t:"reactive全家桶\r",p:`reactive是不可以绑定普通的数据类型这样是不允许 会给我们报错
import { reactive} from 'vue'
let person = reactive('zhangsan')
/ ...`,l:"frontEnd/vue/v3/api.html#reactive全家桶",a:"reactive全家桶"},"27.9":{t:"readonly\r",p:`readonly 接受一个对象 (不论是响应式还是普通的) 或是一个 ref，返回一个原值的只读代理。


`,l:"frontEnd/vue/v3/api.html#readonly",a:"readonly"},"27.10":{t:"shallowReactive\r",p:`只能对浅层的数据 如果是深层的数据只会改变值 不会改变视图
&lt;template&gt;
  &lt;div&gt;
    &lt;div&gt;{{ state }}&lt;/div&gt;
 ...`,l:"frontEnd/vue/v3/api.html#shallowreactive",a:"shallowreactive"},"27.11":{t:"to系列全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#to系列全家桶",a:"to系列全家桶"},"27.12":{t:"toRef\r",p:`把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref
如果原始对象是非响应式的，数据是会变的，但不会更新视图。
&lt;template&gt;
  &lt;div&g ...`,l:"frontEnd/vue/v3/api.html#toref",a:"toref"},"27.13":{t:"toRefs\r",p:`toRefs相当于对对象内每个属性调用toRef，toRefs返回的对象内的属性使用时需要加.value,主要是方便我们解构使用
&lt;template&gt;
  &lt;div&gt;
     ...`,l:"frontEnd/vue/v3/api.html#torefs",a:"torefs"},"27.14":{t:"toRaw\r",p:`将响应式对象修改为普通对象
&lt;template&gt;
  &lt;div&gt;
    &lt;button @click=&quot;change&quot;&gt;按钮&lt;/butt ...`,l:"frontEnd/vue/v3/api.html#toraw",a:"toraw"},"27.15":{t:"computed\r",p:`computed() 与 Vue2 中的 computed 作用基本一致，它可以接收一个函数或对象作为参数，会返回一个只读的 ref 对象。
&lt;template&gt;
  &lt;div&gt ...`,l:"frontEnd/vue/v3/api.html#computed",a:"computed"},"27.16":{t:"watch\r",p:`vue3 watch 的作用和 Vue2 中的 watch 作用是一样的，他们都是用来监听响应式状态发生变化的，当响应式状态发生变化时，就会触发一个回调函数。
watch(data,()=&gt;{} ...`,l:"frontEnd/vue/v3/api.html#watch",a:"watch"},"27.17":{t:"1、监听ref定义的一个响应式数据\r",p:`import { ref, watch } from 'vue'
let message = ref({
    nav:{
        bar:{
            name:&quot; ...`,l:"frontEnd/vue/v3/api.html#_1、监听ref定义的一个响应式数据",a:"_1、监听ref定义的一个响应式数据"},"27.18":{t:"2、监听多个ref\r",p:`写法变为数组的形式
import { ref, watch ,reactive} from 'vue'

let message = ref('')
let message2 = ref('')

w ...`,l:"frontEnd/vue/v3/api.html#_2、监听多个ref",a:"_2、监听多个ref"},"27.19":{t:"3、监听Reactive定义的响应式对象\r",p:`使用reactive监听深层对象开启和不开启deep 效果一样
import { ref, watch ,reactive} from 'vue'

let message = reactive({
 ...`,l:"frontEnd/vue/v3/api.html#_3、监听reactive定义的响应式对象",a:"_3、监听reactive定义的响应式对象"},"27.20":{t:"4、监听reactive 定义响应式对象的单一属性\r",p:`import { ref, watch ,reactive} from 'vue'
let message = reactive({
    name:&quot;&quot;,
    name2: ...`,l:"frontEnd/vue/v3/api.html#_4、监听reactive-定义响应式对象的单一属性",a:"_4、监听reactive-定义响应式对象的单一属性"},"27.21":{t:"WatchEffect\r",p:`
立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
不用直接指定要监视的数据, 回调函数中使用的哪些响应式数据就监视哪些响应式数据
默认初始时就会执行第一次, 从而可以收 ...`,l:"frontEnd/vue/v3/api.html#watcheffect",a:"watcheffect"},"27.22":{t:"清除副作用\r",p:`
watchEffect 的第一个参数——effect函数——可以接收一个参数：叫onInvalidate，也是一个函数，用于清除 effect 产生的副作用
就是在触发监听之前会调用一个函数可以处理 ...`,l:"frontEnd/vue/v3/api.html#清除副作用",a:"清除副作用"},"27.23":{t:"停止监听\r",p:`- 当 watchEffect 在组件的 setup() 函数或生命周期钩子被调用时，侦听器会被链接到该组件的生命周期，并在组件卸载时自动停止。
- 但是我们采用异步的方式创建了一个监听器，这个时候监 ...`,l:"frontEnd/vue/v3/api.html#停止监听",a:"停止监听"},"27.24":{t:"配置选项\r",p:`

watchEffect的第二个参数，用来定义副作用刷新时机，可以作为一个调试器来使用


flush （更新时机）：

pre：组件更新前执行
sync：强制效果始终同步触发
post：组件更新后 ...`,l:"frontEnd/vue/v3/api.html#配置选项",a:"配置选项"},"27.25":{t:"生命周期\r",p:`简单来说就是一个组件从创建 到 销毁的 过程 成为生命周期
在我们使用Vue3 组合式API 是没有 beforeCreate 和 created 这两个生命周期的
!img
`,l:"frontEnd/vue/v3/api.html#生命周期",a:"生命周期"},"27.26":{t:"自定义指令\r",p:"",l:"frontEnd/vue/v3/api.html#自定义指令",a:"自定义指令"},"27.27":{t:"Vue3指令的钩子函数\r",p:`
created 元素初始化的时候
beforeMount 指令绑定到元素后调用 只调用一次
mounted 元素插入父级dom调用
beforeUpdate 元素被更新之前调用
update 这个周 ...`,l:"frontEnd/vue/v3/api.html#vue3指令的钩子函数",a:"vue3指令的钩子函数"},"27.28":{t:"在setup内定义局部指令\r",p:`这里有一个需要注意的限制：必须以 vNameOfDirective 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。

const vMoveDirective: Directive =  ...`,l:"frontEnd/vue/v3/api.html#在setup内定义局部指令",a:"在setup内定义局部指令"},"27.29":{t:"生命周期钩子参数详解\r",p:`第一个 el  当前绑定的DOM 元素
第二个 binding

instance：使用指令的组件实例。
value：传递给指令的值。例如，在 v-my-directive=&quot;1 + 1&q ...`,l:"frontEnd/vue/v3/api.html#生命周期钩子参数详解",a:"生命周期钩子参数详解"},"27.30":{t:"案列 - 自定义拖拽指令\r",p:`&lt;template&gt;
  &lt;div v-move class=&quot;box&quot;&gt;
    &lt;div class=&quot;header&quot;&gt; ...`,l:"frontEnd/vue/v3/api.html#案列-自定义拖拽指令",a:"案列-自定义拖拽指令"},"27.31":{t:"自定义hooks\r",p:`在 vue2 中有个东西叫 mixins，他可以将多个组件中相同的逻辑抽离出来，实现一次写代码，多组件受益的效果。
但是 mixins 的副作用就是引用的多了变量的来源就不清晰了，而且还会有变量来源不 ...`,l:"frontEnd/vue/v3/api.html#自定义hooks",a:"自定义hooks"},"28.0":{t:"# vue3 组件通信方式\r",p:"\r",l:"frontEnd/vue/v3/communication.html",a:"vue3-组件通信方式"},"28.1":{t:"通信方式\r",p:`&lt;!-- 通信仓库地址:项目地址 --&gt;
不管是 vue2 还是 vue3,组件通信方式很重要,不管是项目还是面试都是经常用到的知识点。
比如:vue2 组件通信方式
**props:** ...`,l:"frontEnd/vue/v3/communication.html#通信方式",a:"通信方式"},"28.2":{t:"1、props\r",p:`props 可以实现父子组件通信,在 vue3 中我们可以通过 defineProps 获取父组件传递的数据。且在组件内部不需要引入 defineProps 方法可以直接使用！
父组件给子组件传递数据 ...`,l:"frontEnd/vue/v3/communication.html#_1、props",a:"_1、props"},"28.3":{t:"2、自定义事件\r",p:`在 vue 框架中事件分为两种:一种是原生的 DOM 事件，另外一种自定义事件。
原生 DOM 事件可以让用户与网页进行交互，比如 click、dbclick、change、mouseenter、mo ...`,l:"frontEnd/vue/v3/communication.html#_2、自定义事件",a:"_2、自定义事件"},"28.4":{t:"1. 原生 DOM 事件\r",p:`代码如下:
&lt;pre @click=&quot;handler&quot;&gt;
      我是祖国的老花骨朵
 &lt;/pre&gt;

当前代码级给 pre 标签绑定原生 DOM 事件 ...`,l:"frontEnd/vue/v3/communication.html#_1-原生-dom-事件",a:"_1-原生-dom-事件"},"28.5":{t:"2. 自定义事件\r",p:`自定义事件可以实现子组件给父组件传递数据.在项目中是比较常用的。
比如在父组件内部给子组件(Event2)绑定一个自定义事件
&lt;Event2 @xxx=&quot;handler3&quot;& ...`,l:"frontEnd/vue/v3/communication.html#_2-自定义事件",a:"_2-自定义事件"},"28.6":{t:"3、全局事件总线\r",p:`全局事件总线可以实现任意组件通信，在 vue2 中可以根据 VM 与 VC 关系推出全局事件总线。
但是在 vue3 中没有 Vue 构造函数，也就没有 Vue.prototype.以及组合式 API ...`,l:"frontEnd/vue/v3/communication.html#_3、全局事件总线",a:"_3、全局事件总线"},"28.7":{t:"4、v-model\r",p:`v-model 指令可是收集表单数据(数据双向绑定)，除此之外它也可以实现父子组件数据同步。
而 v-model 实指利用 props[modelValue]与自定义事件[update:modelVa ...`,l:"frontEnd/vue/v3/communication.html#_4、v-model",a:"_4、v-model"},"28.8":{t:"5、useAttrs\r",p:`在 Vue3 中可以利用 useAttrs 方法获取组件的属性与事件(包含:原生 DOM 事件或者自定义事件),次函数功能类似于 Vue2 框架中$attrs属性与$listeners 方法。
比如: ...`,l:"frontEnd/vue/v3/communication.html#_5、useattrs",a:"_5、useattrs"},"28.9":{t:"6、ref 与$parent\r",p:`ref,提及到 ref 可能会想到它可以获取元素的 DOM 或者获取子组件实例的 VC。既然可以在父组件内部通过 ref 获取子组件实例 VC，那么子组件内部的方法与响应式数据父组件可以使用的。
比如 ...`,l:"frontEnd/vue/v3/communication.html#_6、ref-与-parent",a:"_6、ref-与-parent"},"28.10":{t:"7、provide 与 inject\r",p:`provide[提供]
**inject[注入]vue3 提供两个方法 provide 与 inject,可以实现隔辈组件传递参数
组件组件提供数据:
provide 方法用于提供数据，此方法执需要传 ...`,l:"frontEnd/vue/v3/communication.html#_7、provide-与-inject",a:"_7、provide-与-inject"},"28.11":{t:"8、piniapinia 官网:https://pinia.web3doc.top/**\r",p:`pinia 也是集中式管理状态容器,类似于 vuex。但是核心概念没有 mutation、modules,使用方式参照官网
`,l:"frontEnd/vue/v3/communication.html#_8、piniapinia-官网-https-pinia-web3doc-top",a:"_8、piniapinia-官网-https-pinia-web3doc-top"},"28.12":{t:"9、slot\r",p:`插槽：默认插槽、具名插槽、作用域插槽可以实现父子组件通信.
默认插槽:
在子组件内部的模板中书写 slot 全局组件标签
&lt;template&gt;
  &lt;div&gt;
    &lt; ...`,l:"frontEnd/vue/v3/communication.html#_9、slot",a:"_9、slot"},"29.0":{t:"# Vue3 深入组件\r",p:"\r",l:"frontEnd/vue/v3/components.html",a:"vue3-深入组件"},"29.1":{t:"注册\r",p:"\r",l:"frontEnd/vue/v3/components.html#注册",a:"注册"},"29.2":{t:"全局组件\r",p:`在 main.ts 引入组件跟随在 createApp(App) 后面，切记不能放到 mount 后面
//main.js
import { createApp } from 'vue'
import ...`,l:"frontEnd/vue/v3/components.html#全局组件",a:"全局组件"},"29.3":{t:" ",p:"",l:"frontEnd/vue/v3/components.html#",a:""},"29.4":{t:"批量注册全局组件 -->\r",p:"\r",l:"frontEnd/vue/v3/components.html#批量注册全局组件",a:"批量注册全局组件"},"29.5":{t:"局部组件\r",p:`局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。
在使用 \`
&lt;template&gt ...`,l:"frontEnd/vue/v3/components.html#局部组件",a:"局部组件"},"29.6":{t:"父子组件传参\r",p:`
父组件通过 v-bind 绑定一个数据，然后子组件通过 defineProps 接受传过来的值
传递非字符串类型需要加 v-bind 简写 冒号

父组件
&lt;template&gt;
  &l ...`,l:"frontEnd/vue/v3/components.html#父子组件传参",a:"父子组件传参"},"29.7":{t:"插槽\r",p:"\r",l:"frontEnd/vue/v3/components.html#插槽",a:"插槽"},"29.8":{t:"匿名插槽\r",p:`在子组件放置一个插槽
// Child.vue
&lt;template&gt;
  &lt;div&gt;child&lt;/div&gt;
  &lt;slot&gt;&lt;/slot&gt;
 ...`,l:"frontEnd/vue/v3/components.html#匿名插槽",a:"匿名插槽"},"29.9":{t:"具名插槽\r",p:`具名插槽其实就是给插槽取个名字。一个子组件可以放多个插槽，而且可以放在不同的地方，而父组件填充内容时，可以根据这个名字把内容填充到对应插槽中
&lt;div&gt;
  &lt;slot name=& ...`,l:"frontEnd/vue/v3/components.html#具名插槽",a:"具名插槽"},"29.10":{t:"作用域插槽\r",p:`插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的。
在子组件动态绑定参数 派发给父组件的 slot 去使用
&lt;span&gt;{{ message }}&lt;/sp ...`,l:"frontEnd/vue/v3/components.html#作用域插槽",a:"作用域插槽"},"29.11":{t:"动态插槽\r",p:`插槽可以是一个变量名
&lt;template&gt;
  &lt;div&gt;
    &lt;p&gt;父组件&lt;/p&gt;
    &lt;Child&gt;
      &lt;tem ...`,l:"frontEnd/vue/v3/components.html#动态插槽",a:"动态插槽"},"29.12":{t:"异步组件\r",p:`在大型应用中，需要将应用分割成小一些的代码块，并且减少主包的体积。
通过 defineAsyncComponent 异步加载
&lt;template&gt;
  &lt;Children :msg= ...`,l:"frontEnd/vue/v3/components.html#异步组件",a:"异步组件"},"29.13":{t:"Suspense\r",p:"Suspense 允许应用程序在等待异步组件时渲染一些其它内容,在 Vue2 中，必须使用条件判断(例如 v-if、 v-else等)来检查数据是否已加载并显示一些其它内容；但是，在 Vue3 新增了 ...",l:"frontEnd/vue/v3/components.html#suspense",a:"suspense"},"29.14":{t:"Teleport 传送组件\r",p:`Teleport 是一种能够将我们的模板渲染至指定DOM节点，不受父级style、v-show等属性影响，但data、prop数据依旧能够共用的技术；类似于 React 的 Portal。
主要解决的 ...`,l:"frontEnd/vue/v3/components.html#teleport-传送组件",a:"teleport-传送组件"},"29.15":{t:"Keep-alive 缓存组件\r",p:`
事件挂载的方法等，只执行一次的放在 onMounted中；组件每次进去执行的方法放在 onActivated中


作用和vue2一致，只是生命周期名称有所更改
初次进入时： onMounted&g ...`,l:"frontEnd/vue/v3/components.html#keep-alive-缓存组件",a:"keep-alive-缓存组件"},"29.16":{t:"provide/inject\r",p:`provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。
父组件
&lt;template& ...`,l:"frontEnd/vue/v3/components.html#provide-inject",a:"provide-inject"},"29.17":{t:"v-model 升级\r",p:`
在Vue3 v-model 是破坏性更新的
v-model 是props 和 emit 组合而成的语法糖,vue3中 v-model 有以下改动


变更：value =&gt; modelValu ...`,l:"frontEnd/vue/v3/components.html#v-model-升级",a:"v-model-升级"},"30.0":{t:"# 创建Vue3项目\r",p:"\r",l:"frontEnd/vue/v3/create.html",a:"创建vue3项目"},"30.1":{t:"一、 使用vue-cli创建\r",p:`
`,l:"frontEnd/vue/v3/create.html#一、-使用vue-cli创建",a:"一、-使用vue-cli创建"},"30.2":{t:"安装或者升级\r",p:`npm install -g @vue/cli
`,l:"frontEnd/vue/v3/create.html#安装或者升级",a:"安装或者升级"},"30.3":{t:"保证 vue cli 版本在 4.5.0 以上\r",p:`vue --version
`,l:"frontEnd/vue/v3/create.html#保证-vue-cli-版本在-4-5-0-以上",a:"保证-vue-cli-版本在-4-5-0-以上"},"30.4":{t:"创建项目\r",p:`vue create my-project
然后的步骤

- Please pick a preset - 选择 Manually select features
- Check the featur ...`,l:"frontEnd/vue/v3/create.html#创建项目",a:"创建项目"},"30.5":{t:"二、 使用vite创建(推荐)\r",p:`vite的优势

冷服务   默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入
HMR  速度快到惊人的 模块热更新（HMR）
Rollup打包  它使用 ...`,l:"frontEnd/vue/v3/create.html#二、-使用vite创建-推荐",a:"二、-使用vite创建-推荐"},"30.6":{t:"1. 使用vite初始化一个项目\r",p:`# npm
npm init vite@latest

# yarn
yarn create vite

这两种使用vite创建vue3项目的步骤一样
(1).运行命令 输入项目名称
!img
(2) ...`,l:"frontEnd/vue/v3/create.html#_1-使用vite初始化一个项目",a:"_1-使用vite初始化一个项目"},"30.7":{t:"2. npm init vue@latest\r",p:`!img
`,l:"frontEnd/vue/v3/create.html#_2-npm-init-vue-latest",a:"_2-npm-init-vue-latest"},"31.0":{t:"# 认识Vue3\r",p:"\r",l:"frontEnd/vue/v3/index.html",a:"认识vue3"},"31.1":{t:"一、了解相关信息\r",p:`
Vue.js 3.0 &quot;One Piece&quot; 正式版在今年9月份发布
2年多开发, 100+位贡献者, 2600+次提交, 600+次PR
Vue3支持vue2的大多数特性
更好 ...`,l:"frontEnd/vue/v3/index.html#一、了解相关信息",a:"一、了解相关信息"},"31.2":{t:"二、 性能提升:\r",p:`
打包大小减少41%
初次渲染快55%, 更新渲染快133%
内存减少54%
使用Proxy代替defineProperty实现数据响应式
重写虚拟DOM的实现和Tree-Shaking

`,l:"frontEnd/vue/v3/index.html#二、-性能提升",a:"二、-性能提升"},"31.3":{t:"三、 新增特性\r",p:`

Composition (组合) API


setup

ref 和 reactive
computed 和 watch
新的生命周期函数
provide与inject
...



新组件

 ...`,l:"frontEnd/vue/v3/index.html#三、-新增特性",a:"三、-新增特性"},"32.0":{t:"# vue3.3 新特性\r",p:"\r",l:"frontEnd/vue/v3/vue33.html",a:"vue3-3-新特性"},"32.1":{t:"defineProps\r",p:`
父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;h1&gt;Home&lt;/h1&gt;
    &lt;Child :name=&quot;['zhang ...`,l:"frontEnd/vue/v3/vue33.html#defineprops",a:"defineprops"},"32.2":{t:"defineEmits\r",p:`
父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;h1&gt;Home&lt;/h1&gt;
    &lt;Child @send=&quot;getName ...`,l:"frontEnd/vue/v3/vue33.html#defineemits",a:"defineemits"},"32.3":{t:"defineOptions\r",p:`
主要是用来定义 Options API 的选项



::: tip
常用的就是定义 name 在 seutp 语法糖模式发现 name 不好定义了需要在开启一个 script 自定义 name 现 ...`,l:"frontEnd/vue/v3/vue33.html#defineoptions",a:"defineoptions"},"32.4":{t:"defineSlots\r",p:`用来约束 slot

父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;Child :data=&quot;list&quot;&gt;
      &lt;te ...`,l:"frontEnd/vue/v3/vue33.html#defineslots",a:"defineslots"},"34.0":{t:"# JavaScript 数组\r",p:`数组：(Array)是一种可以按顺序保存数据的数据类型
使用场景：如果有多个数据可以用数组保存起来，然后放到一个变量中，管理非常方便

数组中可以存放任意类型的数据，例如字符串，数字，布尔值等。

`,l:"JavaScript/base/array.html",a:"javascript-数组"},"34.1":{t:"创建\r",p:`创建数组有两种方式

利用 new 创建数组
利用数组字面量创建数组

数组的字面量是方括号 [ ]
声明数组并赋值称为数组的初始化
这种字面量方式也是最多的使用方式



// 利用new 创建数组 ...`,l:"JavaScript/base/array.html#创建",a:"创建"},"34.2":{t:"获取数组元素\r",p:`数组的长度
使用数组名.length可以访问数组元素的数量（数组长度）
数组的索引
索引 (下标) ：用来访问数组元素的序号（数组下标从 0 开始）。

数组可以通过索引来访问、设置、修改对应的数组元 ...`,l:"JavaScript/base/array.html#获取数组元素",a:"获取数组元素"},"34.3":{t:" ",p:"",l:"JavaScript/base/array.html#",a:""},"34.4":{t:"数组方法 -->\r",p:"\r",l:"JavaScript/base/array.html#数组方法",a:"数组方法"},"34.5":{t:"一、操作方法\r",p:`数组基本操作可以归纳为 增、删、改、查，需要留意的是哪些方法会对原数组产生影响，哪些方法不会
下面对数组常用的操作方法做一个归纳
`,l:"JavaScript/base/array.html#一、操作方法",a:"一、操作方法"},"34.6":{t:"增\r",p:`下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响

push()
unshift()
splice()
concat()

`,l:"JavaScript/base/array.html#增",a:"增"},"34.7":{t:"push()\r",p:`push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度
let colors = [] // 创建一个数组
let count = colors.push('red', 'bl ...`,l:"JavaScript/base/array.html#push",a:"push"},"34.8":{t:"unshift()\r",p:`unshift()在数组开头添加任意多个值，然后返回新的数组长度
let colors = new Array() // 创建一个数组
let count = colors.unshift('red' ...`,l:"JavaScript/base/array.html#unshift",a:"unshift"},"34.9":{t:"splice()\r",p:`传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组
let colors = ['red', 'green', 'blue']
let removed = colors.sp ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"34.10":{t:"concat()\r",p:`首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组
let colors = ['red', 'green', 'blue']
let color ...`,l:"JavaScript/base/array.html#concat",a:"concat"},"34.11":{t:"删\r",p:`下面三种都会影响原数组，最后一项不影响原数组：

pop()
shift()
splice()
slice()

`,l:"JavaScript/base/array.html#删",a:"删"},"34.12":{t:"pop()\r",p:`pop() 方法用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.pop() / ...`,l:"JavaScript/base/array.html#pop",a:"pop"},"34.13":{t:"shift()\r",p:`shift()方法用于删除数组的第一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.shift() ...`,l:"JavaScript/base/array.html#shift",a:"shift"},"34.14":{t:"splice()\r",p:`传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组
let colors = ['red', 'green', 'blue']
let removed = colors.splice ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"34.15":{t:"slice()\r",p:`slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组
let colors = ['red', 'green', 'blue', 'yellow', 'purple']
 ...`,l:"JavaScript/base/array.html#slice",a:"slice"},"34.16":{t:"改\r",p:`即修改原来数组的内容，常用splice
`,l:"JavaScript/base/array.html#改",a:"改"},"34.17":{t:"splice()\r",p:`传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响
let colors = ['red', 'green', 'blue']
let remo ...`,l:"JavaScript/base/array.html#splice",a:"splice"},"34.18":{t:"查\r",p:`即查找元素，返回元素坐标或者元素值

indexOf()
includes()
find()

`,l:"JavaScript/base/array.html#查",a:"查"},"34.19":{t:"indexOf()\r",p:`返回要查找的元素在数组中的位置，如果没找到则返回 -1
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.indexOf(4) // 3

`,l:"JavaScript/base/array.html#indexof",a:"indexof"},"34.20":{t:"includes()\r",p:`返回要查找的元素在数组中的位置，找到返回true，否则false
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.includes(4) // tr ...`,l:"JavaScript/base/array.html#includes",a:"includes"},"34.21":{t:"find()\r",p:`返回第一个匹配的元素
const people = [
  {
    name: 'Matt',
    age: 27
  },
  {
    name: 'Nicholas',
    age ...`,l:"JavaScript/base/array.html#find",a:"find"},"34.22":{t:"二、排序方法\r",p:`数组有两个方法可以用来对元素重新排序：

reverse()
sort()

`,l:"JavaScript/base/array.html#二、排序方法",a:"二、排序方法"},"34.23":{t:"reverse()\r",p:`顾名思义，将数组元素方向反转
let values = [1, 2, 3, 4, 5]
values.reverse()
console.log(values) // 5,4,3,2,1

`,l:"JavaScript/base/array.html#reverse",a:"reverse"},"34.24":{t:"sort()\r",p:`sort()方法接受一个比较函数，用于判断哪个值应该排在前面
function compare(value1, value2) {
  if (value1 &lt; value2) {
    re ...`,l:"JavaScript/base/array.html#sort",a:"sort"},"34.25":{t:"三、转换方法\r",p:`常见的转换方法有：
`,l:"JavaScript/base/array.html#三、转换方法",a:"三、转换方法"},"34.26":{t:"join()\r",p:`join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串
let colors = ['red', 'green', 'blue']
console.log(colors.join(', ...`,l:"JavaScript/base/array.html#join",a:"join"},"34.27":{t:"四、迭代方法\r",p:`常用来迭代数组的方法（都不改变原数组）有如下：

some()
every()
forEach()
filter()
map()

`,l:"JavaScript/base/array.html#四、迭代方法",a:"四、迭代方法"},"34.28":{t:"some()\r",p:`对数组每一项都运行传入的测试函数，如果至少有 1 个元素返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let some ...`,l:"JavaScript/base/array.html#some",a:"some"},"34.29":{t:"every()\r",p:`对数组每一项都运行传入的测试函数，如果所有元素都返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let everyRes ...`,l:"JavaScript/base/array.html#every",a:"every"},"34.30":{t:"forEach()\r",p:`对数组每一项都运行传入的函数，没有返回值
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.forEach((item, index, array)  ...`,l:"JavaScript/base/array.html#foreach",a:"foreach"},"34.31":{t:"filter()\r",p:`对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let filterResult = nu ...`,l:"JavaScript/base/array.html#filter",a:"filter"},"34.32":{t:"map()\r",p:`对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let mapResult = numbers.m ...`,l:"JavaScript/base/array.html#map",a:"map"},"35.0":{t:"# JavaScript 流程控制\r",p:"\r",l:"JavaScript/base/flow.html",a:"javascript-流程控制"},"35.1":{t:"if 语句\r",p:`流程控制语句可以用来改变程序执行的顺序

条件判断语句
条件分支语句
循环语句

if (i &gt; 1) {
  alert('yes')
} else {
  alert('no')
}

// ...`,l:"JavaScript/base/flow.html#if-语句",a:"if-语句"},"35.2":{t:"if-else\r",p:`if-else 语句：

语法：

if(条件表达式){
  语句...
}else if(条件表达式1){
  语句...
}else if(条件表达式2){
  语句...
}else{
  语句 ...`,l:"JavaScript/base/flow.html#if-else",a:"if-else"},"35.3":{t:"switch 语句\r",p:`switch 语句 - 语法：

switch(表达式){
    case 表达式1:
        代码...
        break
    case 表达式2:
        代码.. ...`,l:"JavaScript/base/flow.html#switch-语句",a:"switch-语句"},"35.4":{t:"循环语句\r",p:`

通过循环语句可以使指定的代码反复执行


JS 中一共有三种循环语句

while 语句
do-while 语句
for 语句 - while 语句 - 语法：



`,l:"JavaScript/base/flow.html#循环语句",a:"循环语句"},"35.5":{t:"while\r",p:`// while(条件表达式){
//     语句...
// }
var i = 0
while (i &lt; 10) {
  i += 2
}

::: tip while 执行流程：
whi ...`,l:"JavaScript/base/flow.html#while",a:"while"},"35.6":{t:"do-while\r",p:`let i = 10
do {
  console.log(i)
  i++
} while (i &lt; 5)

::: tip do-while 执行顺序
do-while 语句在执行时，会先执 ...`,l:"JavaScript/base/flow.html#do-while",a:"do-while"},"35.7":{t:"for\r",p:"\r",l:"JavaScript/base/flow.html#for",a:"for"},"35.8":{t:"`for` 循环\r",p:`for (let i = 0; i &lt; 5; i++) {
  console.log(i)
}

`,l:"JavaScript/base/flow.html#for-循环",a:"for-循环"},"35.9":{t:"`for in` 循环\r",p:`
用于遍历对象的可枚举属性。
语法：

for (变量 in 对象) {
  // 需要执行的代码
}

示例：
const obj = { a: 1, b: 2, c: 3 }
for (let p ...`,l:"JavaScript/base/flow.html#for-in-循环",a:"for-in-循环"},"35.10":{t:"` for of` 循环\r",p:`

用于遍历可迭代的集合，如数组、字符串、映射（Map）、集合（Set）等。


语法：


for (变量 of 可迭代对象) {
  // 需要执行的代码
}


示例：

const arr = ...`,l:"JavaScript/base/flow.html#for-of-循环",a:"for-of-循环"},"35.11":{t:"break 和 continue\r",p:`

break

break 用来终止 switch 和循环语句
break 执行后，当前的 switch 或循环会立刻停止
break 会终止离他最近的循环



for (let i = 0; i ...`,l:"JavaScript/base/flow.html#break-和-continue",a:"break-和-continue"},"36.0":{t:"# JavaScript 函数\r",p:`
在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。
虽然 for 循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数 ...`,l:"JavaScript/base/function.html",a:"javascript-函数"},"36.1":{t:"函数的使用\r",p:"\r",l:"JavaScript/base/function.html#函数的使用",a:"函数的使用"},"36.2":{t:"声明函数\r",p:`function是声明函数的关键字，必须小写
// 声明定义方式
function 函数名() {
    // 函数体代码
}

// 这是函数表达式写法，匿名函数后面跟分号结束
var 变量名 = ...`,l:"JavaScript/base/function.html#声明函数",a:"声明函数"},"36.3":{t:"调用函数\r",p:`函数名();
// 函数使用分为两步： 声明函数 和 调用函数
// 1. 声明函数
// function 函数名() {
//     // 函数体
// }
function sayHi() { ...`,l:"JavaScript/base/function.html#调用函数",a:"调用函数"},"36.4":{t:"函数的封装\r",p:`函数的封装：是把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。
`,l:"JavaScript/base/function.html#函数的封装",a:"函数的封装"},"36.5":{t:"函数的参数\r",p:"\r",l:"JavaScript/base/function.html#函数的参数",a:"函数的参数"},"36.6":{t:"形参和实参\r",p:`
在声明函数时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为形参
在调用该函数时，同样也需要传递相应的参数，这些参数被称为实参

参数的作用: 在函数内部某些值不能固定，我们可以通过参数在 ...`,l:"JavaScript/base/function.html#形参和实参",a:"形参和实参"},"36.7":{t:"函数形参和实参个数不匹配问题\r",p:`


参数个数
说明




实参个数等于形参个数
输出正确结果


实参个数多于形参个数
只取到形参的个数


实参个数少于形参个数
多的参数定义为 undefined



// 函数形参实参个数 ...`,l:"JavaScript/base/function.html#函数形参和实参个数不匹配问题",a:"函数形参和实参个数不匹配问题"},"36.8":{t:"函数的返回值\r",p:`有的时候，我们会希望函数将值返回给调用者，此时通过使用 return 语句就可以实现。
语法格式
// 声明函数
function 函数名（）{
    ...
    return  需要返回的值； ...`,l:"JavaScript/base/function.html#函数的返回值",a:"函数的返回值"},"36.9":{t:"break、continue、return 的区别\r",p:`
break：结束当前的循环体（如 for、while）
continue：跳出本次循环，继续执行下次循环（如 for、while）
return：不仅可以退出循环，还能够返回 return 语句中的 ...`,l:"JavaScript/base/function.html#break、continue、return-的区别",a:"break、continue、return-的区别"},"36.10":{t:"匿名函数\r",p:`函数可以分为具名函数和匿名函数
匿名函数：没有名字的函数,无法直接使用。
`,l:"JavaScript/base/function.html#匿名函数",a:"匿名函数"},"36.11":{t:"函数表达式\r",p:`// 声明
let fn = function () {
  console.log('函数表达式')
}
// 调用
fn()

`,l:"JavaScript/base/function.html#函数表达式",a:"函数表达式"},"36.12":{t:"立即执行函数\r",p:`(function(){ xxx  })();
(function(){ xxxx }());

::: tip
无需调用，立即执行，其实本质已经调用了
多个立即执行函数之间用分号隔开
:::
`,l:"JavaScript/base/function.html#立即执行函数",a:"立即执行函数"},"37.0":{t:"# JavaScript 基本语法\r",p:`JavaScript 是一种脚本语言，通常用于在 Web 浏览器中编写交互式前端代码。它也可以在服务器端运行，用于编写后端代码。
JavaScript 的语法类似于 C 语言，但它是一种解释性语言，不 ...`,l:"JavaScript/base/index.html",a:"javascript-基本语法"},"37.1":{t:"输出语句\r",p:`以下是一个简单的 JavaScript 示例：
// 输出Hello, World!
console.log('Hello, World!')

document.write('Hello World ...`,l:"JavaScript/base/index.html#输出语句",a:"输出语句"},"37.2":{t:"引入方式\r",p:`
JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 script 标签将 JavaScript 代码引入到 HTML 中，有两种 ...`,l:"JavaScript/base/index.html#引入方式",a:"引入方式"},"37.3":{t:"内部方式\r",p:`通过 script 标签包裹 JavaScript 代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
  ...`,l:"JavaScript/base/index.html#内部方式",a:"内部方式"},"37.4":{t:"外部方式\r",p:`
一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 script 标签的 src 属性引入
script标签如果带src属性，那么内部的 js 代码没有作用



`,l:"JavaScript/base/index.html#外部方式",a:"外部方式"},"37.5":{t:"注释\r",p:"\r",l:"JavaScript/base/index.html#注释",a:"注释"},"37.6":{t:"单行注释\r",p:`使用 //  注释单行代码， 快捷键 Ctrl + /


`,l:"JavaScript/base/index.html#单行注释",a:"单行注释"},"37.7":{t:"多行注释\r",p:`使用/* */注释多行代码，快捷键 Shift+Alt+A


`,l:"JavaScript/base/index.html#多行注释",a:"多行注释"},"38.0":{t:"# JavaScript 对象\r",p:"\r",l:"JavaScript/base/object.html",a:"javascript-对象"},"38.1":{t:"概述\r",p:"\r",l:"JavaScript/base/object.html#概述",a:"概述"},"38.2":{t:"生成方法\r",p:`对象（object）是 JavaScript 语言的核心概念，也是最重要的数据类型。
什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合。
var obj ...`,l:"JavaScript/base/object.html#生成方法",a:"生成方法"},"38.3":{t:"键名\r",p:`对象的所有键名都是字符串（ES6 又引入了 Symbol 值也可以作为键名），所以加不加引号都可以。上面的代码也可以写成下面这样。
var obj = {
  foo: 'Hello',
  bar: ...`,l:"JavaScript/base/object.html#键名",a:"键名"},"38.4":{t:"对象的引用\r",p:`如果不同的变量名指向同一个对象，那么它们都是这个对象的引用，也就是说指向同一个内存地址。修改其中一个变量，会影响到其他所有变量。
var o1 = {}
var o2 = o1

o1.a = 1
o ...`,l:"JavaScript/base/object.html#对象的引用",a:"对象的引用"},"38.5":{t:"表达式还是语句？\r",p:`对象采用大括号表示，这导致了一个问题：如果行首是一个大括号，它到底是表达式还是语句？
{
  foo: 123
}

JavaScript 引擎读到上面这行代码，会发现可能有两种含义。第一种可能是，这 ...`,l:"JavaScript/base/object.html#表达式还是语句",a:"表达式还是语句"},"38.6":{t:"属性的操作\r",p:"\r",l:"JavaScript/base/object.html#属性的操作",a:"属性的操作"},"38.7":{t:"属性的读取\r",p:`读取对象的属性，有两种方法，一种是使用点运算符，还有一种是使用方括号运算符。
var obj = {
  p: 'Hello World'
}

obj.p // &quot;Hello World& ...`,l:"JavaScript/base/object.html#属性的读取",a:"属性的读取"},"38.8":{t:"属性的赋值\r",p:`点运算符和方括号运算符，不仅可以用来读取值，还可以用来赋值。
var obj = {}

obj.foo = 'Hello'
obj['bar'] = 'World'

上面代码中，分别使用点运算符和 ...`,l:"JavaScript/base/object.html#属性的赋值",a:"属性的赋值"},"38.9":{t:"属性的查看\r",p:`查看一个对象本身的所有属性，可以使用Object.keys方法。
var obj = {
  key1: 1,
  key2: 2
}

Object.keys(obj)
// ['key1', 'k ...`,l:"JavaScript/base/object.html#属性的查看",a:"属性的查看"},"38.10":{t:"属性的删除：delete 命令\r",p:`delete命令用于删除对象的属性，删除成功后返回true。
var obj = { p: 1 }
Object.keys(obj) // [&quot;p&quot;]

delete obj.p  ...`,l:"JavaScript/base/object.html#属性的删除-delete-命令",a:"属性的删除-delete-命令"},"38.11":{t:"属性是否存在：in 运算符\r",p:`in运算符用于检查对象是否包含某个属性（注意，检查的是键名，不是键值），如果包含就返回true，否则返回false。它的左边是一个字符串，表示属性名，右边是一个对象。
var obj = { p: 1 ...`,l:"JavaScript/base/object.html#属性是否存在-in-运算符",a:"属性是否存在-in-运算符"},"38.12":{t:"属性的遍历：for...in 循环\r",p:`for...in循环用来遍历一个对象的全部属性。
var obj = { a: 1, b: 2, c: 3 }

for (var i in obj) {
  console.log('键名：', i ...`,l:"JavaScript/base/object.html#属性的遍历-for-in-循环",a:"属性的遍历-for-in-循环"},"38.13":{t:"with 语句\r",p:`with语句的格式如下：
with (对象) {
  语句
}

它的作用是操作同一个对象的多个属性时，提供一些书写的方便。
// 例一
var obj = {
  p1: 1,
  p2: 2
}
 ...`,l:"JavaScript/base/object.html#with-语句",a:"with-语句"},"39.0":{t:"# JavaScript 运算符\r",p:"\r",l:"JavaScript/base/operator.html",a:"javascript-运算符"},"39.1":{t:"运算符\r",p:`运算符也被称为操作符，是用于实现赋值、比较和执行算数运算等动能的符号。
JavaScript 中常用的运算符有：

算数运算符
递增和递减运算符
比较运算符
逻辑运算符
赋值运算符

`,l:"JavaScript/base/operator.html#运算符",a:"运算符"},"39.2":{t:"算数运算符\r",p:`


运算符
描述
实例




+
加
1 + 2 = 3


-
减
3 - 2 = 1


*
乘
2 * 4 = 8


/
除
10 / 2 = 5


**
幂运算
2 ** 4 = 16 ...`,l:"JavaScript/base/operator.html#算数运算符",a:"算数运算符"},"39.3":{t:"赋值运算符\r",p:`


运算符名称
描述
实例




=
赋值
let a = 10


??=
空赋值&lt;br /&gt;只有当变量的值为 null 或 undefined 时才会对变量进行赋值
3 - 2 = ...`,l:"JavaScript/base/operator.html#赋值运算符",a:"赋值运算符"},"39.4":{t:"自增和自减\r",p:"\r",l:"JavaScript/base/operator.html#自增和自减",a:"自增和自减"},"39.5":{t:"++ 自增运算符\r",p:`
++ 使用后会使得原来的变量立刻增加 1
自增分为前自增(++a)和后自增(a++)
无论是++a 还是 a++都会使原变量立刻增加 1
不同的是++a 和 a++所返回的值不同
a++ 是自增前的 ...`,l:"JavaScript/base/operator.html#自增运算符",a:"自增运算符"},"39.6":{t:"-- 自减运算符\r",p:`
使用后会使得原来的变量立刻减小 1
自减分为前自减(--a)和后自减(a--)
无论是--a 还是 a--都会使原变量立刻减少 1
不同的是--a 和 a--的值不同
--a 是新值
a-- 是旧值 ...`,l:"JavaScript/base/operator.html#自减运算符",a:"自减运算符"},"39.7":{t:"比较运行符\r",p:`


运算符名称
描述
案列
结果




&lt;
小于号
1 &lt; 2
true


&gt;
大于号
1 &gt; 2
false


&lt;=
小于等于号
2 &lt;= 2
true
 ...`,l:"JavaScript/base/operator.html#比较运行符",a:"比较运行符"},"39.8":{t:"逻辑运算符\r",p:"\r",l:"JavaScript/base/operator.html#逻辑运算符",a:"逻辑运算符"},"39.9":{t:"逻辑与 `&&`\r",p:`一假即假


可以对两个值进行与运算


当&amp;&amp;左右都为 true 时，则返回 true，否则返回 false


与运算是短路的与，如果第一个值为 false，则不看第二个值


与 ...`,l:"JavaScript/base/operator.html#逻辑与",a:"逻辑与"},"39.10":{t:"逻辑或 `||`\r",p:`一真即真


可以对两个值进行或运算


当||左右有 true 时，则返回 true，否则返回 false


或运算也是短路的或，如果第一个值为 true，则不看第二个值


或运算是找 true ...`,l:"JavaScript/base/operator.html#逻辑或",a:"逻辑或"},"39.11":{t:"逻辑非 `!`\r",p:`console.log(!false) // true

`,l:"JavaScript/base/operator.html#逻辑非",a:"逻辑非"},"39.12":{t:"条件运算符\r",p:`
条件表达式 ? 表达式 1 : 表达式 2

::: tip 执行顺序：
条件运算符在执行时，会先对条件表达式进行求值判断

如果结果为 true，则执行表达式 1
如果结果为 false，则执行表 ...`,l:"JavaScript/base/operator.html#条件运算符",a:"条件运算符"},"39.13":{t:" 运算符的优先级\r",p:`JavaScript 各种运算符的优先级别（Operator Precedence）是不一样的。优先级高的运算符先执行，优先级低的运算符后执行。
4 + 5 * 6 // 34

圆括号（()）可以用 ...`,l:"JavaScript/base/operator.html#运算符的优先级",a:"运算符的优先级"},"40.0":{t:"# Js 字符串的常用方法\r",p:"\r",l:"JavaScript/base/string.html",a:"js-字符串的常用方法"},"40.1":{t:"一、操作方法\r",p:`我们也可将字符串常用的操作方法归纳为增、删、改、查，需要知道字符串的特点是一旦创建了，就不可变
`,l:"JavaScript/base/string.html#一、操作方法",a:"一、操作方法"},"40.2":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"JavaScript/base/string.html#增",a:"增"},"40.3":{t:"concat()\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = 'hello '
let result = stringValue.concat('world')
console.log ...`,l:"JavaScript/base/string.html#concat",a:"concat"},"40.4":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"JavaScript/base/string.html#删",a:"删"},"40.5":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"JavaScript/base/string.html#改",a:"改"},"40.6":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = ' hello world '
let trimmedStringValue = stringValue.trim() ...`,l:"JavaScript/base/string.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"40.7":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = 'na '
let copyResult = stringValue.repeat(2)  ...`,l:"JavaScript/base/string.html#repeat",a:"repeat"},"40.8":{t:"padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
let stringValue = 'foo'
console.log(stringValue.padStart(6)) // & ...`,l:"JavaScript/base/string.html#padend",a:"padend"},"40.9":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = 'hello world'
console.log(stringValue.toUpperCase()) // &quot;HELLO WORLD&qu ...`,l:"JavaScript/base/string.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"40.10":{t:"查\r",p:`除了通过索引的方式获取字符串的值，还可通过：


chatAt()


indexOf()


startWith()


includes()


`,l:"JavaScript/base/string.html#查",a:"查"},"40.11":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = 'abcde'
console.log(message.charAt(2)) // &quot;c&quot;

`,l:"JavaScript/base/string.html#charat",a:"charat"},"40.12":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = 'hello world'
console.log(stringValue.indexOf ...`,l:"JavaScript/base/string.html#indexof",a:"indexof"},"40.13":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = 'foobarbaz'
console.log(message.startsWith('foo')) // tr ...`,l:"JavaScript/base/string.html#startwith-、includes",a:"startwith-、includes"},"40.14":{t:"二、转换方法\r",p:"\r",l:"JavaScript/base/string.html#二、转换方法",a:"二、转换方法"},"40.15":{t:"split()\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = '12+23+34'
let arr = str.split('+') // [12,23,34]

`,l:"JavaScript/base/string.html#split",a:"split"},"40.16":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"JavaScript/base/string.html#三、模板匹配方法",a:"三、模板匹配方法"},"40.17":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = 'cat, bat, sat, fat'
let pattern = /.at/
let mat ...`,l:"JavaScript/base/string.html#match",a:"match"},"40.18":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = 'cat, bat, sat, fat'
let pos = text ...`,l:"JavaScript/base/string.html#search",a:"search"},"40.19":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = 'cat, bat, sat, fat'
let result = text.replace('at', ...`,l:"JavaScript/base/string.html#replace",a:"replace"},"41.0":{t:"# JavaScript 数据类型\r",p:"\r",l:"JavaScript/base/types.html",a:"javascript-数据类型"},"41.1":{t:"一、基本类型\r",p:`基本类型主要为以下 6 种：

Number
String
Boolean
Undefined
null
symbol

`,l:"JavaScript/base/types.html#一、基本类型",a:"一、基本类型"},"41.2":{t:"Number\r",p:`数值最常见的整数类型格式则为十进制，还可以设置八进制（零开头）、十六进制（0x 开头）
let intNum = 55 // 10进制的55
let num1 = 070 // 8进制的56
let  ...`,l:"JavaScript/base/types.html#number",a:"number"},"41.3":{t:"Undefined\r",p:`Undefined 类型只有一个值，就是特殊值 undefined。当使用 var 或 let 声明了变量但没有初始化时，就相当于给变量赋予了 undefined 值
let message
cons ...`,l:"JavaScript/base/types.html#undefined",a:"undefined"},"41.4":{t:"String\r",p:`字符串可以使用双引号（&quot;）、单引号（'）或反引号（\`）标示
let firstName = 'John'
let lastName = 'Jacob'
let lastName = \`Jin ...`,l:"JavaScript/base/types.html#string",a:"string"},"41.5":{t:"Null\r",p:`Null 类型同样只有一个值，即特殊值 null
逻辑上讲， null 值表示一个空对象指针，这也是给typeof 传一个 null 会返回 &quot;object&quot; 的原因
let ca ...`,l:"JavaScript/base/types.html#null",a:"null"},"41.6":{t:"Boolean\r",p:`Boolean （布尔值）类型有两个字面值： true 和 false
通过Boolean可以将其他类型的数据转化成布尔值
规则如下：
数据类型      				转换为 true 的值      	 ...`,l:"JavaScript/base/types.html#boolean",a:"boolean"},"41.7":{t:"Symbol\r",p:`Symbol （符号）是原始值，且符号实例是唯一、不可变的。符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险
let genericSymbol = Symbol()
let other ...`,l:"JavaScript/base/types.html#symbol",a:"symbol"},"41.8":{t:"二、引用类型\r",p:`复杂类型统称为Object，我们这里主要讲述下面三种：

Object
Array
Function

`,l:"JavaScript/base/types.html#二、引用类型",a:"二、引用类型"},"41.9":{t:"Object\r",p:`创建object常用方式为对象字面量表示法，属性名可以是字符串或数值
let person = {
  name: 'Nicholas',
  age: 29,
  5: true
}

`,l:"JavaScript/base/types.html#object",a:"object"},"41.10":{t:"Array\r",p:`JavaScript数组是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。并且，数组也是动态大小的，会随着数据添加而自动增长
let colors = ['red', 2, ...`,l:"JavaScript/base/types.html#array",a:"array"},"41.11":{t:"Function\r",p:`函数实际上是对象，每个函数都是 Function类型的实例，而 Function 也有属性和方法，跟其他引用类型一样
函数存在三种常见的表达方式：

函数声明

// 函数声明
function su ...`,l:"JavaScript/base/types.html#function",a:"function"},"41.12":{t:"其他引用类型\r",p:`除了上述说的三种之外，还包括Date、RegExp、Map、Set等......
`,l:"JavaScript/base/types.html#其他引用类型",a:"其他引用类型"},"41.13":{t:"三、类型转换\r",p:`类型转换指将一种数据类型转换为其他类型
`,l:"JavaScript/base/types.html#三、类型转换",a:"三、类型转换"},"41.14":{t:"转换为字符串\r",p:`// 1. 把数字转换为字符串型 变量.toString()
var num = 10
var str = num.toString()
console.log(typeof str, str) // ...`,l:"JavaScript/base/types.html#转换为字符串",a:"转换为字符串"},"41.15":{t:"转换为数字型\r",p:`
将其他的数据类型转换为数值

使用 Number()函数来将其他类型转换为数值
转换的情况：

字符串：

如果字符串是一个合法的数字，则会自动转换为对应的数字
如果字符串不是合法数字，则转换为 N ...`,l:"JavaScript/base/types.html#转换为数字型",a:"转换为数字型"},"41.16":{t:"转换为布尔型\r",p:`使用 Boolean()函数来将其他类型转换为布尔值


转换的情况：
数字：

0 和 NaN 转换为 false
其余是 true

字符串：

空串 转换为 false
其余是 true

nu ...`,l:"JavaScript/base/types.html#转换为布尔型",a:"转换为布尔型"},"41.17":{t:"四、存储区别\r",p:`基本数据类型和引用数据类型存储在内存中的位置不同：


基本数据类型存储在栈中


引用类型的对象存储于堆中


当我们把变量赋值给一个变量时，解析器首先要确认的就是这个值是基本类型值还是引用类型值
 ...`,l:"JavaScript/base/types.html#四、存储区别",a:"四、存储区别"},"41.18":{t:"基本类型\r",p:`let a = 10
let b = a // 赋值操作
b = 20
console.log(a) // 10值

a的值为一个基本类型，是存储在栈中，将a的值赋给b，虽然两个变量的值相等，但是两个 ...`,l:"JavaScript/base/types.html#基本类型",a:"基本类型"},"41.19":{t:"引用类型\r",p:`var obj1 = {}
var obj2 = obj1
obj2.name = 'zs'
console.log(obj1.name) // zs

引用类型数据存放在堆中，每个堆内存对象都有对应 ...`,l:"JavaScript/base/types.html#引用类型",a:"引用类型"},"41.20":{t:"小结\r",p:`
声明变量时不同的内存地址分配：

简单类型的值存放在栈中，在栈中存放的是对应的值
引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址


不同的类型数据导致赋值变量时的不同：

简单类型赋值 ...`,l:"JavaScript/base/types.html#小结",a:"小结"},"42.0":{t:"# JavaScript 变量\r",p:"\r",l:"JavaScript/base/variable.html",a:"javascript-变量"},"42.1":{t:"var 关键字\r",p:`var msg // 默认 undefined

声明后可以改变类型，但不推荐
var msg = 'hi'
msg = 100 // 合法，但不推荐

var 声明作用域，一个函数内部定义一个变量， ...`,l:"JavaScript/base/variable.html#var-关键字",a:"var-关键字"},"42.2":{t:"let 声明\r",p:`let 声明的范围是块作用域：
if (true) {
  var name = 'zhangsan'
  console.log(name) // zhangsan
}
console.log(na ...`,l:"JavaScript/base/variable.html#let-声明",a:"let-声明"},"42.3":{t:"暂时性死区\r",p:`// name 会被提升
console.log(name) // undefined
var name = 'zhangsan'
// age 不会被提升
console.log(age) // R ...`,l:"JavaScript/base/variable.html#暂时性死区",a:"暂时性死区"},"42.4":{t:"全局声明\r",p:`let 在全局作用域中声明的变量不会成为 window 对象的属性（var 声明的变量则会）
var name = 'zhangsan'
console.log(window.name) // 'zh ...`,l:"JavaScript/base/variable.html#全局声明",a:"全局声明"},"42.5":{t:"条件声明\r",p:`


JavaScript 引擎会自动将多余的声明在作用域顶部合并为一个声明。但是 let 是块级作用域，所以检查不到之前是否声明过。



try/catch 语句或 typeof 操作符也不能解决 ...`,l:"JavaScript/base/variable.html#条件声明",a:"条件声明"},"42.6":{t:"for 循环中的 let 声明\r",p:`使用 var 时变量会渗透到外面
for (var i = 0; i &lt; 5; ++i) {
  // 循环逻辑
}
console.log(i) // 5

let 之后则不会，因为遇到 {} ...`,l:"JavaScript/base/variable.html#for-循环中的-let-声明",a:"for-循环中的-let-声明"},"42.7":{t:"const 声明\r",p:`const 的行为与 let 基本相同，但是他是常量，声明之后不能修改，尝试修改 const 声明的变量会导致运行时错误。
const age = 18
age = 30 // TypeError:  ...`,l:"JavaScript/base/variable.html#const-声明",a:"const-声明"},"42.8":{t:"函数声明提升与 var 声明提升\r",p:`var a = 'Tom'
function a() {}

console.log(a) // 'Tom'

function与var都存在变量提升，但function比var优先级高。上面的代码就 ...`,l:"JavaScript/base/variable.html#函数声明提升与-var-声明提升",a:"函数声明提升与-var-声明提升"},"43.0":{t:"# BOM document 对象\r",p:`Document 对象代表当前窗口或标签页中加载的文档。它提供了对文档内容进行访问和操作的方法和属性。
`,l:"JavaScript/BOM/document.html",a:"bom-document-对象"},"43.1":{t:"常见操作\r",p:`
获取元素：可以使用document.getElementById(id)获取具有指定 id 的元素。
修改文档结构：可以使用document.createElement(tagName)创建新元素， ...`,l:"JavaScript/BOM/document.html#常见操作",a:"常见操作"},"43.2":{t:"示例\r",p:`// 获取具有id为&quot;myElement&quot;的元素
var element = document.getElementById('myElement')

// 创建一个新的段落元素 ...`,l:"JavaScript/BOM/document.html#示例",a:"示例"},"44.0":{t:"# BOM history 对象\r",p:`History 对象提供了对浏览器历史记录的操作。可以使用它向前或向后导航，加载历史记录中的不同页面。
`,l:"JavaScript/BOM/history.html",a:"bom-history-对象"},"44.1":{t:"常见方法\r",p:`
history.back()：导航到上一个页面。
history.forward()：导航到下一个页面。
history.go(delta)：导航到相对于当前页面的偏移量为delta的页面。

`,l:"JavaScript/BOM/history.html#常见方法",a:"常见方法"},"44.2":{t:"示例\r",p:`// 导航到上一个页面
history.back()

// 导航到下一个页面
history.forward()

// 导航到相对于当前页面的偏移量为2的页面
history.go(2)

`,l:"JavaScript/BOM/history.html#示例",a:"示例"},"45.0":{t:"# JavaScript BOM\r",p:`BOM（Browser Object Model）是 JavaScript 中用于与浏览器交互的一组对象和方法集合。它提供了访问和控制浏览器窗口及其内容的功能。以下是一些常见的 BOM 对象：


w ...`,l:"JavaScript/BOM/index.html",a:"javascript-bom"},"46.0":{t:"# BOM location 对象\r",p:`Location 对象提供了与当前窗口的 URL 相关的信息和操作。它包含了 URL 的各个部分，如协议、主机名、路径和查询参数等。
`,l:"JavaScript/BOM/location.html",a:"bom-location-对象"},"46.1":{t:"常见属性和方法\r",p:`
location.href：当前窗口的完整 URL。
location.protocol：URL 的协议部分。
location.hostname：URL 的主机名部分。
location.path ...`,l:"JavaScript/BOM/location.html#常见属性和方法",a:"常见属性和方法"},"46.2":{t:"示例\r",p:`// 获取当前窗口的URL
console.log(location.href)

// 获取URL的协议
console.log(location.protocol)

// 将页面重定向到新的UR ...`,l:"JavaScript/BOM/location.html#示例",a:"示例"},"47.0":{t:"# BOM navigator 对象\r",p:`Navigator 对象提供了关于浏览器的信息，如浏览器的名称、版本、用户代理字符串等。它还可以用于检测浏览器的功能和特性。
`,l:"JavaScript/BOM/navigator.html",a:"bom-navigator-对象"},"47.1":{t:"常见属性\r",p:`
navigator.userAgent：包含用户代理字符串，用于识别浏览器和操作系统。
navigator.appName：浏览器的名称。
navigator.appVersion：浏览器的版本。
 ...`,l:"JavaScript/BOM/navigator.html#常见属性",a:"常见属性"},"47.2":{t:"示例\r",p:`// 获取用户代理字符串
console.log(navigator.userAgent)

// 获取浏览器的名称
console.log(navigator.appName)

// 获取浏览器的 ...`,l:"JavaScript/BOM/navigator.html#示例",a:"示例"},"48.0":{t:"# BOM screen 对象\r",p:`Screen 对象提供了关于用户屏幕的信息，如屏幕的尺寸、分辨率等。可以使用它来调整页面在不同屏幕上的显示。
`,l:"JavaScript/BOM/screen.html",a:"bom-screen-对象"},"48.1":{t:"常见属性\r",p:`
screen.width：屏幕的宽度。
screen.height：屏幕的高度。
screen.availWidth：屏幕的可用宽度，不包括系统任务栏或工具栏。
screen.availHeight ...`,l:"JavaScript/BOM/screen.html#常见属性",a:"常见属性"},"48.2":{t:"示例\r",p:`// 获取屏幕的宽度
console.log('屏幕宽度：' + screen.width + ' 像素')

// 获取屏幕的高度
console.log('屏幕高度：' + screen.heig ...`,l:"JavaScript/BOM/screen.html#示例",a:"示例"},"49.0":{t:"# BOM window 对象\r",p:`Window 对象是 BOM 的顶级对象，表示浏览器窗口或标签页。它提供了操作浏览器窗口的方法和属性，以及与窗口内容交互的功能。
`,l:"JavaScript/BOM/window.html",a:"bom-window-对象"},"49.1":{t:"常见属性和方法\r",p:`
window.open(url, name, specs)：打开一个新的浏览器窗口或标签页。
window.close()：关闭当前窗口。
window.resizeTo(width, height ...`,l:"JavaScript/BOM/window.html#常见属性和方法",a:"常见属性和方法"},"49.2":{t:"示例\r",p:`// 打开一个新窗口
window.open('https://www.example.com', '_blank')

// 关闭当前窗口
window.close()

// 调整窗口大小
win ...`,l:"JavaScript/BOM/window.html#示例",a:"示例"},"50.0":{t:"# JavaScript Ajax\r",p:"\r",l:"JavaScript/core/ajax.html",a:"javascript-ajax"},"50.1":{t:"Ajax简介\r",p:`AJAX 全称(Async Javascript and XML)
即异步的 JavaScript 和 XML，是一种创建交互式网页应用的网页开发技术，可以在不重新加载整个网页的情况下，与服务器交换数 ...`,l:"JavaScript/core/ajax.html#ajax简介",a:"ajax简介"},"50.2":{t:"二、实现过程\r",p:`实现 Ajax 异步交互需要服务器逻辑进行配合，需要完成以下步骤：


创建 Ajax 的核心对象 XMLHttpRequest 对象


通过 XMLHttpRequest 对象的 open() 方 ...`,l:"JavaScript/core/ajax.html#二、实现过程",a:"二、实现过程"},"50.3":{t:"1. 创建 XMLHttpRequest 对象\r",p:`通过XMLHttpRequest() 构造函数用于初始化一个 XMLHttpRequest 实例对象
const xhr = new XMLHttpRequest()

`,l:"JavaScript/core/ajax.html#_1-创建-xmlhttprequest-对象",a:"_1-创建-xmlhttprequest-对象"},"50.4":{t:"2. 与服务器建立连接\r",p:`通过 XMLHttpRequest 对象的 open() 方法与服务器建立连接
xhr.open(method, url, [async][, user][, password])

参数说明：


 ...`,l:"JavaScript/core/ajax.html#_2-与服务器建立连接",a:"_2-与服务器建立连接"},"50.5":{t:"3. 给服务端发送数据\r",p:`通过 XMLHttpRequest 对象的 send() 方法，将客户端页面的数据发送给服务端
xhr.send([body])

body: 在 XHR 请求中要发送的数据体，如果不传递数据则为 n ...`,l:"JavaScript/core/ajax.html#_3-给服务端发送数据",a:"_3-给服务端发送数据"},"50.6":{t:"4. 绑定 onreadystatechange 事件\r",p:`onreadystatechange 事件用于监听服务器端的通信状态，主要监听的属性为XMLHttpRequest.readyState ,
关于XMLHttpRequest.readyState属性 ...`,l:"JavaScript/core/ajax.html#_4-绑定-onreadystatechange-事件",a:"_4-绑定-onreadystatechange-事件"},"50.7":{t:"三、封装与使用\r",p:"\r",l:"JavaScript/core/ajax.html#三、封装与使用",a:"三、封装与使用"},"50.8":{t:"封装\r",p:`通过上面对XMLHttpRequest 对象的了解，下面来封装一个简单的ajax请求
//封装一个ajax请求
function ajax(options) {
    //创建XMLHttpRequ ...`,l:"JavaScript/core/ajax.html#封装",a:"封装"},"50.9":{t:"使用\r",p:`使用方式如下
ajax({
  type: 'post',
  dataType: 'json',
  data: {},
  url: 'https://xxxx',
  success: func ...`,l:"JavaScript/core/ajax.html#使用",a:"使用"},"51.0":{t:"# JavaScript 闭包\r",p:`
闭包（Closure）是 JavaScript 中一种强大且常用的特性。它允许内部函数访问其外部函数的作用域，即使外部函数已经执行完毕，也可以继续访问。闭包可以捕获外部函数的变量和参数，并将其保存在 ...`,l:"JavaScript/core/closure.html",a:"javascript-闭包"},"51.1":{t:"创建闭包\r",p:`要创建一个闭包，通常需要在一个函数内部定义另一个函数，并将其返回。返回的函数就是闭包，它可以访问其外部函数中的变量和参数。
function outerFunction() {
  var outer ...`,l:"JavaScript/core/closure.html#创建闭包",a:"创建闭包"},"51.2":{t:"捕获外部变量\r",p:`闭包可以捕获并访问其外部函数的变量，即使外部函数已经执行完毕。这使得闭包可以在不同的上下文中使用和保留外部变量的状态。
function counter() {
  var count = 0

   ...`,l:"JavaScript/core/closure.html#捕获外部变量",a:"捕获外部变量"},"51.3":{t:"保护数据\r",p:`通过使用闭包，可以创建私有变量，这些变量无法从外部访问，只能通过内部函数提供的公共接口访问和修改。
function createPerson(name) {
  var age = 0

  fun ...`,l:"JavaScript/core/closure.html#保护数据",a:"保护数据"},"51.4":{t:"实际用途\r",p:`

封装私有变量和方法：通过使用闭包，可以创建私有变量和方法，将其封装在函数内部，只暴露公共接口给外部。这种方式可以避免全局命名冲突，并提供了一种模块化的封装方式。


创建工厂函数：通过使用闭包，可 ...`,l:"JavaScript/core/closure.html#实际用途",a:"实际用途"},"51.5":{t:"注意事项\r",p:`

闭包会导致内存占用增加，因为外部函数的变量和作用域在闭包中被保留，即使外部函数执行完毕也不会被释放。因此，在使用闭包时要注意内存管理，避免过度使用闭包导致内存泄漏。


闭包中的变量是引用传递的， ...`,l:"JavaScript/core/closure.html#注意事项",a:"注意事项"},"52.0":{t:"# JavaScript 深浅拷贝\r",p:"\r",l:"JavaScript/core/copy.html",a:"javascript-深浅拷贝"},"52.1":{t:"浅拷贝\r",p:`浅拷贝是创建一个新对象，新对象的属性值是原始对象属性值的引用。也就是说，新对象和原始对象共享相同的引用类型属性，对其中一个对象的修改会影响到另一个对象。
在 JavaScript 中，可以使用一些简单 ...`,l:"JavaScript/core/copy.html#浅拷贝",a:"浅拷贝"},"52.2":{t:"深拷贝\r",p:`深拷贝是创建一个新对象，新对象的属性值与原始对象的属性值完全独立，二者互不影响。
在 JavaScript 中，由于对象的属性可能是引用类型，所以需要递归复制对象的所有属性，包括嵌套的对象和数组。以下 ...`,l:"JavaScript/core/copy.html#深拷贝",a:"深拷贝"},"53.0":{t:"# JavaScript 函数柯里化\r",p:"\r",l:"JavaScript/core/currying.html",a:"javascript-函数柯里化"},"53.1":{t:"什么是函数柯里化\r",p:"JavaScript 函数柯里化是一种将多个参数的函数转化为一系列接受单个参数的函数的过程。通过函数柯里化，可以将原始函数分解为多个嵌套的函数，每个函数都接收一个参数，并返回一个新函数等待接收下一个参 ...",l:"JavaScript/core/currying.html#什么是函数柯里化",a:"什么是函数柯里化"},"53.2":{t:"函数柯里化的优点和应用场景\r",p:`

参数复用和定制：通过柯里化，可以将函数的一部分参数预先设置，然后在后续调用时只传递剩余的参数。这使得函数的复用和定制变得更加灵活和方便。


延迟执行：通过柯里化，可以将函数的执行延迟到后续的调用 ...`,l:"JavaScript/core/currying.html#函数柯里化的优点和应用场景",a:"函数柯里化的优点和应用场景"},"53.3":{t:"实现函数柯里化的方法\r",p:`在 JavaScript 中实现柯里化函数的方法有多种。下面是几种常见的实现方式：
`,l:"JavaScript/core/currying.html#实现函数柯里化的方法",a:"实现函数柯里化的方法"},"53.4":{t:"1. 使用闭包递归\r",p:`function curry(func) {
  return function curried(...args) {
    if (args.length &gt;= func.length) { ...`,l:"JavaScript/core/currying.html#_1-使用闭包递归",a:"_1-使用闭包递归"},"53.5":{t:"2. 使用递归和占位符\r",p:`function curry(func) {
  return function curried(...args) {
    if (args.includes(curry.placeholder) ...`,l:"JavaScript/core/currying.html#_2-使用递归和占位符",a:"_2-使用递归和占位符"},"53.6":{t:"3. 使用箭头函数和递归\r",p:`const curry = (func) =&gt; {
  const curried = (...args) =&gt;
    args.length &gt;= func.length ? f ...`,l:"JavaScript/core/currying.html#_3-使用箭头函数和递归",a:"_3-使用箭头函数和递归"},"54.0":{t:"# JavaScript 节流和防抖\r",p:`
在 JavaScript 中，节流（Throttling）和防抖（Debouncing）是两种常见的性能优化技术，用于限制函数的执行频率。它们可以帮助控制事件处理函数的触发次数，以减少资源消耗和提升 ...`,l:"JavaScript/core/debounce.html",a:"javascript-节流和防抖"},"54.1":{t:"节流\r",p:`节流函数适用事件：

window 的 resize、scroll
mousedown、mousemove
keyup、keydown ...

`,l:"JavaScript/core/debounce.html#节流",a:"节流"},"54.2":{t:"定义\r",p:`节流是一种控制函数执行频率的技术。当一个函数被频繁调用时，节流可以限制函数在一定时间间隔内只执行一次。
节流的实现思路是设置一个定时器，在函数被调用时先检查定时器是否存在。如果定时器不存在，则立即执行 ...`,l:"JavaScript/core/debounce.html#定义",a:"定义"},"54.3":{t:"其他写法\r",p:`
使用时间戳写法，事件会立即执行，停止触发后没有办法再次执行

function throttled1(fn, delay = 500) {
  let oldtime = Date.now()
   ...`,l:"JavaScript/core/debounce.html#其他写法",a:"其他写法"},"54.4":{t:"防抖\r",p:`防抖函数适用事件：

window 的 resize、scroll
mousedown、mousemove、keyup、keydown
表单事件 ...

`,l:"JavaScript/core/debounce.html#防抖",a:"防抖"},"54.5":{t:"定义\r",p:`防抖是一种控制函数执行频率的技术。当一个函数被频繁调用时，防抖可以延迟函数的执行，直到某个连续的时间段内没有新的函数调用发生。
防抖的实现思路是设置一个定时器，在函数被调用时先清除之前的定时器，并设置 ...`,l:"JavaScript/core/debounce.html#定义",a:"定义"},"54.6":{t:"立即执行\r",p:`防抖如果需要立即执行，可加入第三个参数用于判断，实现如下：
function debounce(func, wait, immediate) {
  let timeout

  return fun ...`,l:"JavaScript/core/debounce.html#立即执行",a:"立即执行"},"54.7":{t:"用法\r",p:`
导入或定义防抖|节流函数

function debounce(func, delay) {
  let timerId
  return function (...args) {
    clea ...`,l:"JavaScript/core/debounce.html#用法",a:"用法"},"55.0":{t:"# 数组去重\r",p:`const arr = [1, 1, '1', 17, true, true, false, false, 'true', 'a', {}, {}]
// =&gt; [1, '1', 17, tru ...`,l:"JavaScript/core/duplicate.html",a:"数组去重"},"55.1":{t:"1. 使用 set\r",p:`const newArr = Array.from(new Set(arr))

`,l:"JavaScript/core/duplicate.html#_1-使用-set",a:"_1-使用-set"},"55.2":{t:"2. for 循环\r",p:`const unique = (arr) =&gt; {
  let len = arr.length
  for (let i = 0; i &lt; len; i++) {
    for (le ...`,l:"JavaScript/core/duplicate.html#_2-for-循环",a:"_2-for-循环"},"55.3":{t:"3. 使用 indexOf\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (re ...`,l:"JavaScript/core/duplicate.html#_3-使用-indexof",a:"_3-使用-indexof"},"55.4":{t:"4. 使用 include\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (!r ...`,l:"JavaScript/core/duplicate.html#_4-使用-include",a:"_4-使用-include"},"55.5":{t:"5. 使用 filter\r",p:`const unique = (arr) =&gt; {
  return arr.filter((item, index) =&gt; {
    return arr.indexOf(item)  ...`,l:"JavaScript/core/duplicate.html#_5-使用-filter",a:"_5-使用-filter"},"55.6":{t:"6. 使用 Map\r",p:`const unique = (arr) =&gt; {
  const map = new Map()
  const res = []
  for (let i = 0; i &lt; arr.l ...`,l:"JavaScript/core/duplicate.html#_6-使用-map",a:"_6-使用-map"},"56.0":{t:"# 数组扁平化\r",p:`
数组扁平化是指将一个多维数组变为一个一维数组

const arr = [1, [2, [3, [4, 5]]], 6]
// =&gt; [1, 2, 3, 4, 5, 6]

`,l:"JavaScript/core/flattening.html",a:"数组扁平化"},"56.1":{t:"1. 使用 flat()\r",p:`const res1 = arr.flat()
// 使用Infinity，无论多少层都将扁平化为一维数组。
const res1 = arr.flat(Infinity)

`,l:"JavaScript/core/flattening.html#_1-使用-flat",a:"_1-使用-flat"},"56.2":{t:"2. 利用正则\r",p:`const res2 = JSON.stringify(arr).replace(/\\[|\\]/g, '').split(',')

// 优化
const res3 = JSON.parse('[' ...`,l:"JavaScript/core/flattening.html#_2-利用正则",a:"_2-利用正则"},"56.3":{t:"3. 使用 reduce\r",p:`const flatten = (arr) =&gt; {
  return arr.reduce((pre, cur) =&gt; {
    return pre.concat(Array.isA ...`,l:"JavaScript/core/flattening.html#_3-使用-reduce",a:"_3-使用-reduce"},"56.4":{t:"4. 函数递归\r",p:`const res5 = []
const fn = (arr) =&gt; {
  for (let i = 0; i &lt; arr.length; i++) {
    if (Array.i ...`,l:"JavaScript/core/flattening.html#_4-函数递归",a:"_4-函数递归"},"57.0":{t:"# JavaScript Promise\r",p:`Promise是一种异步编程的解决方案，它可以避免回调地狱，使代码更加简洁易读。Promise对象代表一个异步操作的最终完成或失败，并返回一个值。
在 JavaScript 中，Promise有三种状 ...`,l:"JavaScript/core/promise.html",a:"javascript-promise"},"57.1":{t:"创建 Promise\r",p:`Promise 可以通过 new Promise() 构造函数来创建。它接收一个带有两个参数的回调函数，回调函数包含两个参数：resolve 和 reject。
const promise = new ...`,l:"JavaScript/core/promise.html#创建-promise",a:"创建-promise"},"57.2":{t:"处理 Promise 结果\r",p:`通过调用 Promise 实例的 .then() 方法可以处理异步操作成功的结果，通过调用 .catch() 方法可以处理异步操作失败的结果。
promise
  .then((value) =&gt ...`,l:"JavaScript/core/promise.html#处理-promise-结果",a:"处理-promise-结果"},"57.3":{t:"Promise 链式调用\r",p:`Promise 的一个重要特性是可以通过链式调用来串联多个异步操作。通过在 .then() 方法中返回新的 Promise 实例，可以将多个异步操作连接起来。
promise
  .then((val ...`,l:"JavaScript/core/promise.html#promise-链式调用",a:"promise-链式调用"},"57.4":{t:"Promise.all()\r",p:"Promise.all() 方法接收一个 Promise 实例数组，返回一个新的 Promise 实例。该新实例在数组中的所有 Promise 实例都成功完成时才会成功，并将所有 Promise 实例 ...",l:"JavaScript/core/promise.html#promise-all",a:"promise-all"},"57.5":{t:"使用 `Promise` 封装一个 Ajax\r",p:`下面是一个使用 Promise 封装的基本 Ajax 请求的示例：
function ajax(url, method, data) {
  return new Promise((resolve,  ...`,l:"JavaScript/core/promise.html#使用-promise-封装一个-ajax",a:"使用-promise-封装一个-ajax"},"58.0":{t:"# 详解数组中的 reduce 方法\r",p:`reduce()是 JavaScript 数组的一个高阶函数，它用于对数组中的元素进行累积操作，将数组缩减为单个值。
通过reduce()方法，我们可以对数组中的每个元素进行自定义的累积运算，最终得到 ...`,l:"JavaScript/core/reduce.html",a:"详解数组中的-reduce-方法"},"58.1":{t:"语法如下\r",p:`array.reduce(callbackfn, initialValue)


callbackfn 是回调函数，它接受四个参数：前一个值（prev）、当前值（currentValue）、当前索引（ ...`,l:"JavaScript/core/reduce.html#语法如下",a:"语法如下"},"58.2":{t:"示例\r",p:"\r",l:"JavaScript/core/reduce.html#示例",a:"示例"},"58.3":{t:"（1）计算数组累积结果\r",p:`
演示如何使用reduce()方法来计算数组中所有元素的和：

const numbers = [1, 2, 3, 4]

const sum = numbers.reduce((prev, cur) ...`,l:"JavaScript/core/reduce.html#_1-计算数组累积结果",a:"_1-计算数组累积结果"},"58.4":{t:"（2）计算数组中每个元素出现的次数\r",p:`var arr = ['one', 'two', 'two', 'three', 'two', 'six', 'four', 'five', 'four', 'six']

var newArr =  ...`,l:"JavaScript/core/reduce.html#_2-计算数组中每个元素出现的次数",a:"_2-计算数组中每个元素出现的次数"},"58.5":{t:"（3）数组去重\r",p:`let arr = [1, 2, 3, 4, 4, 1]
let newArr = arr.reduce((pre, cur) =&gt; {
  if (!pre.includes(cur)) {
 ...`,l:"JavaScript/core/reduce.html#_3-数组去重",a:"_3-数组去重"},"58.6":{t:"（4）数组扁平化 二维转一维\r",p:`let arr = [
  [0, 1],
  [2, 3],
  [4, 5]
]
let newArr = arr.reduce((pre, cur) =&gt; {
  return pre.c ...`,l:"JavaScript/core/reduce.html#_4-数组扁平化-二维转一维",a:"_4-数组扁平化-二维转一维"},"58.7":{t:"（5）数组扁平化 多维转一维\r",p:`let arr = [
  [0, 1],
  [2, 3],
  [4, [5, 6, 7]]
]
const newArr = function (arr) {
  return arr.redu ...`,l:"JavaScript/core/reduce.html#_5-数组扁平化-多维转一维",a:"_5-数组扁平化-多维转一维"},"58.8":{t:"（6）对象属性求和\r",p:`var result = [
  {
    subject: 'math',
    score: 10
  },
  {
    subject: 'chinese',
    score: 20 ...`,l:"JavaScript/core/reduce.html#_6-对象属性求和",a:"_6-对象属性求和"},"58.9":{t:"注意事项\r",p:`::: tip 注意


reduce()方法适用于对数组的每个元素执行同一个累积操作，并将结果返回为单个值的情况。


在使用reduce()方法时，建议始终提供initialValue来明确指定累 ...`,l:"JavaScript/core/reduce.html#注意事项",a:"注意事项"},"59.0":{t:"# JavaScript 作用域\r",p:`作用域是指变量和函数在代码中可访问的范围。JavaScript 中有两种主要的作用域类型：全局作用域和局部作用域。
`,l:"JavaScript/core/scope.html",a:"javascript-作用域"},"59.1":{t:"全局作用域\r",p:`全局作用域是指在代码的任何地方都可访问的变量和函数。在全局作用域中声明的变量和函数可以被代码中的任何地方访问。
var globalVariable = 'Global'

function glob ...`,l:"JavaScript/core/scope.html#全局作用域",a:"全局作用域"},"59.2":{t:"局部作用域\r",p:`局部作用域是指在特定代码块（如函数、循环或条件语句）内部声明的变量和函数。这些变量和函数只能在其声明的代码块内部访问。
function outerFunction() {
  var outerVa ...`,l:"JavaScript/core/scope.html#局部作用域",a:"局部作用域"},"59.3":{t:"作用域链\r",p:"作用域链是指 JavaScript 引擎在查找变量时的嵌套作用域链条。当访问一个变量时，JavaScript 引擎首先在当前作用域的变量对象中查找，如果找不到，就会向上一级作用域继续查找，直到找到该变 ...",l:"JavaScript/core/scope.html#作用域链",a:"作用域链"},"59.4":{t:"词法作用域\r",p:`JavaScript 中的作用域是通过代码的结构和位置来确定的，而不是通过运行时的状态。这被称为词法作用域。函数在定义时就确定了自己的作用域，而不是在调用时。
var variable = 'Glob ...`,l:"JavaScript/core/scope.html#词法作用域",a:"词法作用域"},"60.0":{t:"# DOM 节点\r",p:"\r",l:"JavaScript/DOM/DOM节点.html",a:"dom-节点"},"60.1":{t:"插入节点\r",p:`在已有的 DOM 节点中插入新的 DOM 节点时，需要关注两个关键因素：首先要得到新的 DOM 节点，其次在哪个位置插入这个节点。


createElement 动态创建任意 DOM 节点


cl ...`,l:"JavaScript/DOM/DOM节点.html#插入节点",a:"插入节点"},"60.2":{t:"删除节点\r",p:`删除现有的 DOM 节点，也需要关注两个因素：首先由父节点删除子节点，其次是要删除哪个子节点。
removeChild 删除节点时一定是由父子关系。
&lt;body&gt;
  &lt;!-- 点击 ...`,l:"JavaScript/DOM/DOM节点.html#删除节点",a:"删除节点"},"60.3":{t:"查找节点\r",p:`DOM 树中的任意节点都不是孤立存在的，它们要么是父子关系，要么是兄弟关系，不仅如此，我们可以依据节点之间的关系查找节点。
`,l:"JavaScript/DOM/DOM节点.html#查找节点",a:"查找节点"},"60.4":{t:"父子关系\r",p:`
childNodes 获取全部的子节点，回车换行会被认为是空白文本节点
children 只获取元素类型节点

&lt;body&gt;
  &lt;button class=&quot;btn1& ...`,l:"JavaScript/DOM/DOM节点.html#父子关系",a:"父子关系"},"60.5":{t:"兄弟关系\r",p:`
previousSibling 获取前一个节点，以相对位置查找节点，实际应用中非常灵活。
nextSibling 获取后一个节点，以相对位置查找节点，实际应用中非常灵活。

&lt;body&gt; ...`,l:"JavaScript/DOM/DOM节点.html#兄弟关系",a:"兄弟关系"},"61.0":{t:"# JavaScript DOM\r",p:"\r",l:"JavaScript/DOM/index.html",a:"javascript-dom"},"61.1":{t:"概念\r",p:"DOM（Document Object Model）是一种用于表示和操作 HTML、XML 等文档结构的编程接口。它将文档表示为一个树状结构，每个节点都是文档中的一个元素、属性、文本或其他类型的内容。 ...",l:"JavaScript/DOM/index.html#概念",a:"概念"},"61.2":{t:"DOM 树\r",p:`&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF ...`,l:"JavaScript/DOM/index.html#dom-树",a:"dom-树"},"61.3":{t:"DOM 节点\r",p:`节点是文档树的组成部分，每一个节点都是一个 DOM 对象，主要分为元素节点、属性节点、文本节点等。

【元素节点】其实就是 HTML 标签，如上图中 head、div、body 等都属于元素节点。
【 ...`,l:"JavaScript/DOM/index.html#dom-节点",a:"dom-节点"},"61.4":{t:"document\r",p:`document 是 JavaScript 内置的专门用于 DOM 的对象，该对象包含了若干的属性和方法，document 是学习 DOM 的核心。


::: tip
DOM 提供了丰富的功能和方法 ...`,l:"JavaScript/DOM/index.html#document",a:"document"},"62.0":{t:"# DOM 事件处理\r",p:`DOM 事件处理是 JavaScript 中常用的一项功能，它允许你监听和响应用户与网页元素之间的交互。下面是一些常见的方法和技巧来处理 DOM 事件：
`,l:"JavaScript/DOM/事件处理.html",a:"dom-事件处理"},"62.1":{t:"事件\r",p:`事件是编程语言中的术语，它是用来描述程序的行为或状态的，一旦行为或状态发生改变，便立即调用一个函数。
例如：用户使用【鼠标点击】网页中的一个按钮、用户使用【鼠标拖拽】网页中的一张图片
`,l:"JavaScript/DOM/事件处理.html#事件",a:"事件"},"62.2":{t:"事件监听\r",p:`::: tip
结合 DOM 使用事件时，需要为 DOM 对象添加事件监听，等待事件发生（触发）时，便立即调用一个函数。
addEventListener 是 DOM 对象专门用来添加事件监听的方法， ...`,l:"JavaScript/DOM/事件处理.html#事件监听",a:"事件监听"},"62.3":{t:"事件移除\r",p:`当我们不再需要一个事件监听器时，应该将其从元素上移除，以避免不必要的事件处理。可以使用以下方法来移除事件监听器：
element.removeEventListener('eventName', ev ...`,l:"JavaScript/DOM/事件处理.html#事件移除",a:"事件移除"},"62.4":{t:"事件类型\r",p:"\r",l:"JavaScript/DOM/事件处理.html#事件类型",a:"事件类型"},"62.5":{t:"鼠标事件\r",p:`鼠标事件是指跟鼠标操作相关的事件，如单击、双击、移动等。



事件名
作用




click
当用户点击鼠标左键时触发。


dblclick
当用户双击鼠标左键时触发。


mousedown
 ...`,l:"JavaScript/DOM/事件处理.html#鼠标事件",a:"鼠标事件"},"62.6":{t:"键盘事件\r",p:`const input = document.querySelector('input')
// 1. 键盘事件
// input.addEventListener('keydown', functi ...`,l:"JavaScript/DOM/事件处理.html#键盘事件",a:"键盘事件"},"62.7":{t:"焦点事件\r",p:`const input = document.querySelector('input')
input.addEventListener('focus', function () {
  consol ...`,l:"JavaScript/DOM/事件处理.html#焦点事件",a:"焦点事件"},"62.8":{t:"文本框输入事件\r",p:`
input 事件：当用户在文本框中输入、删除或修改文本时触发。无论是键盘输入、粘贴、剪切还是使用其他输入方法，只要文本框内容发生变化，就会触发 input 事件。
change 事件：当文本框内容发 ...`,l:"JavaScript/DOM/事件处理.html#文本框输入事件",a:"文本框输入事件"},"62.9":{t:"事件对象\r",p:`
事件处理程序的第一个参数是事件对象 event，它包含有关事件的信息，例如事件类型、目标元素等。你可以在事件处理程序中使用这些信息来执行逻辑操作。

const btn = document.que ...`,l:"JavaScript/DOM/事件处理.html#事件对象",a:"事件对象"},"62.10":{t:"事件冒泡和事件捕获\r",p:`
事件冒泡：默认情况下，事件会从触发它的元素向上冒泡到祖先元素。你可以使用 event.stopPropagation() 方法来停止事件冒泡。

&lt;body&gt;
  &lt;h3&gt;事 ...`,l:"JavaScript/DOM/事件处理.html#事件冒泡和事件捕获",a:"事件冒泡和事件捕获"},"62.11":{t:"常见事件类型\r",p:`以下是一些常见的 DOM 事件类型：


鼠标事件：click、mouseover、mouseout、mousemove 等。


键盘事件：keyup、keydown、keypress 等。


表 ...`,l:"JavaScript/DOM/事件处理.html#常见事件类型",a:"常见事件类型"},"62.12":{t:"事件委托\r",p:"JavaScript 事件委托是一种利用事件冒泡原理来简化事件处理的技术。通过将事件监听器绑定到一个父元素上，然后利用事件冒泡机制，从父元素中捕获和处理子元素触发的事件。这样可以减少事件处理程序的数量 ...",l:"JavaScript/DOM/事件处理.html#事件委托",a:"事件委托"},"63.0":{t:"# DOM 创建和操作元素\r",p:`
createElement(): 创建新的元素节点。
appendChild(): 将一个节点添加为另一个节点的子节点。
removeChild(): 删除指定的子节点。
setAttribute( ...`,l:"JavaScript/DOM/创建和操作元素.html",a:"dom-创建和操作元素"},"63.1":{t:"创建元素\r",p:`使用 createElement 方法创建新元素：
const newElement = document.createElement('tagName')

其中 tagName 是你想要创建的元素 ...`,l:"JavaScript/DOM/创建和操作元素.html#创建元素",a:"创建元素"},"63.2":{t:"设置元素属性和内容\r",p:`设置元素的属性：使用 setAttribute 方法：
element.setAttribute('attributeName', 'attributeValue')

设置元素的文本内容：使用 te ...`,l:"JavaScript/DOM/创建和操作元素.html#设置元素属性和内容",a:"设置元素属性和内容"},"63.3":{t:"操作元素的父子关系\r",p:`将新元素添加到父元素中：使用 appendChild 方法：
parentElement.appendChild(newElement)

这将把 newElement 添加为 parentEleme ...`,l:"JavaScript/DOM/创建和操作元素.html#操作元素的父子关系",a:"操作元素的父子关系"},"64.0":{t:"# DOM 样式和类操作\r",p:`在 JavaScript 中，可以使用 DOM（文档对象模型）来操作元素的样式和类。以下是一些常用的方法和技巧：
`,l:"JavaScript/DOM/样式和类操作.html",a:"dom-样式和类操作"},"64.1":{t:"样式操作\r",p:`

修改元素的内联样式：使用 style 对象来访问和修改元素的样式属性。
element.style.backgroundColor = 'red'

这里的 backgroundColor 是你要 ...`,l:"JavaScript/DOM/样式和类操作.html#样式操作",a:"样式操作"},"64.2":{t:"类操作\r",p:`

添加类名：使用 classList 属性的 add 方法。
element.classList.add('className')



移除类名：使用 classList 属性的 remove 方 ...`,l:"JavaScript/DOM/样式和类操作.html#类操作",a:"类操作"},"65.0":{t:"# DOM 获取和修改元素\r",p:`
getElementById(): 根据元素的 ID 获取元素节点。
getElementsByClassName(): 根据类名获取元素节点集合。
getElementsByTagName():  ...`,l:"JavaScript/DOM/获取和修改元素.html",a:"dom-获取和修改元素"},"65.1":{t:"获取元素\r",p:`通过 ID 获取元素：使用 getElementById 方法，传入元素的 ID。
const element = document.getElementById('elementId')

通过类名 ...`,l:"JavaScript/DOM/获取和修改元素.html#获取元素",a:"获取元素"},"65.2":{t:"修改元素\r",p:`修改元素的文本内容：使用 textContent 属性或 innerText 属性。
element.textContent = 'New content'

// 或者
element.innerT ...`,l:"JavaScript/DOM/获取和修改元素.html#修改元素",a:"修改元素"},"66.0":{t:"# JavaScript Cookie\r",p:"Cookie 是一种在客户端浏览器上存储数据的机制，允许开发者在用户计算机中存储和检索有关网站的信息。Cookie 是由服务器发送到浏览器的小型文本文件，然后浏览器会将 Cookie 存储在用户的计算 ...",l:"JavaScript/storage/cookie.html",a:"javascript-cookie"},"66.1":{t:"设置 Cookie\r",p:`可以使用 document.cookie 属性来设置 Cookie。document.cookie 属性是一个字符串，包含一个或多个以分号分隔的键值对。
document.cookie = 'user ...`,l:"JavaScript/storage/cookie.html#设置-cookie",a:"设置-cookie"},"66.2":{t:"获取 Cookie\r",p:`可以使用 document.cookie 属性来获取存储在浏览器中的所有 Cookie。
var cookies = document.cookie
console.log(cookies)

doc ...`,l:"JavaScript/storage/cookie.html#获取-cookie",a:"获取-cookie"},"66.3":{t:"删除 Cookie\r",p:`可以通过将 Cookie 的过期时间设置为过去的时间来删除 Cookie。
document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:0 ...`,l:"JavaScript/storage/cookie.html#删除-cookie",a:"删除-cookie"},"66.4":{t:"注意事项\r",p:`

每个域名下的 Cookie 是相互独立的，不同域名之间的 Cookie 是隔离的。


document.cookie 返回的是一个字符串，包含当前域名下的所有 Cookie。需要自行解析和处理字 ...`,l:"JavaScript/storage/cookie.html#注意事项",a:"注意事项"},"67.0":{t:"# JavaScript localStorage\r",p:"localStorage 是 Web Storage API 提供的一种本地存储机制，允许开发者在浏览器中存储和检索持久化的键值对数据。与 sessionStorage 不同，localStorage ...",l:"JavaScript/storage/localStorage.html",a:"javascript-localstorage"},"67.1":{t:"存储数据\r",p:"可以使用 localStorage.setItem(key, value) 方法将数据存储到 localStorage 中。其中，key 是要存储的数据的键，value 是对应的值。存储的值必须是字符 ...",l:"JavaScript/storage/localStorage.html#存储数据",a:"存储数据"},"67.2":{t:"获取数据\r",p:`可以使用 localStorage.getItem(key) 方法根据键从 localStorage 中检索数据。如果键不存在，返回 null。
var username = localStorage ...`,l:"JavaScript/storage/localStorage.html#获取数据",a:"获取数据"},"67.3":{t:"更新数据\r",p:`可以通过重新设置相同的键来更新 localStorage 中的数据。
localStorage.setItem('age', '26')

`,l:"JavaScript/storage/localStorage.html#更新数据",a:"更新数据"},"67.4":{t:"删除数据\r",p:`可以使用 localStorage.removeItem(key) 方法来删除指定键的数据。
localStorage.removeItem('age')

`,l:"JavaScript/storage/localStorage.html#删除数据",a:"删除数据"},"67.5":{t:"清除所有数据\r",p:`可以使用 localStorage.clear() 方法来删除 localStorage 中的所有数据。
localStorage.clear()

`,l:"JavaScript/storage/localStorage.html#清除所有数据",a:"清除所有数据"},"67.6":{t:"注意事项\r",p:`
localStorage 存储的值必须是字符串类型。如果需要存储其他数据类型（如对象或数组），可以使用 JSON.stringify() 方法将其转换为字符串存储，然后在需要时使用 JSON.par ...`,l:"JavaScript/storage/localStorage.html#注意事项",a:"注意事项"},"68.0":{t:"# JavaScript sessionStorage\r",p:"sessionStorage 是 Web Storage API 提供的一种本地存储机制，允许开发者在浏览器中存储和检索会话级别的键值对数据。与 localStorage 不同，sessionStor ...",l:"JavaScript/storage/sessionStorage.html",a:"javascript-sessionstorage"},"68.1":{t:"存储数据\r",p:"可以使用 sessionStorage.setItem(key, value) 方法将数据存储到 sessionStorage 中。其中，key 是要存储的数据的键，value 是对应的值。存储的值必 ...",l:"JavaScript/storage/sessionStorage.html#存储数据",a:"存储数据"},"68.2":{t:"获取数据\r",p:`可以使用 sessionStorage.getItem(key) 方法根据键从 sessionStorage 中检索数据。如果键不存在，返回 null。
var username = sessionS ...`,l:"JavaScript/storage/sessionStorage.html#获取数据",a:"获取数据"},"68.3":{t:"更新数据\r",p:`可以通过重新设置相同的键来更新 sessionStorage 中的数据。
sessionStorage.setItem('age', '26')

`,l:"JavaScript/storage/sessionStorage.html#更新数据",a:"更新数据"},"68.4":{t:"删除数据\r",p:`可以使用 sessionStorage.removeItem(key) 方法来删除指定键的数据。
sessionStorage.removeItem('age')

`,l:"JavaScript/storage/sessionStorage.html#删除数据",a:"删除数据"},"68.5":{t:"清除所有数据\r",p:`可以使用 sessionStorage.clear() 方法来删除 sessionStorage 中的所有数据。
sessionStorage.clear()

`,l:"JavaScript/storage/sessionStorage.html#清除所有数据",a:"清除所有数据"},"68.6":{t:"注意事项\r",p:`
sessionStorage 存储的值必须是字符串类型。如果需要存储其他数据类型（如对象或数组），可以使用 JSON.stringify() 方法将其转换为字符串存储，然后在需要时使用 JSON.p ...`,l:"JavaScript/storage/sessionStorage.html#注意事项",a:"注意事项"},"69.0":{t:"# 内置对象 Date\r",p:"\r",l:"JavaScript/内置对象/Date.html",a:"内置对象-date"},"69.1":{t:"Date 方法\r",p:`


方法
描述




getDate()
获取日期（月份中的日期），返回值为 1 到 31 之间的整数。


getDay()
获取星期几，返回值为 0（表示星期日）到 6（表示星期六）之间的整数 ...`,l:"JavaScript/内置对象/Date.html#date-方法",a:"date-方法"},"69.2":{t:"创建日期\r",p:`Date 对象用于处理日期和时间。
可以通过 new 关键词来定义 Date 对象。以下代码定义了名为 myDate 的 Date 对象：
有四种方式初始化日期:
new Date();
new Da ...`,l:"JavaScript/内置对象/Date.html#创建日期",a:"创建日期"},"69.3":{t:"设置日期\r",p:`通过使用针对日期对象的方法，我们可以很容易地对日期进行操作。
在下面的例子中，我们为日期对象设置了一个特定的日期 (2050 年 1 月 10 日)：
var myDate = new Date()
 ...`,l:"JavaScript/内置对象/Date.html#设置日期",a:"设置日期"},"69.4":{t:"时间戳\r",p:`时间戳是指 1970 年 01 月 01 日 00 时 00 分 00 秒起至现在的总秒数或毫秒数，它是一种特殊的计量时间的方式。

注：ECMAScript 中时间戳是以毫秒计的。

获取时间戳的方 ...`,l:"JavaScript/内置对象/Date.html#时间戳",a:"时间戳"},"69.5":{t:"两个日期比较\r",p:`var x = new Date()
x.setFullYear(2100, 0, 14)
var today = new Date()

if (x &gt; today) {
  alert('今 ...`,l:"JavaScript/内置对象/Date.html#两个日期比较",a:"两个日期比较"},"70.0":{t:"# JavaScript 内置对象\r",p:`内置对象：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用或者基本而必要的功能（属性和方法），用于处理各种不同类型的数据和操作。
::: tip 简介
JavaScript 的内置对 ...`,l:"JavaScript/内置对象/index.html",a:"javascript-内置对象"},"70.1":{t:"JavaScript 的内置对象：\r",p:`


内置对象
对象说明




Object
基础对象


Array
数组


String
字符串对象


Number
数值对象


Boolean
布尔对象


Date
日期时间


Ma ...`,l:"JavaScript/内置对象/index.html#javascript-的内置对象",a:"javascript-的内置对象"},"70.2":{t:"Object\r",p:`Object 是 JavaScript 的基础对象，其他对象都继承自它。Object 提供了一系列通用的方法，如对象的创建、属性的设置和获取等。它是构建其他对象的基石。
`,l:"JavaScript/内置对象/index.html#object",a:"object"},"70.3":{t:"Array\r",p:`Array 是用于表示和操作数组的对象。它提供了一系列的方法来操作和处理数据集合，如添加、删除、查询、排序等。Array 的灵活性使得它在处理列表和集合数据时非常便利。
`,l:"JavaScript/内置对象/index.html#array",a:"array"},"70.4":{t:"String\r",p:`String 是用于表示和操作字符串的对象。它提供了许多字符串相关的方法，如拼接、查找、替换等。这些方法可以帮助我们处理文本数据，进行字符串操作和处理。
`,l:"JavaScript/内置对象/index.html#string",a:"string"},"70.5":{t:"Number\r",p:`Number 是用于表示和操作数字的对象。它提供了一系列数字相关的方法，如四舍五入、转换为字符串、计算等。Number 可以进行基本的数学计算，还可以用于日期和时间处理。
`,l:"JavaScript/内置对象/index.html#number",a:"number"},"70.6":{t:"Boolean\r",p:`Boolean 是表示和操作布尔值的对象，包括 true 和 false 两个值。它提供了逻辑运算和条件判断的功能，用于控制流程和决策。
`,l:"JavaScript/内置对象/index.html#boolean",a:"boolean"},"70.7":{t:"Date\r",p:`Date 是用于表示日期和时间的对象。它提供了一系列的方法来操作日期和时间，如获取当前时间、设置时间、格式化等。Date 可以用于处理时间相关的任务，如计算时间差、添加或减去日期等。
`,l:"JavaScript/内置对象/index.html#date",a:"date"},"70.8":{t:"Math\r",p:`Math 是用于进行数学计算的对象。它提供了一系列数学运算方法，如求绝对值、计算平方根、生成随机数等。Math 可以用于复杂的数值计算和处理。
`,l:"JavaScript/内置对象/index.html#math",a:"math"},"70.9":{t:"RegExp\r",p:`RegExp 是用于进行正则表达式匹配的对象。它提供了一系列与正则表达式相关的方法，如匹配、替换等。RegExp 可以用于文本匹配、分割、替换等复杂的文本处理任务。
除了上述常用的内置对象外，还有一些 ...`,l:"JavaScript/内置对象/index.html#regexp",a:"regexp"},"71.0":{t:"# 内置对象 Math\r",p:"Math是JavaScript的一个内置对象，它提供了一些数学属性和方法，可以对数字进行计算（用于 Number 类型）。 Math和其他全局对象不同，它不是一个构造器，Math的所有方法和属性都是静 ...",l:"JavaScript/内置对象/Math.html",a:"内置对象-math"},"71.1":{t:"属性\r",p:`
Math.PI，获取圆周率

// 圆周率
console.log(Math.PI)

`,l:"JavaScript/内置对象/Math.html#属性",a:"属性"},"71.2":{t:"方法\r",p:"\r",l:"JavaScript/内置对象/Math.html#方法",a:"方法"},"71.3":{t:"Math.abs()\r",p:`Math.abs()函数，返回一个数的绝对值
Math.abs(-10)
// 10

`,l:"JavaScript/内置对象/Math.html#math-abs",a:"math-abs"},"71.4":{t:"Math.random()\r",p:`Math.random()函数，返回一个浮点，伪随机数范围从 0 到小于 1，从 0 往上不包括 1。
// 0 ~ 1 之间的随机数, 包含 0 不包含 1
Math.random()

`,l:"JavaScript/内置对象/Math.html#math-random",a:"math-random"},"71.5":{t:"Math.ceil()\r",p:`Math.ceil()函数，返回大于或等于一个给定数的最小整数。
// 舍弃小数部分，整数部分加1
Math.ceil(3.4)

`,l:"JavaScript/内置对象/Math.html#math-ceil",a:"math-ceil"},"71.6":{t:"Math.floor()\r",p:`Math.floor()方法，返回小于或等于一个给定数字的最大整数
// 舍弃小数部分，整数部分不变
Math.floor(4.68)

`,l:"JavaScript/内置对象/Math.html#math-floor",a:"math-floor"},"71.7":{t:"Math.round()\r",p:`Math.round()，返回的是一个数字四舍五入的整数。
// 取整，四舍五入原则
Math.round(5.46539)
Math.round(4.849)

`,l:"JavaScript/内置对象/Math.html#math-round",a:"math-round"},"71.8":{t:"Math.min()\r",p:`Math.min()方法，是可以返回指定一组数据中最小值。
// 找出最小值
Math.min(24, 18, 6, 19, 21)

`,l:"JavaScript/内置对象/Math.html#math-min",a:"math-min"},"71.9":{t:"Math.max()\r",p:`Math.max()方法，是可以返回指定一组数据中最大值。
// 找出最大值
Math.max(10, 21, 7, 24, 13)

`,l:"JavaScript/内置对象/Math.html#math-max",a:"math-max"},"71.10":{t:"Math.pow()\r",p:`Math.pow()方法，返回基数(base)的指数(exponent)次幂。
// 求某个数的多少次方
Math.pow(4, 2) // 求 4 的 2 次方
Math.pow(2, 3) //  ...`,l:"JavaScript/内置对象/Math.html#math-pow",a:"math-pow"},"71.11":{t:"Math.sqrt()\r",p:`Math.sqrt()方法，返回的是一个数的平方根。
// 求某数的平方根
Math.sqrt(16) // 4

`,l:"JavaScript/内置对象/Math.html#math-sqrt",a:"math-sqrt"},"71.12":{t:"Math.sin()\r",p:`Math.sin()函数，返回一个值的正弦值。
Math.sin((90 Math.PI) / 180)
// 1

`,l:"JavaScript/内置对象/Math.html#math-sin",a:"math-sin"},"71.13":{t:"Math.cos()\r",p:`Math.cos()函数，返回一个值的余弦值。
Math.cos((360 Math.PI) / 180) // 1

Math.cos(0) // 1

`,l:"JavaScript/内置对象/Math.html#math-cos",a:"math-cos"},"71.14":{t:"Math.trunc()\r",p:`Math.trunc()函数，返回的是一个数的整数部分，不管正数还是负数，直接去掉小数点及之后的部分。
Math.trunc(13.37)
// 13
Math.trunc(42.84)
// 42
 ...`,l:"JavaScript/内置对象/Math.html#math-trunc",a:"math-trunc"},"72.0":{t:"# 内置对象 Number\r",p:"\r",l:"JavaScript/内置对象/Number.html",a:"内置对象-number"},"72.1":{t:"属性\r",p:`
Number.MAX_VALUE：表示 JavaScript 中能表示的最大数值，约为 1.79 × 10^308。
Number.MIN_VALUE：表示 JavaScript 中能表示的最小正数 ...`,l:"JavaScript/内置对象/Number.html#属性",a:"属性"},"72.2":{t:"方法\r",p:`

Number.isNaN(num)：判断给定的值是否为NaN（非数值）。如果是NaN，则返回true，否则返回false。


Number.isFinite(num)：判断给定的值是否为有限数值 ...`,l:"JavaScript/内置对象/Number.html#方法",a:"方法"},"73.0":{t:"# 内置对象 RegExp\r",p:"\r",l:"JavaScript/内置对象/RegExp.html",a:"内置对象-regexp"},"73.1":{t:"什么是 RegExp？\r",p:"RegExp（正则表达式）是一种用于匹配和操作字符串模式的强大工具。它是一种模式匹配的语法，可以用来搜索、替换和提取字符串中的特定部分。在 JavaScript 中，RegExp 是一个内置的对象类型 ...",l:"JavaScript/内置对象/RegExp.html#什么是-regexp",a:"什么是-regexp"},"73.2":{t:"正则表达式基础语法\r",p:`在 JavaScript 中，正则表达式可以使用字面量形式或构造函数形式来创建。
`,l:"JavaScript/内置对象/RegExp.html#正则表达式基础语法",a:"正则表达式基础语法"},"73.3":{t:"字面量形式\r",p:`使用斜杠（/）将正则表达式模式包围起来，后面可以跟上一些修饰符（如 g、i、m）。
const pattern = /abc/

`,l:"JavaScript/内置对象/RegExp.html#字面量形式",a:"字面量形式"},"73.4":{t:"构造函数形式\r",p:`使用 RegExp 构造函数创建正则表达式，它接收两个参数：模式字符串和可选的修饰符字符串。
const pattern = new RegExp('abc')

`,l:"JavaScript/内置对象/RegExp.html#构造函数形式",a:"构造函数形式"},"73.5":{t:"元字符\r",p:`
.：匹配除换行符之外的任何单个字符。
^：匹配字符串的开头。
$：匹配字符串的结尾。
\\*：匹配前面的元素零次或多次。
+：匹配前面的元素一次或多次。
?：匹配前面的元素零次或一次。
[]：定义字符 ...`,l:"JavaScript/内置对象/RegExp.html#元字符",a:"元字符"},"73.6":{t:"正则表达式修饰符\r",p:`修饰符用于在正则表达式中添加额外的规则，影响匹配的行为。以下是常用的修饰符：

g：全局匹配，找到所有匹配项而不仅仅是第一个。
i：不区分大小写匹配。
m：多行匹配，允许 ^ 和 $ 来匹配字符串的开 ...`,l:"JavaScript/内置对象/RegExp.html#正则表达式修饰符",a:"正则表达式修饰符"},"73.7":{t:"常用的正则表达式模式\r",p:`以下是一些常用的正则表达式模式示例：

匹配字母或数字字符：/[a-zA-Z0-9]/
匹配多个字母或数字字符：/[a-zA-Z0-9]+/
匹配数字：/\\d/
匹配非数字：/\\D/
匹配空格字符：/ ...`,l:"JavaScript/内置对象/RegExp.html#常用的正则表达式模式",a:"常用的正则表达式模式"},"73.8":{t:"正则表达式方法\r",p:`JavaScript 的字符串对象提供了一些与正则表达式相关的方法来执行匹配、搜索和替换操作。
以下是一些常用的方法：

match()：在字符串中搜索匹配正则表达式的结果，并返回一个数组或 null ...`,l:"JavaScript/内置对象/RegExp.html#正则表达式方法",a:"正则表达式方法"},"73.9":{t:"正则表达式的分组和捕获\r",p:`正则表达式还支持使用圆括号进行分组和捕获。通过使用圆括号将模式的一部分括起来，可以创建子模式，并将匹配到的子串捕获到一个分组中。
以下是一些常用的分组和捕获的示例：

使用括号进行分组：(abc)+  ...`,l:"JavaScript/内置对象/RegExp.html#正则表达式的分组和捕获",a:"正则表达式的分组和捕获"},"73.10":{t:"正则表达式标志\r",p:`除了修饰符外，JavaScript 正则表达式还支持标志（Flags），用于提供更多的匹配选项。
以下是常用的正则表达式标志：

g：全局匹配，找到所有匹配项而不仅仅是第一个。
i：不区分大小写匹配。 ...`,l:"JavaScript/内置对象/RegExp.html#正则表达式标志",a:"正则表达式标志"},"73.11":{t:"应用场景\r",p:`正则表达式在 JavaScript 中具有广泛的应用场景，例如：

表单验证：使用正则表达式验证用户输入的表单数据，如邮箱、电话号码、密码等。
字符串替换：使用正则表达式进行文本替换、格式化或删除特定 ...`,l:"JavaScript/内置对象/RegExp.html#应用场景",a:"应用场景"},"74.0":{t:"# 内置对象 String\r",p:"\r",l:"JavaScript/内置对象/String.html",a:"内置对象-string"},"74.1":{t:"一、操作方法\r",p:"\r",l:"JavaScript/内置对象/String.html#一、操作方法",a:"一、操作方法"},"74.2":{t:"字符串截取\r",p:"\r",l:"JavaScript/内置对象/String.html#字符串截取",a:"字符串截取"},"74.3":{t:"slice()\r",p:`语法
新字符串 = str.slice(开始索引, 结束索引) //两个参数都是索引值。包左不包右。

解释

从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。

::: tip  ...`,l:"JavaScript/内置对象/String.html#slice",a:"slice"},"74.4":{t:"substring()\r",p:`语法
新字符串 = str.substring(开始索引, 结束索引) //两个参数都是索引值。包左不包右。

解释

从字符串中截取指定的内容。和 slice()类似。

substring()和  ...`,l:"JavaScript/内置对象/String.html#substring",a:"substring"},"74.5":{t:"substr()\r",p:`语法
字符串 = str.substr(开始索引, 截取的长度)

解释

从字符串中截取指定的内容。不会修改原字符串，而是将截取到的内容返回。

::: warning 注意
这个方法的第二个参数截 ...`,l:"JavaScript/内置对象/String.html#substr",a:"substr"},"74.6":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"JavaScript/内置对象/String.html#增",a:"增"},"74.7":{t:"concat()\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = 'hello '
let result = stringValue.concat('world')
console.log ...`,l:"JavaScript/内置对象/String.html#concat",a:"concat"},"74.8":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"JavaScript/内置对象/String.html#删",a:"删"},"74.9":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"JavaScript/内置对象/String.html#改",a:"改"},"74.10":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = ' hello world '
let trimmedStringValue = stringValue.trim() ...`,l:"JavaScript/内置对象/String.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"74.11":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = 'na '
let copyResult = stringValue.repeat(2)  ...`,l:"JavaScript/内置对象/String.html#repeat",a:"repeat"},"74.12":{t:"padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
let stringValue = 'foo'
console.log(stringValue.padStart(6)) // & ...`,l:"JavaScript/内置对象/String.html#padend",a:"padend"},"74.13":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = 'hello world'
console.log(stringValue.toUpperCase()) // &quot;HELLO WORLD&qu ...`,l:"JavaScript/内置对象/String.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"74.14":{t:"查\r",p:`除了通过索引的方式获取字符串的值，还可通过：


chatAt()


indexOf()


startWith()


includes()


`,l:"JavaScript/内置对象/String.html#查",a:"查"},"74.15":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = 'abcde'
console.log(message.charAt(2)) // &quot;c&quot;

`,l:"JavaScript/内置对象/String.html#charat",a:"charat"},"74.16":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = 'hello world'
console.log(stringValue.indexOf ...`,l:"JavaScript/内置对象/String.html#indexof",a:"indexof"},"74.17":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = 'foobarbaz'
console.log(message.startsWith('foo')) // tr ...`,l:"JavaScript/内置对象/String.html#startwith-、includes",a:"startwith-、includes"},"74.18":{t:"二、转换方法\r",p:"\r",l:"JavaScript/内置对象/String.html#二、转换方法",a:"二、转换方法"},"74.19":{t:"split()\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = '12+23+34'
let arr = str.split('+') // [12,23,34]

`,l:"JavaScript/内置对象/String.html#split",a:"split"},"74.20":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"JavaScript/内置对象/String.html#三、模板匹配方法",a:"三、模板匹配方法"},"74.21":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = 'cat, bat, sat, fat'
let pattern = /.at/
let mat ...`,l:"JavaScript/内置对象/String.html#match",a:"match"},"74.22":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = 'cat, bat, sat, fat'
let pos = text ...`,l:"JavaScript/内置对象/String.html#search",a:"search"},"74.23":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = 'cat, bat, sat, fat'
let result = text.replace('at', ...`,l:"JavaScript/内置对象/String.html#replace",a:"replace"},"75.0":{t:"# 继承、封装和多态\r",p:"\r",l:"JavaScript/面向对象/char.html",a:"继承、封装和多态"},"75.1":{t:"继承（Inheritance）：\r",p:`继承是一种对象间的关系，它允许一个对象（称为子类或派生类）继承另一个对象（称为父类或基类）的属性和方法。子类继承了父类的特性，可以通过继承来复用代码，减少重复编写。
在 JavaScript 中，可以 ...`,l:"JavaScript/面向对象/char.html#继承-inheritance",a:"继承-inheritance"},"75.2":{t:"封装（Encapsulation）：\r",p:`封装是一种将数据和方法包裹在一个单一实体中的概念，使得外部无法直接访问对象的内部实现细节。这样的设计有助于隐藏对象的复杂性，只暴露必要的接口，提高代码的可维护性和安全性。
在 JavaScript 中 ...`,l:"JavaScript/面向对象/char.html#封装-encapsulation",a:"封装-encapsulation"},"75.3":{t:"多态（Polymorphism）：\r",p:`多态是一种允许不同对象对同一方法做出不同响应的特性。这意味着可以使用相同的方法名，但针对不同对象实现不同的行为。多态有助于实现代码的灵活性和可扩展性。
在 JavaScript 中，由于其动态类型特性 ...`,l:"JavaScript/面向对象/char.html#多态-polymorphism",a:"多态-polymorphism"},"76.0":{t:"# 类和构造函数\r",p:"在 JavaScript 中，类是一种用于创建对象的模板或蓝图，而构造函数是用于创建类的实例的特殊函数。它们是面向对象编程的两种不同方式，但在 ES6（ECMAScript 6）之后，JavaScri ...",l:"JavaScript/面向对象/class.html",a:"类和构造函数"},"76.1":{t:"构造函数\r",p:"在 ES5 及其之前的版本中，JavaScript 使用构造函数来创建对象。构造函数本质上是一个普通的函数，但通常使用new关键字来实例化对象。构造函数内部使用this关键字来引用新创建的对象，并定义 ...",l:"JavaScript/面向对象/class.html#构造函数",a:"构造函数"},"76.2":{t:"类\r",p:`在 ES6 及以上的版本中，JavaScript 引入了class关键字，使得类的定义更加简洁明了。类定义了对象的结构和行为，而对象则是类的实例。类的方法在原型上定义，因此实例共享相同的方法。
示例： ...`,l:"JavaScript/面向对象/class.html#类",a:"类"},"77.0":{t:"# JavaScript 面向对象\r",p:"\r",l:"JavaScript/面向对象/index.html",a:"javascript-面向对象"},"77.1":{t:"是什么？\r",p:`JavaScript 面向对象是一种编程范式，其中程序被组织为一组对象，每个对象都有自己的状态和行为。在面向对象编程中，对象是数据和操作数据的方法的封装单元，它们通过相互之间的交互来完成特定的任务。
`,l:"JavaScript/面向对象/index.html#是什么",a:"是什么"},"77.2":{t:"特点：\r",p:`

对象： 对象是面向对象编程的核心概念。对象是一个复合的数据类型，它可以包含属性（也称为数据成员）和方法（也称为函数成员）。


类： 类是对象的模板或蓝图，它定义了对象将具有的属性和方法。类是一种 ...`,l:"JavaScript/面向对象/index.html#特点",a:"特点"},"78.0":{t:"# 实例对象与方法\r",p:"\r",l:"JavaScript/面向对象/new.html",a:"实例对象与方法"},"78.1":{t:"创建对象\r",p:"\r",l:"JavaScript/面向对象/new.html#创建对象",a:"创建对象"},"78.2":{t:"利用 `new Object` 创建对象\r",p:`var person = new Person()
person.name = '张三'
person.age = 18
person.sex = '男'
person.sayHi = functio ...`,l:"JavaScript/面向对象/new.html#利用-new-object-创建对象",a:"利用-new-object-创建对象"},"78.3":{t:"利用字面量创建对象\r",p:`var person = {
  name: '张三',
  age: 18,
  sex: '男',
  sayHi: function () {
    alert('大家好啊~')
  }
}
 ...`,l:"JavaScript/面向对象/new.html#利用字面量创建对象",a:"利用字面量创建对象"},"78.4":{t:"利用构造函数创建对象\r",p:`构造函数：是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 运算符一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。
::: tip 注意
 ...`,l:"JavaScript/面向对象/new.html#利用构造函数创建对象",a:"利用构造函数创建对象"},"78.5":{t:"常用方法\r",p:`
Object.assign(target, …sources)：复制一个或多个对象的属性到目标对象。
Object.create(proto, [propertiesObject])：创建一个新对象 ...`,l:"JavaScript/面向对象/new.html#常用方法",a:"常用方法"},"78.6":{t:"Object.assign(target, …sources)\r",p:`const obj1 = { a: 1 }
const obj2 = { b: 2 }
const obj3 = { c: 3 }
const mergedObj = Object.assign(ob ...`,l:"JavaScript/面向对象/new.html#object-assign-target-sources",a:"object-assign-target-sources"},"78.7":{t:"Object.create(proto, [propertiesObject])\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(newObj.greet ...`,l:"JavaScript/面向对象/new.html#object-create-proto-propertiesobject",a:"object-create-proto-propertiesobject"},"78.8":{t:"Object.entries(obj)\r",p:`const obj = { a: 1, b: 2, c: 3 }
const entries = Object.entries(obj)
console.log(entries) // [[&quot ...`,l:"JavaScript/面向对象/new.html#object-entries-obj",a:"object-entries-obj"},"78.9":{t:"Object.freeze(obj)\r",p:`const obj = { name: 'John' }

`,l:"JavaScript/面向对象/new.html#object-freeze-obj",a:"object-freeze-obj"},"78.10":{t:"Object.freeze(obj)\r",p:`obj.name = 'Jane' // 修改无效，不会影响原对象
console.log(obj.name) // John

`,l:"JavaScript/面向对象/new.html#object-freeze-obj",a:"object-freeze-obj"},"78.11":{t:"Object.getOwnPropertyDescriptor(obj, prop)\r",p:`const obj = { name: 'John' }
const descriptor = Object.getOwnPropertyDescriptor(obj, 'name')
console ...`,l:"JavaScript/面向对象/new.html#object-getownpropertydescriptor-obj-prop",a:"object-getownpropertydescriptor-obj-prop"},"78.12":{t:"Object.getOwnPropertyNames(obj)\r",p:`const obj = { name: 'John', age: 30 }
const propNames = Object.getOwnPropertyNames(obj)
console.log( ...`,l:"JavaScript/面向对象/new.html#object-getownpropertynames-obj",a:"object-getownpropertynames-obj"},"78.13":{t:"Object.getOwnPropertySymbols(obj)\r",p:`const sym = Symbol('mySymbol')
const obj = { [sym]: 'value' }
const symbols = Object.getOwnPropertyS ...`,l:"JavaScript/面向对象/new.html#object-getownpropertysymbols-obj",a:"object-getownpropertysymbols-obj"},"78.14":{t:"Object.getPrototypeOf(obj)\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(Object.getPr ...`,l:"JavaScript/面向对象/new.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"78.15":{t:"Object.is(value1, value2)\r",p:`console.log(Object.is(5, 5)) // true
console.log(Object.is(0, -0)) // false
console.log(Object.is(Na ...`,l:"JavaScript/面向对象/new.html#object-is-value1-value2",a:"object-is-value1-value2"},"78.16":{t:"Object.keys(obj)\r",p:`const obj = { name: 'John', age: 30 }
const keys = Object.keys(obj)
console.log(keys) // [&quot;name ...`,l:"JavaScript/面向对象/new.html#object-keys-obj",a:"object-keys-obj"},"78.17":{t:"Object.seal(obj)\r",p:`const obj = { name: 'John' }

`,l:"JavaScript/面向对象/new.html#object-seal-obj",a:"object-seal-obj"},"78.18":{t:"Object.seal(obj)\r",p:`obj.age = 30 // 添加属性无效，不会影响原对象
delete obj.name // 删除属性无效，不会影响原对象
console.log(obj.name) // John
conso ...`,l:"JavaScript/面向对象/new.html#object-seal-obj",a:"object-seal-obj"},"78.19":{t:"Object.values(obj)\r",p:`const obj = { name: 'John', age: 30 }
const values = Object.values(obj)
console.log(values) // [&quo ...`,l:"JavaScript/面向对象/new.html#object-values-obj",a:"object-values-obj"},"78.20":{t:"Object.hasOwnProperty(prop)\r",p:`const obj = { name: 'John' }
console.log(obj.hasOwnProperty('name')) // true
console.log(obj.hasOwnP ...`,l:"JavaScript/面向对象/new.html#object-hasownproperty-prop",a:"object-hasownproperty-prop"},"79.0":{t:"# JavaScript 原型和原型链\r",p:`
JavaScript 原型和原型链是面向对象编程中的重要概念，用于实现继承和共享属性和方法。

`,l:"JavaScript/面向对象/prototype.html",a:"javascript-原型和原型链"},"79.1":{t:"原型（Prototype）\r",p:"在 JavaScript 中，每个对象都有一个特殊的属性__proto__（在 ES6 及以上版本中，可以使用Object.getPrototypeOf()来访问原型），它指向该对象的原型对象。原型对 ...",l:"JavaScript/面向对象/prototype.html#原型-prototype",a:"原型-prototype"},"79.2":{t:"原型链（Prototype Chain）\r",p:"原型链是由对象的原型对象构成的链式结构。当我们访问对象的属性或方法时，如果对象本身没有找到，则会继续在原型链上查找，直到找到为止。原型链的最终节点是Object.prototype，它是所有对象的根原 ...",l:"JavaScript/面向对象/prototype.html#原型链-prototype-chain",a:"原型链-prototype-chain"},"79.3":{t:"使用原型的好处\r",p:`

共享属性和方法： 原型允许多个对象共享相同的属性和方法，这样可以节省内存空间。


继承： 通过原型链，我们可以实现继承，子对象可以继承父对象的属性和方法。


动态更新： 原型上的属性和方法是动 ...`,l:"JavaScript/面向对象/prototype.html#使用原型的好处",a:"使用原型的好处"},"79.4":{t:"注意事项\r",p:`
尽量避免直接修改原型对象，以免对其他对象产生意外的影响。
使用Object.create()和Object.setPrototypeOf()等方法来设置对象的原型，而不是直接修改__proto__属 ...`,l:"JavaScript/面向对象/prototype.html#注意事项",a:"注意事项"},"80.0":{t:"# JavaScript 严格模式\r",p:"JavaScript 严格模式（Strict Mode）是一种在 JavaScript 中启用更严格解析和错误处理的模式。它旨在帮助开发者编写更安全、规范、优化和可靠的代码，并避免一些常见的错误。严格 ...",l:"JavaScript/面向对象/strict.html",a:"javascript-严格模式"},"81.0":{t:"# this 关键字\r",p:"\r",l:"JavaScript/面向对象/this.html",a:"this-关键字"},"81.1":{t:"执行期上下文\r",p:`当函数执行时（准确来说，是在函数发生预编译的前一刻），会创建一个执行期上下文的内部对象。一个执行期上下文定义了一个函数执行时的环境。
每调用一次函数，就会创建一个新的上下文对象，他们之间是相互独立且独 ...`,l:"JavaScript/面向对象/this.html#执行期上下文",a:"执行期上下文"},"81.2":{t:"this 指向\r",p:`解析器在调用函数每次都会向函数内部传递进一个隐含的参数，这个隐含的参数就是 this，this 指向的是一个对象，这个对象我们称为函数执行的 上下文对象。
`,l:"JavaScript/面向对象/this.html#this-指向",a:"this-指向"},"81.3":{t:"ES5 函数内 this 的指向【非常重要】\r",p:`在 ES5 语法中，根据函数的调用方式的不同，this 会指向不同的对象：

1、以函数的形式（包括普通函数、定时器函数、立即执行函数）调用时，this 的指向永远都是 window。比如fun(); ...`,l:"JavaScript/面向对象/this.html#es5-函数内-this-的指向【非常重要】",a:"es5-函数内-this-的指向【非常重要】"},"81.4":{t:"ES6 箭头函数中 this 的指向\r",p:`ES6 中的箭头函数并不使用上面的准则，而是会继承外层函数调用的 this 绑定（无论 this 绑定到什么）。
var obj = {
  foo: function () {
    var ar ...`,l:"JavaScript/面向对象/this.html#es6-箭头函数中-this-的指向",a:"es6-箭头函数中-this-的指向"},"81.5":{t:"改变函数内部的 this 指向\r",p:`JS 专门为我们提供了一些方法来改变函数内部的 this 指向。常见的方法有 call()、apply()、bind() 方法。
`,l:"JavaScript/面向对象/this.html#改变函数内部的-this-指向",a:"改变函数内部的-this-指向"},"81.6":{t:"call()\r",p:"\r",l:"JavaScript/面向对象/this.html#call",a:"call"},"81.7":{t:"call() 方法的作用\r",p:`call() 方法的作用：可以调用一个函数，与此同时，它还可以改变这个函数内部的 this 指向。
call() 方法的另一个应用：可以实现继承。之所以能实现继承，其实是利用了上面的作用。
语法：
f ...`,l:"JavaScript/面向对象/this.html#call-方法的作用",a:"call-方法的作用"},"81.8":{t:"call() 方法举例\r",p:`举例 1、通过 call() 调用函数：
const obj1 = {
  nickName: 'zhangsan',
  age: 28
}
function fn1() {
  console.l ...`,l:"JavaScript/面向对象/this.html#call-方法举例",a:"call-方法举例"},"81.9":{t:"apply() 方法\r",p:"\r",l:"JavaScript/面向对象/this.html#apply-方法",a:"apply-方法"},"81.10":{t:"apply() 方法的作用\r",p:`apply() 方法的作用：可以调用一个函数，与此同时，它还可以改变这个函数内部的 this 指向。这一点，和 call()类似。
apply() 方法的应用： 由于 apply()需要传递数组，所以 ...`,l:"JavaScript/面向对象/this.html#apply-方法的作用",a:"apply-方法的作用"},"81.11":{t:"apply() 方法举例\r",p:`举例、通过 apply() 改变 this 指向：
var obj1 = {
  nickName: 'zhangsan',
  age: 28
}

function fn1(a) {
  cons ...`,l:"JavaScript/面向对象/this.html#apply-方法举例",a:"apply-方法举例"},"81.12":{t:"apply() 方法的巧妙应用：求数组的最大值\r",p:`我们知道，如果想要求数组中元素的最大值，数组本身是没有自带方法的。那怎么办呢？
虽然数组里没有获取最大值的方法，但是数值里有 Math.max(数字1，数字2，数字3) 方法，可以获取多个数值中的最大 ...`,l:"JavaScript/面向对象/this.html#apply-方法的巧妙应用-求数组的最大值",a:"apply-方法的巧妙应用-求数组的最大值"},"81.13":{t:"bind() 方法\r",p:"\r",l:"JavaScript/面向对象/this.html#bind-方法",a:"bind-方法"},"81.14":{t:"bind() 方法的作用\r",p:`bind() 方法不会调用函数，但是可以改变函数内部的 this 指向。
把 call()、apply()、bind()这三个方法做一下对比，你会发现：实际开发中， bind() 方法使用得最为频繁。 ...`,l:"JavaScript/面向对象/this.html#bind-方法的作用",a:"bind-方法的作用"},"82.0":{t:"# 前端导航\r",p:`&lt;!--
`,l:"nav/index.html",a:"前端导航"},"82.1":{t:" ",p:"",l:"nav/index.html#",a:""},"82.2":{t:"常用工具 -->\r",p:"&lt;NavLinks v-for=&quot;{title,items} in NAV_DATA&quot; :title='title' :items=&quot;items&quot;/&gt ...",l:"nav/index.html#常用工具",a:"常用工具"},"83.0":{t:"# Axios\r",p:"\r",l:"others/axios/index.html",a:"axios"},"83.1":{t:"什么是axios？\r",p:`Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。
`,l:"others/axios/index.html#什么是axios",a:"什么是axios"},"83.2":{t:"安装\r",p:`使用npm：
npm install axios

使用cdn：


`,l:"others/axios/index.html#安装",a:"安装"},"83.3":{t:"使用\r",p:`
执行GET请求

let name = 'zs'
axios.get(\`/api/xxxx?name=\${name}\`)
  .then(function (result) {
    consol ...`,l:"others/axios/index.html#使用",a:"使用"},"83.4":{t:"拦截器\r",p:`拦截器，我们大致可以分为两类， 一类是 请求接口前的统一处理（请求拦截） 、 一类是 请求接口后的统一处理（响应拦截）

请求拦截

请求调整
用户标识


响应拦截

网络错误处理
授权错误处理
普 ...`,l:"others/axios/index.html#拦截器",a:"拦截器"},"83.5":{t:"错误处理\r",p:`axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // 发出请求后，服务器用状态 ...`,l:"others/axios/index.html#错误处理",a:"错误处理"},"84.0":{t:"# 封装 axios\r",p:"\r",l:"others/axios/封装axios.html",a:"封装-axios"},"84.1":{t:"1.封装目的\r",p:`实现一个简单的封装，主要实现以下目的：

实现请求、响应拦截器功能
api 集中式管理
请求头设置，一般可以在请求头中携带公共的参数：token
可以简化服务器返回的数据，处理 http 网络错误

`,l:"others/axios/封装axios.html#_1-封装目的",a:"_1-封装目的"},"84.2":{t:"2.初始化 axios 实例\r",p:`import axios from 'axios'
let apiBaseUrl = ''
const service = axios.create({
  baseURL: apiBaseUrl,  ...`,l:"others/axios/封装axios.html#_2-初始化-axios-实例",a:"_2-初始化-axios-实例"},"84.3":{t:"3.设置请求拦截\r",p:`// 创建请求拦截
service.interceptors.request.use(
  (config) =&gt; {
    // 如果开启 token 认证
    if (serverCo ...`,l:"others/axios/封装axios.html#_3-设置请求拦截",a:"_3-设置请求拦截"},"84.4":{t:"4.设置响应拦截\r",p:`// 创建响应拦截
service.interceptors.response.use(
  (res) =&gt; {
    let data = res.data
    // 处理自己的业务逻 ...`,l:"others/axios/封装axios.html#_4-设置响应拦截",a:"_4-设置响应拦截"},"84.5":{t:"5.封装常见的方法\r",p:`//get
export function getAction(url, parameter) {
  return service({
    url: url,
    method: 'get' ...`,l:"others/axios/封装axios.html#_5-封装常见的方法",a:"_5-封装常见的方法"},"84.6":{t:"6.使用\r",p:`示例：
let param = {
    username:'zs',
    password:'123456'
}

// 定义接口方法
const login = (params)=&gt;p ...`,l:"others/axios/封装axios.html#_6-使用",a:"_6-使用"},"84.7":{t:"相关文章\r",p:`关于 Axios 的再再再封装，总是会有所不一样
十分钟封装一个好用的 axios，省时又省力他不香吗
前端架构带你 封装 axios，一次封装终身受益「美团后端连连点赞」
`,l:"others/axios/封装axios.html#相关文章",a:"相关文章"},"85.0":{t:"# Git基本命令使用\r",p:"\r",l:"others/git/git.html",a:"git基本命令使用"},"85.1":{t:"账户配置\r",p:`
配置全局账户，对所有 Git 仓库有效

git config --global user.name 'Your Name'
git config --global user.email 'Your ...`,l:"others/git/git.html#账户配置",a:"账户配置"},"85.2":{t:"本地基本操作\r",p:"\r",l:"others/git/git.html#本地基本操作",a:"本地基本操作"},"85.3":{t:"初始化本地库\r",p:`git init

`,l:"others/git/git.html#初始化本地库",a:"初始化本地库"},"85.4":{t:"查看状态\r",p:`git status

`,l:"others/git/git.html#查看状态",a:"查看状态"},"85.5":{t:"添加暂存区 git add\r",p:`
将当前目录及其子目录下所有变更添加到暂存区

git add .


将本地库所有变更添加到暂存区

git add -A


指定文件添加暂存区

git add file1 file2 ...
 ...`,l:"others/git/git.html#添加暂存区-git-add",a:"添加暂存区-git-add"},"85.6":{t:"提交本地库 git commit\r",p:`
提交所有变更

git commit
# or
git commit -m '日志信息' -a


提交当前目录及其子目录的变更

git commit -m '日志信息' .


提交指定文件

 ...`,l:"others/git/git.html#提交本地库-git-commit",a:"提交本地库-git-commit"},"85.7":{t:"比较差异 git diff\r",p:`
比较工作区和暂存区的所有差异，只能查看旧文件的变更（包括修改和删除），不能查看新文件（因为新文件还为被 git 追踪）

git diff


比较指定文件工作区和暂存区的差异

git diff  ...`,l:"others/git/git.html#比较差异-git-diff",a:"比较差异-git-diff"},"85.8":{t:"查看日志信息 git log\r",p:`
查看简要日志信息

git reflog


查看详细日志信息

git log


查看极简日志信息

git log --oneline


查看最近 n 次的版本信息

git log -n
 ...`,l:"others/git/git.html#查看日志信息-git-log",a:"查看日志信息-git-log"},"85.9":{t:"分支命令\r",p:"\r",l:"others/git/git.html#分支命令",a:"分支命令"},"85.10":{t:"创建分支\r",p:`
基于当前分支创建分支

git branch 新分支


基于指定分支创建分支

git branch 新分支 已有分支


基于某个 commit 创建分支

git branch 新分支 com ...`,l:"others/git/git.html#创建分支",a:"创建分支"},"85.11":{t:"查看本地分支\r",p:`git branch -v

`,l:"others/git/git.html#查看本地分支",a:"查看本地分支"},"85.12":{t:"删除分支\r",p:`
安全删除本地分支

git branch -d 分支


强制删除本地分支

git branch -D 分支

`,l:"others/git/git.html#删除分支",a:"删除分支"},"85.13":{t:"切换分支\r",p:`git checkout 分支名

`,l:"others/git/git.html#切换分支",a:"切换分支"},"85.14":{t:"合并分支\r",p:`merge 和 rebase的区别有待学习实践 :worried:

将 A 分支合并到当前分支，且为 merge 创建 commit

git merge A


将 A 分支合并到 B 分支，且为 ...`,l:"others/git/git.html#合并分支",a:"合并分支"},"85.15":{t:"版本穿梭与回滚\r",p:`
工作区指定文件恢复成和暂存区一样

git checkout file1 file2 ...

# tips in the Git Bash
# use &quot;git restore &lt; ...`,l:"others/git/git.html#版本穿梭与回滚",a:"版本穿梭与回滚"},"85.16":{t:"修改 commit 记录\r",p:`
往最后一次 commit 追加记录，而不新建 commit - reference

git commit --amend


合并 commit 记录 - reference

git rebas ...`,l:"others/git/git.html#修改-commit-记录",a:"修改-commit-记录"},"85.17":{t:"远程仓库交互\r",p:"\r",l:"others/git/git.html#远程仓库交互",a:"远程仓库交互"},"85.18":{t:"git remote\r",p:`
查看所有远程仓库地址别名

git remote -v


为远程仓库起别名

git remote add 别名 地址


删除远程仓库别名

git remote remove 别名


修改别 ...`,l:"others/git/git.html#git-remote",a:"git-remote"},"85.19":{t:"git clone\r",p:`
克隆远程仓库到本地

git clone 地址


克隆远程仓库指定分支到本地

git clone -b 远程仓库分支名 地址

`,l:"others/git/git.html#git-clone",a:"git-clone"},"85.20":{t:"git pull\r",p:`
拉取远程分支，并与本地分支合并

git pull 别名 分支名

`,l:"others/git/git.html#git-pull",a:"git-pull"},"85.21":{t:"git push\r",p:`
推送本地指定分支到仓库指定分支

git push 别名 本地分支:远程分支


如果远程分支被省略，表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 ...`,l:"others/git/git.html#git-push",a:"git-push"},"86.0":{t:"# git安装\r",p:"\r",l:"others/git/install.html",a:"git安装"},"86.1":{t:"**1.Git官网下载安装git客户端：https://git-scm.com/downloads/**\r",p:`\r
\r
\r`,l:"others/git/install.html#_1-git官网下载安装git客户端-https-git-scm-com-downloads",a:"_1-git官网下载安装git客户端-https-git-scm-com-downloads"},"86.2":{t:"**2.安装完成后，在空白处点鼠标右键选择“Git Bush Here” ，打开git bash命令窗口**\r",p:`\r
\r
\r`,l:"others/git/install.html#_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口",a:"_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口"},"86.3":{t:"**3.配置用户名和邮箱**\r",p:`git config —global user.name “xxx”
git config —global user.email “xxxx@xxx.com”
配置后结果：git config --l ...`,l:"others/git/install.html#_3-配置用户名和邮箱",a:"_3-配置用户名和邮箱"},"86.4":{t:"4.执行命令生成ssh pub_key\r",p:`ssh-keygen -t rsa -C &quot;XXXX@XXX.com&quot;

直接按三次回车，会生成 id_rsa.pub 文件，这个文件一般在C盘的.ssh目录下。
`,l:"others/git/install.html#_4-执行命令生成ssh-pub-key",a:"_4-执行命令生成ssh-pub-key"},"86.5":{t:"**5.打开生成后的id_rsa.pub文件，copy内容到git ssh个人设置**\r",p:`!image-20230222160826601
!image-20230222161109182
`,l:"others/git/install.html#_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置",a:"_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置"},"86.6":{t:"**6.本地拉取代码**\r",p:`就可以克隆ssh地址了
`,l:"others/git/install.html#_6-本地拉取代码",a:"_6-本地拉取代码"},"86.7":{t:"TortoiseGit安装\r",p:`TortoiseGit安装和配置详细说明
`,l:"others/git/install.html#tortoisegit安装",a:"tortoisegit安装"},"87.0":{t:"# 基本类型\r",p:"\r",l:"others/TypeScript/basic.html",a:"基本类型"},"87.1":{t:"字符串类型\r",p:`// 普通声明
let a: string = '123'

// 也可以使用es6的字符串模板
let str: string = \`ddd\${a}\`

`,l:"others/TypeScript/basic.html#字符串类型",a:"字符串类型"},"87.2":{t:"数字类型\r",p:`// 支持十六进制、十进制、八进制和二进制。
let notANumber: number = NaN //NaN
let num: number = 123.321 //普通数字
let infin ...`,l:"others/TypeScript/basic.html#数字类型",a:"数字类型"},"87.3":{t:"布尔类型\r",p:`let b1: boolean = true //可以直接使用布尔值
let b2: boolean = false //也可以通过函数返回布尔值

let b2: boolean = Boolean ...`,l:"others/TypeScript/basic.html#布尔类型",a:"布尔类型"},"87.4":{t:"数组\r",p:`TypeScript 像 JavaScript 一样可以操作数组元素。 有两种方式可以定义数组。 第一种，可以在元素类型后面接上 []，表示由此类型元素组成的一个数组：
let list: numbe ...`,l:"others/TypeScript/basic.html#数组",a:"数组"},"87.5":{t:"元组 Tuple\r",p:`元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。
比如：可以定义一对值分别为string和num ...`,l:"others/TypeScript/basic.html#元组-tuple",a:"元组-tuple"},"87.6":{t:"枚举\r",p:`enum类型是对 JavaScript 标准数据类型的一个补充。使用枚举类型可以为一组数值赋予友好的名字。
枚举的值可以是数字，也可以是字符串。

数字枚举

enum Types {
  Red = ...`,l:"others/TypeScript/basic.html#枚举",a:"枚举"},"87.7":{t:"Any 任意类型\r",p:`没有强制限定哪种类型，随时切换类型都可以 我们可以对 any 进行任何操作，不需要检查类型
let value: Any
value = true // OK
value = 42 // OK
val ...`,l:"others/TypeScript/basic.html#any-任意类型",a:"any-任意类型"},"87.8":{t:"Void\r",p:`可以用 void 表示没有任何返回值的函数
function voidFn(): void {
  console.log('test void')
  // return // 不能带有return ...`,l:"others/TypeScript/basic.html#void",a:"void"},"87.9":{t:"Null 和 Undefined\r",p:`let u: undefined = undefined //定义undefined
let n: null = null //定义null

默认情况下 null 和 undefined 是所有类型 ...`,l:"others/TypeScript/basic.html#null-和-undefined",a:"null-和-undefined"},"87.10":{t:"Never\r",p:`never 类型表示的是那些永不存在的值的类型。
// 返回never的函数必须存在无法达到的终点

// 因为必定抛出异常，所以 error 将不会有返回值
function error(messa ...`,l:"others/TypeScript/basic.html#never",a:"never"},"87.11":{t:"Never 与 Void 的差异\r",p:`//void类型只是没有返回值 但本身不会出错
function Void(): void {
  console.log()
}

//只会抛出异常没有返回值
function Never(): n ...`,l:"others/TypeScript/basic.html#never-与-void-的差异",a:"never-与-void-的差异"},"87.12":{t:"联合类型\r",p:`联合类型用|分隔，表示取值可以为多种类型中的一种
// a可以为数字或者布尔类型，不能为字符串类型，
// 因为定义的联合类型只有数字和布尔值并没有字符串
let a:num|boolean
a =  ...`,l:"others/TypeScript/basic.html#联合类型",a:"联合类型"},"87.13":{t:"交叉类型\r",p:`交叉类型就是跟联合类型相反，用&amp;操作符表示，交叉类型就是两个类型必须存在
interface People {
  age: number,
  height： number
}
interf ...`,l:"others/TypeScript/basic.html#交叉类型",a:"交叉类型"},"87.14":{t:"类型断言\r",p:"通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。 类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScrip ...",l:"others/TypeScript/basic.html#类型断言",a:"类型断言"},"88.0":{t:"# 类\r",p:"ES6提供了更接近传统语言的写法，引入了Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。基本上，ES6的class可以看作只是一个语法糖，它的绝大部分功能，ES5都可以做到 ...",l:"others/TypeScript/class.html",a:"类"},"88.1":{t:"基本实例\r",p:`// 类的基本定义与使用
class Person{
  // 声明属性
    name:string
    age:number

    // 构造方法
    constructor(nam ...`,l:"others/TypeScript/class.html#基本实例",a:"基本实例"},"88.2":{t:"继承\r",p:`在TypeScript 里，我们可以使用常用的面向对象模式。 基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类。
// 类的继承
class Animal {
  run (distan ...`,l:"others/TypeScript/class.html#继承",a:"继承"},"88.3":{t:"类的修饰符\r",p:`总共有三个 public private protected
`,l:"others/TypeScript/class.html#类的修饰符",a:"类的修饰符"},"88.4":{t:"默认为 public\r",p:`使用public修饰符 可以让你定义的变量 内部访问 也可以外部访问 如果不写默认就是public
`,l:"others/TypeScript/class.html#默认为-public",a:"默认为-public"},"88.5":{t:"理解 private\r",p:`使用private修饰符 代表定义的变量私有的只能在内部访问 不能在外部访问
`,l:"others/TypeScript/class.html#理解-private",a:"理解-private"},"88.6":{t:"理解 protected\r",p:`使用protected修饰符 代表定义的变量私有的只能在内部和继承的子类中访问 不能在外部访问
class Person{
    public name:string
    private age ...`,l:"others/TypeScript/class.html#理解-protected",a:"理解-protected"},"88.7":{t:"readonly 修饰符\r",p:`你可以使用 readonly 关键字将属性设置为只读的。 只读属性必须在声明时或构造函数里被初始化。
class Person {
  readonly name: string = 'abc'
   ...`,l:"others/TypeScript/class.html#readonly-修饰符",a:"readonly-修饰符"},"88.8":{t:"static 静态属性 和 静态方法\r",p:`我们用static 定义的属性 不可以通过this 去访问 只能通过类名去调用
class Person {
  public name: string;
  static age: number = ...`,l:"others/TypeScript/class.html#static-静态属性-和-静态方法",a:"static-静态属性-和-静态方法"},"88.9":{t:"interface 定义 类\r",p:`ts interface 定义类 使用关键字 implements 后面跟interface的名字多个用逗号隔开 继承还是用extends

interface PersonClass {
    g ...`,l:"others/TypeScript/class.html#interface-定义-类",a:"interface-定义-类"},"88.10":{t:"存储器\r",p:`TypeScript 支持通过 getters/setters 来截取对对象成员的访问。 它能帮助你有效的控制对对象成员的访问。
下面来看如何把一个简单的类改写成使用 get 和 set。 首先，我们 ...`,l:"others/TypeScript/class.html#存储器",a:"存储器"},"88.11":{t:"抽象类\r",p:`抽象类做为其它派生类的基类使用。 它们一般不会直接被实例化，只能实例化实现了所有抽象方法的子类。 不同于接口，抽象类可以包含成员的实现细节。
abstract: 用abstract关键字声明的类叫做抽 ...`,l:"others/TypeScript/class.html#抽象类",a:"抽象类"},"89.0":{t:"# 函数\r",p:`
函数涉及的类型实际上指的是：函数参数和返回值的类型

`,l:"others/TypeScript/function.html",a:"函数"},"89.1":{t:"函数的类型\r",p:`js的函数
// 命名函数
function add(x, y) {
  return x + y
}

// 匿名函数 箭头函数
let myAdd = (x, y) =&gt; {
  retur ...`,l:"others/TypeScript/function.html#函数的类型",a:"函数的类型"},"89.2":{t:"可选参数`?`\r",p:`通过?表示该参数为可选参数
function add(x: number, y?: number): number {
  return y ? x + y : x;
}


const fn = ( ...`,l:"others/TypeScript/function.html#可选参数",a:"可选参数"},"89.3":{t:"默认参数\r",p:`function add(x: number, y: number = 20): number {
  return x + y;
}
add(10)  // 30

`,l:"others/TypeScript/function.html#默认参数",a:"默认参数"},"89.4":{t:"剩余参数\r",p:"必要参数，默认参数和可选参数有个共同点：它们表示某一个参数。 有时，你想同时操作多个参数，或者你并不知道会有多少参数传递进来。 在 JavaScript 里，你可以使用 arguments 来访问所有 ...",l:"others/TypeScript/function.html#剩余参数",a:"剩余参数"},"89.5":{t:"函数重载\r",p:`重载是方法名字相同，而参数不同，返回类型可以相同也可以不同。
// 重载函数声明
function add (x: string, y: string): string
function add (x ...`,l:"others/TypeScript/function.html#函数重载",a:"函数重载"},"90.0":{t:"# 泛型\r",p:`
指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定具体类型的一种特性。

`,l:"others/TypeScript/generic.html",a:"泛型"},"90.1":{t:"函数泛型\r",p:"\r",l:"others/TypeScript/generic.html#函数泛型",a:"函数泛型"},"90.2":{t:"给函数加上类型\r",p:`下面这是两个函数，除了类型的不同，实现的功能是一样的。
function num(a: number, b: number): Array&lt;number&gt; {
  return [a, b ...`,l:"others/TypeScript/generic.html#给函数加上类型",a:"给函数加上类型"},"90.3":{t:"使用泛型优化\r",p:`语法为函数名字后面跟一个&lt;参数名&gt; 参数名可以随便写 例如我这儿写了 T
当我们使用这个函数的时候把参数的类型传进去就可以了 （也就是动态类型）
function Add&lt;T&gt; ...`,l:"others/TypeScript/generic.html#使用泛型优化",a:"使用泛型优化"},"90.4":{t:"多个泛型参数的函数\r",p:`一个函数可以定义多个泛型参数
function swap&lt;K, V&gt;(a: K, b: V): [K, V] {
  return [a, b]
}
const result = swap ...`,l:"others/TypeScript/generic.html#多个泛型参数的函数",a:"多个泛型参数的函数"},"90.5":{t:"泛型接口\r",p:`在定义接口时, 为接口中的属性或方法定义泛型类型 
在使用接口时, 再指定具体的泛型类型
interface KeyValue&lt;T,U&gt; {
  key: T;
  value: U;
} ...`,l:"others/TypeScript/generic.html#泛型接口",a:"泛型接口"},"90.6":{t:"泛型类\r",p:`在定义类时, 为类中的属性或方法定义泛型类型 在创建类的实例时, 再指定特定的泛型类型
class clacArray&lt;T&gt;{
    private arr:T[] = [];

    ...`,l:"others/TypeScript/generic.html#泛型类",a:"泛型类"},"90.7":{t:"泛型约束\r",p:`我们期望在一个泛型的变量上面，获取其length参数，但是，有的数据类型是没有length属性的
// 没有泛型约束
function getLen&lt;T&gt;(arg:T) {
  retur ...`,l:"others/TypeScript/generic.html#泛型约束",a:"泛型约束"},"91.0":{t:"# 初识TypeScript\r",p:`
TypeScript中文网

`,l:"others/TypeScript/index.html",a:"初识typescript"},"91.1":{t:"TS是什么？\r",p:`TS：是TypeScript的简称，是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。
`,l:"others/TypeScript/index.html#ts是什么",a:"ts是什么"},"91.2":{t:"TS和JS的关系\r",p:`对比于JS，TS是JS的超集，简单的说就是在 JavaScript 的基础上加入了类型系统，让每个参数都有明确的意义，从而带来了更加智能的提示。
相对于JS而言，TS属于强类型语言，所以对于项目而言， ...`,l:"others/TypeScript/index.html#ts和js的关系",a:"ts和js的关系"},"91.3":{t:"TS和JS的区别\r",p:`
JavaScript 属于动态编程语言，而ts 属于静态编程语言。

js：边解释边执行，错误只有在运行的时候才能发现
ts：先编译再执行，在写的时候就会发现错误了（ts不能直接执行，需要先编译成  ...`,l:"others/TypeScript/index.html#ts和js的区别",a:"ts和js的区别"},"91.4":{t:"TypeScript的优缺点\r",p:"",l:"others/TypeScript/index.html#typescript的优缺点",a:"typescript的优缺点"},"91.5":{t:"优点\r",p:`
增强代码的可维护性，尤其在大型项目的时候效果显著
友好地在编辑器里提示错误，编译阶段就能检查类型发现大部分错误
支持最新的JavaScript新特特性
周边生态繁荣，vue3已全面支持 typesc ...`,l:"others/TypeScript/index.html#优点",a:"优点"},"91.6":{t:"缺点\r",p:`
需要一定的学习成本
和一些插件库的兼容并不是特别完美，如以前在 vue2 项目里使用 typescript就并不是那么顺畅
增加前期开发的成本，毕竟你需要写更多的代码（但是便于后期的维护）

`,l:"others/TypeScript/index.html#缺点",a:"缺点"},"91.7":{t:"安装\r",p:`# 安装 typescript
npm install -g typescript
//或者
yarn global add typescript

# 查看版本
tsc -v

# 编译
tsc i ...`,l:"others/TypeScript/index.html#安装",a:"安装"},"91.8":{t:"监视编译和在node下运行typescript\r",p:"",l:"others/TypeScript/index.html#监视编译和在node下运行typescript",a:"监视编译和在node下运行typescript"},"91.9":{t:"一、使用tsc -w进行随时热更新watch\r",p:`tsc -w

`,l:"others/TypeScript/index.html#一、使用tsc-w进行随时热更新watch",a:"一、使用tsc-w进行随时热更新watch"},"91.10":{t:"二、使用ts-node直接运行ts的node项目\r",p:`首先全局安装ts-node
npm install -g ts-node

直接进行ts-node 启动文件名
`,l:"others/TypeScript/index.html#二、使用ts-node直接运行ts的node项目",a:"二、使用ts-node直接运行ts的node项目"},"92.0":{t:"# 接口和对象类型\r",p:`
TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述)

`,l:"others/TypeScript/interface.html",a:"接口和对象类型"},"92.1":{t:"对象的类型\r",p:`在typescript中，我们定义对象的方式要用关键字interface（接口），我的理解是使用interface来定义一种约束，让数据的结构满足约束的格式。定义方式如下：
//这样写是会报错的 因为 ...`,l:"others/TypeScript/interface.html#对象的类型",a:"对象的类型"},"92.2":{t:"重名interface 会合并\r",p:`interface A{name:string}
interface A{age:number}

let a:A = {
    name:'zs',
    age:18
}

`,l:"others/TypeScript/interface.html#重名interface-会合并",a:"重名interface-会合并"},"92.3":{t:"继承\r",p:`interface A {
    name:stirng
}
interface B extends A {
    age:number
}

let obj:B = {
    age:18,
 ...`,l:"others/TypeScript/interface.html#继承",a:"继承"},"92.4":{t:"可选属性 使用`?`操作符\r",p:`可选属性的好处之一是可以对可能存在的属性进行预定义，好处之二是可以捕获引用了不存在的属性时的错误。
可选属性的含义是该属性可以不存在，带有可选属性的接口与普通的接口定义差不多，在可选属性名字定义的后面 ...`,l:"others/TypeScript/interface.html#可选属性-使用-操作符",a:"可选属性-使用-操作符"},"92.5":{t:"任意属性\r",p:`需要注意的是，一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：
//在这个例子当中我们看到接口中并没有定义C但是并没有报错
//应为我们定义了[propName: string ...`,l:"others/TypeScript/interface.html#任意属性",a:"任意属性"},"92.6":{t:"只读属性 readonly\r",p:`readonly只读属性是不允许被赋值的，只能读取
//这样写是会报错的
//应为a是只读的不允许重新赋值
interface Person {
    b?: string,
    readonl ...`,l:"others/TypeScript/interface.html#只读属性-readonly",a:"只读属性-readonly"},"92.7":{t:"添加函数\r",p:`interface Person {
    cb:()=&gt;void
}
const person: Person = {
    cb:()=&gt;{
        console.log ...`,l:"others/TypeScript/interface.html#添加函数",a:"添加函数"},"93.0":{t:"# 对象类型\r",p:`这里所说的对象类型，就是我们常说的函数、{}、数组、类
`,l:"others/TypeScript/object.html",a:"对象类型"},"93.1":{t:"object,Object 和类型\r",p:`
object

object 类型用于表示所有的非原始类型，即我们不能把 number、string、boolean、symbol 等 原始类型赋值给 object。在严格模式下，null 和 un ...`,l:"others/TypeScript/object.html#",a:""},"94.0":{t:"# tsconfig.json 配置文件\r",p:`{
  &quot;compilerOptions&quot;: {
    /* 基本选项 */

    // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5' ...`,l:"others/TypeScript/tsconfig.html",a:"tsconfig-json-配置文件"},"95.0":{t:"# 类型推论|类型别名\r",p:`\r
\r`,l:"others/TypeScript/type.html",a:"类型推论-类型别名"},"95.1":{t:"类型推论\r",p:`TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。
/* 定义变量时赋值了, 推断为对应的类型 */
let n1 = 10 // number
// 相当于 let n1 ...`,l:"others/TypeScript/type.html#类型推论",a:"类型推论"},"95.2":{t:"类型别名\r",p:`type 关键字（可以给一个类型定义一个名字）多用于复合类型

定义类型别名

type s = string

let str:s = &quot;abcd&quot;

console.log(s ...`,l:"others/TypeScript/type.html#类型别名",a:"类型别名"},"96.0":{t:"# vue3 项目配置文档\r",p:"\r",l:"project/configuration.html",a:"vue3-项目配置文档"},"96.1":{t:"一、搭建后台管理系统模板\r",p:"\r",l:"project/configuration.html#一、搭建后台管理系统模板",a:"一、搭建后台管理系统模板"},"96.2":{t:"1.1 项目初始化\r",p:"搭建一个 vue3 版本的后台管理系统，一个项目要有统一的规范，需要使用 eslint+stylelint+prettier 来对我们的代码质量做检测和修复，需要使用 husky 来做 commit  ...",l:"project/configuration.html#_1-1-项目初始化",a:"_1-1-项目初始化"},"96.3":{t:"1.1.1 环境准备\r",p:`
node 16+
pnpm 8.3.1

`,l:"project/configuration.html#_1-1-1-环境准备",a:"_1-1-1-环境准备"},"96.4":{t:"1.1.2 初始化项目\r",p:`本项目使用 vite 进行构建，vite 官方中文文档参考：cn.vitejs.dev/guide/
pnpm:performant npm ，意味“高性能的 npm”。pnpm由 npm/yarn  ...`,l:"project/configuration.html#_1-1-2-初始化项目",a:"_1-1-2-初始化项目"},"96.5":{t:"1.2 项目配置\r",p:"\r",l:"project/configuration.html#_1-2-项目配置",a:"_1-2-项目配置"},"96.6":{t:"一、eslint 配置\r",p:`eslint 中文官网:http://eslint.cn/
ESLint 最初是由Nicholas C. Zakas 于 2013 年 6 月创建的开源项目。它的目标是提供一个插件化的javascri ...`,l:"project/configuration.html#一、eslint-配置",a:"一、eslint-配置"},"96.7":{t:"1.1.1 vue3 环境代码校验插件\r",p:`# 让所有与prettier规则存在冲突的Eslint rules失效，并使用prettier进行代码检查
&quot;eslint-config-prettier&quot;: &quot;^8.6 ...`,l:"project/configuration.html#_1-1-1-vue3-环境代码校验插件",a:"_1-1-1-vue3-环境代码校验插件"},"96.8":{t:"1.1.2 修改.eslintrc.cjs 配置文件\r",p:`// @see https://eslint.bootcss.com/docs/rules/

module.exports = {
  env: {
    browser: true,
    e ...`,l:"project/configuration.html#_1-1-2-修改-eslintrc-cjs-配置文件",a:"_1-1-2-修改-eslintrc-cjs-配置文件"},"96.9":{t:"2.5 集成 sass\r",p:"我们目前在组件内部已经可以使用 scss 样式,因为在配置 styleLint 工具的时候，项目当中已经安装过 sass sass-loader,因此我们再组件内可以使用 scss 语法！！！需要加上 ...",l:"project/configuration.html#_2-5-集成-sass",a:"_2-5-集成-sass"},"96.10":{t:"2.6 mock 数据\r",p:`安装依赖:https://www.npmjs.com/package/vite-plugin-mock
pnpm install -D vite-plugin-mock mockjs

在 vite. ...`,l:"project/configuration.html#_2-6-mock-数据",a:"_2-6-mock-数据"},"96.11":{t:"2.7 axios 二次封装\r",p:`在开发项目的时候避免不了与后端进行交互,因此我们需要使用 axios 插件实现发送网络请求。在开发项目的时候
我们经常会把 axios 进行二次封装。
目的:
1:使用请求拦截器，可以在请求拦截器中处 ...`,l:"project/configuration.html#_2-7-axios-二次封装",a:"_2-7-axios-二次封装"},"96.12":{t:"2.8 API 接口统一管理\r",p:`在开发项目的时候,接口可能很多需要统一管理。在 src 目录下去创建 api 文件夹去统一管理项目的接口；
比如:下面方式
//统一管理咱们项目用户相关的接口

import request from ...`,l:"project/configuration.html#_2-8-api-接口统一管理",a:"_2-8-api-接口统一管理"},"97.0":{t:"Nginx 部署刷新 404 问题\r",p:`location / {
root   C:\\Users....;
index  index.html index.htm;
try_files $uri $uri/ @Qrouter; // 加上这 ...`,l:"server/linux/nginx.html",a:"nginx-部署刷新-404-问题"},"97.1":{t:"Nginx部署项目\r",p:`1、 yarn build打包项目
2、 打开nginx.conf文件，配置对应的信息
3、 检查配置文件是否配置成功
nginx -t -c D:\\nginx-1.16.1\\conf\\nginx.c ...`,l:"server/linux/nginx.html#nginx部署项目",a:"nginx部署项目"},"98.0":{t:"# MySQL 数据库的常用命令\r",p:`MySQL 数据库的常用命令包括管理数据库和表的命令、数据操作命令以及授权和权限管理命令。下面列出了一些常用的 MySQL 命令：
`,l:"server/mysql/command.html",a:"mysql-数据库的常用命令"},"98.1":{t:"管理数据库和表的命令\r",p:`
CREATE DATABASE database_name;：创建一个新的数据库。
DROP DATABASE database_name;：删除一个数据库。
USE database_name;： ...`,l:"server/mysql/command.html#管理数据库和表的命令",a:"管理数据库和表的命令"},"98.2":{t:"数据操作命令\r",p:`
INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);：向表中插入数据。
SELECT column ...`,l:"server/mysql/command.html#数据操作命令",a:"数据操作命令"},"98.3":{t:"授权和权限管理命令\r",p:`
GRANT privileges ON database_name.table_name TO 'username'@'hostname';：授予用户特定数据库或表的权限。
REVOKE privi ...`,l:"server/mysql/command.html#授权和权限管理命令",a:"授权和权限管理命令"},"99.0":{t:"# MySQL 字段的数据类型\r",p:`MySQL 提供了多种数据类型，用于定义表中列（字段）的数据类型。每个数据类型都有特定的存储需求和可接受的值范围。以下是 MySQL 中常用的数据类型：
`,l:"server/mysql/dataType.html",a:"mysql-字段的数据类型"},"99.1":{t:"整数类型\r",p:`
TINYINT：一个非常小的整数，范围为-128 到 127（有符号）或 0 到 255（无符号）。
SMALLINT：较小的整数，范围为-32,768 到 32,767（有符号）或 0 到 65, ...`,l:"server/mysql/dataType.html#整数类型",a:"整数类型"},"99.2":{t:"浮点数类型\r",p:`
FLOAT：单精度浮点数，范围为-3.402823466E+38 到-1.175494351E-38、0 和 1.175494351E-38 到 3.402823466E+38。
DOUBLE：双精 ...`,l:"server/mysql/dataType.html#浮点数类型",a:"浮点数类型"},"99.3":{t:"字符串类型\r",p:`
CHAR：固定长度的字符串，最大长度为 255 个字符。
VARCHAR：可变长度的字符串，最大长度为 65535 个字符。
TEXT：用于存储较长文本数据的字符串类型，最大长度为 65535 个字 ...`,l:"server/mysql/dataType.html#字符串类型",a:"字符串类型"},"99.4":{t:"日期和时间类型\r",p:`
DATE：存储日期，格式为'YYYY-MM-DD'。
TIME：存储时间，格式为'HH:MM:SS'。
DATETIME：存储日期和时间，格式为'YYYY-MM-DD HH:MM:SS'。
TIME ...`,l:"server/mysql/dataType.html#日期和时间类型",a:"日期和时间类型"},"99.5":{t:"其他常用类型\r",p:`
BOOLEAN：存储布尔值（true 或 false）。
ENUM：存储枚举值，从一个预定义的值列表中选择一个值。
SET：存储一个或多个预定义的值。

::: tip
除了上述常见的数据类型，My ...`,l:"server/mysql/dataType.html#其他常用类型",a:"其他常用类型"},"100.0":{t:"数据库概述\r",p:`数据库是用于组织和存储大量结构化数据的集合。它是一种数据管理系统，允许用户定义、创建、操作和控制访问数据的方法。数据库的设计和使用旨在提供高效的数据存储、快速的数据检索和安全的数据管理。
数据库通常由 ...`,l:"server/mysql/index.html",a:"数据库概述"},"100.1":{t:"MySQL介绍\r",p:"MySQL是一种开源的关系型数据库管理系统，由瑞典公司MySQL AB开发并最终由Oracle Corporation收购。MySQL被广泛用于各种规模的应用程序和网站，因其易用性、性能和可靠性而受到 ...",l:"server/mysql/index.html#mysql介绍",a:"mysql介绍"},"101.0":{t:"# 安装Mysql",p:"",l:"server/mysql/install.html",a:"安装mysql"},"102.0":{t:"# MySQL 基本使用\r",p:`MySQL 的基本使用包括连接到 MySQL 服务器、创建数据库、创建表、插入数据、查询数据、更新数据和删除数据等操作。下面是 MySQL 的基本使用步骤：
`,l:"server/mysql/operation.html",a:"mysql-基本使用"},"102.1":{t:"1. 连接到 MySQL 服务器\r",p:`使用 MySQL 客户端工具（如命令行客户端或图形化客户端工具）连接到 MySQL 服务器。

命令行客户端：打开命令行终端，运行命令mysql -u username -p，其中username是您 ...`,l:"server/mysql/operation.html#_1-连接到-mysql-服务器",a:"_1-连接到-mysql-服务器"},"102.2":{t:"2. 创建数据库\r",p:`在 MySQL 中创建一个新的数据库，用于存储数据。
CREATE DATABASE database_name;

将database_name替换为您希望创建的数据库的名称。
`,l:"server/mysql/operation.html#_2-创建数据库",a:"_2-创建数据库"},"102.3":{t:"3. 选择数据库\r",p:`使用以下命令选择要在其中执行操作的数据库。
USE database_name;

将database_name替换为您要使用的数据库的名称。
`,l:"server/mysql/operation.html#_3-选择数据库",a:"_3-选择数据库"},"102.4":{t:"4. 创建表\r",p:`在所选的数据库中创建一个新的表，定义表的列和数据类型。
CREATE TABLE table_name (
  column1 datatype,
  column2 datatype,
  ...
 ...`,l:"server/mysql/operation.html#_4-创建表",a:"_4-创建表"},"102.5":{t:"5. 插入数据\r",p:`使用以下命令向表中插入数据。
INSERT INTO table_name (column1, column2, ...)
VALUES (value1, value2, ...);

将table_ ...`,l:"server/mysql/operation.html#_5-插入数据",a:"_5-插入数据"},"102.6":{t:"6. 查询数据\r",p:`使用 SELECT 语句从表中检索数据。
SELECT column1, column2, ...
FROM table_name
WHERE condition;

将column1、column2 ...`,l:"server/mysql/operation.html#_6-查询数据",a:"_6-查询数据"},"102.7":{t:"7. 更新数据\r",p:`使用 UPDATE 语句更新表中的数据。
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
 ...`,l:"server/mysql/operation.html#_7-更新数据",a:"_7-更新数据"},"102.8":{t:"8. 删除数据\r",p:`使用 DELETE 语句从表中删除数据。
DELETE FROM table_name
WHERE condition;

将table_name替换为要删除数据的表的名称，condition替换为删 ...`,l:"server/mysql/operation.html#_8-删除数据",a:"_8-删除数据"},"103.0":{t:"# 使用 node 做一个简单的爬虫\r",p:"\r",l:"server/nodejs/crawler.html",a:"使用-node-做一个简单的爬虫"},"103.1":{t:"1. 初始化项目\r",p:`npm init -y

`,l:"server/nodejs/crawler.html#_1-初始化项目",a:"_1-初始化项目"},"103.2":{t:"2. 安装插件 cheerio\r",p:`npm install cheerio

Cheerio 解析标记并提供用于遍历/操作结果数据结构的 API。它不会像网络浏览器那样解释结果。具体来说，它不会生成视觉渲染、应用 CSS、加载外部资源或 ...`,l:"server/nodejs/crawler.html#_2-安装插件-cheerio",a:"_2-安装插件-cheerio"},"103.3":{t:"3. 访问要爬取的网站\r",p:`
爬取豆瓣网 https://movie.douban.com/top250
!img
根据浏览器检查元素区，要爬取的内容
!img

`,l:"server/nodejs/crawler.html#_3-访问要爬取的网站",a:"_3-访问要爬取的网站"},"103.4":{t:"4。 创建 index.js 文件并编写代码\r",p:`// 引入模块
const https = require('https')
const cheerio = require('cheerio')
const fs = require('fs')

 ...`,l:"server/nodejs/crawler.html#_4。-创建-index-js-文件并编写代码",a:"_4。-创建-index-js-文件并编写代码"},"103.5":{t:"5. 运行脚本\r",p:`node index.js

`,l:"server/nodejs/crawler.html#_5-运行脚本",a:"_5-运行脚本"},"103.6":{t:"6. 爬取成功\r",p:`!img
这时会多出来一个名叫files.json的 json 文件
里面就是爬取出来的内容了
[
  {
    &quot;title&quot;: &quot;肖申克的救赎 / The Shaw ...`,l:"server/nodejs/crawler.html#_6-爬取成功",a:"_6-爬取成功"},"104.0":{t:"# Express\r",p:`官网传送门

基于 Node.js 平台，快速、开放、极简的 Web 开发框架

Express 是用于快速创建服务器的第三方模块。
`,l:"server/nodejs/Express.html",a:"express"},"104.1":{t:"Express 初体验\r",p:"\r",l:"server/nodejs/Express.html#express-初体验",a:"express-初体验"},"104.2":{t:"基本使用\r",p:`安装 Express：
npm install express

创建服务器，监听客户端请求，并返回内容：
const express = require('express')
// 创建 web 服 ...`,l:"server/nodejs/Express.html#基本使用",a:"基本使用"},"104.3":{t:"托管静态资源\r",p:`
通过 express.static() 方法可创建静态资源服务器，向外开放访问静态资源。
Express 在指定的静态目录中查找文件，并对外提供资源的访问路径，存放静态文件的目录名不会出现在 URL ...`,l:"server/nodejs/Express.html#托管静态资源",a:"托管静态资源"},"104.4":{t:"Express 路由\r",p:`创建路由模块：
// router.js

const express = require('express')
// 创建路由对象
const router = express.Router()

 ...`,l:"server/nodejs/Express.html#express-路由",a:"express-路由"},"104.5":{t:"Express 中间件\r",p:`
中间件是指流程的中间处理环节
服务器收到请求后，可先调用中间件进行预处理
中间件是一个函数，包含 req, res, next 三个参数，next() 参数把流转关系交给下一个中间件或路由

中间件 ...`,l:"server/nodejs/Express.html#express-中间件",a:"express-中间件"},"104.6":{t:"全局中间件\r",p:`
通过 app.use() 定义的中间件为全局中间件

const express = require('express')
const app = express()

// 定义第一个全局中间件
 ...`,l:"server/nodejs/Express.html#全局中间件",a:"全局中间件"},"104.7":{t:"局部中间件\r",p:`const express = require('express')
const app = express()

// 定义中间件函数
const mw1 = (req, res, next) =& ...`,l:"server/nodejs/Express.html#局部中间件",a:"局部中间件"},"104.8":{t:"中间件分类\r",p:`
应用级别的中间件


通过 app.use() 或 app.get() 或 app.post() ，绑定到 app 实例上的中间件


路由级别的中间件


绑定到 express.Router() ...`,l:"server/nodejs/Express.html#中间件分类",a:"中间件分类"},"104.9":{t:"CORS 跨域资源共享\r",p:"\r",l:"server/nodejs/Express.html#cors-跨域资源共享",a:"cors-跨域资源共享"},"104.10":{t:"cors 中间件解决跨域\r",p:`
安装中间件：npm install cors
导入中间件：const cors = require('cors')
配置中间件：app.use(cors())

`,l:"server/nodejs/Express.html#cors-中间件解决跨域",a:"cors-中间件解决跨域"},"104.11":{t:"CORS\r",p:`
CORS（Cross-Origin Resource Sharing，跨域资源共享）解决跨域，是通过 HTTP 响应头决定浏览器是否阻止前端 JS 代码跨域获取资源
浏览器的同源安全策略默认会阻止网 ...`,l:"server/nodejs/Express.html#cors",a:"cors"},"104.12":{t:"CORS 常见响应头\r",p:`
Access-Control-Allow-Origin：制定了允许访问资源的外域 URL

res.setHeader('Access-Control-Allow-Origin', 'http:// ...`,l:"server/nodejs/Express.html#cors-常见响应头",a:"cors-常见响应头"},"104.13":{t:"CORS 请求分类\r",p:"\r",l:"server/nodejs/Express.html#cors-请求分类",a:"cors-请求分类"},"104.14":{t:"简单请求\r",p:`
请求方式：GET、POST、HEAD 三者之一
HTTP 头部信息不超过以下几种字段：无自定义头部字段、Accept、Accept-Language、Content-Language、DPR、Dow ...`,l:"server/nodejs/Express.html#简单请求",a:"简单请求"},"104.15":{t:"预检请求\r",p:`
请求方式为 GET、POST、HEAD 之外的请求 Method 类型
请求头中包含自定义头部字段
向服务器发送了 application/json 格式的数据

在浏览器与服务器正式通信之前，浏览 ...`,l:"server/nodejs/Express.html#预检请求",a:"预检请求"},"105.0":{t:"# Nodejs 介绍\r",p:`官网传送门
`,l:"server/nodejs/index.html",a:"nodejs-介绍"},"105.1":{t:"初识 Nodejs\r",p:`
Node.js® is an open-source, cross-platform JavaScript runtime environment.
Node.js® 是一个基于 Chrome V8 ...`,l:"server/nodejs/index.html#初识-nodejs",a:"初识-nodejs"},"105.2":{t:"Nodejs 的特点\r",p:`
异步、非阻塞 IO 模型
事件循环
单线程
总结：轻量和高效
Node.js 的性能和效率非常高。

传统的 Java 语言是一个请求开启一个线程，当请求处理完毕后就关闭这个线程。而 Node.js ...`,l:"server/nodejs/index.html#nodejs-的特点",a:"nodejs-的特点"},"105.3":{t:"使用 Node.js 时的劣势\r",p:`
程序运行不稳定，可能会出现服务不可用的情况
程序运行效率较低，每秒的请求数维持在一个较低的水平

`,l:"server/nodejs/index.html#使用-node-js-时的劣势",a:"使用-node-js-时的劣势"},"106.0":{t:"# Nodejs内置模块\r",p:"\r",l:"server/nodejs/innerModule.html",a:"nodejs内置模块"},"106.1":{t:"fs 文件系统模块\r",p:`
fs 模块中所有的操作都有两种形式可供选择:同步和异步
同步文件系统会阻塞程序的执行，也就是除非操作完毕，否则不会向下执行代码
异步文件系统不会阻塞程序的执行，而是在操作完成时，通过回调函数将结果返 ...`,l:"server/nodejs/innerModule.html#fs-文件系统模块",a:"fs-文件系统模块"},"106.2":{t:"读取文件\r",p:"\r",l:"server/nodejs/innerModule.html#读取文件",a:"读取文件"},"106.3":{t:"简单文件读取\r",p:`语法格式：
fs.readFile(path[, options], callback)


path：文件路径
options：配置选项，若是字符串则指定编码格式

encoding：编码格式
fl ...`,l:"server/nodejs/innerModule.html#简单文件读取",a:"简单文件读取"},"106.4":{t:"流式文件读取\r",p:`
简单文件读取的方式会一次性读取文件内容到内存中，若文件较大，会占用过多内存影响系统性能，且读取速度慢
大文件适合用流式文件读取，它会分多次将文件读取到内存中

var fs = require('f ...`,l:"server/nodejs/innerModule.html#流式文件读取",a:"流式文件读取"},"106.5":{t:"写入文件\r",p:"\r",l:"server/nodejs/innerModule.html#写入文件",a:"写入文件"},"106.6":{t:"简单文件写入\r",p:`语法格式：
fs.writeFile(file, data[, options], callback)


file：文件路径
data：写入内容
options：配置选项，包含 encoding,  ...`,l:"server/nodejs/innerModule.html#简单文件写入",a:"简单文件写入"},"106.7":{t:"流式文件写入\r",p:`// 同步、异步、简单文件的写入都不适合大文件的写入，性能较差，容易导致内存溢出
var fs = require('fs')

// 创建一个可写流
var ws = fs.createWriteS ...`,l:"server/nodejs/innerModule.html#流式文件写入",a:"流式文件写入"},"106.8":{t:"Buffer 缓冲区\r",p:`
Buffer 缓冲区文档


Buffer 的结构与数组类似，操作方法也与数组类似
数组不能存储二进制文件，Buffer 是专门存储二进制数据的
Buffer 存储的是二进制数据，显示时以 16 进 ...`,l:"server/nodejs/innerModule.html#buffer-缓冲区",a:"buffer-缓冲区"},"106.9":{t:"路径动态拼接问题 `__dirname`\r",p:`
在使用 fs 模块操作文件时，如果提供的操作路径是以 ./ 或 ../ 开头的相对路径时，容易出现路径动态拼接错误的问题
原因：代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操 ...`,l:"server/nodejs/innerModule.html#路径动态拼接问题-dirname",a:"路径动态拼接问题-dirname"},"106.10":{t:"其它操作\r",p:`验证路径是否存在：

fs.exists(path, callback)
fs.existsSync(path)

获取文件信息：

fs.stat(path, callback)
fs.stat(p ...`,l:"server/nodejs/innerModule.html#其它操作",a:"其它操作"},"106.11":{t:"path 路径模块\r",p:`path 模块是 Node.js 官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。
`,l:"server/nodejs/innerModule.html#path-路径模块",a:"path-路径模块"},"106.12":{t:"路径拼接 `path.join()`\r",p:`const path = require('path')
const fs = require('fs')

// 注意 ../ 会抵消前面的路径
// ./ 会被忽略
const pathStr = ...`,l:"server/nodejs/innerModule.html#路径拼接-path-join",a:"路径拼接-path-join"},"106.13":{t:"获取路径中文件名 `path.basename()`\r",p:`使用 path.basename() 方法，可以获取路径中的最后一部分，常通过该方法获取路径中的文件名
path.basename(path[, ext])


path: 文件路径
ext: 文件扩 ...`,l:"server/nodejs/innerModule.html#获取路径中文件名-path-basename",a:"获取路径中文件名-path-basename"},"106.14":{t:"获取路径中文件扩展名 `path.extname()`\r",p:`const path = require('path')

const fpath = '/a/b/c/index.html'

const fext = path.extname(fpath)
co ...`,l:"server/nodejs/innerModule.html#获取路径中文件扩展名-path-extname",a:"获取路径中文件扩展名-path-extname"},"106.15":{t:"http 模块\r",p:`http 模块是 Node.js 官方提供的、用来创建 web 服务器的模块。
`,l:"server/nodejs/innerModule.html#http-模块",a:"http-模块"},"106.16":{t:"创建基本 Web 服务器\r",p:`const http = require('http')

// 创建 web 服务器实例
const server = http.createServer()

// 为服务器实例绑定 reques ...`,l:"server/nodejs/innerModule.html#创建基本-web-服务器",a:"创建基本-web-服务器"},"106.17":{t:"实现简陋路由效果\r",p:`const http = require('http')
const server = http.createServer()

server.on('request', (req, res) =&g ...`,l:"server/nodejs/innerModule.html#实现简陋路由效果",a:"实现简陋路由效果"},"107.0":{t:"# 模块化\r",p:"\r",l:"server/nodejs/module.html",a:"模块化"},"107.1":{t:"基本概念\r",p:"\r",l:"server/nodejs/module.html#基本概念",a:"基本概念"},"107.2":{t:"什么是模块化\r",p:`概念：

模块化是指解决一个复杂问题时，自顶向下逐层把系统划分为若干模块的过程，模块是可组合、分解和更换的单元。
模块化可提高代码的复用性和可维护性，实现按需加载。
模块的内部数据、实现是私有的, 只 ...`,l:"server/nodejs/module.html#什么是模块化",a:"什么是模块化"},"107.3":{t:"模块化的好处\r",p:`
避免命名空间的冲突
提高代码的复用性
提高维护性
更好的分离，实现按需加载

`,l:"server/nodejs/module.html#模块化的好处",a:"模块化的好处"},"107.4":{t:"Nodejs 中模块化\r",p:"\r",l:"server/nodejs/module.html#nodejs-中模块化",a:"nodejs-中模块化"},"107.5":{t:"Node.js 中模块的分类\r",p:`
内置模块
自定义模块
第三方模块

`,l:"server/nodejs/module.html#node-js-中模块的分类",a:"node-js-中模块的分类"},"107.6":{t:"Node.js 中的模块作用域\r",p:`
和函数作用域类似，在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域
防止全局变量污染

`,l:"server/nodejs/module.html#node-js-中的模块作用域",a:"node-js-中的模块作用域"},"107.7":{t:"模块作用域的成员\r",p:`
自定义模块中都有一个 module 对象，存储了和当前模块有关的信息
在自定义模块中，可以使用 module.exports 对象，将模块内的成员共享出去，供外界使用。导入自定义模块时，得到的就是  ...`,l:"server/nodejs/module.html#模块作用域的成员",a:"模块作用域的成员"},"107.8":{t:"CommonJS 模块化规范\r",p:`
每个模块内部，module 变量代表当前模块
module 变量是一个对象，module.exports 是对外的接口
加载某个模块即加载该模块的 module.exports 属性

`,l:"server/nodejs/module.html#commonjs-模块化规范",a:"commonjs-模块化规范"},"107.9":{t:"模块加载机制\r",p:`模块第一次加载后会被缓存，即多次调用 require() 不会导致模块的代码被执行多次，提高模块加载效率。
`,l:"server/nodejs/module.html#模块加载机制",a:"模块加载机制"},"107.10":{t:"内置模块加载\r",p:`内置模块加载优先级最高。
`,l:"server/nodejs/module.html#内置模块加载",a:"内置模块加载"},"107.11":{t:"自定义模块加载\r",p:`加载自定义模块时，路径要以 ./ 或 ../ 开头，否则会作为内置模块或第三方模块加载。
导入自定义模块时，若省略文件扩展名，则 Node.js 会按顺序尝试加载文件：

按确切的文件名加载
补全 . ...`,l:"server/nodejs/module.html#自定义模块加载",a:"自定义模块加载"},"107.12":{t:"第三方模块加载\r",p:`
若导入第三方模块， Node.js 会从当前模块的父目录开始，尝试从 /node_modules 文件夹中加载第三方模块。
如果没有找到对应的第三方模块，则移动到再上一层父目录中，进行加载，直到文件 ...`,l:"server/nodejs/module.html#第三方模块加载",a:"第三方模块加载"},"107.13":{t:"目录作为模块加载\r",p:`当把目录作为模块标识符进行加载的时候，有三种加载方式：

在被加载的目录下查找 package.json 的文件，并寻找 main 属性，作为 require() 加载的入口
如果没有 package ...`,l:"server/nodejs/module.html#目录作为模块加载",a:"目录作为模块加载"},"107.14":{t:"npm 与包\r",p:"\r",l:"server/nodejs/module.html#npm-与包",a:"npm-与包"},"107.15":{t:"包\r",p:`Node.js 中的第三方模块又叫做包
不同于 Node.js 中的内置模块与自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。Node.js 中的包都是免费且开源的。

由于 Node ...`,l:"server/nodejs/module.html#包",a:"包"},"107.16":{t:"npm 安装\r",p:`在项目中安装包的命令
npm install 包的元整名称
或者
npm i 包的元整名称

现在也有其他的包管理工具，如 yarn、pnpm，
下载安装速度是比 npm 要快的
`,l:"server/nodejs/module.html#npm-安装",a:"npm-安装"},"107.17":{t:"通过切换源解决 npm 的下包速度慢的问题\r",p:`npm config get registry  # 查看当前包镜像源
npm config get registry=http:registry.npm.taobao.org/ # 切换源头
npm ...`,l:"server/nodejs/module.html#通过切换源解决-npm-的下包速度慢的问题",a:"通过切换源解决-npm-的下包速度慢的问题"},"107.18":{t:"开发包\r",p:`
注册 npm 账号
初始化包的基本结构

新建文件夹（包名），新建如下三个文件




package.json (包管理配置文件)
index.js (包的入口文件)
README.md (包的说 ...`,l:"server/nodejs/module.html#开发包",a:"开发包"},"107.19":{t:"模块的加载机制\r",p:`模块在第一次加载后会被缓存，多次调用 require()模块的代码只会被执行一次。不论是内置模块、用户自定义模块、还是第三方模块，他们都会优先从缓存中加载，从而提高模块的加载效率。
`,l:"server/nodejs/module.html#模块的加载机制",a:"模块的加载机制"},"107.20":{t:"内置模块的加载机制\r",p:`
内置模块的加载优先级最高

`,l:"server/nodejs/module.html#内置模块的加载机制",a:"内置模块的加载机制"},"107.21":{t:"自定义模块的加载机制\r",p:`
使用 require()加载自定义模块时，必须指定以./或../开头的路径标识符。在加载自定义模块时，如果没有指定./或../这样的路径标识符，则 node 会把它当作内置模块或第三方模块进行加载。 ...`,l:"server/nodejs/module.html#自定义模块的加载机制",a:"自定义模块的加载机制"},"107.22":{t:"第三方模块的加载机制\r",p:`
如果传递给 require()的模块标识符不是一个内置模块，也没有以./或../开头，则 Nodejs 会从当前模块的父目录开始，尝试从/node_modules 文件夹中加载第三方模块
如果没有找 ...`,l:"server/nodejs/module.html#第三方模块的加载机制",a:"第三方模块的加载机制"},"107.23":{t:"目录作为模块\r",p:`
当把目录作为模块标识符，传递给 require()进行加载的时候，有三种加载方式

a. 在被加载的目录下查找一个叫做 package.json 的文件，并寻找 main 属性值作为 require ...`,l:"server/nodejs/module.html#目录作为模块",a:"目录作为模块"},"108.0":{t:"# 数据库和身份认证\r",p:"\r",l:"server/nodejs/mysql.html",a:"数据库和身份认证"},"108.1":{t:"Node 操作 mysql\r",p:"\r",l:"server/nodejs/mysql.html#node-操作-mysql",a:"node-操作-mysql"},"108.2":{t:"配置 mysql 模块\r",p:`
安装 mysql 模块

npm install mysql


建立连接

const mysql = require('mysql')

const db = mysql.createPool( ...`,l:"server/nodejs/mysql.html#配置-mysql-模块",a:"配置-mysql-模块"},"108.3":{t:"操作 mysql 数据库\r",p:`
查询数据

db.query('select * from users', (err, results) =&gt; {
  ...
})


插入数据

// ? 表示占位符
const sql  ...`,l:"server/nodejs/mysql.html#操作-mysql-数据库",a:"操作-mysql-数据库"},"108.4":{t:"Web 开发模式\r",p:"\r",l:"server/nodejs/mysql.html#web-开发模式",a:"web-开发模式"},"108.5":{t:"服务端渲染\r",p:`服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接动态生成的。因此客户端不需要使用 Ajax 额外请求页面的数据。
app.get('/index.html', (req, res) = ...`,l:"server/nodejs/mysql.html#服务端渲染",a:"服务端渲染"},"108.6":{t:"前后端分离\r",p:`前后端分离的开发模式，依赖于 Ajax 技术的广泛应用。后端只负责提供 API 接口，前端使用 Ajax 调用接口。
优点：

开发体验好。前端专业页面开发，后端专注接口开发。
用户体验好。页面局部刷 ...`,l:"server/nodejs/mysql.html#前后端分离",a:"前后端分离"},"108.7":{t:"如何选择\r",p:`
企业级网站，主要功能是展示，没有复杂交互，且需要良好的 SEO，可考虑服务端渲染
后台管理项目，交互性强，无需考虑 SEO，可使用前后端分离
为同时兼顾首页渲染速度和前后端分离开发效率，可采用首屏服 ...`,l:"server/nodejs/mysql.html#如何选择",a:"如何选择"},"108.8":{t:"身份认证\r",p:"\r",l:"server/nodejs/mysql.html#身份认证",a:"身份认证"},"108.9":{t:"Session 认证机制\r",p:`服务端渲染推荐使用 Session 认证机制
`,l:"server/nodejs/mysql.html#session-认证机制",a:"session-认证机制"},"108.10":{t:"Session 工作原理\r",p:`!session
`,l:"server/nodejs/mysql.html#session-工作原理",a:"session-工作原理"},"108.11":{t:"Express 中使用 Session 认证\r",p:`
安装 express-session 中间件

npm install express-session


配置中间件

const session = require('express-sessi ...`,l:"server/nodejs/mysql.html#express-中使用-session-认证",a:"express-中使用-session-认证"},"108.12":{t:"JWT 认证机制\r",p:`前后端分离推荐使用 JWT（JSON Web Token）认证机制，是目前最流行的跨域认证解决方案
`,l:"server/nodejs/mysql.html#jwt-认证机制",a:"jwt-认证机制"},"108.13":{t:"JWT 工作原理\r",p:`Session 认证的局限性：

Session 认证机制需要配合 Cookie 才能实现。由于 Cookie 默认不支持跨域访问，所以，当涉及到前端跨域请求后端接口的时候，需要做很多额外的配置，才能 ...`,l:"server/nodejs/mysql.html#jwt-工作原理",a:"jwt-工作原理"},"108.14":{t:"Express 使用 JWT\r",p:`
安装


jsonwebtoken 用于生成 JWT 字符串
express-jwt 用于将 JWT 字符串解析还原成 JSON 对象

npm install jsonwebtoken expre ...`,l:"server/nodejs/mysql.html#express-使用-jwt",a:"express-使用-jwt"},"109.0":{t:"# npm 与 yarn 的命令对比\r",p:`下面是一个包含 npm 和 Yarn 命令对比的 Markdown 表格：



命令
npm
Yarn




初始化项目
npm init
yarn init


安装依赖项
npm instal ...`,l:"server/npm/command.html",a:"npm-与-yarn-的命令对比"},"110.0":{t:"# NPM：Node Package Manager（Node 包管理器）\r",p:"\r",l:"server/npm/index.html",a:"npm-node-package-manager-node-包管理器"},"110.1":{t:"什么是 npm？\r",p:`npm 是一个用于管理和共享 JavaScript 代码的工具。它是 Node.js 的默认包管理器，也是世界上最大的开源软件注册表。
npm 允许开发者轻松地安装、更新、卸载和共享 JavaScri ...`,l:"server/npm/index.html#什么是-npm",a:"什么是-npm"},"110.2":{t:"安装 npm\r",p:`npm 是随同 Node.js 一起安装的。当你安装 Node.js 时，npm 也会自动安装。
你可以通过在终端中运行以下命令来检查是否已安装 npm 并查看版本：
npm --version

如 ...`,l:"server/npm/index.html#安装-npm",a:"安装-npm"},"110.3":{t:"常用命令\r",p:`以下是一些常用的 npm 命令：

npm init：初始化一个新的 npm 项目，生成一个 package.json 文件。
npm install &lt;package-name&gt;：安装指 ...`,l:"server/npm/index.html#常用命令",a:"常用命令"},"110.4":{t:"package.json\r",p:`package.json 是每个 npm 项目的核心文件，其中包含了项目的配置信息、依赖项、脚本和其他元数据。
可以通过运行 npm init 命令来初始化一个新的项目，并生成 package.jso ...`,l:"server/npm/index.html#package-json",a:"package-json"},"110.5":{t:"使用依赖项\r",p:`使用 npm，你可以轻松地安装和管理项目的依赖项。在 package.json 文件的 dependencies 部分，你可以列出项目所需的包及其版本号。
当其他开发者获得你的项目时，他们可以使用 n ...`,l:"server/npm/index.html#使用依赖项",a:"使用依赖项"},"110.6":{t:"开发和发布包\r",p:`npm 不仅可以帮助你管理项目的依赖项，还可以帮助你开发和发布自己的包。
通过编写代码、创建 package.json 文件、定义脚本和使用 npm publish 命令，你可以将自己的包发布到 np ...`,l:"server/npm/index.html#开发和发布包",a:"开发和发布包"},"111.0":{t:"# 发布包到 npm 上\r",p:`本教程将向你展示如何发布自己的包到 npm 上。按照以下步骤进行操作：
`,l:"server/npm/publish.html",a:"发布包到-npm-上"},"111.1":{t:"步骤 1：注册 npm 账号\r",p:`如果你还没有 npm 账号，请访问 npm 官方网站（https://www.npmjs.com/）并注册一个账号。
`,l:"server/npm/publish.html#步骤-1-注册-npm-账号",a:"步骤-1-注册-npm-账号"},"111.2":{t:"步骤 2：初始化项目\r",p:`在你的项目目录中，打开终端，并执行以下命令来初始化项目：
npm init -y

`,l:"server/npm/publish.html#步骤-2-初始化项目",a:"步骤-2-初始化项目"},"111.3":{t:"步骤 3：编写代码\r",p:`在项目目录中，编写你的包的代码。可以创建一个或多个 JavaScript 文件，实现你的功能逻辑。
`,l:"server/npm/publish.html#步骤-3-编写代码",a:"步骤-3-编写代码"},"111.4":{t:"步骤 4：准备发布文件\r",p:`确保在你的项目中包含以下文件：

package.json：这个文件由 npm init 命令生成，并包含了你的包的基本信息。
README.md：这是你的包的说明文档，提供关于包的介绍、使用方法和示 ...`,l:"server/npm/publish.html#步骤-4-准备发布文件",a:"步骤-4-准备发布文件"},"111.5":{t:"步骤 5：发布包\r",p:`
使用终端登录到你的 npm 账号：

npm login

按照提示提供你的用户名、密码和邮箱。

执行以下命令发布你的包：

npm publish

这将会将你的包上传到 npm 仓库，并使其对 ...`,l:"server/npm/publish.html#步骤-5-发布包",a:"步骤-5-发布包"},"111.6":{t:"步骤 6：更新和维护\r",p:`如果你的包需要更新或有新的版本，你可以按照以下步骤进行更新和维护：


在你的项目中，修改代码并增加新的功能或修复 bug。


更新 package.json 文件中的版本号。


执行以下命令发布 ...`,l:"server/npm/publish.html#步骤-6-更新和维护",a:"步骤-6-更新和维护"},"111.7":{t:"步骤 7：使用你的包\r",p:`其他开发者可以使用以下命令来安装和使用你的包：
npm install &lt;package-name&gt;

将 &lt;package-name&gt; 替换为你的包的名称。
`,l:"server/npm/publish.html#步骤-7-使用你的包",a:"步骤-7-使用你的包"},"112.0":{t:"# yarn 的安装与使用\r",p:"\r",l:"server/npm/yarn.html",a:"yarn-的安装与使用"},"112.1":{t:"安装 Yarn\r",p:`在开始之前，请确保你已经安装了 Node.js。然后，可以按照以下步骤安装 Yarn：
通过包管理器安装 Yarn：
使用 npm（全局安装）： 打开终端并运行以下命令：
npm install -g ...`,l:"server/npm/yarn.html#安装-yarn",a:"安装-yarn"},"112.2":{t:"使用 Yarn\r",p:`安装 Yarn 后，你可以使用以下常用命令来管理依赖关系和执行其他操作：


初始化项目： 进入你的项目目录，并运行以下命令来初始化项目：
yarn init

这将引导你提供有关项目的一些信息，并生 ...`,l:"server/npm/yarn.html#使用-yarn",a:"使用-yarn"},"113.0":{t:"# 初始 Canvas\r",p:"\r",l:"visual/canvas/base/初识Canvas.html",a:"初始-canvas"},"113.1":{t:"什么是 canvas？\r",p:`
Canvas 是 HTML5 中的一个元素，允许使用 JavaScript 脚本在矩形区域中绘制图像、动画和其他复杂的视觉效果。它提供了许多 API，允许控制绘图区域、颜色、线条、文本、图像等多种元 ...`,l:"visual/canvas/base/初识Canvas.html#什么是-canvas",a:"什么是-canvas"},"113.2":{t:"一. Canvas 的基础知识\r",p:"\r",l:"visual/canvas/base/初识Canvas.html#一-canvas-的基础知识",a:"一-canvas-的基础知识"},"113.3":{t:"1.1 坐标系统\r",p:"Canvas 使用直角坐标系，原点坐标为（0, 0），x 轴向右延伸，y 轴向下延伸。可以通过 Canvas API 访问 x 轴和 y 轴上的位置以及宽度和高度等信息，通过为图形或其他元素设置 x  ...",l:"visual/canvas/base/初识Canvas.html#_1-1-坐标系统",a:"_1-1-坐标系统"},"113.4":{t:"1.2 绘图上下文\r",p:"Canvas 可以绘制 SVG 和其他类型的矢量图形，但在大多数情况下，使用 Canvas 的绘图上下文进行绘制是最基本和有效的方法。Canvas API 提供了两种基本的绘图上下文，2D 和 Web ...",l:"visual/canvas/base/初识Canvas.html#_1-2-绘图上下文",a:"_1-2-绘图上下文"},"113.5":{t:"1.3 绘图元素\r",p:"Canvas 提供了多种绘图元素，包括路径和图形、文本、图像、矩形和其他形状等。绘图元素可以通过 Canvas API 进行控制，可以简单地绘制圆形、矩形、线条等图形，也可以绘制更高级的元素，如 3D ...",l:"visual/canvas/base/初识Canvas.html#_1-3-绘图元素",a:"_1-3-绘图元素"},"113.6":{t:"二. 使用 Canvas 创造交互式效果\r",p:`除了基本的绘图功能之外，Canvas 还可以创造交互式效果，用来展示和操控数据、陈述观点、以及制作各种绚丽的视觉展示等。
例如，您可以通过 Canvas 在一个网页上创造一个交互式地图，让用户点击地图 ...`,l:"visual/canvas/base/初识Canvas.html#二-使用-canvas-创造交互式效果",a:"二-使用-canvas-创造交互式效果"},"113.7":{t:"三. 使用 Canvas 创造动画\r",p:"由于 Canvas 非常适合处理像素级别的控制，利用 JavaScript 脚本使 Canvas 绘制出具有动态效果的图像和视觉艺术也显得非常合适。通过 Canvas API，您可以控制图形元素的位移 ...",l:"visual/canvas/base/初识Canvas.html#三-使用-canvas-创造动画",a:"三-使用-canvas-创造动画"},"113.8":{t:"四. Canvas 的局限性\r",p:"Canvas 虽然在 HTML5 中提供了许多优势，但也存在一些限制。例如，不同的浏览器可能解释 Canvas API 时存在差异，因此需要在开发过程中进行跨浏览器的测试。此外，在处理大量的图像和其他 ...",l:"visual/canvas/base/初识Canvas.html#四-canvas-的局限性",a:"四-canvas-的局限性"},"114.0":{t:"# Canvas 图像变换\r",p:`以下方法用于图像变换。

CanvasRenderingContext2D.rotate()：图像旋转
CanvasRenderingContext2D.scale()：图像缩放
CanvasRend ...`,l:"visual/canvas/base/图像变换.html",a:"canvas-图像变换"},"114.1":{t:"1.rotate()\r",p:`CanvasRenderingContext2D.rotate()方法用于图像旋转。它接受一个弧度值作为参数，表示顺时针旋转的度数。
context.rotate((45 * Math.PI) / 1 ...`,l:"visual/canvas/base/图像变换.html#_1-rotate",a:"_1-rotate"},"114.2":{t:"2.scale()\r",p:"CanvasRenderingContext2D.scale()方法用于缩放图像。它接受两个参数，分别是x轴方向的缩放因子和y轴方向的缩放因子。默认情况下，一个单位就是一个像素，缩放因子可以缩放单位， ...",l:"visual/canvas/base/图像变换.html#_2-scale",a:"_2-scale"},"114.3":{t:"3.translate()\r",p:`CanvasRenderingContext2D.translate()方法用于平移图像。它接受两个参数，分别是 x 轴和 y 轴移动的距离（单位像素）。
context.fillRect(0, 0, ...`,l:"visual/canvas/base/图像变换.html#_3-translate",a:"_3-translate"},"114.4":{t:"4.transform()\r",p:`CanvasRenderingContext2D.transform()方法接受一个变换矩阵的六个元素作为参数，完成缩放、旋转、移动和倾斜等变形。
它的使用格式如下。
context.transfor ...`,l:"visual/canvas/base/图像变换.html#_4-transform",a:"_4-transform"},"114.5":{t:"5.setTransform()\r",p:`CanvasRenderingContext2D.setTransform()方法取消前面的图形变换，将画布恢复到该方法指定的状态。该方法的参数与transform()方法完全一致。
context. ...`,l:"visual/canvas/base/图像变换.html#_5-settransform",a:"_5-settransform"},"115.0":{t:"# Canvas 图像合成\r",p:`
在默认情况之下，如果在 Canvas 之中将某个物体（源）绘制在另一个物体（目标）之上，那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面。


在 Canvas 中，把图像源和目标图像，通过 ...`,l:"visual/canvas/base/图像合成.html",a:"canvas-图像合成"},"115.1":{t:"属性\r",p:`


source-over
默认。在目标图像上显示源图像。




source-atop
在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的。


source-in
在目标图像中显 ...`,l:"visual/canvas/base/图像合成.html#属性",a:"属性"},"116.0":{t:"# Canvas 使用\r",p:"\r",l:"visual/canvas/base/基本使用.html",a:"canvas-使用"},"116.1":{t:"使用\r",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;您的浏览器不支持 Canvas&lt; ...",l:"visual/canvas/base/基本使用.html#使用",a:"使用"},"116.2":{t:"属性方法\r",p:`
strokeStyle 设置或返回描边颜色
fillStyle 设置或返回填充颜色
stroke() 描边已定义绘图（路径）
fill() 填充当前绘图（路径）
moveTo(x,y) 把路径移动到 ...`,l:"visual/canvas/base/基本使用.html#属性方法",a:"属性方法"},"117.0":{t:"# Canvas 样式控制\r",p:"\r",l:"visual/canvas/base/样式控制.html",a:"canvas-样式控制"},"117.1":{t:"1.线性\r",p:`以下的方法和属性控制线条的视觉特征。

CanvasRenderingContext2D.lineWidth：指定线条的宽度，默认为 1.0。
CanvasRenderingContext2D.lin ...`,l:"visual/canvas/base/样式控制.html#_1-线性",a:"_1-线性"},"117.2":{t:"2.渐变色\r",p:`以下方法用于设置渐变效果和图像填充效果。

CanvasRenderingContext2D.createLinearGradient()：定义线性渐变样式。
CanvasRenderingConte ...`,l:"visual/canvas/base/样式控制.html#_2-渐变色",a:"_2-渐变色"},"117.3":{t:"3.图像填充\r",p:`createPattern()方法定义一个图像填充样式，在指定方向上不断重复该图像，填充指定的区域。
context.createPattern(image, repetition)

该方法接受两个 ...`,l:"visual/canvas/base/样式控制.html#_3-图像填充",a:"_3-图像填充"},"117.4":{t:"4.阴影\r",p:`以下属性用于设置阴影。

CanvasRenderingContext2D.shadowBlur：阴影的模糊程度，默认为0。
CanvasRenderingContext2D.shadowColor： ...`,l:"visual/canvas/base/样式控制.html#_4-阴影",a:"_4-阴影"},"118.0":{t:"# Canvas 状态\r",p:`
save() 保存当前环境的状态。
restore() 返回之前保存过的路径状态和属性。

context.fillStyle = 'red'
context.fillRect(0, 0, 100, ...`,l:"visual/canvas/base/状态.html",a:"canvas-状态"},"119.0":{t:"# Canvas 绘制图形、图像、文字\r",p:"\r",l:"visual/canvas/base/绘制.html",a:"canvas-绘制图形、图像、文字"},"119.1":{t:"绘制图形\r",p:"\r",l:"visual/canvas/base/绘制.html#绘制图形",a:"绘制图形"},"119.2":{t:"绘制矩形\r",p:`//绘制矩形fillRect|strokeRect(位置x，位置y，宽度，高度)
context.strokeRect(150, 50, 100, 100) // 路径
context.fillRec ...`,l:"visual/canvas/base/绘制.html#绘制矩形",a:"绘制矩形"},"119.3":{t:"绘制圆弧\r",p:`
圆弧

// context.arc(圆心x,圆心y,半径,开始的角度,结束的角度)
// 顺时针false 逆时针true 默认值false
context.arc(300, 200, 50, 0 ...`,l:"visual/canvas/base/绘制.html#绘制圆弧",a:"绘制圆弧"},"119.4":{t:"绘制线段\r",p:`context.beginPath()
context.moveTo(100, 300)
context.lineTo(300, 300)
context.lineTo(200, 150)
conte ...`,l:"visual/canvas/base/绘制.html#绘制线段",a:"绘制线段"},"119.5":{t:"绘制图像\r",p:`
三种绘制图片的的方式

context.drawImage(image, dx, dy)
context.drawImage(image, dx, dy, dWidth, dHeight)
cont ...`,l:"visual/canvas/base/绘制.html#绘制图像",a:"绘制图像"},"119.6":{t:"绘制文本\r",p:`以下方法和属性用于绘制文本。

CanvasRenderingContext2D.fillText()：在指定位置绘制实心字符。
CanvasRenderingContext2D.strokeText ...`,l:"visual/canvas/base/绘制.html#绘制文本",a:"绘制文本"},"120.0":{t:"# Canvas 贝塞尔曲线\r",p:"\r",l:"visual/canvas/base/贝塞尔曲线.html",a:"canvas-贝塞尔曲线"},"120.1":{t:"绘制贝塞尔二次曲线\r",p:`
聊天框

context.moveTo(200, 300)
// quadraticCurveTo(控制点x,控制点y,终点x,终点y)
context.quadraticCurveTo(150,  ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔二次曲线",a:"绘制贝塞尔二次曲线"},"120.2":{t:"绘制贝塞尔三次曲线\r",p:`
爱心

context.moveTo(300, 120)
// bezierCurveTo(控制点1 x,控制点1 y,控制点2 x,控制点2 y,终点x,终点y)
context.bezierCu ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔三次曲线",a:"绘制贝塞尔三次曲线"},"121.0":{t:"# 刮刮乐\r",p:"\r",l:"visual/canvas/example/刮刮乐.html",a:"刮刮乐"},"121.1":{t:"示例\r",p:`&lt;Cbtn text='再来一次' @click='again' /&gt;
&lt;div style='height:400px'&gt;
&lt;Scratchcard v-if='sho ...`,l:"visual/canvas/example/刮刮乐.html#示例",a:"示例"},"121.2":{t:"代码\r",p:`&lt;div id=&quot;ggk&quot;&gt;谢谢惠顾&lt;/div&gt;
&lt;canvas id=&quot;myCanvas&quot; width=&quot;600&qu ...`,l:"visual/canvas/example/刮刮乐.html#代码",a:"代码"},"122.0":{t:"# 时钟\r",p:"\r",l:"visual/canvas/example/时钟.html",a:"时钟"},"122.1":{t:"示例\r",p:`&lt;Clock /&gt;
`,l:"visual/canvas/example/时钟.html#示例",a:"示例"},"122.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/时钟.html#代码",a:"代码"},"122.3":{t:"js 实现\r",p:`var canvas = document.getElementById('canvas')
var context = canvas.getContext('2d')
function render ...`,l:"visual/canvas/example/时钟.html#js-实现",a:"js-实现"},"122.4":{t:"vue3 实现\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/时钟.html#vue3-实现",a:"vue3-实现"},"123.0":{t:"# 梅花特效\r",p:`
参考视频教程

`,l:"visual/canvas/example/梅花特效.html",a:"梅花特效"},"123.1":{t:"示例\r",p:`&lt;Plum /&gt;
`,l:"visual/canvas/example/梅花特效.html#示例",a:"示例"},"123.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/梅花特效.html#代码",a:"代码"},"124.0":{t:"# 画板\r",p:"\r",l:"visual/canvas/example/画板.html",a:"画板"},"124.1":{t:"示例\r",p:`&lt;Draw /&gt;
`,l:"visual/canvas/example/画板.html#示例",a:"示例"},"124.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/画板.html#代码",a:"代码"},"124.3":{t:"JS 实现\r",p:`&lt;button id=&quot;boldBtn&quot;&gt;粗线条&lt;/button&gt;
&lt;button id=&quot;thinBtn&quot;&gt;细线条&lt; ...`,l:"visual/canvas/example/画板.html#js-实现",a:"js-实现"},"124.4":{t:"Vue3 实现\r",p:`&lt;template&gt;
  &lt;div class=&quot;btns&quot;&gt;
    &lt;CBtn @click=&quot;boldBtn&quot; text=& ...`,l:"visual/canvas/example/画板.html#vue3-实现",a:"vue3-实现"},"125.0":{t:"<!-- # echarts -->\r",p:`该内容正在努力建设中 ......
`,l:"visual/echarts/index.html",a:"echarts"},"126.0":{t:"# PixiJs 事件交互\r",p:"\r",l:"visual/pixiJs/事件交互.html",a:"pixijs-事件交互"},"126.1":{t:"为精灵添加事件\r",p:`// 为精灵添加交互事件
sprite.interactive = true

// 精灵派加点击事件
sprite.on('click', (e) =&gt; {
  console.log(e,  ...`,l:"visual/pixiJs/事件交互.html#为精灵添加事件",a:"为精灵添加事件"},"126.2":{t:"为图形添加事件\r",p:`// 创建矩形
const rect = new PIXI.Graphics()
rect.beginFill(0xff0000)
rect.drawRect(300, 300, 150, 150)
 ...`,l:"visual/pixiJs/事件交互.html#为图形添加事件",a:"为图形添加事件"},"127.0":{t:"# 初识 PixiJs\r",p:`官方网站
`,l:"visual/pixiJs/初识PixiJs.html",a:"初识-pixijs"},"127.1":{t:"是什么\r",p:`
PixiJS 是一个基于 WebGL 和 Canvas 技术的快速、轻量级的 JavaScript 库，用于创建交互式 2D 图形和动画。它提供了简单易用的 API 和强大的渲染能力，使开发者能够轻 ...`,l:"visual/pixiJs/初识PixiJs.html#是什么",a:"是什么"},"127.2":{t:"特点\r",p:"\r",l:"visual/pixiJs/初识PixiJs.html#特点",a:"特点"},"127.3":{t:"1. 快速高效\r",p:`PixiJS 利用 WebGL 技术进行硬件加速渲染，能够处理大量的图形元素并实现流畅的动画效果。它还支持使用 Canvas 进行降级渲染，以确保在不支持 WebGL 的设备上也能正常运行。
`,l:"visual/pixiJs/初识PixiJs.html#_1-快速高效",a:"_1-快速高效"},"127.4":{t:"2. 简单易用\r",p:`PixiJS 提供了简洁而直观的 API，使开发者能够快速上手并高效地创建图形和动画。它具有一致的接口设计和详细的文档，方便开发者查阅和学习。
`,l:"visual/pixiJs/初识PixiJs.html#_2-简单易用",a:"_2-简单易用"},"127.5":{t:"3. 丰富的功能\r",p:`PixiJS 提供了一系列强大的功能，包括精灵(Sprite)、纹理(Texture)、滤镜(Filters)、事件处理等。开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏。
`,l:"visual/pixiJs/初识PixiJs.html#_3-丰富的功能",a:"_3-丰富的功能"},"127.6":{t:"4. 跨平台支持\r",p:`PixiJS 可以在现代浏览器上运行，并提供了针对移动设备的优化。它支持响应式设计，使开发者能够创建适应不同屏幕大小和分辨率的应用。
`,l:"visual/pixiJs/初识PixiJs.html#_4-跨平台支持",a:"_4-跨平台支持"},"127.7":{t:"用法示例\r",p:`下面是一个简单的 PixiJS 示例，展示了如何创建一个基本的场景并添加一个可交互的精灵：
// 创建一个场景
let app = new PIXI.Application({ width: 800, ...`,l:"visual/pixiJs/初识PixiJs.html#用法示例",a:"用法示例"},"128.0":{t:"# PixiJs 基本使用\r",p:"\r",l:"visual/pixiJs/基本使用.html",a:"pixijs-基本使用"},"128.1":{t:"使用\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/基本使用.html#使用",a:"使用"},"128.2":{t:"Graphics 类详解\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/基本使用.html#graphics-类详解",a:"graphics-类详解"},"129.0":{t:"# PixiJs 文字与遮罩\r",p:"\r",l:"visual/pixiJs/文字与遮罩.html",a:"pixijs-文字与遮罩"},"129.1":{t:"添加文字\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/文字与遮罩.html#添加文字",a:"添加文字"},"129.2":{t:"使用文字作为精灵的遮罩\r",p:`// 创建一个精灵
const sprite = PIXI.Sprite.from(
  'https://pic.rmb.bdstatic.com/05b0ea405c9e690ab51627853 ...`,l:"visual/pixiJs/文字与遮罩.html#使用文字作为精灵的遮罩",a:"使用文字作为精灵的遮罩"},"130.0":{t:"# 波纹涟漪效果\r",p:"\r",l:"visual/pixiJs/波纹涟漪效果.html",a:"波纹涟漪效果"},"130.1":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/波纹涟漪效果.html#代码",a:"代码"},"131.0":{t:"# PixiJs 滤镜特效\r",p:"\r",l:"visual/pixiJs/滤镜特效.html",a:"pixijs-滤镜特效"},"131.1":{t:"创建应用\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/滤镜特效.html#创建应用",a:"创建应用"},"131.2":{t:"添加滤镜\r",p:`// 创建模糊滤镜
const blurFilter = new PIXI.BlurFilter()
// 设置模糊滤镜的模糊程度
blurFilter.blur = 10
// 将模糊滤镜添加到精灵 ...`,l:"visual/pixiJs/滤镜特效.html#添加滤镜",a:"添加滤镜"},"131.3":{t:"使用 pixi-filters 库\r",p:`npm install pixi-filters

// 创建轮廓滤镜
const outlineFilter = new OutlineFilter(5, 0xffff00) // 轮廓宽度，颜色
 ...`,l:"visual/pixiJs/滤镜特效.html#使用-pixi-filters-库",a:"使用-pixi-filters-库"},"132.0":{t:"# PixiJs 精灵与动画\r",p:"\r",l:"visual/pixiJs/精灵与动画.html",a:"pixijs-精灵与动画"},"132.1":{t:"1.创建应用\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/精灵与动画.html#_1-创建应用",a:"_1-创建应用"},"132.2":{t:"2.创建纹理与精灵\r",p:`// 创建一个纹理
const texture = PIXI.Texture.from('./vite.svg')

// 创建一个精灵
const sprite = new PIXI.Sprite( ...`,l:"visual/pixiJs/精灵与动画.html#_2-创建纹理与精灵",a:"_2-创建纹理与精灵"},"132.3":{t:"3.设置属性\r",p:`// 锚点
sprite.anchor.set(0.5, 0.5)

// 设置位置
sprite.x = app.screen.width / 2
sprite.y = app.screen.hei ...`,l:"visual/pixiJs/精灵与动画.html#_3-设置属性",a:"_3-设置属性"},"132.4":{t:"4.实现动画\r",p:`// ticker 实现动画
app.ticker.add((delta) =&gt; {
  sprite.rotation += 0.01 delta
})

`,l:"visual/pixiJs/精灵与动画.html#_4-实现动画",a:"_4-实现动画"},"133.0":{t:"# PixiJs 绘制图形\r",p:"\r",l:"visual/pixiJs/绘制图形.html",a:"pixijs-绘制图形"},"133.1":{t:"绘制椭圆\r",p:`const ellipse = new PIXI.Graphics()
ellipse.beginFill(0x66ccff)
ellipse.drawEllipse(0, 0, 164, 64)
e ...`,l:"visual/pixiJs/绘制图形.html#绘制椭圆",a:"绘制椭圆"},"133.2":{t:"绘制多边形\r",p:`const polygon = new PIXI.Graphics()
polygon.beginFill(0x660000)
// 参数一个数组，数组中的每一个元素是一个点的坐标，每两个元素是一个点 ...`,l:"visual/pixiJs/绘制图形.html#绘制多边形",a:"绘制多边形"},"133.3":{t:"创建圆角矩形\r",p:`const roundedRectangle = new PIXI.Graphics()
roundedRectangle.beginFill(0x66ccff, 0.9)

// 绘制圆角矩形 x  ...`,l:"visual/pixiJs/绘制图形.html#创建圆角矩形",a:"创建圆角矩形"},"133.4":{t:"绘制圆弧\r",p:`const arc = new PIXI.Graphics()
arc.beginFill(0x660000)
// arc(x坐标,y坐标,半径,其实角度,结束角度,顺/逆时针)
arc.arc(0 ...`,l:"visual/pixiJs/绘制图形.html#绘制圆弧",a:"绘制圆弧"},"133.5":{t:"绘制线段\r",p:`const line = new PIXI.Graphics()
line.lineStyle(10, 0x660000, 0.6) // 宽度，颜色，透明度
line.moveTo(0, 0)
li ...`,l:"visual/pixiJs/绘制图形.html#绘制线段",a:"绘制线段"},"134.0":{t:"# 谷歌恐龙小游戏\r",p:"\r",l:"visual/pixiJs/谷歌恐龙小游戏.html",a:"谷歌恐龙小游戏"},"134.1":{t:"素材图片\r",p:`!谷歌恐龙小游戏素材
`,l:"visual/pixiJs/谷歌恐龙小游戏.html#素材图片",a:"素材图片"},"134.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;app&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/谷歌恐龙小游戏.html#代码",a:"代码"},"135.0":{t:"# PixiJs 资源管理\r",p:`
PIXI.Assets用于加载资源
使用PIXI.Container创建容器，对多个资源分组，设置容器属性即可应用到容器内的精灵

`,l:"visual/pixiJs/资源管理.html",a:"pixijs-资源管理"},"135.1":{t:"单次添加资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#单次添加资源",a:"单次添加资源"},"135.2":{t:"一次添加多个资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#一次添加多个资源",a:"一次添加多个资源"},"136.0":{t:"# SVG\r",p:"\r",l:"visual/svg/index.html",a:"svg"},"136.1":{t:"是什么\r",p:`
SVG 是 Scalable Vector Graphics 的缩写 意为可缩放矢量图形
SVG 是一个基于文本的开放网络标准，用来定义用于网络的矢量图形
SVG 图像在放大或改变尺寸的情况下其图形 ...`,l:"visual/svg/index.html#是什么",a:"是什么"},"136.2":{t:"基本图形\r",p:"\r",l:"visual/svg/index.html#基本图形",a:"基本图形"},"136.3":{t:"线条（line）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性 style 是看不出效果的 --&gt;
  &lt;line x1=&quot;50&quot; x2=&quot;50&quot; y1 ...`,l:"visual/svg/index.html#线条-line",a:"线条-line"},"136.4":{t:"矩形（rect）\r",p:`&lt;svg&gt;
  &lt;rect x=&quot;400&quot; y=&quot;200&quot; width=&quot;150&quot; height=&quot;50&quo ...`,l:"visual/svg/index.html#矩形-rect",a:"矩形-rect"},"136.5":{t:"圆形（circle）\r",p:`&lt;svg&gt;
  &lt;circle cx=&quot;370&quot; cy=&quot;95&quot; r=&quot;50&quot; style=&quot;stroke:gr ...`,l:"visual/svg/index.html#圆形-circle",a:"圆形-circle"},"136.6":{t:"椭圆（cllipse）\r",p:`&lt;svg&gt;
  &lt;ellipse cx=&quot;100&quot; cy=&quot;100&quot; rx=&quot;100&quot; ry=&quot;50&quot; ...`,l:"visual/svg/index.html#椭圆-cllipse",a:"椭圆-cllipse"},"136.7":{t:"多边形（polygon）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性style是看不出效果的 并且polygon默认为填充需要把fill属性设置为none --&gt;
  &lt;polygon
    po ...`,l:"visual/svg/index.html#多边形-polygon",a:"多边形-polygon"},"136.8":{t:"折线（polyline）\r",p:`&lt;svg&gt;
  &lt;polyline points=&quot;300 300,50 100,120 300,200,30&quot; fill-opacity=&quot;0&quo ...`,l:"visual/svg/index.html#折线-polyline",a:"折线-polyline"},"136.9":{t:"路径（path）\r",p:`&lt;svg&gt;
  &lt;path
    fill-opacity=&quot;0&quot;
    stroke=&quot;skyblue&quot;
    d=&quot;
   ...`,l:"visual/svg/index.html#路径-path",a:"路径-path"},"137.0":{t:"# VitePress 从 0 开始搭建个人网站\r",p:`
lemon's blog 从无到有的过程
VitePress 官方网站
VitePress 中文网

`,l:"vitepress.html",a:"vitepress-从-0-开始搭建个人网站"},"137.1":{t:"一、 创建项目\r",p:`

在 gitbub 上新建项目，建议勾选 Add a README file


新建文件夹 blog
可以使用 npm，yarn，pnpm


`,l:"vitepress.html#一、-创建项目",a:"一、-创建项目"},"137.2":{t:"初始化项目\r",p:`npm init -y


安装 vitepress

yarn add --dev vitepress vue


package.json 添加 script

&quot;scripts&quo ...`,l:"vitepress.html#初始化项目",a:"初始化项目"},"137.3":{t:"npx 创建项目\r",p:`npx create-vitepress my-site

cd my-site
npm install  或 yarn install
npm run dev  或 yarn dev

`,l:"vitepress.html#npx-创建项目",a:"npx-创建项目"},"137.4":{t:"本地运行\r",p:`
运行

yarn docs:dev


打包

yarn docs:build

!img
`,l:"vitepress.html#本地运行",a:"本地运行"},"137.5":{t:"二、 基本配置\r",p:"\r",l:"vitepress.html#二、-基本配置",a:"二、-基本配置"},"137.6":{t:"目录结构\r",p:"在目录下新建 docs 文件夹，在其中新建.vitepress 文件夹和 config.js 文件，config.js 文件就是我们的配置文件，新建一个 index.html 作为我们的主页，在新建一 ...",l:"vitepress.html#目录结构",a:"目录结构"},"137.7":{t:"1. 配置首页\r",p:`vitepress 支持用户使用 yaml 配置页面的内容，在 docs/index.html 写下如下内容，更多配置请查看
---
layout: home

title: 选项卡标题
titleT ...`,l:"vitepress.html#_1-配置首页",a:"_1-配置首页"},"137.8":{t:"2. 配置网站\r",p:"\r",l:"vitepress.html#_2-配置网站",a:"_2-配置网站"},"137.9":{t:"配置导航栏部分\r",p:`在 config.js 中可以开始我们的配置，先写上如下内容，这是网站的标题和描述，标题会在浏览器标签上展示
export default defineConfig({
  base: '/docs/ ...`,l:"vitepress.html#配置导航栏部分",a:"配置导航栏部分"},"137.10":{t:"配置侧边栏部分\r",p:`themeConfig: {
  // ...省略前面的内容
  // 侧边栏
  sidebar: {
    &quot;/articles/other&quot;: [
      {
     ...`,l:"vitepress.html#配置侧边栏部分",a:"配置侧边栏部分"},"137.11":{t:"三、 部署到 github.io\r",p:`新建脚本文件 deploy.sh，与 docs 文件夹处于同一级
#!/usr/bin/env sh

# 确保脚本抛出遇到的错误
set -e

# 生成静态文件
yarn docs:build

 ...`,l:"vitepress.html#三、-部署到-github-io",a:"三、-部署到-github-io"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"情输入关键词",allow:[],ignore:[]},a={INDEX_DATA:t,PREVIEW_LOOKUP:e,Options:n};export{a as default};
